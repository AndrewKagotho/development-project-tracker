{"version":3,"file":"static/js/main.36ca2ea3.js","mappings":"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","sources":["../node_modules/axios/index.js","../node_modules/axios/lib/adapters/xhr.js","../node_modules/axios/lib/axios.js","../node_modules/axios/lib/cancel/CancelToken.js","../node_modules/axios/lib/cancel/CanceledError.js","../node_modules/axios/lib/cancel/isCancel.js","../node_modules/axios/lib/core/Axios.js","../node_modules/axios/lib/core/AxiosError.js","../node_modules/axios/lib/core/InterceptorManager.js","../node_modules/axios/lib/core/buildFullPath.js","../node_modules/axios/lib/core/dispatchRequest.js","../node_modules/axios/lib/core/mergeConfig.js","../node_modules/axios/lib/core/settle.js","../node_modules/axios/lib/core/transformData.js","../node_modules/axios/lib/defaults/index.js","../node_modules/axios/lib/defaults/transitional.js","../node_modules/axios/lib/env/data.js","../node_modules/axios/lib/helpers/bind.js","../node_modules/axios/lib/helpers/buildURL.js","../node_modules/axios/lib/helpers/combineURLs.js","../node_modules/axios/lib/helpers/cookies.js","../node_modules/axios/lib/helpers/isAbsoluteURL.js","../node_modules/axios/lib/helpers/isAxiosError.js","../node_modules/axios/lib/helpers/isURLSameOrigin.js","../node_modules/axios/lib/helpers/normalizeHeaderName.js","../node_modules/axios/lib/helpers/null.js","../node_modules/axios/lib/helpers/parseHeaders.js","../node_modules/axios/lib/helpers/parseProtocol.js","../node_modules/axios/lib/helpers/spread.js","../node_modules/axios/lib/helpers/toFormData.js","../node_modules/axios/lib/helpers/validator.js","../node_modules/axios/lib/utils.js","../node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js","../node_modules/hoist-non-react-statics/node_modules/react-is/cjs/react-is.production.min.js","../node_modules/hoist-non-react-statics/node_modules/react-is/index.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js","../node_modules/react-csv/index.js","../node_modules/react-csv/lib/components/Download.js","../node_modules/react-csv/lib/components/Link.js","../node_modules/react-csv/lib/core.js","../node_modules/react-csv/lib/index.js","../node_modules/react-csv/lib/metaProps.js","../node_modules/react-dom/cjs/react-dom.production.min.js","../node_modules/react-dom/client.js","../node_modules/react-dom/index.js","../node_modules/react-redux/node_modules/react-is/cjs/react-is.production.min.js","../node_modules/react-redux/node_modules/react-is/index.js","../node_modules/react/cjs/react-jsx-runtime.production.min.js","../node_modules/react/cjs/react.production.min.js","../node_modules/react/index.js","../node_modules/react/jsx-runtime.js","../node_modules/scheduler/cjs/scheduler.production.min.js","../node_modules/scheduler/index.js","../node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.production.min.js","../node_modules/use-sync-external-store/cjs/use-sync-external-store-shim/with-selector.production.min.js","../node_modules/use-sync-external-store/shim/index.js","../node_modules/use-sync-external-store/shim/with-selector.js","../webpack/bootstrap","../webpack/runtime/compat get default export","../webpack/runtime/create fake namespace object","../webpack/runtime/define property getters","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/make namespace object","../node_modules/react-redux/es/utils/batch.js","../node_modules/react-redux/es/components/Context.js","../node_modules/react-redux/es/utils/useSyncExternalStore.js","../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/@babel/runtime/helpers/esm/extends.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/react-redux/es/connect/selectorFactory.js","../node_modules/react-redux/es/connect/wrapMapToProps.js","../node_modules/react-redux/es/connect/invalidArgFactory.js","../node_modules/react-redux/es/connect/mapDispatchToProps.js","../node_modules/react-redux/es/utils/bindActionCreators.js","../node_modules/react-redux/es/connect/mapStateToProps.js","../node_modules/react-redux/es/connect/mergeProps.js","../node_modules/react-redux/es/utils/Subscription.js","../node_modules/react-redux/es/utils/useIsomorphicLayoutEffect.js","../node_modules/react-redux/es/utils/shallowEqual.js","../node_modules/react-redux/es/components/connect.js","../node_modules/react-redux/es/components/Provider.js","../node_modules/react-redux/es/hooks/useDispatch.js","../node_modules/react-redux/es/hooks/useSelector.js","../node_modules/redux/es/redux.js","../node_modules/react-redux/es/index.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","store/State.js","../node_modules/@remix-run/router/history.ts","store/index.js","store/Reducer.js","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/esm/createSuper.js","../node_modules/@babel/runtime/helpers/esm/construct.js","../node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js","../node_modules/@babel/runtime/helpers/esm/isNativeFunction.js","../node_modules/@remix-run/router/utils.ts","../node_modules/react-router/lib/use-sync-external-store-shim/useSyncExternalStoreShimClient.ts","../node_modules/react-router/lib/use-sync-external-store-shim/index.ts","../node_modules/react-router/lib/context.ts","../node_modules/react-router/lib/hooks.tsx","../node_modules/react-router/lib/components.tsx","../node_modules/react-router-dom/index.tsx","../node_modules/react-router-dom/dom.ts","layout/public/NavbarLanding.js","layout/public/Navbar.js","layout/admin/Navbar.js","store/Action.js","utils/functions/getCounties.js","utils/functions/getProjectDetails.js","utils/functions/getProjectTimelines.js","utils/functions/getProjectImplementations.js","utils/functions/getProjectFinances.js","utils/functions/getProjectLocations.js","utils/functions/getTrackingLogs.js","utils/functions/panels.js","layout/public/LoginPanel.js","layout/Footer.js","views/public/Landing.js","features/counties/Map.js","features/counties/Names.js","features/counties/Stats.js","utils/functions/modal.js","layout/public/ProjectDetailsPanel.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/react-google-charts/src/hooks/useLoadGoogleCharts.ts","../node_modules/react-google-charts/src/hooks/useLoadScript.ts","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/react-google-charts/src/default-props.ts","../node_modules/react-google-charts/src/generate-unique-id.ts","../node_modules/react-google-charts/src/constants.ts","../node_modules/react-google-charts/src/load-data-table-from-spreadsheet.ts","../node_modules/react-google-charts/src/Context.tsx","../node_modules/react-google-charts/src/components/GoogleChartDataTable.tsx","../node_modules/react-google-charts/src/components/GoogleChartEvents.tsx","../node_modules/react-google-charts/src/components/GoogleChart.tsx","../node_modules/react-google-charts/src/ReactGoogleCharts.tsx","../node_modules/react-google-charts/src/types.ts","../node_modules/react-google-charts/src/index.tsx","features/counties/ModalTable.js","layout/admin/UpdateProjectPanel.js","layout/admin/UpdateOtherPanel.js","features/admin/InfoModal.js","utils/charts.js","features/counties/ModalBanner.js","utils/functions/map.js","utils/functions/addCommas.js","features/counties/Modal.js","views/public/Counties.js","views/public/Updates.js","views/public/About.js","utils/functions/getAdmins.js","utils/templates/objects.js","features/admin/countyTable.js","features/admin/projectsTable.js","features/admin/timelinesTable.js","features/admin/implementationTable.js","features/admin/financesTable.js","features/admin/locationsTable.js","features/admin/trackingLogsTable.js","features/admin/adminsTable.js","features/admin/AdminTable.js","layout/admin/CreateProjectPanel.js","layout/admin/CreateAdminPanel.js","features/admin/DeleteProjectModal.js","features/admin/DeleteAdminModal.js","views/admin/Dashboard.js","App.js","index.js"],"sourcesContent":["module.exports = require('./lib/axios');","'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar cookies = require('./../helpers/cookies');\nvar buildURL = require('./../helpers/buildURL');\nvar buildFullPath = require('../core/buildFullPath');\nvar parseHeaders = require('./../helpers/parseHeaders');\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\nvar transitionalDefaults = require('../defaults/transitional');\nvar AxiosError = require('../core/AxiosError');\nvar CanceledError = require('../cancel/CanceledError');\nvar parseProtocol = require('../helpers/parseProtocol');\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n    var responseType = config.responseType;\n    var onCanceled;\n    function done() {\n      if (config.cancelToken) {\n        config.cancelToken.unsubscribe(onCanceled);\n      }\n\n      if (config.signal) {\n        config.signal.removeEventListener('abort', onCanceled);\n      }\n    }\n\n    if (utils.isFormData(requestData) && utils.isStandardBrowserEnv()) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    var fullPath = buildFullPath(config.baseURL, config.url);\n\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !responseType || responseType === 'text' ||  responseType === 'json' ?\n        request.responseText : request.response;\n      var response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(function _resolve(value) {\n        resolve(value);\n        done();\n      }, function _reject(err) {\n        reject(err);\n        done();\n      }, response);\n\n      // Clean up request\n      request = null;\n    }\n\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(new AxiosError('Request aborted', AxiosError.ECONNABORTED, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      var timeoutErrorMessage = config.timeout ? 'timeout of ' + config.timeout + 'ms exceeded' : 'timeout exceeded';\n      var transitional = config.transitional || transitionalDefaults;\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(new AxiosError(\n        timeoutErrorMessage,\n        transitional.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED,\n        config,\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?\n        cookies.read(config.xsrfCookieName) :\n        undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = config.responseType;\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken || config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = function(cancel) {\n        if (!request) {\n          return;\n        }\n        reject(!cancel || (cancel && cancel.type) ? new CanceledError() : cancel);\n        request.abort();\n        request = null;\n      };\n\n      config.cancelToken && config.cancelToken.subscribe(onCanceled);\n      if (config.signal) {\n        config.signal.aborted ? onCanceled() : config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n\n    if (!requestData) {\n      requestData = null;\n    }\n\n    var protocol = parseProtocol(fullPath);\n\n    if (protocol && [ 'http', 'https', 'file' ].indexOf(protocol) === -1) {\n      reject(new AxiosError('Unsupported protocol ' + protocol + ':', AxiosError.ERR_BAD_REQUEST, config));\n      return;\n    }\n\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n","'use strict';\n\nvar utils = require('./utils');\nvar bind = require('./helpers/bind');\nvar Axios = require('./core/Axios');\nvar mergeConfig = require('./core/mergeConfig');\nvar defaults = require('./defaults');\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  // Factory for creating new instances\n  instance.create = function create(instanceConfig) {\n    return createInstance(mergeConfig(defaultConfig, instanceConfig));\n  };\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Expose Cancel & CancelToken\naxios.CanceledError = require('./cancel/CanceledError');\naxios.CancelToken = require('./cancel/CancelToken');\naxios.isCancel = require('./cancel/isCancel');\naxios.VERSION = require('./env/data').version;\naxios.toFormData = require('./helpers/toFormData');\n\n// Expose AxiosError class\naxios.AxiosError = require('../lib/core/AxiosError');\n\n// alias for CanceledError for backward compatibility\naxios.Cancel = axios.CanceledError;\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = require('./helpers/spread');\n\n// Expose isAxiosError\naxios.isAxiosError = require('./helpers/isAxiosError');\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = axios;\n","'use strict';\n\nvar CanceledError = require('./CanceledError');\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n\n  // eslint-disable-next-line func-names\n  this.promise.then(function(cancel) {\n    if (!token._listeners) return;\n\n    var i;\n    var l = token._listeners.length;\n\n    for (i = 0; i < l; i++) {\n      token._listeners[i](cancel);\n    }\n    token._listeners = null;\n  });\n\n  // eslint-disable-next-line func-names\n  this.promise.then = function(onfulfilled) {\n    var _resolve;\n    // eslint-disable-next-line func-names\n    var promise = new Promise(function(resolve) {\n      token.subscribe(resolve);\n      _resolve = resolve;\n    }).then(onfulfilled);\n\n    promise.cancel = function reject() {\n      token.unsubscribe(_resolve);\n    };\n\n    return promise;\n  };\n\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new CanceledError(message);\n    resolvePromise(token.reason);\n  });\n}\n\n/**\n * Throws a `CanceledError` if cancellation has been requested.\n */\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n\n/**\n * Subscribe to the cancel signal\n */\n\nCancelToken.prototype.subscribe = function subscribe(listener) {\n  if (this.reason) {\n    listener(this.reason);\n    return;\n  }\n\n  if (this._listeners) {\n    this._listeners.push(listener);\n  } else {\n    this._listeners = [listener];\n  }\n};\n\n/**\n * Unsubscribe from the cancel signal\n */\n\nCancelToken.prototype.unsubscribe = function unsubscribe(listener) {\n  if (!this._listeners) {\n    return;\n  }\n  var index = this._listeners.indexOf(listener);\n  if (index !== -1) {\n    this._listeners.splice(index, 1);\n  }\n};\n\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;\n","'use strict';\n\nvar AxiosError = require('../core/AxiosError');\nvar utils = require('../utils');\n\n/**\n * A `CanceledError` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction CanceledError(message) {\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  AxiosError.call(this, message == null ? 'canceled' : message, AxiosError.ERR_CANCELED);\n  this.name = 'CanceledError';\n}\n\nutils.inherits(CanceledError, AxiosError, {\n  __CANCEL__: true\n});\n\nmodule.exports = CanceledError;\n","'use strict';\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar buildURL = require('../helpers/buildURL');\nvar InterceptorManager = require('./InterceptorManager');\nvar dispatchRequest = require('./dispatchRequest');\nvar mergeConfig = require('./mergeConfig');\nvar buildFullPath = require('./buildFullPath');\nvar validator = require('../helpers/validator');\n\nvar validators = validator.validators;\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(configOrUrl, config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof configOrUrl === 'string') {\n    config = config || {};\n    config.url = configOrUrl;\n  } else {\n    config = configOrUrl || {};\n  }\n\n  config = mergeConfig(this.defaults, config);\n\n  // Set config.method\n  if (config.method) {\n    config.method = config.method.toLowerCase();\n  } else if (this.defaults.method) {\n    config.method = this.defaults.method.toLowerCase();\n  } else {\n    config.method = 'get';\n  }\n\n  var transitional = config.transitional;\n\n  if (transitional !== undefined) {\n    validator.assertOptions(transitional, {\n      silentJSONParsing: validators.transitional(validators.boolean),\n      forcedJSONParsing: validators.transitional(validators.boolean),\n      clarifyTimeoutError: validators.transitional(validators.boolean)\n    }, false);\n  }\n\n  // filter out skipped interceptors\n  var requestInterceptorChain = [];\n  var synchronousRequestInterceptors = true;\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n      return;\n    }\n\n    synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n    requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  var responseInterceptorChain = [];\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  var promise;\n\n  if (!synchronousRequestInterceptors) {\n    var chain = [dispatchRequest, undefined];\n\n    Array.prototype.unshift.apply(chain, requestInterceptorChain);\n    chain = chain.concat(responseInterceptorChain);\n\n    promise = Promise.resolve(config);\n    while (chain.length) {\n      promise = promise.then(chain.shift(), chain.shift());\n    }\n\n    return promise;\n  }\n\n\n  var newConfig = config;\n  while (requestInterceptorChain.length) {\n    var onFulfilled = requestInterceptorChain.shift();\n    var onRejected = requestInterceptorChain.shift();\n    try {\n      newConfig = onFulfilled(newConfig);\n    } catch (error) {\n      onRejected(error);\n      break;\n    }\n  }\n\n  try {\n    promise = dispatchRequest(newConfig);\n  } catch (error) {\n    return Promise.reject(error);\n  }\n\n  while (responseInterceptorChain.length) {\n    promise = promise.then(responseInterceptorChain.shift(), responseInterceptorChain.shift());\n  }\n\n  return promise;\n};\n\nAxios.prototype.getUri = function getUri(config) {\n  config = mergeConfig(this.defaults, config);\n  var fullPath = buildFullPath(config.baseURL, config.url);\n  return buildURL(fullPath, config.params, config.paramsSerializer);\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n\n  function generateHTTPMethod(isForm) {\n    return function httpMethod(url, data, config) {\n      return this.request(mergeConfig(config || {}, {\n        method: method,\n        headers: isForm ? {\n          'Content-Type': 'multipart/form-data'\n        } : {},\n        url: url,\n        data: data\n      }));\n    };\n  }\n\n  Axios.prototype[method] = generateHTTPMethod();\n\n  Axios.prototype[method + 'Form'] = generateHTTPMethod(true);\n});\n\nmodule.exports = Axios;\n","'use strict';\n\nvar utils = require('../utils');\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [config] The config.\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nfunction AxiosError(message, code, config, request, response) {\n  Error.call(this);\n  this.message = message;\n  this.name = 'AxiosError';\n  code && (this.code = code);\n  config && (this.config = config);\n  request && (this.request = request);\n  response && (this.response = response);\n}\n\nutils.inherits(AxiosError, Error, {\n  toJSON: function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: this.config,\n      code: this.code,\n      status: this.response && this.response.status ? this.response.status : null\n    };\n  }\n});\n\nvar prototype = AxiosError.prototype;\nvar descriptors = {};\n\n[\n  'ERR_BAD_OPTION_VALUE',\n  'ERR_BAD_OPTION',\n  'ECONNABORTED',\n  'ETIMEDOUT',\n  'ERR_NETWORK',\n  'ERR_FR_TOO_MANY_REDIRECTS',\n  'ERR_DEPRECATED',\n  'ERR_BAD_RESPONSE',\n  'ERR_BAD_REQUEST',\n  'ERR_CANCELED'\n// eslint-disable-next-line func-names\n].forEach(function(code) {\n  descriptors[code] = {value: code};\n});\n\nObject.defineProperties(AxiosError, descriptors);\nObject.defineProperty(prototype, 'isAxiosError', {value: true});\n\n// eslint-disable-next-line func-names\nAxiosError.from = function(error, code, config, request, response, customProps) {\n  var axiosError = Object.create(prototype);\n\n  utils.toFlatObject(error, axiosError, function filter(obj) {\n    return obj !== Error.prototype;\n  });\n\n  AxiosError.call(axiosError, error.message, code, config, request, response);\n\n  axiosError.name = error.name;\n\n  customProps && Object.assign(axiosError, customProps);\n\n  return axiosError;\n};\n\nmodule.exports = AxiosError;\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected, options) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected,\n    synchronous: options ? options.synchronous : false,\n    runWhen: options ? options.runWhen : null\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n","'use strict';\n\nvar isAbsoluteURL = require('../helpers/isAbsoluteURL');\nvar combineURLs = require('../helpers/combineURLs');\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n * @returns {string} The combined full path\n */\nmodule.exports = function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar transformData = require('./transformData');\nvar isCancel = require('../cancel/isCancel');\nvar defaults = require('../defaults');\nvar CanceledError = require('../cancel/CanceledError');\n\n/**\n * Throws a `CanceledError` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n\n  if (config.signal && config.signal.aborted) {\n    throw new CanceledError();\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData.call(\n    config,\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData.call(\n      config,\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData.call(\n          config,\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n","'use strict';\n\nvar utils = require('../utils');\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n * @returns {Object} New object resulting from merging config2 to config1\n */\nmodule.exports = function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  var config = {};\n\n  function getMergedValue(target, source) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge(target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDeepProperties(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      return getMergedValue(config1[prop], config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      return getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function valueFromConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      return getMergedValue(undefined, config2[prop]);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function defaultToConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      return getMergedValue(undefined, config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      return getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDirectKeys(prop) {\n    if (prop in config2) {\n      return getMergedValue(config1[prop], config2[prop]);\n    } else if (prop in config1) {\n      return getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  var mergeMap = {\n    'url': valueFromConfig2,\n    'method': valueFromConfig2,\n    'data': valueFromConfig2,\n    'baseURL': defaultToConfig2,\n    'transformRequest': defaultToConfig2,\n    'transformResponse': defaultToConfig2,\n    'paramsSerializer': defaultToConfig2,\n    'timeout': defaultToConfig2,\n    'timeoutMessage': defaultToConfig2,\n    'withCredentials': defaultToConfig2,\n    'adapter': defaultToConfig2,\n    'responseType': defaultToConfig2,\n    'xsrfCookieName': defaultToConfig2,\n    'xsrfHeaderName': defaultToConfig2,\n    'onUploadProgress': defaultToConfig2,\n    'onDownloadProgress': defaultToConfig2,\n    'decompress': defaultToConfig2,\n    'maxContentLength': defaultToConfig2,\n    'maxBodyLength': defaultToConfig2,\n    'beforeRedirect': defaultToConfig2,\n    'transport': defaultToConfig2,\n    'httpAgent': defaultToConfig2,\n    'httpsAgent': defaultToConfig2,\n    'cancelToken': defaultToConfig2,\n    'socketPath': defaultToConfig2,\n    'responseEncoding': defaultToConfig2,\n    'validateStatus': mergeDirectKeys\n  };\n\n  utils.forEach(Object.keys(config1).concat(Object.keys(config2)), function computeConfigValue(prop) {\n    var merge = mergeMap[prop] || mergeDeepProperties;\n    var configValue = merge(prop);\n    (utils.isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);\n  });\n\n  return config;\n};\n","'use strict';\n\nvar AxiosError = require('./AxiosError');\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(new AxiosError(\n      'Request failed with status code ' + response.status,\n      [AxiosError.ERR_BAD_REQUEST, AxiosError.ERR_BAD_RESPONSE][Math.floor(response.status / 100) - 4],\n      response.config,\n      response.request,\n      response\n    ));\n  }\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar defaults = require('../defaults');\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\nmodule.exports = function transformData(data, headers, fns) {\n  var context = this || defaults;\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn.call(context, data, headers);\n  });\n\n  return data;\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar normalizeHeaderName = require('../helpers/normalizeHeaderName');\nvar AxiosError = require('../core/AxiosError');\nvar transitionalDefaults = require('./transitional');\nvar toFormData = require('../helpers/toFormData');\n\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n  if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = require('../adapters/xhr');\n  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {\n    // For node use HTTP adapter\n    adapter = require('../adapters/http');\n  }\n  return adapter;\n}\n\nfunction stringifySafely(rawValue, parser, encoder) {\n  if (utils.isString(rawValue)) {\n    try {\n      (parser || JSON.parse)(rawValue);\n      return utils.trim(rawValue);\n    } catch (e) {\n      if (e.name !== 'SyntaxError') {\n        throw e;\n      }\n    }\n  }\n\n  return (encoder || JSON.stringify)(rawValue);\n}\n\nvar defaults = {\n\n  transitional: transitionalDefaults,\n\n  adapter: getDefaultAdapter(),\n\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Accept');\n    normalizeHeaderName(headers, 'Content-Type');\n\n    if (utils.isFormData(data) ||\n      utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n\n    var isObjectPayload = utils.isObject(data);\n    var contentType = headers && headers['Content-Type'];\n\n    var isFileList;\n\n    if ((isFileList = utils.isFileList(data)) || (isObjectPayload && contentType === 'multipart/form-data')) {\n      var _FormData = this.env && this.env.FormData;\n      return toFormData(isFileList ? {'files[]': data} : data, _FormData && new _FormData());\n    } else if (isObjectPayload || contentType === 'application/json') {\n      setContentTypeIfUnset(headers, 'application/json');\n      return stringifySafely(data);\n    }\n\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    var transitional = this.transitional || defaults.transitional;\n    var silentJSONParsing = transitional && transitional.silentJSONParsing;\n    var forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    var strictJSONParsing = !silentJSONParsing && this.responseType === 'json';\n\n    if (strictJSONParsing || (forcedJSONParsing && utils.isString(data) && data.length)) {\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw AxiosError.from(e, AxiosError.ERR_BAD_RESPONSE, this, null, this.response);\n          }\n          throw e;\n        }\n      }\n    }\n\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  env: {\n    FormData: require('./env/FormData')\n  },\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  },\n\n  headers: {\n    common: {\n      'Accept': 'application/json, text/plain, */*'\n    }\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nmodule.exports = defaults;\n","'use strict';\n\nmodule.exports = {\n  silentJSONParsing: true,\n  forcedJSONParsing: true,\n  clarifyTimeoutError: false\n};\n","module.exports = {\n  \"version\": \"0.27.2\"\n};","'use strict';\n\nmodule.exports = function bind(fn, thisArg) {\n  return function wrap() {\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n    return fn.apply(thisArg, args);\n  };\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\nmodule.exports = function buildURL(url, params, paramsSerializer) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n\n  var serializedParams;\n  if (paramsSerializer) {\n    serializedParams = paramsSerializer(params);\n  } else if (utils.isURLSearchParams(params)) {\n    serializedParams = params.toString();\n  } else {\n    var parts = [];\n\n    utils.forEach(params, function serialize(val, key) {\n      if (val === null || typeof val === 'undefined') {\n        return;\n      }\n\n      if (utils.isArray(val)) {\n        key = key + '[]';\n      } else {\n        val = [val];\n      }\n\n      utils.forEach(val, function parseValue(v) {\n        if (utils.isDate(v)) {\n          v = v.toISOString();\n        } else if (utils.isObject(v)) {\n          v = JSON.stringify(v);\n        }\n        parts.push(encode(key) + '=' + encode(v));\n      });\n    });\n\n    serializedParams = parts.join('&');\n  }\n\n  if (serializedParams) {\n    var hashmarkIndex = url.indexOf('#');\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n};\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\nmodule.exports = function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs support document.cookie\n    (function standardBrowserEnv() {\n      return {\n        write: function write(name, value, expires, path, domain, secure) {\n          var cookie = [];\n          cookie.push(name + '=' + encodeURIComponent(value));\n\n          if (utils.isNumber(expires)) {\n            cookie.push('expires=' + new Date(expires).toGMTString());\n          }\n\n          if (utils.isString(path)) {\n            cookie.push('path=' + path);\n          }\n\n          if (utils.isString(domain)) {\n            cookie.push('domain=' + domain);\n          }\n\n          if (secure === true) {\n            cookie.push('secure');\n          }\n\n          document.cookie = cookie.join('; ');\n        },\n\n        read: function read(name) {\n          var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n          return (match ? decodeURIComponent(match[3]) : null);\n        },\n\n        remove: function remove(name) {\n          this.write(name, '', Date.now() - 86400000);\n        }\n      };\n    })() :\n\n  // Non standard browser env (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return {\n        write: function write() {},\n        read: function read() { return null; },\n        remove: function remove() {}\n      };\n    })()\n);\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(url);\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nmodule.exports = function isAxiosError(payload) {\n  return utils.isObject(payload) && (payload.isAxiosError === true);\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs have full support of the APIs needed to test\n  // whether the request URL is of the same origin as current location.\n    (function standardBrowserEnv() {\n      var msie = /(msie|trident)/i.test(navigator.userAgent);\n      var urlParsingNode = document.createElement('a');\n      var originURL;\n\n      /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n      function resolveURL(url) {\n        var href = url;\n\n        if (msie) {\n        // IE needs attribute set twice to normalize properties\n          urlParsingNode.setAttribute('href', href);\n          href = urlParsingNode.href;\n        }\n\n        urlParsingNode.setAttribute('href', href);\n\n        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n        return {\n          href: urlParsingNode.href,\n          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n          host: urlParsingNode.host,\n          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n          hostname: urlParsingNode.hostname,\n          port: urlParsingNode.port,\n          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n            urlParsingNode.pathname :\n            '/' + urlParsingNode.pathname\n        };\n      }\n\n      originURL = resolveURL(window.location.href);\n\n      /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n      return function isURLSameOrigin(requestURL) {\n        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n        return (parsed.protocol === originURL.protocol &&\n            parsed.host === originURL.host);\n      };\n    })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return function isURLSameOrigin() {\n        return true;\n      };\n    })()\n);\n","'use strict';\n\nvar utils = require('../utils');\n\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n  utils.forEach(headers, function processHeader(value, name) {\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n      headers[normalizedName] = value;\n      delete headers[name];\n    }\n  });\n};\n","// eslint-disable-next-line strict\nmodule.exports = null;\n","'use strict';\n\nvar utils = require('./../utils');\n\n// Headers whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nvar ignoreDuplicateOf = [\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n];\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} headers Headers needing to be parsed\n * @returns {Object} Headers parsed into an object\n */\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {};\n  var key;\n  var val;\n  var i;\n\n  if (!headers) { return parsed; }\n\n  utils.forEach(headers.split('\\n'), function parser(line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n\n    if (key) {\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\n        return;\n      }\n      if (key === 'set-cookie') {\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\n      } else {\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n      }\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\nmodule.exports = function parseProtocol(url) {\n  var match = /^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(url);\n  return match && match[1] || '';\n};\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n","'use strict';\n\nvar utils = require('../utils');\n\n/**\n * Convert a data object to FormData\n * @param {Object} obj\n * @param {?Object} [formData]\n * @returns {Object}\n **/\n\nfunction toFormData(obj, formData) {\n  // eslint-disable-next-line no-param-reassign\n  formData = formData || new FormData();\n\n  var stack = [];\n\n  function convertValue(value) {\n    if (value === null) return '';\n\n    if (utils.isDate(value)) {\n      return value.toISOString();\n    }\n\n    if (utils.isArrayBuffer(value) || utils.isTypedArray(value)) {\n      return typeof Blob === 'function' ? new Blob([value]) : Buffer.from(value);\n    }\n\n    return value;\n  }\n\n  function build(data, parentKey) {\n    if (utils.isPlainObject(data) || utils.isArray(data)) {\n      if (stack.indexOf(data) !== -1) {\n        throw Error('Circular reference detected in ' + parentKey);\n      }\n\n      stack.push(data);\n\n      utils.forEach(data, function each(value, key) {\n        if (utils.isUndefined(value)) return;\n        var fullKey = parentKey ? parentKey + '.' + key : key;\n        var arr;\n\n        if (value && !parentKey && typeof value === 'object') {\n          if (utils.endsWith(key, '{}')) {\n            // eslint-disable-next-line no-param-reassign\n            value = JSON.stringify(value);\n          } else if (utils.endsWith(key, '[]') && (arr = utils.toArray(value))) {\n            // eslint-disable-next-line func-names\n            arr.forEach(function(el) {\n              !utils.isUndefined(el) && formData.append(fullKey, convertValue(el));\n            });\n            return;\n          }\n        }\n\n        build(value, fullKey);\n      });\n\n      stack.pop();\n    } else {\n      formData.append(parentKey, convertValue(data));\n    }\n  }\n\n  build(obj);\n\n  return formData;\n}\n\nmodule.exports = toFormData;\n","'use strict';\n\nvar VERSION = require('../env/data').version;\nvar AxiosError = require('../core/AxiosError');\n\nvar validators = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach(function(type, i) {\n  validators[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\n\nvar deprecatedWarnings = {};\n\n/**\n * Transitional option validator\n * @param {function|boolean?} validator - set to false if the transitional option has been removed\n * @param {string?} version - deprecated version / removed since version\n * @param {string?} message - some message with additional info\n * @returns {function}\n */\nvalidators.transitional = function transitional(validator, version, message) {\n  function formatMessage(opt, desc) {\n    return '[Axios v' + VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return function(value, opt, opts) {\n    if (validator === false) {\n      throw new AxiosError(\n        formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')),\n        AxiosError.ERR_DEPRECATED\n      );\n    }\n\n    if (version && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\n/**\n * Assert object's properties type\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new AxiosError('options must be an object', AxiosError.ERR_BAD_OPTION_VALUE);\n  }\n  var keys = Object.keys(options);\n  var i = keys.length;\n  while (i-- > 0) {\n    var opt = keys[i];\n    var validator = schema[opt];\n    if (validator) {\n      var value = options[opt];\n      var result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new AxiosError('option ' + opt + ' must be ' + result, AxiosError.ERR_BAD_OPTION_VALUE);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw new AxiosError('Unknown option ' + opt, AxiosError.ERR_BAD_OPTION);\n    }\n  }\n}\n\nmodule.exports = {\n  assertOptions: assertOptions,\n  validators: validators\n};\n","'use strict';\n\nvar bind = require('./helpers/bind');\n\n// utils is a library of generic helper functions non-specific to axios\n\nvar toString = Object.prototype.toString;\n\n// eslint-disable-next-line func-names\nvar kindOf = (function(cache) {\n  // eslint-disable-next-line func-names\n  return function(thing) {\n    var str = toString.call(thing);\n    return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());\n  };\n})(Object.create(null));\n\nfunction kindOfTest(type) {\n  type = type.toLowerCase();\n  return function isKindOf(thing) {\n    return kindOf(thing) === type;\n  };\n}\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nfunction isArray(val) {\n  return Array.isArray(val);\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @function\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nvar isArrayBuffer = kindOfTest('ArrayBuffer');\n\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  var result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (isArrayBuffer(val.buffer));\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {Object} val The value to test\n * @return {boolean} True if value is a plain Object, otherwise false\n */\nfunction isPlainObject(val) {\n  if (kindOf(val) !== 'object') {\n    return false;\n  }\n\n  var prototype = Object.getPrototypeOf(val);\n  return prototype === null || prototype === Object.prototype;\n}\n\n/**\n * Determine if a value is a Date\n *\n * @function\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\nvar isDate = kindOfTest('Date');\n\n/**\n * Determine if a value is a File\n *\n * @function\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nvar isFile = kindOfTest('File');\n\n/**\n * Determine if a value is a Blob\n *\n * @function\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nvar isBlob = kindOfTest('Blob');\n\n/**\n * Determine if a value is a FileList\n *\n * @function\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nvar isFileList = kindOfTest('FileList');\n\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} thing The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nfunction isFormData(thing) {\n  var pattern = '[object FormData]';\n  return thing && (\n    (typeof FormData === 'function' && thing instanceof FormData) ||\n    toString.call(thing) === pattern ||\n    (isFunction(thing.toString) && thing.toString() === pattern)\n  );\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n * @function\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nvar isURLSearchParams = kindOfTest('URLSearchParams');\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\nfunction trim(str) {\n  return str.trim ? str.trim() : str.replace(/^\\s+|\\s+$/g, '');\n}\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n */\nfunction isStandardBrowserEnv() {\n  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||\n                                           navigator.product === 'NativeScript' ||\n                                           navigator.product === 'NS')) {\n    return false;\n  }\n  return (\n    typeof window !== 'undefined' &&\n    typeof document !== 'undefined'\n  );\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (isPlainObject(result[key]) && isPlainObject(val)) {\n      result[key] = merge(result[key], val);\n    } else if (isPlainObject(val)) {\n      result[key] = merge({}, val);\n    } else if (isArray(val)) {\n      result[key] = val.slice();\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n * @return {string} content value without BOM\n */\nfunction stripBOM(content) {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\n/**\n * Inherit the prototype methods from one constructor into another\n * @param {function} constructor\n * @param {function} superConstructor\n * @param {object} [props]\n * @param {object} [descriptors]\n */\n\nfunction inherits(constructor, superConstructor, props, descriptors) {\n  constructor.prototype = Object.create(superConstructor.prototype, descriptors);\n  constructor.prototype.constructor = constructor;\n  props && Object.assign(constructor.prototype, props);\n}\n\n/**\n * Resolve object with deep prototype chain to a flat object\n * @param {Object} sourceObj source object\n * @param {Object} [destObj]\n * @param {Function} [filter]\n * @returns {Object}\n */\n\nfunction toFlatObject(sourceObj, destObj, filter) {\n  var props;\n  var i;\n  var prop;\n  var merged = {};\n\n  destObj = destObj || {};\n\n  do {\n    props = Object.getOwnPropertyNames(sourceObj);\n    i = props.length;\n    while (i-- > 0) {\n      prop = props[i];\n      if (!merged[prop]) {\n        destObj[prop] = sourceObj[prop];\n        merged[prop] = true;\n      }\n    }\n    sourceObj = Object.getPrototypeOf(sourceObj);\n  } while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);\n\n  return destObj;\n}\n\n/*\n * determines whether a string ends with the characters of a specified string\n * @param {String} str\n * @param {String} searchString\n * @param {Number} [position= 0]\n * @returns {boolean}\n */\nfunction endsWith(str, searchString, position) {\n  str = String(str);\n  if (position === undefined || position > str.length) {\n    position = str.length;\n  }\n  position -= searchString.length;\n  var lastIndex = str.indexOf(searchString, position);\n  return lastIndex !== -1 && lastIndex === position;\n}\n\n\n/**\n * Returns new array from array like object\n * @param {*} [thing]\n * @returns {Array}\n */\nfunction toArray(thing) {\n  if (!thing) return null;\n  var i = thing.length;\n  if (isUndefined(i)) return null;\n  var arr = new Array(i);\n  while (i-- > 0) {\n    arr[i] = thing[i];\n  }\n  return arr;\n}\n\n// eslint-disable-next-line func-names\nvar isTypedArray = (function(TypedArray) {\n  // eslint-disable-next-line func-names\n  return function(thing) {\n    return TypedArray && thing instanceof TypedArray;\n  };\n})(typeof Uint8Array !== 'undefined' && Object.getPrototypeOf(Uint8Array));\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isBuffer: isBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isPlainObject: isPlainObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  extend: extend,\n  trim: trim,\n  stripBOM: stripBOM,\n  inherits: inherits,\n  toFlatObject: toFlatObject,\n  kindOf: kindOf,\n  kindOfTest: kindOfTest,\n  endsWith: endsWith,\n  toArray: toArray,\n  isTypedArray: isTypedArray,\n  isFileList: isFileList\n};\n","'use strict';\n\nvar reactIs = require('react-is');\n\n/**\n * Copyright 2015, Yahoo! Inc.\n * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\n */\nvar REACT_STATICS = {\n  childContextTypes: true,\n  contextType: true,\n  contextTypes: true,\n  defaultProps: true,\n  displayName: true,\n  getDefaultProps: true,\n  getDerivedStateFromError: true,\n  getDerivedStateFromProps: true,\n  mixins: true,\n  propTypes: true,\n  type: true\n};\nvar KNOWN_STATICS = {\n  name: true,\n  length: true,\n  prototype: true,\n  caller: true,\n  callee: true,\n  arguments: true,\n  arity: true\n};\nvar FORWARD_REF_STATICS = {\n  '$$typeof': true,\n  render: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true\n};\nvar MEMO_STATICS = {\n  '$$typeof': true,\n  compare: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true,\n  type: true\n};\nvar TYPE_STATICS = {};\nTYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS;\nTYPE_STATICS[reactIs.Memo] = MEMO_STATICS;\n\nfunction getStatics(component) {\n  // React v16.11 and below\n  if (reactIs.isMemo(component)) {\n    return MEMO_STATICS;\n  } // React v16.12 and above\n\n\n  return TYPE_STATICS[component['$$typeof']] || REACT_STATICS;\n}\n\nvar defineProperty = Object.defineProperty;\nvar getOwnPropertyNames = Object.getOwnPropertyNames;\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nvar getPrototypeOf = Object.getPrototypeOf;\nvar objectPrototype = Object.prototype;\nfunction hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {\n  if (typeof sourceComponent !== 'string') {\n    // don't hoist over string (html) components\n    if (objectPrototype) {\n      var inheritedComponent = getPrototypeOf(sourceComponent);\n\n      if (inheritedComponent && inheritedComponent !== objectPrototype) {\n        hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);\n      }\n    }\n\n    var keys = getOwnPropertyNames(sourceComponent);\n\n    if (getOwnPropertySymbols) {\n      keys = keys.concat(getOwnPropertySymbols(sourceComponent));\n    }\n\n    var targetStatics = getStatics(targetComponent);\n    var sourceStatics = getStatics(sourceComponent);\n\n    for (var i = 0; i < keys.length; ++i) {\n      var key = keys[i];\n\n      if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {\n        var descriptor = getOwnPropertyDescriptor(sourceComponent, key);\n\n        try {\n          // Avoid failures from read-only properties\n          defineProperty(targetComponent, key, descriptor);\n        } catch (e) {}\n      }\n    }\n  }\n\n  return targetComponent;\n}\n\nmodule.exports = hoistNonReactStatics;\n","/** @license React v16.13.1\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';var b=\"function\"===typeof Symbol&&Symbol.for,c=b?Symbol.for(\"react.element\"):60103,d=b?Symbol.for(\"react.portal\"):60106,e=b?Symbol.for(\"react.fragment\"):60107,f=b?Symbol.for(\"react.strict_mode\"):60108,g=b?Symbol.for(\"react.profiler\"):60114,h=b?Symbol.for(\"react.provider\"):60109,k=b?Symbol.for(\"react.context\"):60110,l=b?Symbol.for(\"react.async_mode\"):60111,m=b?Symbol.for(\"react.concurrent_mode\"):60111,n=b?Symbol.for(\"react.forward_ref\"):60112,p=b?Symbol.for(\"react.suspense\"):60113,q=b?\nSymbol.for(\"react.suspense_list\"):60120,r=b?Symbol.for(\"react.memo\"):60115,t=b?Symbol.for(\"react.lazy\"):60116,v=b?Symbol.for(\"react.block\"):60121,w=b?Symbol.for(\"react.fundamental\"):60117,x=b?Symbol.for(\"react.responder\"):60118,y=b?Symbol.for(\"react.scope\"):60119;\nfunction z(a){if(\"object\"===typeof a&&null!==a){var u=a.$$typeof;switch(u){case c:switch(a=a.type,a){case l:case m:case e:case g:case f:case p:return a;default:switch(a=a&&a.$$typeof,a){case k:case n:case t:case r:case h:return a;default:return u}}case d:return u}}}function A(a){return z(a)===m}exports.AsyncMode=l;exports.ConcurrentMode=m;exports.ContextConsumer=k;exports.ContextProvider=h;exports.Element=c;exports.ForwardRef=n;exports.Fragment=e;exports.Lazy=t;exports.Memo=r;exports.Portal=d;\nexports.Profiler=g;exports.StrictMode=f;exports.Suspense=p;exports.isAsyncMode=function(a){return A(a)||z(a)===l};exports.isConcurrentMode=A;exports.isContextConsumer=function(a){return z(a)===k};exports.isContextProvider=function(a){return z(a)===h};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===c};exports.isForwardRef=function(a){return z(a)===n};exports.isFragment=function(a){return z(a)===e};exports.isLazy=function(a){return z(a)===t};\nexports.isMemo=function(a){return z(a)===r};exports.isPortal=function(a){return z(a)===d};exports.isProfiler=function(a){return z(a)===g};exports.isStrictMode=function(a){return z(a)===f};exports.isSuspense=function(a){return z(a)===p};\nexports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===e||a===m||a===g||a===f||a===p||a===q||\"object\"===typeof a&&null!==a&&(a.$$typeof===t||a.$$typeof===r||a.$$typeof===h||a.$$typeof===k||a.$$typeof===n||a.$$typeof===w||a.$$typeof===x||a.$$typeof===y||a.$$typeof===v)};exports.typeOf=z;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","module.exports = require('./lib/index.js');\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _core = require('../core');\n\nvar _metaProps = require('../metaProps');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar defaultProps = {\n  target: '_blank'\n};\n\nvar CSVDownload = function (_React$Component) {\n  _inherits(CSVDownload, _React$Component);\n\n  function CSVDownload(props) {\n    _classCallCheck(this, CSVDownload);\n\n    var _this = _possibleConstructorReturn(this, (CSVDownload.__proto__ || Object.getPrototypeOf(CSVDownload)).call(this, props));\n\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(CSVDownload, [{\n    key: 'buildURI',\n    value: function buildURI() {\n      return _core.buildURI.apply(undefined, arguments);\n    }\n  }, {\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var _props = this.props,\n          data = _props.data,\n          headers = _props.headers,\n          separator = _props.separator,\n          enclosingCharacter = _props.enclosingCharacter,\n          uFEFF = _props.uFEFF,\n          target = _props.target,\n          specs = _props.specs,\n          replace = _props.replace;\n\n      this.state.page = window.open(this.buildURI(data, uFEFF, headers, separator, enclosingCharacter), target, specs, replace);\n    }\n  }, {\n    key: 'getWindow',\n    value: function getWindow() {\n      return this.state.page;\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      return null;\n    }\n  }]);\n\n  return CSVDownload;\n}(_react2.default.Component);\n\nCSVDownload.defaultProps = Object.assign(_metaProps.defaultProps, defaultProps);\nCSVDownload.propTypes = _metaProps.propTypes;\nexports.default = CSVDownload;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _core = require('../core');\n\nvar _metaProps = require('../metaProps');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar CSVLink = function (_React$Component) {\n  _inherits(CSVLink, _React$Component);\n\n  function CSVLink(props) {\n    _classCallCheck(this, CSVLink);\n\n    var _this = _possibleConstructorReturn(this, (CSVLink.__proto__ || Object.getPrototypeOf(CSVLink)).call(this, props));\n\n    _this.buildURI = _this.buildURI.bind(_this);\n    return _this;\n  }\n\n  _createClass(CSVLink, [{\n    key: 'buildURI',\n    value: function buildURI() {\n      return _core.buildURI.apply(undefined, arguments);\n    }\n  }, {\n    key: 'handleLegacy',\n    value: function handleLegacy(event) {\n      var isAsync = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (window.navigator.msSaveOrOpenBlob) {\n        event.preventDefault();\n\n        var _props = this.props,\n            data = _props.data,\n            headers = _props.headers,\n            separator = _props.separator,\n            filename = _props.filename,\n            enclosingCharacter = _props.enclosingCharacter,\n            uFEFF = _props.uFEFF;\n\n\n        var csvData = isAsync && typeof data === 'function' ? data() : data;\n\n        var blob = new Blob([uFEFF ? '\\uFEFF' : '', (0, _core.toCSV)(csvData, headers, separator, enclosingCharacter)]);\n        window.navigator.msSaveBlob(blob, filename);\n\n        return false;\n      }\n    }\n  }, {\n    key: 'handleAsyncClick',\n    value: function handleAsyncClick(event) {\n      var _this2 = this;\n\n      var done = function done(proceed) {\n        if (proceed === false) {\n          event.preventDefault();\n          return;\n        }\n        _this2.handleLegacy(event, true);\n      };\n\n      this.props.onClick(event, done);\n    }\n  }, {\n    key: 'handleSyncClick',\n    value: function handleSyncClick(event) {\n      var stopEvent = this.props.onClick(event) === false;\n      if (stopEvent) {\n        event.preventDefault();\n        return;\n      }\n      this.handleLegacy(event);\n    }\n  }, {\n    key: 'handleClick',\n    value: function handleClick() {\n      var _this3 = this;\n\n      return function (event) {\n        if (typeof _this3.props.onClick === 'function') {\n          return _this3.props.asyncOnClick ? _this3.handleAsyncClick(event) : _this3.handleSyncClick(event);\n        }\n        _this3.handleLegacy(event);\n      };\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this4 = this;\n\n      var _props2 = this.props,\n          data = _props2.data,\n          headers = _props2.headers,\n          separator = _props2.separator,\n          filename = _props2.filename,\n          uFEFF = _props2.uFEFF,\n          children = _props2.children,\n          onClick = _props2.onClick,\n          asyncOnClick = _props2.asyncOnClick,\n          enclosingCharacter = _props2.enclosingCharacter,\n          rest = _objectWithoutProperties(_props2, ['data', 'headers', 'separator', 'filename', 'uFEFF', 'children', 'onClick', 'asyncOnClick', 'enclosingCharacter']);\n\n      var isNodeEnvironment = typeof window === 'undefined';\n      var href = isNodeEnvironment ? '' : this.buildURI(data, uFEFF, headers, separator, enclosingCharacter);\n\n      return _react2.default.createElement(\n        'a',\n        _extends({\n          download: filename\n        }, rest, {\n          ref: function ref(link) {\n            return _this4.link = link;\n          },\n          target: '_self',\n          href: href,\n          onClick: this.handleClick()\n        }),\n        children\n      );\n    }\n  }]);\n\n  return CSVLink;\n}(_react2.default.Component);\n\nCSVLink.defaultProps = _metaProps.defaultProps;\nCSVLink.propTypes = _metaProps.propTypes;\nexports.default = CSVLink;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nvar isSafari = exports.isSafari = function isSafari() {\n  return (/^((?!chrome|android).)*safari/i.test(navigator.userAgent)\n  );\n};\n\nvar isJsons = exports.isJsons = function isJsons(array) {\n  return Array.isArray(array) && array.every(function (row) {\n    return (typeof row === \"undefined\" ? \"undefined\" : _typeof(row)) === 'object' && !(row instanceof Array);\n  });\n};\n\nvar isArrays = exports.isArrays = function isArrays(array) {\n  return Array.isArray(array) && array.every(function (row) {\n    return Array.isArray(row);\n  });\n};\n\nvar jsonsHeaders = exports.jsonsHeaders = function jsonsHeaders(array) {\n  return Array.from(array.map(function (json) {\n    return Object.keys(json);\n  }).reduce(function (a, b) {\n    return new Set([].concat(_toConsumableArray(a), _toConsumableArray(b)));\n  }, []));\n};\n\nvar jsons2arrays = exports.jsons2arrays = function jsons2arrays(jsons, headers) {\n  headers = headers || jsonsHeaders(jsons);\n\n  var headerLabels = headers;\n  var headerKeys = headers;\n  if (isJsons(headers)) {\n    headerLabels = headers.map(function (header) {\n      return header.label;\n    });\n    headerKeys = headers.map(function (header) {\n      return header.key;\n    });\n  }\n\n  var data = jsons.map(function (object) {\n    return headerKeys.map(function (header) {\n      return getHeaderValue(header, object);\n    });\n  });\n  return [headerLabels].concat(_toConsumableArray(data));\n};\n\nvar getHeaderValue = exports.getHeaderValue = function getHeaderValue(property, obj) {\n  var foundValue = property.replace(/\\[([^\\]]+)]/g, \".$1\").split(\".\").reduce(function (o, p, i, arr) {\n    var value = o[p];\n    if (value === undefined || value === null) {\n      arr.splice(1);\n    } else {\n      return value;\n    }\n  }, obj);\n\n  return foundValue === undefined ? property in obj ? obj[property] : '' : foundValue;\n};\n\nvar elementOrEmpty = exports.elementOrEmpty = function elementOrEmpty(element) {\n  return typeof element === 'undefined' || element === null ? '' : element;\n};\n\nvar joiner = exports.joiner = function joiner(data) {\n  var separator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : ',';\n  var enclosingCharacter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '\"';\n\n  return data.filter(function (e) {\n    return e;\n  }).map(function (row) {\n    return row.map(function (element) {\n      return elementOrEmpty(element);\n    }).map(function (column) {\n      return \"\" + enclosingCharacter + column + enclosingCharacter;\n    }).join(separator);\n  }).join(\"\\n\");\n};\n\nvar arrays2csv = exports.arrays2csv = function arrays2csv(data, headers, separator, enclosingCharacter) {\n  return joiner(headers ? [headers].concat(_toConsumableArray(data)) : data, separator, enclosingCharacter);\n};\n\nvar jsons2csv = exports.jsons2csv = function jsons2csv(data, headers, separator, enclosingCharacter) {\n  return joiner(jsons2arrays(data, headers), separator, enclosingCharacter);\n};\n\nvar string2csv = exports.string2csv = function string2csv(data, headers, separator, enclosingCharacter) {\n  return headers ? headers.join(separator) + \"\\n\" + data : data.replace(/\"/g, '\"\"');\n};\n\nvar toCSV = exports.toCSV = function toCSV(data, headers, separator, enclosingCharacter) {\n  if (isJsons(data)) return jsons2csv(data, headers, separator, enclosingCharacter);\n  if (isArrays(data)) return arrays2csv(data, headers, separator, enclosingCharacter);\n  if (typeof data === 'string') return string2csv(data, headers, separator);\n  throw new TypeError(\"Data should be a \\\"String\\\", \\\"Array of arrays\\\" OR \\\"Array of objects\\\" \");\n};\n\nvar buildURI = exports.buildURI = function buildURI(data, uFEFF, headers, separator, enclosingCharacter) {\n  var csv = toCSV(data, headers, separator, enclosingCharacter);\n  var type = isSafari() ? 'application/csv' : 'text/csv';\n  var blob = new Blob([uFEFF ? \"\\uFEFF\" : '', csv], { type: type });\n  var dataURI = \"data:\" + type + \";charset=utf-8,\" + (uFEFF ? \"\\uFEFF\" : '') + csv;\n\n  var URL = window.URL || window.webkitURL;\n\n  return typeof URL.createObjectURL === 'undefined' ? dataURI : URL.createObjectURL(blob);\n};","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CSVLink = exports.CSVDownload = undefined;\n\nvar _Download = require('./components/Download');\n\nvar _Download2 = _interopRequireDefault(_Download);\n\nvar _Link = require('./components/Link');\n\nvar _Link2 = _interopRequireDefault(_Link);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar CSVDownload = exports.CSVDownload = _Download2.default;\nvar CSVLink = exports.CSVLink = _Link2.default;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PropsNotForwarded = exports.defaultProps = exports.propTypes = undefined;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar propTypes = exports.propTypes = {\n  data: (0, _propTypes.oneOfType)([_propTypes.string, _propTypes.array, _propTypes.func]).isRequired,\n  headers: _propTypes.array,\n  target: _propTypes.string,\n  separator: _propTypes.string,\n  filename: _propTypes.string,\n  uFEFF: _propTypes.bool,\n  onClick: _propTypes.func,\n  asyncOnClick: _propTypes.bool,\n  enclosingCharacter: _propTypes.string\n};\n\nvar defaultProps = exports.defaultProps = {\n  separator: ',',\n  filename: 'generatedBy_react-csv.csv',\n  uFEFF: true,\n  asyncOnClick: false,\n  enclosingCharacter: '\"'\n};\n\nvar PropsNotForwarded = exports.PropsNotForwarded = ['data', 'headers'];","/**\n * @license React\n * react-dom.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\n'use strict';var aa=require(\"react\"),ca=require(\"scheduler\");function p(a){for(var b=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=1;c<arguments.length;c++)b+=\"&args[]=\"+encodeURIComponent(arguments[c]);return\"Minified React error #\"+a+\"; visit \"+b+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"}var da=new Set,ea={};function fa(a,b){ha(a,b);ha(a+\"Capture\",b)}\nfunction ha(a,b){ea[a]=b;for(a=0;a<b.length;a++)da.add(b[a])}\nvar ia=!(\"undefined\"===typeof window||\"undefined\"===typeof window.document||\"undefined\"===typeof window.document.createElement),ja=Object.prototype.hasOwnProperty,ka=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,la=\n{},ma={};function oa(a){if(ja.call(ma,a))return!0;if(ja.call(la,a))return!1;if(ka.test(a))return ma[a]=!0;la[a]=!0;return!1}function pa(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case \"function\":case \"symbol\":return!0;case \"boolean\":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return\"data-\"!==a&&\"aria-\"!==a;default:return!1}}\nfunction qa(a,b,c,d){if(null===b||\"undefined\"===typeof b||pa(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}function v(a,b,c,d,e,f,g){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b;this.sanitizeURL=f;this.removeEmptyString=g}var z={};\n\"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style\".split(\" \").forEach(function(a){z[a]=new v(a,0,!1,a,null,!1,!1)});[[\"acceptCharset\",\"accept-charset\"],[\"className\",\"class\"],[\"htmlFor\",\"for\"],[\"httpEquiv\",\"http-equiv\"]].forEach(function(a){var b=a[0];z[b]=new v(b,1,!1,a[1],null,!1,!1)});[\"contentEditable\",\"draggable\",\"spellCheck\",\"value\"].forEach(function(a){z[a]=new v(a,2,!1,a.toLowerCase(),null,!1,!1)});\n[\"autoReverse\",\"externalResourcesRequired\",\"focusable\",\"preserveAlpha\"].forEach(function(a){z[a]=new v(a,2,!1,a,null,!1,!1)});\"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope\".split(\" \").forEach(function(a){z[a]=new v(a,3,!1,a.toLowerCase(),null,!1,!1)});\n[\"checked\",\"multiple\",\"muted\",\"selected\"].forEach(function(a){z[a]=new v(a,3,!0,a,null,!1,!1)});[\"capture\",\"download\"].forEach(function(a){z[a]=new v(a,4,!1,a,null,!1,!1)});[\"cols\",\"rows\",\"size\",\"span\"].forEach(function(a){z[a]=new v(a,6,!1,a,null,!1,!1)});[\"rowSpan\",\"start\"].forEach(function(a){z[a]=new v(a,5,!1,a.toLowerCase(),null,!1,!1)});var ra=/[\\-:]([a-z])/g;function sa(a){return a[1].toUpperCase()}\n\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height\".split(\" \").forEach(function(a){var b=a.replace(ra,\nsa);z[b]=new v(b,1,!1,a,null,!1,!1)});\"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type\".split(\" \").forEach(function(a){var b=a.replace(ra,sa);z[b]=new v(b,1,!1,a,\"http://www.w3.org/1999/xlink\",!1,!1)});[\"xml:base\",\"xml:lang\",\"xml:space\"].forEach(function(a){var b=a.replace(ra,sa);z[b]=new v(b,1,!1,a,\"http://www.w3.org/XML/1998/namespace\",!1,!1)});[\"tabIndex\",\"crossOrigin\"].forEach(function(a){z[a]=new v(a,1,!1,a.toLowerCase(),null,!1,!1)});\nz.xlinkHref=new v(\"xlinkHref\",1,!1,\"xlink:href\",\"http://www.w3.org/1999/xlink\",!0,!1);[\"src\",\"href\",\"action\",\"formAction\"].forEach(function(a){z[a]=new v(a,1,!1,a.toLowerCase(),null,!0,!0)});\nfunction ta(a,b,c,d){var e=z.hasOwnProperty(b)?z[b]:null;if(null!==e?0!==e.type:d||!(2<b.length)||\"o\"!==b[0]&&\"O\"!==b[0]||\"n\"!==b[1]&&\"N\"!==b[1])qa(b,c,e,d)&&(c=null),d||null===e?oa(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,\"\"+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:\"\":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?\"\":\"\"+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c)))}\nvar ua=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,va=Symbol.for(\"react.element\"),wa=Symbol.for(\"react.portal\"),ya=Symbol.for(\"react.fragment\"),za=Symbol.for(\"react.strict_mode\"),Aa=Symbol.for(\"react.profiler\"),Ba=Symbol.for(\"react.provider\"),Ca=Symbol.for(\"react.context\"),Da=Symbol.for(\"react.forward_ref\"),Ea=Symbol.for(\"react.suspense\"),Fa=Symbol.for(\"react.suspense_list\"),Ga=Symbol.for(\"react.memo\"),Ha=Symbol.for(\"react.lazy\");Symbol.for(\"react.scope\");Symbol.for(\"react.debug_trace_mode\");\nvar Ia=Symbol.for(\"react.offscreen\");Symbol.for(\"react.legacy_hidden\");Symbol.for(\"react.cache\");Symbol.for(\"react.tracing_marker\");var Ja=Symbol.iterator;function Ka(a){if(null===a||\"object\"!==typeof a)return null;a=Ja&&a[Ja]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}var A=Object.assign,La;function Ma(a){if(void 0===La)try{throw Error();}catch(c){var b=c.stack.trim().match(/\\n( *(at )?)/);La=b&&b[1]||\"\"}return\"\\n\"+La+a}var Na=!1;\nfunction Oa(a,b){if(!a||Na)return\"\";Na=!0;var c=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(b)if(b=function(){throw Error();},Object.defineProperty(b.prototype,\"props\",{set:function(){throw Error();}}),\"object\"===typeof Reflect&&Reflect.construct){try{Reflect.construct(b,[])}catch(l){var d=l}Reflect.construct(a,[],b)}else{try{b.call()}catch(l){d=l}a.call(b.prototype)}else{try{throw Error();}catch(l){d=l}a()}}catch(l){if(l&&d&&\"string\"===typeof l.stack){for(var e=l.stack.split(\"\\n\"),\nf=d.stack.split(\"\\n\"),g=e.length-1,h=f.length-1;1<=g&&0<=h&&e[g]!==f[h];)h--;for(;1<=g&&0<=h;g--,h--)if(e[g]!==f[h]){if(1!==g||1!==h){do if(g--,h--,0>h||e[g]!==f[h]){var k=\"\\n\"+e[g].replace(\" at new \",\" at \");a.displayName&&k.includes(\"<anonymous>\")&&(k=k.replace(\"<anonymous>\",a.displayName));return k}while(1<=g&&0<=h)}break}}}finally{Na=!1,Error.prepareStackTrace=c}return(a=a?a.displayName||a.name:\"\")?Ma(a):\"\"}\nfunction Pa(a){switch(a.tag){case 5:return Ma(a.type);case 16:return Ma(\"Lazy\");case 13:return Ma(\"Suspense\");case 19:return Ma(\"SuspenseList\");case 0:case 2:case 15:return a=Oa(a.type,!1),a;case 11:return a=Oa(a.type.render,!1),a;case 1:return a=Oa(a.type,!0),a;default:return\"\"}}\nfunction Qa(a){if(null==a)return null;if(\"function\"===typeof a)return a.displayName||a.name||null;if(\"string\"===typeof a)return a;switch(a){case ya:return\"Fragment\";case wa:return\"Portal\";case Aa:return\"Profiler\";case za:return\"StrictMode\";case Ea:return\"Suspense\";case Fa:return\"SuspenseList\"}if(\"object\"===typeof a)switch(a.$$typeof){case Ca:return(a.displayName||\"Context\")+\".Consumer\";case Ba:return(a._context.displayName||\"Context\")+\".Provider\";case Da:var b=a.render;a=a.displayName;a||(a=b.displayName||\nb.name||\"\",a=\"\"!==a?\"ForwardRef(\"+a+\")\":\"ForwardRef\");return a;case Ga:return b=a.displayName||null,null!==b?b:Qa(a.type)||\"Memo\";case Ha:b=a._payload;a=a._init;try{return Qa(a(b))}catch(c){}}return null}\nfunction Ra(a){var b=a.type;switch(a.tag){case 24:return\"Cache\";case 9:return(b.displayName||\"Context\")+\".Consumer\";case 10:return(b._context.displayName||\"Context\")+\".Provider\";case 18:return\"DehydratedFragment\";case 11:return a=b.render,a=a.displayName||a.name||\"\",b.displayName||(\"\"!==a?\"ForwardRef(\"+a+\")\":\"ForwardRef\");case 7:return\"Fragment\";case 5:return b;case 4:return\"Portal\";case 3:return\"Root\";case 6:return\"Text\";case 16:return Qa(b);case 8:return b===za?\"StrictMode\":\"Mode\";case 22:return\"Offscreen\";\ncase 12:return\"Profiler\";case 21:return\"Scope\";case 13:return\"Suspense\";case 19:return\"SuspenseList\";case 25:return\"TracingMarker\";case 1:case 0:case 17:case 2:case 14:case 15:if(\"function\"===typeof b)return b.displayName||b.name||null;if(\"string\"===typeof b)return b}return null}function Sa(a){switch(typeof a){case \"boolean\":case \"number\":case \"string\":case \"undefined\":return a;case \"object\":return a;default:return\"\"}}\nfunction Ta(a){var b=a.type;return(a=a.nodeName)&&\"input\"===a.toLowerCase()&&(\"checkbox\"===b||\"radio\"===b)}\nfunction Ua(a){var b=Ta(a)?\"checked\":\"value\",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=\"\"+a[b];if(!a.hasOwnProperty(b)&&\"undefined\"!==typeof c&&\"function\"===typeof c.get&&\"function\"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=\"\"+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=\"\"+a},stopTracking:function(){a._valueTracker=\nnull;delete a[b]}}}}function Va(a){a._valueTracker||(a._valueTracker=Ua(a))}function Wa(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d=\"\";a&&(d=Ta(a)?a.checked?\"true\":\"false\":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}function Xa(a){a=a||(\"undefined\"!==typeof document?document:void 0);if(\"undefined\"===typeof a)return null;try{return a.activeElement||a.body}catch(b){return a.body}}\nfunction Ya(a,b){var c=b.checked;return A({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}function Za(a,b){var c=null==b.defaultValue?\"\":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=Sa(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:\"checkbox\"===b.type||\"radio\"===b.type?null!=b.checked:null!=b.value}}function ab(a,b){b=b.checked;null!=b&&ta(a,\"checked\",b,!1)}\nfunction bb(a,b){ab(a,b);var c=Sa(b.value),d=b.type;if(null!=c)if(\"number\"===d){if(0===c&&\"\"===a.value||a.value!=c)a.value=\"\"+c}else a.value!==\"\"+c&&(a.value=\"\"+c);else if(\"submit\"===d||\"reset\"===d){a.removeAttribute(\"value\");return}b.hasOwnProperty(\"value\")?cb(a,b.type,c):b.hasOwnProperty(\"defaultValue\")&&cb(a,b.type,Sa(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}\nfunction db(a,b,c){if(b.hasOwnProperty(\"value\")||b.hasOwnProperty(\"defaultValue\")){var d=b.type;if(!(\"submit\"!==d&&\"reset\"!==d||void 0!==b.value&&null!==b.value))return;b=\"\"+a._wrapperState.initialValue;c||b===a.value||(a.value=b);a.defaultValue=b}c=a.name;\"\"!==c&&(a.name=\"\");a.defaultChecked=!!a._wrapperState.initialChecked;\"\"!==c&&(a.name=c)}\nfunction cb(a,b,c){if(\"number\"!==b||Xa(a.ownerDocument)!==a)null==c?a.defaultValue=\"\"+a._wrapperState.initialValue:a.defaultValue!==\"\"+c&&(a.defaultValue=\"\"+c)}var eb=Array.isArray;\nfunction fb(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b[\"$\"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty(\"$\"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=\"\"+Sa(c);b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}\nfunction gb(a,b){if(null!=b.dangerouslySetInnerHTML)throw Error(p(91));return A({},b,{value:void 0,defaultValue:void 0,children:\"\"+a._wrapperState.initialValue})}function hb(a,b){var c=b.value;if(null==c){c=b.children;b=b.defaultValue;if(null!=c){if(null!=b)throw Error(p(92));if(eb(c)){if(1<c.length)throw Error(p(93));c=c[0]}b=c}null==b&&(b=\"\");c=b}a._wrapperState={initialValue:Sa(c)}}\nfunction ib(a,b){var c=Sa(b.value),d=Sa(b.defaultValue);null!=c&&(c=\"\"+c,c!==a.value&&(a.value=c),null==b.defaultValue&&a.defaultValue!==c&&(a.defaultValue=c));null!=d&&(a.defaultValue=\"\"+d)}function jb(a){var b=a.textContent;b===a._wrapperState.initialValue&&\"\"!==b&&null!==b&&(a.value=b)}function kb(a){switch(a){case \"svg\":return\"http://www.w3.org/2000/svg\";case \"math\":return\"http://www.w3.org/1998/Math/MathML\";default:return\"http://www.w3.org/1999/xhtml\"}}\nfunction lb(a,b){return null==a||\"http://www.w3.org/1999/xhtml\"===a?kb(b):\"http://www.w3.org/2000/svg\"===a&&\"foreignObject\"===b?\"http://www.w3.org/1999/xhtml\":a}\nvar mb,nb=function(a){return\"undefined\"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(\"http://www.w3.org/2000/svg\"!==a.namespaceURI||\"innerHTML\"in a)a.innerHTML=b;else{mb=mb||document.createElement(\"div\");mb.innerHTML=\"<svg>\"+b.valueOf().toString()+\"</svg>\";for(b=mb.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});\nfunction ob(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}\nvar pb={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,\nzoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},qb=[\"Webkit\",\"ms\",\"Moz\",\"O\"];Object.keys(pb).forEach(function(a){qb.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);pb[b]=pb[a]})});function rb(a,b,c){return null==b||\"boolean\"===typeof b||\"\"===b?\"\":c||\"number\"!==typeof b||0===b||pb.hasOwnProperty(a)&&pb[a]?(\"\"+b).trim():b+\"px\"}\nfunction sb(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf(\"--\"),e=rb(c,b[c],d);\"float\"===c&&(c=\"cssFloat\");d?a.setProperty(c,e):a[c]=e}}var tb=A({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});\nfunction ub(a,b){if(b){if(tb[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML))throw Error(p(137,a));if(null!=b.dangerouslySetInnerHTML){if(null!=b.children)throw Error(p(60));if(\"object\"!==typeof b.dangerouslySetInnerHTML||!(\"__html\"in b.dangerouslySetInnerHTML))throw Error(p(61));}if(null!=b.style&&\"object\"!==typeof b.style)throw Error(p(62));}}\nfunction vb(a,b){if(-1===a.indexOf(\"-\"))return\"string\"===typeof b.is;switch(a){case \"annotation-xml\":case \"color-profile\":case \"font-face\":case \"font-face-src\":case \"font-face-uri\":case \"font-face-format\":case \"font-face-name\":case \"missing-glyph\":return!1;default:return!0}}var wb=null;function xb(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}var yb=null,zb=null,Ab=null;\nfunction Bb(a){if(a=Cb(a)){if(\"function\"!==typeof yb)throw Error(p(280));var b=a.stateNode;b&&(b=Db(b),yb(a.stateNode,a.type,b))}}function Eb(a){zb?Ab?Ab.push(a):Ab=[a]:zb=a}function Fb(){if(zb){var a=zb,b=Ab;Ab=zb=null;Bb(a);if(b)for(a=0;a<b.length;a++)Bb(b[a])}}function Gb(a,b){return a(b)}function Hb(){}var Ib=!1;function Jb(a,b,c){if(Ib)return a(b,c);Ib=!0;try{return Gb(a,b,c)}finally{if(Ib=!1,null!==zb||null!==Ab)Hb(),Fb()}}\nfunction Kb(a,b){var c=a.stateNode;if(null===c)return null;var d=Db(c);if(null===d)return null;c=d[b];a:switch(b){case \"onClick\":case \"onClickCapture\":case \"onDoubleClick\":case \"onDoubleClickCapture\":case \"onMouseDown\":case \"onMouseDownCapture\":case \"onMouseMove\":case \"onMouseMoveCapture\":case \"onMouseUp\":case \"onMouseUpCapture\":case \"onMouseEnter\":(d=!d.disabled)||(a=a.type,d=!(\"button\"===a||\"input\"===a||\"select\"===a||\"textarea\"===a));a=!d;break a;default:a=!1}if(a)return null;if(c&&\"function\"!==\ntypeof c)throw Error(p(231,b,typeof c));return c}var Lb=!1;if(ia)try{var Mb={};Object.defineProperty(Mb,\"passive\",{get:function(){Lb=!0}});window.addEventListener(\"test\",Mb,Mb);window.removeEventListener(\"test\",Mb,Mb)}catch(a){Lb=!1}function Nb(a,b,c,d,e,f,g,h,k){var l=Array.prototype.slice.call(arguments,3);try{b.apply(c,l)}catch(m){this.onError(m)}}var Ob=!1,Pb=null,Qb=!1,Rb=null,Sb={onError:function(a){Ob=!0;Pb=a}};function Tb(a,b,c,d,e,f,g,h,k){Ob=!1;Pb=null;Nb.apply(Sb,arguments)}\nfunction Ub(a,b,c,d,e,f,g,h,k){Tb.apply(this,arguments);if(Ob){if(Ob){var l=Pb;Ob=!1;Pb=null}else throw Error(p(198));Qb||(Qb=!0,Rb=l)}}function Vb(a){var b=a,c=a;if(a.alternate)for(;b.return;)b=b.return;else{a=b;do b=a,0!==(b.flags&4098)&&(c=b.return),a=b.return;while(a)}return 3===b.tag?c:null}function Wb(a){if(13===a.tag){var b=a.memoizedState;null===b&&(a=a.alternate,null!==a&&(b=a.memoizedState));if(null!==b)return b.dehydrated}return null}function Xb(a){if(Vb(a)!==a)throw Error(p(188));}\nfunction Yb(a){var b=a.alternate;if(!b){b=Vb(a);if(null===b)throw Error(p(188));return b!==a?null:a}for(var c=a,d=b;;){var e=c.return;if(null===e)break;var f=e.alternate;if(null===f){d=e.return;if(null!==d){c=d;continue}break}if(e.child===f.child){for(f=e.child;f;){if(f===c)return Xb(e),a;if(f===d)return Xb(e),b;f=f.sibling}throw Error(p(188));}if(c.return!==d.return)c=e,d=f;else{for(var g=!1,h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===\nc){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}if(!g)throw Error(p(189));}}if(c.alternate!==d)throw Error(p(190));}if(3!==c.tag)throw Error(p(188));return c.stateNode.current===c?a:b}function Zb(a){a=Yb(a);return null!==a?$b(a):null}function $b(a){if(5===a.tag||6===a.tag)return a;for(a=a.child;null!==a;){var b=$b(a);if(null!==b)return b;a=a.sibling}return null}\nvar ac=ca.unstable_scheduleCallback,bc=ca.unstable_cancelCallback,cc=ca.unstable_shouldYield,dc=ca.unstable_requestPaint,B=ca.unstable_now,ec=ca.unstable_getCurrentPriorityLevel,fc=ca.unstable_ImmediatePriority,gc=ca.unstable_UserBlockingPriority,hc=ca.unstable_NormalPriority,ic=ca.unstable_LowPriority,jc=ca.unstable_IdlePriority,kc=null,lc=null;function mc(a){if(lc&&\"function\"===typeof lc.onCommitFiberRoot)try{lc.onCommitFiberRoot(kc,a,void 0,128===(a.current.flags&128))}catch(b){}}\nvar oc=Math.clz32?Math.clz32:nc,pc=Math.log,qc=Math.LN2;function nc(a){a>>>=0;return 0===a?32:31-(pc(a)/qc|0)|0}var rc=64,sc=4194304;\nfunction tc(a){switch(a&-a){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return a&4194240;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return a&130023424;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;\ndefault:return a}}function uc(a,b){var c=a.pendingLanes;if(0===c)return 0;var d=0,e=a.suspendedLanes,f=a.pingedLanes,g=c&268435455;if(0!==g){var h=g&~e;0!==h?d=tc(h):(f&=g,0!==f&&(d=tc(f)))}else g=c&~e,0!==g?d=tc(g):0!==f&&(d=tc(f));if(0===d)return 0;if(0!==b&&b!==d&&0===(b&e)&&(e=d&-d,f=b&-b,e>=f||16===e&&0!==(f&4194240)))return b;0!==(d&4)&&(d|=c&16);b=a.entangledLanes;if(0!==b)for(a=a.entanglements,b&=d;0<b;)c=31-oc(b),e=1<<c,d|=a[c],b&=~e;return d}\nfunction vc(a,b){switch(a){case 1:case 2:case 4:return b+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return b+5E3;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return-1;case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}\nfunction wc(a,b){for(var c=a.suspendedLanes,d=a.pingedLanes,e=a.expirationTimes,f=a.pendingLanes;0<f;){var g=31-oc(f),h=1<<g,k=e[g];if(-1===k){if(0===(h&c)||0!==(h&d))e[g]=vc(h,b)}else k<=b&&(a.expiredLanes|=h);f&=~h}}function xc(a){a=a.pendingLanes&-1073741825;return 0!==a?a:a&1073741824?1073741824:0}function yc(){var a=rc;rc<<=1;0===(rc&4194240)&&(rc=64);return a}function zc(a){for(var b=[],c=0;31>c;c++)b.push(a);return b}\nfunction Ac(a,b,c){a.pendingLanes|=b;536870912!==b&&(a.suspendedLanes=0,a.pingedLanes=0);a=a.eventTimes;b=31-oc(b);a[b]=c}function Bc(a,b){var c=a.pendingLanes&~b;a.pendingLanes=b;a.suspendedLanes=0;a.pingedLanes=0;a.expiredLanes&=b;a.mutableReadLanes&=b;a.entangledLanes&=b;b=a.entanglements;var d=a.eventTimes;for(a=a.expirationTimes;0<c;){var e=31-oc(c),f=1<<e;b[e]=0;d[e]=-1;a[e]=-1;c&=~f}}\nfunction Cc(a,b){var c=a.entangledLanes|=b;for(a=a.entanglements;c;){var d=31-oc(c),e=1<<d;e&b|a[d]&b&&(a[d]|=b);c&=~e}}var C=0;function Dc(a){a&=-a;return 1<a?4<a?0!==(a&268435455)?16:536870912:4:1}var Ec,Fc,Gc,Hc,Ic,Jc=!1,Kc=[],Lc=null,Mc=null,Nc=null,Oc=new Map,Pc=new Map,Qc=[],Rc=\"mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit\".split(\" \");\nfunction Sc(a,b){switch(a){case \"focusin\":case \"focusout\":Lc=null;break;case \"dragenter\":case \"dragleave\":Mc=null;break;case \"mouseover\":case \"mouseout\":Nc=null;break;case \"pointerover\":case \"pointerout\":Oc.delete(b.pointerId);break;case \"gotpointercapture\":case \"lostpointercapture\":Pc.delete(b.pointerId)}}\nfunction Tc(a,b,c,d,e,f){if(null===a||a.nativeEvent!==f)return a={blockedOn:b,domEventName:c,eventSystemFlags:d,nativeEvent:f,targetContainers:[e]},null!==b&&(b=Cb(b),null!==b&&Fc(b)),a;a.eventSystemFlags|=d;b=a.targetContainers;null!==e&&-1===b.indexOf(e)&&b.push(e);return a}\nfunction Uc(a,b,c,d,e){switch(b){case \"focusin\":return Lc=Tc(Lc,a,b,c,d,e),!0;case \"dragenter\":return Mc=Tc(Mc,a,b,c,d,e),!0;case \"mouseover\":return Nc=Tc(Nc,a,b,c,d,e),!0;case \"pointerover\":var f=e.pointerId;Oc.set(f,Tc(Oc.get(f)||null,a,b,c,d,e));return!0;case \"gotpointercapture\":return f=e.pointerId,Pc.set(f,Tc(Pc.get(f)||null,a,b,c,d,e)),!0}return!1}\nfunction Vc(a){var b=Wc(a.target);if(null!==b){var c=Vb(b);if(null!==c)if(b=c.tag,13===b){if(b=Wb(c),null!==b){a.blockedOn=b;Ic(a.priority,function(){Gc(c)});return}}else if(3===b&&c.stateNode.current.memoizedState.isDehydrated){a.blockedOn=3===c.tag?c.stateNode.containerInfo:null;return}}a.blockedOn=null}\nfunction Xc(a){if(null!==a.blockedOn)return!1;for(var b=a.targetContainers;0<b.length;){var c=Yc(a.domEventName,a.eventSystemFlags,b[0],a.nativeEvent);if(null===c){c=a.nativeEvent;var d=new c.constructor(c.type,c);wb=d;c.target.dispatchEvent(d);wb=null}else return b=Cb(c),null!==b&&Fc(b),a.blockedOn=c,!1;b.shift()}return!0}function Zc(a,b,c){Xc(a)&&c.delete(b)}function $c(){Jc=!1;null!==Lc&&Xc(Lc)&&(Lc=null);null!==Mc&&Xc(Mc)&&(Mc=null);null!==Nc&&Xc(Nc)&&(Nc=null);Oc.forEach(Zc);Pc.forEach(Zc)}\nfunction ad(a,b){a.blockedOn===b&&(a.blockedOn=null,Jc||(Jc=!0,ca.unstable_scheduleCallback(ca.unstable_NormalPriority,$c)))}\nfunction bd(a){function b(b){return ad(b,a)}if(0<Kc.length){ad(Kc[0],a);for(var c=1;c<Kc.length;c++){var d=Kc[c];d.blockedOn===a&&(d.blockedOn=null)}}null!==Lc&&ad(Lc,a);null!==Mc&&ad(Mc,a);null!==Nc&&ad(Nc,a);Oc.forEach(b);Pc.forEach(b);for(c=0;c<Qc.length;c++)d=Qc[c],d.blockedOn===a&&(d.blockedOn=null);for(;0<Qc.length&&(c=Qc[0],null===c.blockedOn);)Vc(c),null===c.blockedOn&&Qc.shift()}var cd=ua.ReactCurrentBatchConfig,dd=!0;\nfunction ed(a,b,c,d){var e=C,f=cd.transition;cd.transition=null;try{C=1,fd(a,b,c,d)}finally{C=e,cd.transition=f}}function gd(a,b,c,d){var e=C,f=cd.transition;cd.transition=null;try{C=4,fd(a,b,c,d)}finally{C=e,cd.transition=f}}\nfunction fd(a,b,c,d){if(dd){var e=Yc(a,b,c,d);if(null===e)hd(a,b,d,id,c),Sc(a,d);else if(Uc(e,a,b,c,d))d.stopPropagation();else if(Sc(a,d),b&4&&-1<Rc.indexOf(a)){for(;null!==e;){var f=Cb(e);null!==f&&Ec(f);f=Yc(a,b,c,d);null===f&&hd(a,b,d,id,c);if(f===e)break;e=f}null!==e&&d.stopPropagation()}else hd(a,b,d,null,c)}}var id=null;\nfunction Yc(a,b,c,d){id=null;a=xb(d);a=Wc(a);if(null!==a)if(b=Vb(a),null===b)a=null;else if(c=b.tag,13===c){a=Wb(b);if(null!==a)return a;a=null}else if(3===c){if(b.stateNode.current.memoizedState.isDehydrated)return 3===b.tag?b.stateNode.containerInfo:null;a=null}else b!==a&&(a=null);id=a;return null}\nfunction jd(a){switch(a){case \"cancel\":case \"click\":case \"close\":case \"contextmenu\":case \"copy\":case \"cut\":case \"auxclick\":case \"dblclick\":case \"dragend\":case \"dragstart\":case \"drop\":case \"focusin\":case \"focusout\":case \"input\":case \"invalid\":case \"keydown\":case \"keypress\":case \"keyup\":case \"mousedown\":case \"mouseup\":case \"paste\":case \"pause\":case \"play\":case \"pointercancel\":case \"pointerdown\":case \"pointerup\":case \"ratechange\":case \"reset\":case \"resize\":case \"seeked\":case \"submit\":case \"touchcancel\":case \"touchend\":case \"touchstart\":case \"volumechange\":case \"change\":case \"selectionchange\":case \"textInput\":case \"compositionstart\":case \"compositionend\":case \"compositionupdate\":case \"beforeblur\":case \"afterblur\":case \"beforeinput\":case \"blur\":case \"fullscreenchange\":case \"focus\":case \"hashchange\":case \"popstate\":case \"select\":case \"selectstart\":return 1;case \"drag\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"mousemove\":case \"mouseout\":case \"mouseover\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"scroll\":case \"toggle\":case \"touchmove\":case \"wheel\":case \"mouseenter\":case \"mouseleave\":case \"pointerenter\":case \"pointerleave\":return 4;\ncase \"message\":switch(ec()){case fc:return 1;case gc:return 4;case hc:case ic:return 16;case jc:return 536870912;default:return 16}default:return 16}}var kd=null,ld=null,md=null;function nd(){if(md)return md;var a,b=ld,c=b.length,d,e=\"value\"in kd?kd.value:kd.textContent,f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);return md=e.slice(a,1<d?1-d:void 0)}\nfunction od(a){var b=a.keyCode;\"charCode\"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}function pd(){return!0}function qd(){return!1}\nfunction rd(a){function b(b,d,e,f,g){this._reactName=b;this._targetInst=e;this.type=d;this.nativeEvent=f;this.target=g;this.currentTarget=null;for(var c in a)a.hasOwnProperty(c)&&(b=a[c],this[c]=b?b(f):f[c]);this.isDefaultPrevented=(null!=f.defaultPrevented?f.defaultPrevented:!1===f.returnValue)?pd:qd;this.isPropagationStopped=qd;return this}A(b.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():\"unknown\"!==typeof a.returnValue&&\n(a.returnValue=!1),this.isDefaultPrevented=pd)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():\"unknown\"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=pd)},persist:function(){},isPersistent:pd});return b}\nvar sd={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},td=rd(sd),ud=A({},sd,{view:0,detail:0}),vd=rd(ud),wd,xd,yd,Ad=A({},ud,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:zd,button:0,buttons:0,relatedTarget:function(a){return void 0===a.relatedTarget?a.fromElement===a.srcElement?a.toElement:a.fromElement:a.relatedTarget},movementX:function(a){if(\"movementX\"in\na)return a.movementX;a!==yd&&(yd&&\"mousemove\"===a.type?(wd=a.screenX-yd.screenX,xd=a.screenY-yd.screenY):xd=wd=0,yd=a);return wd},movementY:function(a){return\"movementY\"in a?a.movementY:xd}}),Bd=rd(Ad),Cd=A({},Ad,{dataTransfer:0}),Dd=rd(Cd),Ed=A({},ud,{relatedTarget:0}),Fd=rd(Ed),Gd=A({},sd,{animationName:0,elapsedTime:0,pseudoElement:0}),Hd=rd(Gd),Id=A({},sd,{clipboardData:function(a){return\"clipboardData\"in a?a.clipboardData:window.clipboardData}}),Jd=rd(Id),Kd=A({},sd,{data:0}),Ld=rd(Kd),Md={Esc:\"Escape\",\nSpacebar:\" \",Left:\"ArrowLeft\",Up:\"ArrowUp\",Right:\"ArrowRight\",Down:\"ArrowDown\",Del:\"Delete\",Win:\"OS\",Menu:\"ContextMenu\",Apps:\"ContextMenu\",Scroll:\"ScrollLock\",MozPrintableKey:\"Unidentified\"},Nd={8:\"Backspace\",9:\"Tab\",12:\"Clear\",13:\"Enter\",16:\"Shift\",17:\"Control\",18:\"Alt\",19:\"Pause\",20:\"CapsLock\",27:\"Escape\",32:\" \",33:\"PageUp\",34:\"PageDown\",35:\"End\",36:\"Home\",37:\"ArrowLeft\",38:\"ArrowUp\",39:\"ArrowRight\",40:\"ArrowDown\",45:\"Insert\",46:\"Delete\",112:\"F1\",113:\"F2\",114:\"F3\",115:\"F4\",116:\"F5\",117:\"F6\",118:\"F7\",\n119:\"F8\",120:\"F9\",121:\"F10\",122:\"F11\",123:\"F12\",144:\"NumLock\",145:\"ScrollLock\",224:\"Meta\"},Od={Alt:\"altKey\",Control:\"ctrlKey\",Meta:\"metaKey\",Shift:\"shiftKey\"};function Pd(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=Od[a])?!!b[a]:!1}function zd(){return Pd}\nvar Qd=A({},ud,{key:function(a){if(a.key){var b=Md[a.key]||a.key;if(\"Unidentified\"!==b)return b}return\"keypress\"===a.type?(a=od(a),13===a?\"Enter\":String.fromCharCode(a)):\"keydown\"===a.type||\"keyup\"===a.type?Nd[a.keyCode]||\"Unidentified\":\"\"},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:zd,charCode:function(a){return\"keypress\"===a.type?od(a):0},keyCode:function(a){return\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0},which:function(a){return\"keypress\"===\na.type?od(a):\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0}}),Rd=rd(Qd),Sd=A({},Ad,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),Td=rd(Sd),Ud=A({},ud,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:zd}),Vd=rd(Ud),Wd=A({},sd,{propertyName:0,elapsedTime:0,pseudoElement:0}),Xd=rd(Wd),Yd=A({},Ad,{deltaX:function(a){return\"deltaX\"in a?a.deltaX:\"wheelDeltaX\"in a?-a.wheelDeltaX:0},\ndeltaY:function(a){return\"deltaY\"in a?a.deltaY:\"wheelDeltaY\"in a?-a.wheelDeltaY:\"wheelDelta\"in a?-a.wheelDelta:0},deltaZ:0,deltaMode:0}),Zd=rd(Yd),$d=[9,13,27,32],ae=ia&&\"CompositionEvent\"in window,be=null;ia&&\"documentMode\"in document&&(be=document.documentMode);var ce=ia&&\"TextEvent\"in window&&!be,de=ia&&(!ae||be&&8<be&&11>=be),ee=String.fromCharCode(32),fe=!1;\nfunction ge(a,b){switch(a){case \"keyup\":return-1!==$d.indexOf(b.keyCode);case \"keydown\":return 229!==b.keyCode;case \"keypress\":case \"mousedown\":case \"focusout\":return!0;default:return!1}}function he(a){a=a.detail;return\"object\"===typeof a&&\"data\"in a?a.data:null}var ie=!1;function je(a,b){switch(a){case \"compositionend\":return he(b);case \"keypress\":if(32!==b.which)return null;fe=!0;return ee;case \"textInput\":return a=b.data,a===ee&&fe?null:a;default:return null}}\nfunction ke(a,b){if(ie)return\"compositionend\"===a||!ae&&ge(a,b)?(a=nd(),md=ld=kd=null,ie=!1,a):null;switch(a){case \"paste\":return null;case \"keypress\":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case \"compositionend\":return de&&\"ko\"!==b.locale?null:b.data;default:return null}}\nvar le={color:!0,date:!0,datetime:!0,\"datetime-local\":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function me(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return\"input\"===b?!!le[a.type]:\"textarea\"===b?!0:!1}function ne(a,b,c,d){Eb(d);b=oe(b,\"onChange\");0<b.length&&(c=new td(\"onChange\",\"change\",null,c,d),a.push({event:c,listeners:b}))}var pe=null,qe=null;function re(a){se(a,0)}function te(a){var b=ue(a);if(Wa(b))return a}\nfunction ve(a,b){if(\"change\"===a)return b}var we=!1;if(ia){var xe;if(ia){var ye=\"oninput\"in document;if(!ye){var ze=document.createElement(\"div\");ze.setAttribute(\"oninput\",\"return;\");ye=\"function\"===typeof ze.oninput}xe=ye}else xe=!1;we=xe&&(!document.documentMode||9<document.documentMode)}function Ae(){pe&&(pe.detachEvent(\"onpropertychange\",Be),qe=pe=null)}function Be(a){if(\"value\"===a.propertyName&&te(qe)){var b=[];ne(b,qe,a,xb(a));Jb(re,b)}}\nfunction Ce(a,b,c){\"focusin\"===a?(Ae(),pe=b,qe=c,pe.attachEvent(\"onpropertychange\",Be)):\"focusout\"===a&&Ae()}function De(a){if(\"selectionchange\"===a||\"keyup\"===a||\"keydown\"===a)return te(qe)}function Ee(a,b){if(\"click\"===a)return te(b)}function Fe(a,b){if(\"input\"===a||\"change\"===a)return te(b)}function Ge(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var He=\"function\"===typeof Object.is?Object.is:Ge;\nfunction Ie(a,b){if(He(a,b))return!0;if(\"object\"!==typeof a||null===a||\"object\"!==typeof b||null===b)return!1;var c=Object.keys(a),d=Object.keys(b);if(c.length!==d.length)return!1;for(d=0;d<c.length;d++){var e=c[d];if(!ja.call(b,e)||!He(a[e],b[e]))return!1}return!0}function Je(a){for(;a&&a.firstChild;)a=a.firstChild;return a}\nfunction Ke(a,b){var c=Je(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=Je(c)}}function Le(a,b){return a&&b?a===b?!0:a&&3===a.nodeType?!1:b&&3===b.nodeType?Le(a,b.parentNode):\"contains\"in a?a.contains(b):a.compareDocumentPosition?!!(a.compareDocumentPosition(b)&16):!1:!1}\nfunction Me(){for(var a=window,b=Xa();b instanceof a.HTMLIFrameElement;){try{var c=\"string\"===typeof b.contentWindow.location.href}catch(d){c=!1}if(c)a=b.contentWindow;else break;b=Xa(a.document)}return b}function Ne(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&(\"input\"===b&&(\"text\"===a.type||\"search\"===a.type||\"tel\"===a.type||\"url\"===a.type||\"password\"===a.type)||\"textarea\"===b||\"true\"===a.contentEditable)}\nfunction Oe(a){var b=Me(),c=a.focusedElem,d=a.selectionRange;if(b!==c&&c&&c.ownerDocument&&Le(c.ownerDocument.documentElement,c)){if(null!==d&&Ne(c))if(b=d.start,a=d.end,void 0===a&&(a=b),\"selectionStart\"in c)c.selectionStart=b,c.selectionEnd=Math.min(a,c.value.length);else if(a=(b=c.ownerDocument||document)&&b.defaultView||window,a.getSelection){a=a.getSelection();var e=c.textContent.length,f=Math.min(d.start,e);d=void 0===d.end?f:Math.min(d.end,e);!a.extend&&f>d&&(e=d,d=f,f=e);e=Ke(c,f);var g=Ke(c,\nd);e&&g&&(1!==a.rangeCount||a.anchorNode!==e.node||a.anchorOffset!==e.offset||a.focusNode!==g.node||a.focusOffset!==g.offset)&&(b=b.createRange(),b.setStart(e.node,e.offset),a.removeAllRanges(),f>d?(a.addRange(b),a.extend(g.node,g.offset)):(b.setEnd(g.node,g.offset),a.addRange(b)))}b=[];for(a=c;a=a.parentNode;)1===a.nodeType&&b.push({element:a,left:a.scrollLeft,top:a.scrollTop});\"function\"===typeof c.focus&&c.focus();for(c=0;c<b.length;c++)a=b[c],a.element.scrollLeft=a.left,a.element.scrollTop=a.top}}\nvar Pe=ia&&\"documentMode\"in document&&11>=document.documentMode,Qe=null,Re=null,Se=null,Te=!1;\nfunction Ue(a,b,c){var d=c.window===c?c.document:9===c.nodeType?c:c.ownerDocument;Te||null==Qe||Qe!==Xa(d)||(d=Qe,\"selectionStart\"in d&&Ne(d)?d={start:d.selectionStart,end:d.selectionEnd}:(d=(d.ownerDocument&&d.ownerDocument.defaultView||window).getSelection(),d={anchorNode:d.anchorNode,anchorOffset:d.anchorOffset,focusNode:d.focusNode,focusOffset:d.focusOffset}),Se&&Ie(Se,d)||(Se=d,d=oe(Re,\"onSelect\"),0<d.length&&(b=new td(\"onSelect\",\"select\",null,b,c),a.push({event:b,listeners:d}),b.target=Qe)))}\nfunction Ve(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c[\"Webkit\"+a]=\"webkit\"+b;c[\"Moz\"+a]=\"moz\"+b;return c}var We={animationend:Ve(\"Animation\",\"AnimationEnd\"),animationiteration:Ve(\"Animation\",\"AnimationIteration\"),animationstart:Ve(\"Animation\",\"AnimationStart\"),transitionend:Ve(\"Transition\",\"TransitionEnd\")},Xe={},Ye={};\nia&&(Ye=document.createElement(\"div\").style,\"AnimationEvent\"in window||(delete We.animationend.animation,delete We.animationiteration.animation,delete We.animationstart.animation),\"TransitionEvent\"in window||delete We.transitionend.transition);function Ze(a){if(Xe[a])return Xe[a];if(!We[a])return a;var b=We[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in Ye)return Xe[a]=b[c];return a}var $e=Ze(\"animationend\"),af=Ze(\"animationiteration\"),bf=Ze(\"animationstart\"),cf=Ze(\"transitionend\"),df=new Map,ef=\"abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel\".split(\" \");\nfunction ff(a,b){df.set(a,b);fa(b,[a])}for(var gf=0;gf<ef.length;gf++){var hf=ef[gf],jf=hf.toLowerCase(),kf=hf[0].toUpperCase()+hf.slice(1);ff(jf,\"on\"+kf)}ff($e,\"onAnimationEnd\");ff(af,\"onAnimationIteration\");ff(bf,\"onAnimationStart\");ff(\"dblclick\",\"onDoubleClick\");ff(\"focusin\",\"onFocus\");ff(\"focusout\",\"onBlur\");ff(cf,\"onTransitionEnd\");ha(\"onMouseEnter\",[\"mouseout\",\"mouseover\"]);ha(\"onMouseLeave\",[\"mouseout\",\"mouseover\"]);ha(\"onPointerEnter\",[\"pointerout\",\"pointerover\"]);\nha(\"onPointerLeave\",[\"pointerout\",\"pointerover\"]);fa(\"onChange\",\"change click focusin focusout input keydown keyup selectionchange\".split(\" \"));fa(\"onSelect\",\"focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange\".split(\" \"));fa(\"onBeforeInput\",[\"compositionend\",\"keypress\",\"textInput\",\"paste\"]);fa(\"onCompositionEnd\",\"compositionend focusout keydown keypress keyup mousedown\".split(\" \"));fa(\"onCompositionStart\",\"compositionstart focusout keydown keypress keyup mousedown\".split(\" \"));\nfa(\"onCompositionUpdate\",\"compositionupdate focusout keydown keypress keyup mousedown\".split(\" \"));var lf=\"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting\".split(\" \"),mf=new Set(\"cancel close invalid load scroll toggle\".split(\" \").concat(lf));\nfunction nf(a,b,c){var d=a.type||\"unknown-event\";a.currentTarget=c;Ub(d,b,void 0,a);a.currentTarget=null}\nfunction se(a,b){b=0!==(b&4);for(var c=0;c<a.length;c++){var d=a[c],e=d.event;d=d.listeners;a:{var f=void 0;if(b)for(var g=d.length-1;0<=g;g--){var h=d[g],k=h.instance,l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;nf(e,h,l);f=k}else for(g=0;g<d.length;g++){h=d[g];k=h.instance;l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;nf(e,h,l);f=k}}}if(Qb)throw a=Rb,Qb=!1,Rb=null,a;}\nfunction D(a,b){var c=b[of];void 0===c&&(c=b[of]=new Set);var d=a+\"__bubble\";c.has(d)||(pf(b,a,2,!1),c.add(d))}function qf(a,b,c){var d=0;b&&(d|=4);pf(c,a,d,b)}var rf=\"_reactListening\"+Math.random().toString(36).slice(2);function sf(a){if(!a[rf]){a[rf]=!0;da.forEach(function(b){\"selectionchange\"!==b&&(mf.has(b)||qf(b,!1,a),qf(b,!0,a))});var b=9===a.nodeType?a:a.ownerDocument;null===b||b[rf]||(b[rf]=!0,qf(\"selectionchange\",!1,b))}}\nfunction pf(a,b,c,d){switch(jd(b)){case 1:var e=ed;break;case 4:e=gd;break;default:e=fd}c=e.bind(null,b,c,a);e=void 0;!Lb||\"touchstart\"!==b&&\"touchmove\"!==b&&\"wheel\"!==b||(e=!0);d?void 0!==e?a.addEventListener(b,c,{capture:!0,passive:e}):a.addEventListener(b,c,!0):void 0!==e?a.addEventListener(b,c,{passive:e}):a.addEventListener(b,c,!1)}\nfunction hd(a,b,c,d,e){var f=d;if(0===(b&1)&&0===(b&2)&&null!==d)a:for(;;){if(null===d)return;var g=d.tag;if(3===g||4===g){var h=d.stateNode.containerInfo;if(h===e||8===h.nodeType&&h.parentNode===e)break;if(4===g)for(g=d.return;null!==g;){var k=g.tag;if(3===k||4===k)if(k=g.stateNode.containerInfo,k===e||8===k.nodeType&&k.parentNode===e)return;g=g.return}for(;null!==h;){g=Wc(h);if(null===g)return;k=g.tag;if(5===k||6===k){d=f=g;continue a}h=h.parentNode}}d=d.return}Jb(function(){var d=f,e=xb(c),g=[];\na:{var h=df.get(a);if(void 0!==h){var k=td,n=a;switch(a){case \"keypress\":if(0===od(c))break a;case \"keydown\":case \"keyup\":k=Rd;break;case \"focusin\":n=\"focus\";k=Fd;break;case \"focusout\":n=\"blur\";k=Fd;break;case \"beforeblur\":case \"afterblur\":k=Fd;break;case \"click\":if(2===c.button)break a;case \"auxclick\":case \"dblclick\":case \"mousedown\":case \"mousemove\":case \"mouseup\":case \"mouseout\":case \"mouseover\":case \"contextmenu\":k=Bd;break;case \"drag\":case \"dragend\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"dragstart\":case \"drop\":k=\nDd;break;case \"touchcancel\":case \"touchend\":case \"touchmove\":case \"touchstart\":k=Vd;break;case $e:case af:case bf:k=Hd;break;case cf:k=Xd;break;case \"scroll\":k=vd;break;case \"wheel\":k=Zd;break;case \"copy\":case \"cut\":case \"paste\":k=Jd;break;case \"gotpointercapture\":case \"lostpointercapture\":case \"pointercancel\":case \"pointerdown\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"pointerup\":k=Td}var t=0!==(b&4),J=!t&&\"scroll\"===a,x=t?null!==h?h+\"Capture\":null:h;t=[];for(var w=d,u;null!==\nw;){u=w;var F=u.stateNode;5===u.tag&&null!==F&&(u=F,null!==x&&(F=Kb(w,x),null!=F&&t.push(tf(w,F,u))));if(J)break;w=w.return}0<t.length&&(h=new k(h,n,null,c,e),g.push({event:h,listeners:t}))}}if(0===(b&7)){a:{h=\"mouseover\"===a||\"pointerover\"===a;k=\"mouseout\"===a||\"pointerout\"===a;if(h&&c!==wb&&(n=c.relatedTarget||c.fromElement)&&(Wc(n)||n[uf]))break a;if(k||h){h=e.window===e?e:(h=e.ownerDocument)?h.defaultView||h.parentWindow:window;if(k){if(n=c.relatedTarget||c.toElement,k=d,n=n?Wc(n):null,null!==\nn&&(J=Vb(n),n!==J||5!==n.tag&&6!==n.tag))n=null}else k=null,n=d;if(k!==n){t=Bd;F=\"onMouseLeave\";x=\"onMouseEnter\";w=\"mouse\";if(\"pointerout\"===a||\"pointerover\"===a)t=Td,F=\"onPointerLeave\",x=\"onPointerEnter\",w=\"pointer\";J=null==k?h:ue(k);u=null==n?h:ue(n);h=new t(F,w+\"leave\",k,c,e);h.target=J;h.relatedTarget=u;F=null;Wc(e)===d&&(t=new t(x,w+\"enter\",n,c,e),t.target=u,t.relatedTarget=J,F=t);J=F;if(k&&n)b:{t=k;x=n;w=0;for(u=t;u;u=vf(u))w++;u=0;for(F=x;F;F=vf(F))u++;for(;0<w-u;)t=vf(t),w--;for(;0<u-w;)x=\nvf(x),u--;for(;w--;){if(t===x||null!==x&&t===x.alternate)break b;t=vf(t);x=vf(x)}t=null}else t=null;null!==k&&wf(g,h,k,t,!1);null!==n&&null!==J&&wf(g,J,n,t,!0)}}}a:{h=d?ue(d):window;k=h.nodeName&&h.nodeName.toLowerCase();if(\"select\"===k||\"input\"===k&&\"file\"===h.type)var na=ve;else if(me(h))if(we)na=Fe;else{na=De;var xa=Ce}else(k=h.nodeName)&&\"input\"===k.toLowerCase()&&(\"checkbox\"===h.type||\"radio\"===h.type)&&(na=Ee);if(na&&(na=na(a,d))){ne(g,na,c,e);break a}xa&&xa(a,h,d);\"focusout\"===a&&(xa=h._wrapperState)&&\nxa.controlled&&\"number\"===h.type&&cb(h,\"number\",h.value)}xa=d?ue(d):window;switch(a){case \"focusin\":if(me(xa)||\"true\"===xa.contentEditable)Qe=xa,Re=d,Se=null;break;case \"focusout\":Se=Re=Qe=null;break;case \"mousedown\":Te=!0;break;case \"contextmenu\":case \"mouseup\":case \"dragend\":Te=!1;Ue(g,c,e);break;case \"selectionchange\":if(Pe)break;case \"keydown\":case \"keyup\":Ue(g,c,e)}var $a;if(ae)b:{switch(a){case \"compositionstart\":var ba=\"onCompositionStart\";break b;case \"compositionend\":ba=\"onCompositionEnd\";\nbreak b;case \"compositionupdate\":ba=\"onCompositionUpdate\";break b}ba=void 0}else ie?ge(a,c)&&(ba=\"onCompositionEnd\"):\"keydown\"===a&&229===c.keyCode&&(ba=\"onCompositionStart\");ba&&(de&&\"ko\"!==c.locale&&(ie||\"onCompositionStart\"!==ba?\"onCompositionEnd\"===ba&&ie&&($a=nd()):(kd=e,ld=\"value\"in kd?kd.value:kd.textContent,ie=!0)),xa=oe(d,ba),0<xa.length&&(ba=new Ld(ba,a,null,c,e),g.push({event:ba,listeners:xa}),$a?ba.data=$a:($a=he(c),null!==$a&&(ba.data=$a))));if($a=ce?je(a,c):ke(a,c))d=oe(d,\"onBeforeInput\"),\n0<d.length&&(e=new Ld(\"onBeforeInput\",\"beforeinput\",null,c,e),g.push({event:e,listeners:d}),e.data=$a)}se(g,b)})}function tf(a,b,c){return{instance:a,listener:b,currentTarget:c}}function oe(a,b){for(var c=b+\"Capture\",d=[];null!==a;){var e=a,f=e.stateNode;5===e.tag&&null!==f&&(e=f,f=Kb(a,c),null!=f&&d.unshift(tf(a,f,e)),f=Kb(a,b),null!=f&&d.push(tf(a,f,e)));a=a.return}return d}function vf(a){if(null===a)return null;do a=a.return;while(a&&5!==a.tag);return a?a:null}\nfunction wf(a,b,c,d,e){for(var f=b._reactName,g=[];null!==c&&c!==d;){var h=c,k=h.alternate,l=h.stateNode;if(null!==k&&k===d)break;5===h.tag&&null!==l&&(h=l,e?(k=Kb(c,f),null!=k&&g.unshift(tf(c,k,h))):e||(k=Kb(c,f),null!=k&&g.push(tf(c,k,h))));c=c.return}0!==g.length&&a.push({event:b,listeners:g})}var xf=/\\r\\n?/g,yf=/\\u0000|\\uFFFD/g;function zf(a){return(\"string\"===typeof a?a:\"\"+a).replace(xf,\"\\n\").replace(yf,\"\")}function Af(a,b,c){b=zf(b);if(zf(a)!==b&&c)throw Error(p(425));}function Bf(){}\nvar Cf=null,Df=null;function Ef(a,b){return\"textarea\"===a||\"noscript\"===a||\"string\"===typeof b.children||\"number\"===typeof b.children||\"object\"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&null!=b.dangerouslySetInnerHTML.__html}\nvar Ff=\"function\"===typeof setTimeout?setTimeout:void 0,Gf=\"function\"===typeof clearTimeout?clearTimeout:void 0,Hf=\"function\"===typeof Promise?Promise:void 0,Jf=\"function\"===typeof queueMicrotask?queueMicrotask:\"undefined\"!==typeof Hf?function(a){return Hf.resolve(null).then(a).catch(If)}:Ff;function If(a){setTimeout(function(){throw a;})}\nfunction Kf(a,b){var c=b,d=0;do{var e=c.nextSibling;a.removeChild(c);if(e&&8===e.nodeType)if(c=e.data,\"/$\"===c){if(0===d){a.removeChild(e);bd(b);return}d--}else\"$\"!==c&&\"$?\"!==c&&\"$!\"!==c||d++;c=e}while(c);bd(b)}function Lf(a){for(;null!=a;a=a.nextSibling){var b=a.nodeType;if(1===b||3===b)break;if(8===b){b=a.data;if(\"$\"===b||\"$!\"===b||\"$?\"===b)break;if(\"/$\"===b)return null}}return a}\nfunction Mf(a){a=a.previousSibling;for(var b=0;a;){if(8===a.nodeType){var c=a.data;if(\"$\"===c||\"$!\"===c||\"$?\"===c){if(0===b)return a;b--}else\"/$\"===c&&b++}a=a.previousSibling}return null}var Nf=Math.random().toString(36).slice(2),Of=\"__reactFiber$\"+Nf,Pf=\"__reactProps$\"+Nf,uf=\"__reactContainer$\"+Nf,of=\"__reactEvents$\"+Nf,Qf=\"__reactListeners$\"+Nf,Rf=\"__reactHandles$\"+Nf;\nfunction Wc(a){var b=a[Of];if(b)return b;for(var c=a.parentNode;c;){if(b=c[uf]||c[Of]){c=b.alternate;if(null!==b.child||null!==c&&null!==c.child)for(a=Mf(a);null!==a;){if(c=a[Of])return c;a=Mf(a)}return b}a=c;c=a.parentNode}return null}function Cb(a){a=a[Of]||a[uf];return!a||5!==a.tag&&6!==a.tag&&13!==a.tag&&3!==a.tag?null:a}function ue(a){if(5===a.tag||6===a.tag)return a.stateNode;throw Error(p(33));}function Db(a){return a[Pf]||null}var Sf=[],Tf=-1;function Uf(a){return{current:a}}\nfunction E(a){0>Tf||(a.current=Sf[Tf],Sf[Tf]=null,Tf--)}function G(a,b){Tf++;Sf[Tf]=a.current;a.current=b}var Vf={},H=Uf(Vf),Wf=Uf(!1),Xf=Vf;function Yf(a,b){var c=a.type.contextTypes;if(!c)return Vf;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}\nfunction Zf(a){a=a.childContextTypes;return null!==a&&void 0!==a}function $f(){E(Wf);E(H)}function ag(a,b,c){if(H.current!==Vf)throw Error(p(168));G(H,b);G(Wf,c)}function bg(a,b,c){var d=a.stateNode;b=b.childContextTypes;if(\"function\"!==typeof d.getChildContext)return c;d=d.getChildContext();for(var e in d)if(!(e in b))throw Error(p(108,Ra(a)||\"Unknown\",e));return A({},c,d)}\nfunction cg(a){a=(a=a.stateNode)&&a.__reactInternalMemoizedMergedChildContext||Vf;Xf=H.current;G(H,a);G(Wf,Wf.current);return!0}function dg(a,b,c){var d=a.stateNode;if(!d)throw Error(p(169));c?(a=bg(a,b,Xf),d.__reactInternalMemoizedMergedChildContext=a,E(Wf),E(H),G(H,a)):E(Wf);G(Wf,c)}var eg=null,fg=!1,gg=!1;function hg(a){null===eg?eg=[a]:eg.push(a)}function ig(a){fg=!0;hg(a)}\nfunction jg(){if(!gg&&null!==eg){gg=!0;var a=0,b=C;try{var c=eg;for(C=1;a<c.length;a++){var d=c[a];do d=d(!0);while(null!==d)}eg=null;fg=!1}catch(e){throw null!==eg&&(eg=eg.slice(a+1)),ac(fc,jg),e;}finally{C=b,gg=!1}}return null}var kg=[],lg=0,mg=null,ng=0,og=[],pg=0,qg=null,rg=1,sg=\"\";function tg(a,b){kg[lg++]=ng;kg[lg++]=mg;mg=a;ng=b}\nfunction ug(a,b,c){og[pg++]=rg;og[pg++]=sg;og[pg++]=qg;qg=a;var d=rg;a=sg;var e=32-oc(d)-1;d&=~(1<<e);c+=1;var f=32-oc(b)+e;if(30<f){var g=e-e%5;f=(d&(1<<g)-1).toString(32);d>>=g;e-=g;rg=1<<32-oc(b)+e|c<<e|d;sg=f+a}else rg=1<<f|c<<e|d,sg=a}function vg(a){null!==a.return&&(tg(a,1),ug(a,1,0))}function wg(a){for(;a===mg;)mg=kg[--lg],kg[lg]=null,ng=kg[--lg],kg[lg]=null;for(;a===qg;)qg=og[--pg],og[pg]=null,sg=og[--pg],og[pg]=null,rg=og[--pg],og[pg]=null}var xg=null,yg=null,I=!1,zg=null;\nfunction Ag(a,b){var c=Bg(5,null,null,0);c.elementType=\"DELETED\";c.stateNode=b;c.return=a;b=a.deletions;null===b?(a.deletions=[c],a.flags|=16):b.push(c)}\nfunction Cg(a,b){switch(a.tag){case 5:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,xg=a,yg=Lf(b.firstChild),!0):!1;case 6:return b=\"\"===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,xg=a,yg=null,!0):!1;case 13:return b=8!==b.nodeType?null:b,null!==b?(c=null!==qg?{id:rg,overflow:sg}:null,a.memoizedState={dehydrated:b,treeContext:c,retryLane:1073741824},c=Bg(18,null,null,0),c.stateNode=b,c.return=a,a.child=c,xg=a,yg=\nnull,!0):!1;default:return!1}}function Dg(a){return 0!==(a.mode&1)&&0===(a.flags&128)}function Eg(a){if(I){var b=yg;if(b){var c=b;if(!Cg(a,b)){if(Dg(a))throw Error(p(418));b=Lf(c.nextSibling);var d=xg;b&&Cg(a,b)?Ag(d,c):(a.flags=a.flags&-4097|2,I=!1,xg=a)}}else{if(Dg(a))throw Error(p(418));a.flags=a.flags&-4097|2;I=!1;xg=a}}}function Fg(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag&&13!==a.tag;)a=a.return;xg=a}\nfunction Gg(a){if(a!==xg)return!1;if(!I)return Fg(a),I=!0,!1;var b;(b=3!==a.tag)&&!(b=5!==a.tag)&&(b=a.type,b=\"head\"!==b&&\"body\"!==b&&!Ef(a.type,a.memoizedProps));if(b&&(b=yg)){if(Dg(a))throw Hg(),Error(p(418));for(;b;)Ag(a,b),b=Lf(b.nextSibling)}Fg(a);if(13===a.tag){a=a.memoizedState;a=null!==a?a.dehydrated:null;if(!a)throw Error(p(317));a:{a=a.nextSibling;for(b=0;a;){if(8===a.nodeType){var c=a.data;if(\"/$\"===c){if(0===b){yg=Lf(a.nextSibling);break a}b--}else\"$\"!==c&&\"$!\"!==c&&\"$?\"!==c||b++}a=a.nextSibling}yg=\nnull}}else yg=xg?Lf(a.stateNode.nextSibling):null;return!0}function Hg(){for(var a=yg;a;)a=Lf(a.nextSibling)}function Ig(){yg=xg=null;I=!1}function Jg(a){null===zg?zg=[a]:zg.push(a)}var Kg=ua.ReactCurrentBatchConfig;function Lg(a,b){if(a&&a.defaultProps){b=A({},b);a=a.defaultProps;for(var c in a)void 0===b[c]&&(b[c]=a[c]);return b}return b}var Mg=Uf(null),Ng=null,Og=null,Pg=null;function Qg(){Pg=Og=Ng=null}function Rg(a){var b=Mg.current;E(Mg);a._currentValue=b}\nfunction Sg(a,b,c){for(;null!==a;){var d=a.alternate;(a.childLanes&b)!==b?(a.childLanes|=b,null!==d&&(d.childLanes|=b)):null!==d&&(d.childLanes&b)!==b&&(d.childLanes|=b);if(a===c)break;a=a.return}}function Tg(a,b){Ng=a;Pg=Og=null;a=a.dependencies;null!==a&&null!==a.firstContext&&(0!==(a.lanes&b)&&(Ug=!0),a.firstContext=null)}\nfunction Vg(a){var b=a._currentValue;if(Pg!==a)if(a={context:a,memoizedValue:b,next:null},null===Og){if(null===Ng)throw Error(p(308));Og=a;Ng.dependencies={lanes:0,firstContext:a}}else Og=Og.next=a;return b}var Wg=null;function Xg(a){null===Wg?Wg=[a]:Wg.push(a)}function Yg(a,b,c,d){var e=b.interleaved;null===e?(c.next=c,Xg(b)):(c.next=e.next,e.next=c);b.interleaved=c;return Zg(a,d)}\nfunction Zg(a,b){a.lanes|=b;var c=a.alternate;null!==c&&(c.lanes|=b);c=a;for(a=a.return;null!==a;)a.childLanes|=b,c=a.alternate,null!==c&&(c.childLanes|=b),c=a,a=a.return;return 3===c.tag?c.stateNode:null}var $g=!1;function ah(a){a.updateQueue={baseState:a.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}\nfunction bh(a,b){a=a.updateQueue;b.updateQueue===a&&(b.updateQueue={baseState:a.baseState,firstBaseUpdate:a.firstBaseUpdate,lastBaseUpdate:a.lastBaseUpdate,shared:a.shared,effects:a.effects})}function ch(a,b){return{eventTime:a,lane:b,tag:0,payload:null,callback:null,next:null}}\nfunction dh(a,b,c){var d=a.updateQueue;if(null===d)return null;d=d.shared;if(0!==(K&2)){var e=d.pending;null===e?b.next=b:(b.next=e.next,e.next=b);d.pending=b;return Zg(a,c)}e=d.interleaved;null===e?(b.next=b,Xg(d)):(b.next=e.next,e.next=b);d.interleaved=b;return Zg(a,c)}function eh(a,b,c){b=b.updateQueue;if(null!==b&&(b=b.shared,0!==(c&4194240))){var d=b.lanes;d&=a.pendingLanes;c|=d;b.lanes=c;Cc(a,c)}}\nfunction fh(a,b){var c=a.updateQueue,d=a.alternate;if(null!==d&&(d=d.updateQueue,c===d)){var e=null,f=null;c=c.firstBaseUpdate;if(null!==c){do{var g={eventTime:c.eventTime,lane:c.lane,tag:c.tag,payload:c.payload,callback:c.callback,next:null};null===f?e=f=g:f=f.next=g;c=c.next}while(null!==c);null===f?e=f=b:f=f.next=b}else e=f=b;c={baseState:d.baseState,firstBaseUpdate:e,lastBaseUpdate:f,shared:d.shared,effects:d.effects};a.updateQueue=c;return}a=c.lastBaseUpdate;null===a?c.firstBaseUpdate=b:a.next=\nb;c.lastBaseUpdate=b}\nfunction gh(a,b,c,d){var e=a.updateQueue;$g=!1;var f=e.firstBaseUpdate,g=e.lastBaseUpdate,h=e.shared.pending;if(null!==h){e.shared.pending=null;var k=h,l=k.next;k.next=null;null===g?f=l:g.next=l;g=k;var m=a.alternate;null!==m&&(m=m.updateQueue,h=m.lastBaseUpdate,h!==g&&(null===h?m.firstBaseUpdate=l:h.next=l,m.lastBaseUpdate=k))}if(null!==f){var q=e.baseState;g=0;m=l=k=null;h=f;do{var r=h.lane,y=h.eventTime;if((d&r)===r){null!==m&&(m=m.next={eventTime:y,lane:0,tag:h.tag,payload:h.payload,callback:h.callback,\nnext:null});a:{var n=a,t=h;r=b;y=c;switch(t.tag){case 1:n=t.payload;if(\"function\"===typeof n){q=n.call(y,q,r);break a}q=n;break a;case 3:n.flags=n.flags&-65537|128;case 0:n=t.payload;r=\"function\"===typeof n?n.call(y,q,r):n;if(null===r||void 0===r)break a;q=A({},q,r);break a;case 2:$g=!0}}null!==h.callback&&0!==h.lane&&(a.flags|=64,r=e.effects,null===r?e.effects=[h]:r.push(h))}else y={eventTime:y,lane:r,tag:h.tag,payload:h.payload,callback:h.callback,next:null},null===m?(l=m=y,k=q):m=m.next=y,g|=r;\nh=h.next;if(null===h)if(h=e.shared.pending,null===h)break;else r=h,h=r.next,r.next=null,e.lastBaseUpdate=r,e.shared.pending=null}while(1);null===m&&(k=q);e.baseState=k;e.firstBaseUpdate=l;e.lastBaseUpdate=m;b=e.shared.interleaved;if(null!==b){e=b;do g|=e.lane,e=e.next;while(e!==b)}else null===f&&(e.shared.lanes=0);hh|=g;a.lanes=g;a.memoizedState=q}}\nfunction ih(a,b,c){a=b.effects;b.effects=null;if(null!==a)for(b=0;b<a.length;b++){var d=a[b],e=d.callback;if(null!==e){d.callback=null;d=c;if(\"function\"!==typeof e)throw Error(p(191,e));e.call(d)}}}var jh=(new aa.Component).refs;function kh(a,b,c,d){b=a.memoizedState;c=c(d,b);c=null===c||void 0===c?b:A({},b,c);a.memoizedState=c;0===a.lanes&&(a.updateQueue.baseState=c)}\nvar nh={isMounted:function(a){return(a=a._reactInternals)?Vb(a)===a:!1},enqueueSetState:function(a,b,c){a=a._reactInternals;var d=L(),e=lh(a),f=ch(d,e);f.payload=b;void 0!==c&&null!==c&&(f.callback=c);b=dh(a,f,e);null!==b&&(mh(b,a,e,d),eh(b,a,e))},enqueueReplaceState:function(a,b,c){a=a._reactInternals;var d=L(),e=lh(a),f=ch(d,e);f.tag=1;f.payload=b;void 0!==c&&null!==c&&(f.callback=c);b=dh(a,f,e);null!==b&&(mh(b,a,e,d),eh(b,a,e))},enqueueForceUpdate:function(a,b){a=a._reactInternals;var c=L(),d=\nlh(a),e=ch(c,d);e.tag=2;void 0!==b&&null!==b&&(e.callback=b);b=dh(a,e,d);null!==b&&(mh(b,a,d,c),eh(b,a,d))}};function oh(a,b,c,d,e,f,g){a=a.stateNode;return\"function\"===typeof a.shouldComponentUpdate?a.shouldComponentUpdate(d,f,g):b.prototype&&b.prototype.isPureReactComponent?!Ie(c,d)||!Ie(e,f):!0}\nfunction ph(a,b,c){var d=!1,e=Vf;var f=b.contextType;\"object\"===typeof f&&null!==f?f=Vg(f):(e=Zf(b)?Xf:H.current,d=b.contextTypes,f=(d=null!==d&&void 0!==d)?Yf(a,e):Vf);b=new b(c,f);a.memoizedState=null!==b.state&&void 0!==b.state?b.state:null;b.updater=nh;a.stateNode=b;b._reactInternals=a;d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=e,a.__reactInternalMemoizedMaskedChildContext=f);return b}\nfunction qh(a,b,c,d){a=b.state;\"function\"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);\"function\"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&nh.enqueueReplaceState(b,b.state,null)}\nfunction rh(a,b,c,d){var e=a.stateNode;e.props=c;e.state=a.memoizedState;e.refs=jh;ah(a);var f=b.contextType;\"object\"===typeof f&&null!==f?e.context=Vg(f):(f=Zf(b)?Xf:H.current,e.context=Yf(a,f));e.state=a.memoizedState;f=b.getDerivedStateFromProps;\"function\"===typeof f&&(kh(a,b,f,c),e.state=a.memoizedState);\"function\"===typeof b.getDerivedStateFromProps||\"function\"===typeof e.getSnapshotBeforeUpdate||\"function\"!==typeof e.UNSAFE_componentWillMount&&\"function\"!==typeof e.componentWillMount||(b=e.state,\n\"function\"===typeof e.componentWillMount&&e.componentWillMount(),\"function\"===typeof e.UNSAFE_componentWillMount&&e.UNSAFE_componentWillMount(),b!==e.state&&nh.enqueueReplaceState(e,e.state,null),gh(a,c,e,d),e.state=a.memoizedState);\"function\"===typeof e.componentDidMount&&(a.flags|=4194308)}\nfunction sh(a,b,c){a=c.ref;if(null!==a&&\"function\"!==typeof a&&\"object\"!==typeof a){if(c._owner){c=c._owner;if(c){if(1!==c.tag)throw Error(p(309));var d=c.stateNode}if(!d)throw Error(p(147,a));var e=d,f=\"\"+a;if(null!==b&&null!==b.ref&&\"function\"===typeof b.ref&&b.ref._stringRef===f)return b.ref;b=function(a){var b=e.refs;b===jh&&(b=e.refs={});null===a?delete b[f]:b[f]=a};b._stringRef=f;return b}if(\"string\"!==typeof a)throw Error(p(284));if(!c._owner)throw Error(p(290,a));}return a}\nfunction th(a,b){a=Object.prototype.toString.call(b);throw Error(p(31,\"[object Object]\"===a?\"object with keys {\"+Object.keys(b).join(\", \")+\"}\":a));}function uh(a){var b=a._init;return b(a._payload)}\nfunction vh(a){function b(b,c){if(a){var d=b.deletions;null===d?(b.deletions=[c],b.flags|=16):d.push(c)}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b){a=wh(a,b);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return b.flags|=1048576,c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.flags|=2,c):d;b.flags|=2;return c}function g(b){a&&\nnull===b.alternate&&(b.flags|=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=xh(c,a.mode,d),b.return=a,b;b=e(b,c);b.return=a;return b}function k(a,b,c,d){var f=c.type;if(f===ya)return m(a,b,c.props.children,d,c.key);if(null!==b&&(b.elementType===f||\"object\"===typeof f&&null!==f&&f.$$typeof===Ha&&uh(f)===b.type))return d=e(b,c.props),d.ref=sh(a,b,c),d.return=a,d;d=yh(c.type,c.key,c.props,null,a.mode,d);d.ref=sh(a,b,c);d.return=a;return d}function l(a,b,c,d){if(null===b||4!==b.tag||\nb.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==c.implementation)return b=zh(c,a.mode,d),b.return=a,b;b=e(b,c.children||[]);b.return=a;return b}function m(a,b,c,d,f){if(null===b||7!==b.tag)return b=Ah(c,a.mode,d,f),b.return=a,b;b=e(b,c);b.return=a;return b}function q(a,b,c){if(\"string\"===typeof b&&\"\"!==b||\"number\"===typeof b)return b=xh(\"\"+b,a.mode,c),b.return=a,b;if(\"object\"===typeof b&&null!==b){switch(b.$$typeof){case va:return c=yh(b.type,b.key,b.props,null,a.mode,c),\nc.ref=sh(a,null,b),c.return=a,c;case wa:return b=zh(b,a.mode,c),b.return=a,b;case Ha:var d=b._init;return q(a,d(b._payload),c)}if(eb(b)||Ka(b))return b=Ah(b,a.mode,c,null),b.return=a,b;th(a,b)}return null}function r(a,b,c,d){var e=null!==b?b.key:null;if(\"string\"===typeof c&&\"\"!==c||\"number\"===typeof c)return null!==e?null:h(a,b,\"\"+c,d);if(\"object\"===typeof c&&null!==c){switch(c.$$typeof){case va:return c.key===e?k(a,b,c,d):null;case wa:return c.key===e?l(a,b,c,d):null;case Ha:return e=c._init,r(a,\nb,e(c._payload),d)}if(eb(c)||Ka(c))return null!==e?null:m(a,b,c,d,null);th(a,c)}return null}function y(a,b,c,d,e){if(\"string\"===typeof d&&\"\"!==d||\"number\"===typeof d)return a=a.get(c)||null,h(b,a,\"\"+d,e);if(\"object\"===typeof d&&null!==d){switch(d.$$typeof){case va:return a=a.get(null===d.key?c:d.key)||null,k(b,a,d,e);case wa:return a=a.get(null===d.key?c:d.key)||null,l(b,a,d,e);case Ha:var f=d._init;return y(a,b,c,f(d._payload),e)}if(eb(d)||Ka(d))return a=a.get(c)||null,m(b,a,d,e,null);th(b,d)}return null}\nfunction n(e,g,h,k){for(var l=null,m=null,u=g,w=g=0,x=null;null!==u&&w<h.length;w++){u.index>w?(x=u,u=null):x=u.sibling;var n=r(e,u,h[w],k);if(null===n){null===u&&(u=x);break}a&&u&&null===n.alternate&&b(e,u);g=f(n,g,w);null===m?l=n:m.sibling=n;m=n;u=x}if(w===h.length)return c(e,u),I&&tg(e,w),l;if(null===u){for(;w<h.length;w++)u=q(e,h[w],k),null!==u&&(g=f(u,g,w),null===m?l=u:m.sibling=u,m=u);I&&tg(e,w);return l}for(u=d(e,u);w<h.length;w++)x=y(u,e,w,h[w],k),null!==x&&(a&&null!==x.alternate&&u.delete(null===\nx.key?w:x.key),g=f(x,g,w),null===m?l=x:m.sibling=x,m=x);a&&u.forEach(function(a){return b(e,a)});I&&tg(e,w);return l}function t(e,g,h,k){var l=Ka(h);if(\"function\"!==typeof l)throw Error(p(150));h=l.call(h);if(null==h)throw Error(p(151));for(var u=l=null,m=g,w=g=0,x=null,n=h.next();null!==m&&!n.done;w++,n=h.next()){m.index>w?(x=m,m=null):x=m.sibling;var t=r(e,m,n.value,k);if(null===t){null===m&&(m=x);break}a&&m&&null===t.alternate&&b(e,m);g=f(t,g,w);null===u?l=t:u.sibling=t;u=t;m=x}if(n.done)return c(e,\nm),I&&tg(e,w),l;if(null===m){for(;!n.done;w++,n=h.next())n=q(e,n.value,k),null!==n&&(g=f(n,g,w),null===u?l=n:u.sibling=n,u=n);I&&tg(e,w);return l}for(m=d(e,m);!n.done;w++,n=h.next())n=y(m,e,w,n.value,k),null!==n&&(a&&null!==n.alternate&&m.delete(null===n.key?w:n.key),g=f(n,g,w),null===u?l=n:u.sibling=n,u=n);a&&m.forEach(function(a){return b(e,a)});I&&tg(e,w);return l}function J(a,d,f,h){\"object\"===typeof f&&null!==f&&f.type===ya&&null===f.key&&(f=f.props.children);if(\"object\"===typeof f&&null!==f){switch(f.$$typeof){case va:a:{for(var k=\nf.key,l=d;null!==l;){if(l.key===k){k=f.type;if(k===ya){if(7===l.tag){c(a,l.sibling);d=e(l,f.props.children);d.return=a;a=d;break a}}else if(l.elementType===k||\"object\"===typeof k&&null!==k&&k.$$typeof===Ha&&uh(k)===l.type){c(a,l.sibling);d=e(l,f.props);d.ref=sh(a,l,f);d.return=a;a=d;break a}c(a,l);break}else b(a,l);l=l.sibling}f.type===ya?(d=Ah(f.props.children,a.mode,h,f.key),d.return=a,a=d):(h=yh(f.type,f.key,f.props,null,a.mode,h),h.ref=sh(a,d,f),h.return=a,a=h)}return g(a);case wa:a:{for(l=f.key;null!==\nd;){if(d.key===l)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[]);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=zh(f,a.mode,h);d.return=a;a=d}return g(a);case Ha:return l=f._init,J(a,d,l(f._payload),h)}if(eb(f))return n(a,d,f,h);if(Ka(f))return t(a,d,f,h);th(a,f)}return\"string\"===typeof f&&\"\"!==f||\"number\"===typeof f?(f=\"\"+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f),d.return=a,a=d):\n(c(a,d),d=xh(f,a.mode,h),d.return=a,a=d),g(a)):c(a,d)}return J}var Bh=vh(!0),Ch=vh(!1),Dh={},Eh=Uf(Dh),Fh=Uf(Dh),Gh=Uf(Dh);function Hh(a){if(a===Dh)throw Error(p(174));return a}function Ih(a,b){G(Gh,b);G(Fh,a);G(Eh,Dh);a=b.nodeType;switch(a){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:lb(null,\"\");break;default:a=8===a?b.parentNode:b,b=a.namespaceURI||null,a=a.tagName,b=lb(b,a)}E(Eh);G(Eh,b)}function Jh(){E(Eh);E(Fh);E(Gh)}\nfunction Kh(a){Hh(Gh.current);var b=Hh(Eh.current);var c=lb(b,a.type);b!==c&&(G(Fh,a),G(Eh,c))}function Lh(a){Fh.current===a&&(E(Eh),E(Fh))}var M=Uf(0);\nfunction Mh(a){for(var b=a;null!==b;){if(13===b.tag){var c=b.memoizedState;if(null!==c&&(c=c.dehydrated,null===c||\"$?\"===c.data||\"$!\"===c.data))return b}else if(19===b.tag&&void 0!==b.memoizedProps.revealOrder){if(0!==(b.flags&128))return b}else if(null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}return null}var Nh=[];\nfunction Oh(){for(var a=0;a<Nh.length;a++)Nh[a]._workInProgressVersionPrimary=null;Nh.length=0}var Ph=ua.ReactCurrentDispatcher,Qh=ua.ReactCurrentBatchConfig,Rh=0,N=null,O=null,P=null,Sh=!1,Th=!1,Uh=0,Vh=0;function Q(){throw Error(p(321));}function Wh(a,b){if(null===b)return!1;for(var c=0;c<b.length&&c<a.length;c++)if(!He(a[c],b[c]))return!1;return!0}\nfunction Xh(a,b,c,d,e,f){Rh=f;N=b;b.memoizedState=null;b.updateQueue=null;b.lanes=0;Ph.current=null===a||null===a.memoizedState?Yh:Zh;a=c(d,e);if(Th){f=0;do{Th=!1;Uh=0;if(25<=f)throw Error(p(301));f+=1;P=O=null;b.updateQueue=null;Ph.current=$h;a=c(d,e)}while(Th)}Ph.current=ai;b=null!==O&&null!==O.next;Rh=0;P=O=N=null;Sh=!1;if(b)throw Error(p(300));return a}function bi(){var a=0!==Uh;Uh=0;return a}\nfunction ci(){var a={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};null===P?N.memoizedState=P=a:P=P.next=a;return P}function di(){if(null===O){var a=N.alternate;a=null!==a?a.memoizedState:null}else a=O.next;var b=null===P?N.memoizedState:P.next;if(null!==b)P=b,O=a;else{if(null===a)throw Error(p(310));O=a;a={memoizedState:O.memoizedState,baseState:O.baseState,baseQueue:O.baseQueue,queue:O.queue,next:null};null===P?N.memoizedState=P=a:P=P.next=a}return P}\nfunction ei(a,b){return\"function\"===typeof b?b(a):b}\nfunction fi(a){var b=di(),c=b.queue;if(null===c)throw Error(p(311));c.lastRenderedReducer=a;var d=O,e=d.baseQueue,f=c.pending;if(null!==f){if(null!==e){var g=e.next;e.next=f.next;f.next=g}d.baseQueue=e=f;c.pending=null}if(null!==e){f=e.next;d=d.baseState;var h=g=null,k=null,l=f;do{var m=l.lane;if((Rh&m)===m)null!==k&&(k=k.next={lane:0,action:l.action,hasEagerState:l.hasEagerState,eagerState:l.eagerState,next:null}),d=l.hasEagerState?l.eagerState:a(d,l.action);else{var q={lane:m,action:l.action,hasEagerState:l.hasEagerState,\neagerState:l.eagerState,next:null};null===k?(h=k=q,g=d):k=k.next=q;N.lanes|=m;hh|=m}l=l.next}while(null!==l&&l!==f);null===k?g=d:k.next=h;He(d,b.memoizedState)||(Ug=!0);b.memoizedState=d;b.baseState=g;b.baseQueue=k;c.lastRenderedState=d}a=c.interleaved;if(null!==a){e=a;do f=e.lane,N.lanes|=f,hh|=f,e=e.next;while(e!==a)}else null===e&&(c.lanes=0);return[b.memoizedState,c.dispatch]}\nfunction gi(a){var b=di(),c=b.queue;if(null===c)throw Error(p(311));c.lastRenderedReducer=a;var d=c.dispatch,e=c.pending,f=b.memoizedState;if(null!==e){c.pending=null;var g=e=e.next;do f=a(f,g.action),g=g.next;while(g!==e);He(f,b.memoizedState)||(Ug=!0);b.memoizedState=f;null===b.baseQueue&&(b.baseState=f);c.lastRenderedState=f}return[f,d]}function hi(){}\nfunction ii(a,b){var c=N,d=di(),e=b(),f=!He(d.memoizedState,e);f&&(d.memoizedState=e,Ug=!0);d=d.queue;ji(ki.bind(null,c,d,a),[a]);if(d.getSnapshot!==b||f||null!==P&&P.memoizedState.tag&1){c.flags|=2048;li(9,mi.bind(null,c,d,e,b),void 0,null);if(null===R)throw Error(p(349));0!==(Rh&30)||ni(c,b,e)}return e}function ni(a,b,c){a.flags|=16384;a={getSnapshot:b,value:c};b=N.updateQueue;null===b?(b={lastEffect:null,stores:null},N.updateQueue=b,b.stores=[a]):(c=b.stores,null===c?b.stores=[a]:c.push(a))}\nfunction mi(a,b,c,d){b.value=c;b.getSnapshot=d;oi(b)&&pi(a)}function ki(a,b,c){return c(function(){oi(b)&&pi(a)})}function oi(a){var b=a.getSnapshot;a=a.value;try{var c=b();return!He(a,c)}catch(d){return!0}}function pi(a){var b=Zg(a,1);null!==b&&mh(b,a,1,-1)}\nfunction qi(a){var b=ci();\"function\"===typeof a&&(a=a());b.memoizedState=b.baseState=a;a={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:ei,lastRenderedState:a};b.queue=a;a=a.dispatch=ri.bind(null,N,a);return[b.memoizedState,a]}\nfunction li(a,b,c,d){a={tag:a,create:b,destroy:c,deps:d,next:null};b=N.updateQueue;null===b?(b={lastEffect:null,stores:null},N.updateQueue=b,b.lastEffect=a.next=a):(c=b.lastEffect,null===c?b.lastEffect=a.next=a:(d=c.next,c.next=a,a.next=d,b.lastEffect=a));return a}function si(){return di().memoizedState}function ti(a,b,c,d){var e=ci();N.flags|=a;e.memoizedState=li(1|b,c,void 0,void 0===d?null:d)}\nfunction ui(a,b,c,d){var e=di();d=void 0===d?null:d;var f=void 0;if(null!==O){var g=O.memoizedState;f=g.destroy;if(null!==d&&Wh(d,g.deps)){e.memoizedState=li(b,c,f,d);return}}N.flags|=a;e.memoizedState=li(1|b,c,f,d)}function vi(a,b){return ti(8390656,8,a,b)}function ji(a,b){return ui(2048,8,a,b)}function wi(a,b){return ui(4,2,a,b)}function xi(a,b){return ui(4,4,a,b)}\nfunction yi(a,b){if(\"function\"===typeof b)return a=a(),b(a),function(){b(null)};if(null!==b&&void 0!==b)return a=a(),b.current=a,function(){b.current=null}}function zi(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return ui(4,4,yi.bind(null,b,a),c)}function Ai(){}function Bi(a,b){var c=di();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Wh(b,d[1]))return d[0];c.memoizedState=[a,b];return a}\nfunction Ci(a,b){var c=di();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Wh(b,d[1]))return d[0];a=a();c.memoizedState=[a,b];return a}function Di(a,b,c){if(0===(Rh&21))return a.baseState&&(a.baseState=!1,Ug=!0),a.memoizedState=c;He(c,b)||(c=yc(),N.lanes|=c,hh|=c,a.baseState=!0);return b}function Ei(a,b){var c=C;C=0!==c&&4>c?c:4;a(!0);var d=Qh.transition;Qh.transition={};try{a(!1),b()}finally{C=c,Qh.transition=d}}function Fi(){return di().memoizedState}\nfunction Gi(a,b,c){var d=lh(a);c={lane:d,action:c,hasEagerState:!1,eagerState:null,next:null};if(Hi(a))Ii(b,c);else if(c=Yg(a,b,c,d),null!==c){var e=L();mh(c,a,d,e);Ji(c,b,d)}}\nfunction ri(a,b,c){var d=lh(a),e={lane:d,action:c,hasEagerState:!1,eagerState:null,next:null};if(Hi(a))Ii(b,e);else{var f=a.alternate;if(0===a.lanes&&(null===f||0===f.lanes)&&(f=b.lastRenderedReducer,null!==f))try{var g=b.lastRenderedState,h=f(g,c);e.hasEagerState=!0;e.eagerState=h;if(He(h,g)){var k=b.interleaved;null===k?(e.next=e,Xg(b)):(e.next=k.next,k.next=e);b.interleaved=e;return}}catch(l){}finally{}c=Yg(a,b,e,d);null!==c&&(e=L(),mh(c,a,d,e),Ji(c,b,d))}}\nfunction Hi(a){var b=a.alternate;return a===N||null!==b&&b===N}function Ii(a,b){Th=Sh=!0;var c=a.pending;null===c?b.next=b:(b.next=c.next,c.next=b);a.pending=b}function Ji(a,b,c){if(0!==(c&4194240)){var d=b.lanes;d&=a.pendingLanes;c|=d;b.lanes=c;Cc(a,c)}}\nvar ai={readContext:Vg,useCallback:Q,useContext:Q,useEffect:Q,useImperativeHandle:Q,useInsertionEffect:Q,useLayoutEffect:Q,useMemo:Q,useReducer:Q,useRef:Q,useState:Q,useDebugValue:Q,useDeferredValue:Q,useTransition:Q,useMutableSource:Q,useSyncExternalStore:Q,useId:Q,unstable_isNewReconciler:!1},Yh={readContext:Vg,useCallback:function(a,b){ci().memoizedState=[a,void 0===b?null:b];return a},useContext:Vg,useEffect:vi,useImperativeHandle:function(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return ti(4194308,\n4,yi.bind(null,b,a),c)},useLayoutEffect:function(a,b){return ti(4194308,4,a,b)},useInsertionEffect:function(a,b){return ti(4,2,a,b)},useMemo:function(a,b){var c=ci();b=void 0===b?null:b;a=a();c.memoizedState=[a,b];return a},useReducer:function(a,b,c){var d=ci();b=void 0!==c?c(b):b;d.memoizedState=d.baseState=b;a={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:a,lastRenderedState:b};d.queue=a;a=a.dispatch=Gi.bind(null,N,a);return[d.memoizedState,a]},useRef:function(a){var b=\nci();a={current:a};return b.memoizedState=a},useState:qi,useDebugValue:Ai,useDeferredValue:function(a){return ci().memoizedState=a},useTransition:function(){var a=qi(!1),b=a[0];a=Ei.bind(null,a[1]);ci().memoizedState=a;return[b,a]},useMutableSource:function(){},useSyncExternalStore:function(a,b,c){var d=N,e=ci();if(I){if(void 0===c)throw Error(p(407));c=c()}else{c=b();if(null===R)throw Error(p(349));0!==(Rh&30)||ni(d,b,c)}e.memoizedState=c;var f={value:c,getSnapshot:b};e.queue=f;vi(ki.bind(null,d,\nf,a),[a]);d.flags|=2048;li(9,mi.bind(null,d,f,c,b),void 0,null);return c},useId:function(){var a=ci(),b=R.identifierPrefix;if(I){var c=sg;var d=rg;c=(d&~(1<<32-oc(d)-1)).toString(32)+c;b=\":\"+b+\"R\"+c;c=Uh++;0<c&&(b+=\"H\"+c.toString(32));b+=\":\"}else c=Vh++,b=\":\"+b+\"r\"+c.toString(32)+\":\";return a.memoizedState=b},unstable_isNewReconciler:!1},Zh={readContext:Vg,useCallback:Bi,useContext:Vg,useEffect:ji,useImperativeHandle:zi,useInsertionEffect:wi,useLayoutEffect:xi,useMemo:Ci,useReducer:fi,useRef:si,useState:function(){return fi(ei)},\nuseDebugValue:Ai,useDeferredValue:function(a){var b=di();return Di(b,O.memoizedState,a)},useTransition:function(){var a=fi(ei)[0],b=di().memoizedState;return[a,b]},useMutableSource:hi,useSyncExternalStore:ii,useId:Fi,unstable_isNewReconciler:!1},$h={readContext:Vg,useCallback:Bi,useContext:Vg,useEffect:ji,useImperativeHandle:zi,useInsertionEffect:wi,useLayoutEffect:xi,useMemo:Ci,useReducer:gi,useRef:si,useState:function(){return gi(ei)},useDebugValue:Ai,useDeferredValue:function(a){var b=di();return null===\nO?b.memoizedState=a:Di(b,O.memoizedState,a)},useTransition:function(){var a=gi(ei)[0],b=di().memoizedState;return[a,b]},useMutableSource:hi,useSyncExternalStore:ii,useId:Fi,unstable_isNewReconciler:!1};function Ki(a,b){try{var c=\"\",d=b;do c+=Pa(d),d=d.return;while(d);var e=c}catch(f){e=\"\\nError generating stack: \"+f.message+\"\\n\"+f.stack}return{value:a,source:b,stack:e,digest:null}}function Li(a,b,c){return{value:a,source:null,stack:null!=c?c:null,digest:null!=b?b:null}}\nfunction Mi(a,b){try{console.error(b.value)}catch(c){setTimeout(function(){throw c;})}}var Ni=\"function\"===typeof WeakMap?WeakMap:Map;function Oi(a,b,c){c=ch(-1,c);c.tag=3;c.payload={element:null};var d=b.value;c.callback=function(){Pi||(Pi=!0,Qi=d);Mi(a,b)};return c}\nfunction Ri(a,b,c){c=ch(-1,c);c.tag=3;var d=a.type.getDerivedStateFromError;if(\"function\"===typeof d){var e=b.value;c.payload=function(){return d(e)};c.callback=function(){Mi(a,b)}}var f=a.stateNode;null!==f&&\"function\"===typeof f.componentDidCatch&&(c.callback=function(){Mi(a,b);\"function\"!==typeof d&&(null===Si?Si=new Set([this]):Si.add(this));var c=b.stack;this.componentDidCatch(b.value,{componentStack:null!==c?c:\"\"})});return c}\nfunction Ti(a,b,c){var d=a.pingCache;if(null===d){d=a.pingCache=new Ni;var e=new Set;d.set(b,e)}else e=d.get(b),void 0===e&&(e=new Set,d.set(b,e));e.has(c)||(e.add(c),a=Ui.bind(null,a,b,c),b.then(a,a))}function Vi(a){do{var b;if(b=13===a.tag)b=a.memoizedState,b=null!==b?null!==b.dehydrated?!0:!1:!0;if(b)return a;a=a.return}while(null!==a);return null}\nfunction Wi(a,b,c,d,e){if(0===(a.mode&1))return a===b?a.flags|=65536:(a.flags|=128,c.flags|=131072,c.flags&=-52805,1===c.tag&&(null===c.alternate?c.tag=17:(b=ch(-1,1),b.tag=2,dh(c,b,1))),c.lanes|=1),a;a.flags|=65536;a.lanes=e;return a}var Xi=ua.ReactCurrentOwner,Ug=!1;function Yi(a,b,c,d){b.child=null===a?Ch(b,null,c,d):Bh(b,a.child,c,d)}\nfunction Zi(a,b,c,d,e){c=c.render;var f=b.ref;Tg(b,e);d=Xh(a,b,c,d,f,e);c=bi();if(null!==a&&!Ug)return b.updateQueue=a.updateQueue,b.flags&=-2053,a.lanes&=~e,$i(a,b,e);I&&c&&vg(b);b.flags|=1;Yi(a,b,d,e);return b.child}\nfunction aj(a,b,c,d,e){if(null===a){var f=c.type;if(\"function\"===typeof f&&!bj(f)&&void 0===f.defaultProps&&null===c.compare&&void 0===c.defaultProps)return b.tag=15,b.type=f,cj(a,b,f,d,e);a=yh(c.type,null,d,b,b.mode,e);a.ref=b.ref;a.return=b;return b.child=a}f=a.child;if(0===(a.lanes&e)){var g=f.memoizedProps;c=c.compare;c=null!==c?c:Ie;if(c(g,d)&&a.ref===b.ref)return $i(a,b,e)}b.flags|=1;a=wh(f,d);a.ref=b.ref;a.return=b;return b.child=a}\nfunction cj(a,b,c,d,e){if(null!==a){var f=a.memoizedProps;if(Ie(f,d)&&a.ref===b.ref)if(Ug=!1,b.pendingProps=d=f,0!==(a.lanes&e))0!==(a.flags&131072)&&(Ug=!0);else return b.lanes=a.lanes,$i(a,b,e)}return dj(a,b,c,d,e)}\nfunction ej(a,b,c){var d=b.pendingProps,e=d.children,f=null!==a?a.memoizedState:null;if(\"hidden\"===d.mode)if(0===(b.mode&1))b.memoizedState={baseLanes:0,cachePool:null,transitions:null},G(fj,gj),gj|=c;else{if(0===(c&1073741824))return a=null!==f?f.baseLanes|c:c,b.lanes=b.childLanes=1073741824,b.memoizedState={baseLanes:a,cachePool:null,transitions:null},b.updateQueue=null,G(fj,gj),gj|=a,null;b.memoizedState={baseLanes:0,cachePool:null,transitions:null};d=null!==f?f.baseLanes:c;G(fj,gj);gj|=d}else null!==\nf?(d=f.baseLanes|c,b.memoizedState=null):d=c,G(fj,gj),gj|=d;Yi(a,b,e,c);return b.child}function hj(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.flags|=512,b.flags|=2097152}function dj(a,b,c,d,e){var f=Zf(c)?Xf:H.current;f=Yf(b,f);Tg(b,e);c=Xh(a,b,c,d,f,e);d=bi();if(null!==a&&!Ug)return b.updateQueue=a.updateQueue,b.flags&=-2053,a.lanes&=~e,$i(a,b,e);I&&d&&vg(b);b.flags|=1;Yi(a,b,c,e);return b.child}\nfunction ij(a,b,c,d,e){if(Zf(c)){var f=!0;cg(b)}else f=!1;Tg(b,e);if(null===b.stateNode)jj(a,b),ph(b,c,d),rh(b,c,d,e),d=!0;else if(null===a){var g=b.stateNode,h=b.memoizedProps;g.props=h;var k=g.context,l=c.contextType;\"object\"===typeof l&&null!==l?l=Vg(l):(l=Zf(c)?Xf:H.current,l=Yf(b,l));var m=c.getDerivedStateFromProps,q=\"function\"===typeof m||\"function\"===typeof g.getSnapshotBeforeUpdate;q||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||\n(h!==d||k!==l)&&qh(b,g,d,l);$g=!1;var r=b.memoizedState;g.state=r;gh(b,d,g,e);k=b.memoizedState;h!==d||r!==k||Wf.current||$g?(\"function\"===typeof m&&(kh(b,c,m,d),k=b.memoizedState),(h=$g||oh(b,c,h,d,r,k,l))?(q||\"function\"!==typeof g.UNSAFE_componentWillMount&&\"function\"!==typeof g.componentWillMount||(\"function\"===typeof g.componentWillMount&&g.componentWillMount(),\"function\"===typeof g.UNSAFE_componentWillMount&&g.UNSAFE_componentWillMount()),\"function\"===typeof g.componentDidMount&&(b.flags|=4194308)):\n(\"function\"===typeof g.componentDidMount&&(b.flags|=4194308),b.memoizedProps=d,b.memoizedState=k),g.props=d,g.state=k,g.context=l,d=h):(\"function\"===typeof g.componentDidMount&&(b.flags|=4194308),d=!1)}else{g=b.stateNode;bh(a,b);h=b.memoizedProps;l=b.type===b.elementType?h:Lg(b.type,h);g.props=l;q=b.pendingProps;r=g.context;k=c.contextType;\"object\"===typeof k&&null!==k?k=Vg(k):(k=Zf(c)?Xf:H.current,k=Yf(b,k));var y=c.getDerivedStateFromProps;(m=\"function\"===typeof y||\"function\"===typeof g.getSnapshotBeforeUpdate)||\n\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||(h!==q||r!==k)&&qh(b,g,d,k);$g=!1;r=b.memoizedState;g.state=r;gh(b,d,g,e);var n=b.memoizedState;h!==q||r!==n||Wf.current||$g?(\"function\"===typeof y&&(kh(b,c,y,d),n=b.memoizedState),(l=$g||oh(b,c,l,d,r,n,k)||!1)?(m||\"function\"!==typeof g.UNSAFE_componentWillUpdate&&\"function\"!==typeof g.componentWillUpdate||(\"function\"===typeof g.componentWillUpdate&&g.componentWillUpdate(d,n,k),\"function\"===typeof g.UNSAFE_componentWillUpdate&&\ng.UNSAFE_componentWillUpdate(d,n,k)),\"function\"===typeof g.componentDidUpdate&&(b.flags|=4),\"function\"===typeof g.getSnapshotBeforeUpdate&&(b.flags|=1024)):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=1024),b.memoizedProps=d,b.memoizedState=n),g.props=d,g.state=n,g.context=k,d=l):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&r===\na.memoizedState||(b.flags|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=1024),d=!1)}return kj(a,b,c,d,f,e)}\nfunction kj(a,b,c,d,e,f){hj(a,b);var g=0!==(b.flags&128);if(!d&&!g)return e&&dg(b,c,!1),$i(a,b,f);d=b.stateNode;Xi.current=b;var h=g&&\"function\"!==typeof c.getDerivedStateFromError?null:d.render();b.flags|=1;null!==a&&g?(b.child=Bh(b,a.child,null,f),b.child=Bh(b,null,h,f)):Yi(a,b,h,f);b.memoizedState=d.state;e&&dg(b,c,!0);return b.child}function lj(a){var b=a.stateNode;b.pendingContext?ag(a,b.pendingContext,b.pendingContext!==b.context):b.context&&ag(a,b.context,!1);Ih(a,b.containerInfo)}\nfunction mj(a,b,c,d,e){Ig();Jg(e);b.flags|=256;Yi(a,b,c,d);return b.child}var nj={dehydrated:null,treeContext:null,retryLane:0};function oj(a){return{baseLanes:a,cachePool:null,transitions:null}}\nfunction pj(a,b,c){var d=b.pendingProps,e=M.current,f=!1,g=0!==(b.flags&128),h;(h=g)||(h=null!==a&&null===a.memoizedState?!1:0!==(e&2));if(h)f=!0,b.flags&=-129;else if(null===a||null!==a.memoizedState)e|=1;G(M,e&1);if(null===a){Eg(b);a=b.memoizedState;if(null!==a&&(a=a.dehydrated,null!==a))return 0===(b.mode&1)?b.lanes=1:\"$!\"===a.data?b.lanes=8:b.lanes=1073741824,null;g=d.children;a=d.fallback;return f?(d=b.mode,f=b.child,g={mode:\"hidden\",children:g},0===(d&1)&&null!==f?(f.childLanes=0,f.pendingProps=\ng):f=qj(g,d,0,null),a=Ah(a,d,c,null),f.return=b,a.return=b,f.sibling=a,b.child=f,b.child.memoizedState=oj(c),b.memoizedState=nj,a):rj(b,g)}e=a.memoizedState;if(null!==e&&(h=e.dehydrated,null!==h))return sj(a,b,g,d,h,e,c);if(f){f=d.fallback;g=b.mode;e=a.child;h=e.sibling;var k={mode:\"hidden\",children:d.children};0===(g&1)&&b.child!==e?(d=b.child,d.childLanes=0,d.pendingProps=k,b.deletions=null):(d=wh(e,k),d.subtreeFlags=e.subtreeFlags&14680064);null!==h?f=wh(h,f):(f=Ah(f,g,c,null),f.flags|=2);f.return=\nb;d.return=b;d.sibling=f;b.child=d;d=f;f=b.child;g=a.child.memoizedState;g=null===g?oj(c):{baseLanes:g.baseLanes|c,cachePool:null,transitions:g.transitions};f.memoizedState=g;f.childLanes=a.childLanes&~c;b.memoizedState=nj;return d}f=a.child;a=f.sibling;d=wh(f,{mode:\"visible\",children:d.children});0===(b.mode&1)&&(d.lanes=c);d.return=b;d.sibling=null;null!==a&&(c=b.deletions,null===c?(b.deletions=[a],b.flags|=16):c.push(a));b.child=d;b.memoizedState=null;return d}\nfunction rj(a,b){b=qj({mode:\"visible\",children:b},a.mode,0,null);b.return=a;return a.child=b}function tj(a,b,c,d){null!==d&&Jg(d);Bh(b,a.child,null,c);a=rj(b,b.pendingProps.children);a.flags|=2;b.memoizedState=null;return a}\nfunction sj(a,b,c,d,e,f,g){if(c){if(b.flags&256)return b.flags&=-257,d=Li(Error(p(422))),tj(a,b,g,d);if(null!==b.memoizedState)return b.child=a.child,b.flags|=128,null;f=d.fallback;e=b.mode;d=qj({mode:\"visible\",children:d.children},e,0,null);f=Ah(f,e,g,null);f.flags|=2;d.return=b;f.return=b;d.sibling=f;b.child=d;0!==(b.mode&1)&&Bh(b,a.child,null,g);b.child.memoizedState=oj(g);b.memoizedState=nj;return f}if(0===(b.mode&1))return tj(a,b,g,null);if(\"$!\"===e.data){d=e.nextSibling&&e.nextSibling.dataset;\nif(d)var h=d.dgst;d=h;f=Error(p(419));d=Li(f,d,void 0);return tj(a,b,g,d)}h=0!==(g&a.childLanes);if(Ug||h){d=R;if(null!==d){switch(g&-g){case 4:e=2;break;case 16:e=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:e=32;break;case 536870912:e=268435456;break;default:e=0}e=0!==(e&(d.suspendedLanes|g))?0:e;\n0!==e&&e!==f.retryLane&&(f.retryLane=e,Zg(a,e),mh(d,a,e,-1))}uj();d=Li(Error(p(421)));return tj(a,b,g,d)}if(\"$?\"===e.data)return b.flags|=128,b.child=a.child,b=vj.bind(null,a),e._reactRetry=b,null;a=f.treeContext;yg=Lf(e.nextSibling);xg=b;I=!0;zg=null;null!==a&&(og[pg++]=rg,og[pg++]=sg,og[pg++]=qg,rg=a.id,sg=a.overflow,qg=b);b=rj(b,d.children);b.flags|=4096;return b}function wj(a,b,c){a.lanes|=b;var d=a.alternate;null!==d&&(d.lanes|=b);Sg(a.return,b,c)}\nfunction xj(a,b,c,d,e){var f=a.memoizedState;null===f?a.memoizedState={isBackwards:b,rendering:null,renderingStartTime:0,last:d,tail:c,tailMode:e}:(f.isBackwards=b,f.rendering=null,f.renderingStartTime=0,f.last=d,f.tail=c,f.tailMode=e)}\nfunction yj(a,b,c){var d=b.pendingProps,e=d.revealOrder,f=d.tail;Yi(a,b,d.children,c);d=M.current;if(0!==(d&2))d=d&1|2,b.flags|=128;else{if(null!==a&&0!==(a.flags&128))a:for(a=b.child;null!==a;){if(13===a.tag)null!==a.memoizedState&&wj(a,c,b);else if(19===a.tag)wj(a,c,b);else if(null!==a.child){a.child.return=a;a=a.child;continue}if(a===b)break a;for(;null===a.sibling;){if(null===a.return||a.return===b)break a;a=a.return}a.sibling.return=a.return;a=a.sibling}d&=1}G(M,d);if(0===(b.mode&1))b.memoizedState=\nnull;else switch(e){case \"forwards\":c=b.child;for(e=null;null!==c;)a=c.alternate,null!==a&&null===Mh(a)&&(e=c),c=c.sibling;c=e;null===c?(e=b.child,b.child=null):(e=c.sibling,c.sibling=null);xj(b,!1,e,c,f);break;case \"backwards\":c=null;e=b.child;for(b.child=null;null!==e;){a=e.alternate;if(null!==a&&null===Mh(a)){b.child=e;break}a=e.sibling;e.sibling=c;c=e;e=a}xj(b,!0,c,null,f);break;case \"together\":xj(b,!1,null,null,void 0);break;default:b.memoizedState=null}return b.child}\nfunction jj(a,b){0===(b.mode&1)&&null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2)}function $i(a,b,c){null!==a&&(b.dependencies=a.dependencies);hh|=b.lanes;if(0===(c&b.childLanes))return null;if(null!==a&&b.child!==a.child)throw Error(p(153));if(null!==b.child){a=b.child;c=wh(a,a.pendingProps);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=wh(a,a.pendingProps),c.return=b;c.sibling=null}return b.child}\nfunction zj(a,b,c){switch(b.tag){case 3:lj(b);Ig();break;case 5:Kh(b);break;case 1:Zf(b.type)&&cg(b);break;case 4:Ih(b,b.stateNode.containerInfo);break;case 10:var d=b.type._context,e=b.memoizedProps.value;G(Mg,d._currentValue);d._currentValue=e;break;case 13:d=b.memoizedState;if(null!==d){if(null!==d.dehydrated)return G(M,M.current&1),b.flags|=128,null;if(0!==(c&b.child.childLanes))return pj(a,b,c);G(M,M.current&1);a=$i(a,b,c);return null!==a?a.sibling:null}G(M,M.current&1);break;case 19:d=0!==(c&\nb.childLanes);if(0!==(a.flags&128)){if(d)return yj(a,b,c);b.flags|=128}e=b.memoizedState;null!==e&&(e.rendering=null,e.tail=null,e.lastEffect=null);G(M,M.current);if(d)break;else return null;case 22:case 23:return b.lanes=0,ej(a,b,c)}return $i(a,b,c)}var Aj,Bj,Cj,Dj;\nAj=function(a,b){for(var c=b.child;null!==c;){if(5===c.tag||6===c.tag)a.appendChild(c.stateNode);else if(4!==c.tag&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return}c.sibling.return=c.return;c=c.sibling}};Bj=function(){};\nCj=function(a,b,c,d){var e=a.memoizedProps;if(e!==d){a=b.stateNode;Hh(Eh.current);var f=null;switch(c){case \"input\":e=Ya(a,e);d=Ya(a,d);f=[];break;case \"select\":e=A({},e,{value:void 0});d=A({},d,{value:void 0});f=[];break;case \"textarea\":e=gb(a,e);d=gb(a,d);f=[];break;default:\"function\"!==typeof e.onClick&&\"function\"===typeof d.onClick&&(a.onclick=Bf)}ub(c,d);var g;c=null;for(l in e)if(!d.hasOwnProperty(l)&&e.hasOwnProperty(l)&&null!=e[l])if(\"style\"===l){var h=e[l];for(g in h)h.hasOwnProperty(g)&&\n(c||(c={}),c[g]=\"\")}else\"dangerouslySetInnerHTML\"!==l&&\"children\"!==l&&\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&\"autoFocus\"!==l&&(ea.hasOwnProperty(l)?f||(f=[]):(f=f||[]).push(l,null));for(l in d){var k=d[l];h=null!=e?e[l]:void 0;if(d.hasOwnProperty(l)&&k!==h&&(null!=k||null!=h))if(\"style\"===l)if(h){for(g in h)!h.hasOwnProperty(g)||k&&k.hasOwnProperty(g)||(c||(c={}),c[g]=\"\");for(g in k)k.hasOwnProperty(g)&&h[g]!==k[g]&&(c||(c={}),c[g]=k[g])}else c||(f||(f=[]),f.push(l,\nc)),c=k;else\"dangerouslySetInnerHTML\"===l?(k=k?k.__html:void 0,h=h?h.__html:void 0,null!=k&&h!==k&&(f=f||[]).push(l,k)):\"children\"===l?\"string\"!==typeof k&&\"number\"!==typeof k||(f=f||[]).push(l,\"\"+k):\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&(ea.hasOwnProperty(l)?(null!=k&&\"onScroll\"===l&&D(\"scroll\",a),f||h===k||(f=[])):(f=f||[]).push(l,k))}c&&(f=f||[]).push(\"style\",c);var l=f;if(b.updateQueue=l)b.flags|=4}};Dj=function(a,b,c,d){c!==d&&(b.flags|=4)};\nfunction Ej(a,b){if(!I)switch(a.tailMode){case \"hidden\":b=a.tail;for(var c=null;null!==b;)null!==b.alternate&&(c=b),b=b.sibling;null===c?a.tail=null:c.sibling=null;break;case \"collapsed\":c=a.tail;for(var d=null;null!==c;)null!==c.alternate&&(d=c),c=c.sibling;null===d?b||null===a.tail?a.tail=null:a.tail.sibling=null:d.sibling=null}}\nfunction S(a){var b=null!==a.alternate&&a.alternate.child===a.child,c=0,d=0;if(b)for(var e=a.child;null!==e;)c|=e.lanes|e.childLanes,d|=e.subtreeFlags&14680064,d|=e.flags&14680064,e.return=a,e=e.sibling;else for(e=a.child;null!==e;)c|=e.lanes|e.childLanes,d|=e.subtreeFlags,d|=e.flags,e.return=a,e=e.sibling;a.subtreeFlags|=d;a.childLanes=c;return b}\nfunction Fj(a,b,c){var d=b.pendingProps;wg(b);switch(b.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return S(b),null;case 1:return Zf(b.type)&&$f(),S(b),null;case 3:d=b.stateNode;Jh();E(Wf);E(H);Oh();d.pendingContext&&(d.context=d.pendingContext,d.pendingContext=null);if(null===a||null===a.child)Gg(b)?b.flags|=4:null===a||a.memoizedState.isDehydrated&&0===(b.flags&256)||(b.flags|=1024,null!==zg&&(Gj(zg),zg=null));Bj(a,b);S(b);return null;case 5:Lh(b);var e=Hh(Gh.current);\nc=b.type;if(null!==a&&null!=b.stateNode)Cj(a,b,c,d,e),a.ref!==b.ref&&(b.flags|=512,b.flags|=2097152);else{if(!d){if(null===b.stateNode)throw Error(p(166));S(b);return null}a=Hh(Eh.current);if(Gg(b)){d=b.stateNode;c=b.type;var f=b.memoizedProps;d[Of]=b;d[Pf]=f;a=0!==(b.mode&1);switch(c){case \"dialog\":D(\"cancel\",d);D(\"close\",d);break;case \"iframe\":case \"object\":case \"embed\":D(\"load\",d);break;case \"video\":case \"audio\":for(e=0;e<lf.length;e++)D(lf[e],d);break;case \"source\":D(\"error\",d);break;case \"img\":case \"image\":case \"link\":D(\"error\",\nd);D(\"load\",d);break;case \"details\":D(\"toggle\",d);break;case \"input\":Za(d,f);D(\"invalid\",d);break;case \"select\":d._wrapperState={wasMultiple:!!f.multiple};D(\"invalid\",d);break;case \"textarea\":hb(d,f),D(\"invalid\",d)}ub(c,f);e=null;for(var g in f)if(f.hasOwnProperty(g)){var h=f[g];\"children\"===g?\"string\"===typeof h?d.textContent!==h&&(!0!==f.suppressHydrationWarning&&Af(d.textContent,h,a),e=[\"children\",h]):\"number\"===typeof h&&d.textContent!==\"\"+h&&(!0!==f.suppressHydrationWarning&&Af(d.textContent,\nh,a),e=[\"children\",\"\"+h]):ea.hasOwnProperty(g)&&null!=h&&\"onScroll\"===g&&D(\"scroll\",d)}switch(c){case \"input\":Va(d);db(d,f,!0);break;case \"textarea\":Va(d);jb(d);break;case \"select\":case \"option\":break;default:\"function\"===typeof f.onClick&&(d.onclick=Bf)}d=e;b.updateQueue=d;null!==d&&(b.flags|=4)}else{g=9===e.nodeType?e:e.ownerDocument;\"http://www.w3.org/1999/xhtml\"===a&&(a=kb(c));\"http://www.w3.org/1999/xhtml\"===a?\"script\"===c?(a=g.createElement(\"div\"),a.innerHTML=\"<script>\\x3c/script>\",a=a.removeChild(a.firstChild)):\n\"string\"===typeof d.is?a=g.createElement(c,{is:d.is}):(a=g.createElement(c),\"select\"===c&&(g=a,d.multiple?g.multiple=!0:d.size&&(g.size=d.size))):a=g.createElementNS(a,c);a[Of]=b;a[Pf]=d;Aj(a,b,!1,!1);b.stateNode=a;a:{g=vb(c,d);switch(c){case \"dialog\":D(\"cancel\",a);D(\"close\",a);e=d;break;case \"iframe\":case \"object\":case \"embed\":D(\"load\",a);e=d;break;case \"video\":case \"audio\":for(e=0;e<lf.length;e++)D(lf[e],a);e=d;break;case \"source\":D(\"error\",a);e=d;break;case \"img\":case \"image\":case \"link\":D(\"error\",\na);D(\"load\",a);e=d;break;case \"details\":D(\"toggle\",a);e=d;break;case \"input\":Za(a,d);e=Ya(a,d);D(\"invalid\",a);break;case \"option\":e=d;break;case \"select\":a._wrapperState={wasMultiple:!!d.multiple};e=A({},d,{value:void 0});D(\"invalid\",a);break;case \"textarea\":hb(a,d);e=gb(a,d);D(\"invalid\",a);break;default:e=d}ub(c,e);h=e;for(f in h)if(h.hasOwnProperty(f)){var k=h[f];\"style\"===f?sb(a,k):\"dangerouslySetInnerHTML\"===f?(k=k?k.__html:void 0,null!=k&&nb(a,k)):\"children\"===f?\"string\"===typeof k?(\"textarea\"!==\nc||\"\"!==k)&&ob(a,k):\"number\"===typeof k&&ob(a,\"\"+k):\"suppressContentEditableWarning\"!==f&&\"suppressHydrationWarning\"!==f&&\"autoFocus\"!==f&&(ea.hasOwnProperty(f)?null!=k&&\"onScroll\"===f&&D(\"scroll\",a):null!=k&&ta(a,f,k,g))}switch(c){case \"input\":Va(a);db(a,d,!1);break;case \"textarea\":Va(a);jb(a);break;case \"option\":null!=d.value&&a.setAttribute(\"value\",\"\"+Sa(d.value));break;case \"select\":a.multiple=!!d.multiple;f=d.value;null!=f?fb(a,!!d.multiple,f,!1):null!=d.defaultValue&&fb(a,!!d.multiple,d.defaultValue,\n!0);break;default:\"function\"===typeof e.onClick&&(a.onclick=Bf)}switch(c){case \"button\":case \"input\":case \"select\":case \"textarea\":d=!!d.autoFocus;break a;case \"img\":d=!0;break a;default:d=!1}}d&&(b.flags|=4)}null!==b.ref&&(b.flags|=512,b.flags|=2097152)}S(b);return null;case 6:if(a&&null!=b.stateNode)Dj(a,b,a.memoizedProps,d);else{if(\"string\"!==typeof d&&null===b.stateNode)throw Error(p(166));c=Hh(Gh.current);Hh(Eh.current);if(Gg(b)){d=b.stateNode;c=b.memoizedProps;d[Of]=b;if(f=d.nodeValue!==c)if(a=\nxg,null!==a)switch(a.tag){case 3:Af(d.nodeValue,c,0!==(a.mode&1));break;case 5:!0!==a.memoizedProps.suppressHydrationWarning&&Af(d.nodeValue,c,0!==(a.mode&1))}f&&(b.flags|=4)}else d=(9===c.nodeType?c:c.ownerDocument).createTextNode(d),d[Of]=b,b.stateNode=d}S(b);return null;case 13:E(M);d=b.memoizedState;if(null===a||null!==a.memoizedState&&null!==a.memoizedState.dehydrated){if(I&&null!==yg&&0!==(b.mode&1)&&0===(b.flags&128))Hg(),Ig(),b.flags|=98560,f=!1;else if(f=Gg(b),null!==d&&null!==d.dehydrated){if(null===\na){if(!f)throw Error(p(318));f=b.memoizedState;f=null!==f?f.dehydrated:null;if(!f)throw Error(p(317));f[Of]=b}else Ig(),0===(b.flags&128)&&(b.memoizedState=null),b.flags|=4;S(b);f=!1}else null!==zg&&(Gj(zg),zg=null),f=!0;if(!f)return b.flags&65536?b:null}if(0!==(b.flags&128))return b.lanes=c,b;d=null!==d;d!==(null!==a&&null!==a.memoizedState)&&d&&(b.child.flags|=8192,0!==(b.mode&1)&&(null===a||0!==(M.current&1)?0===T&&(T=3):uj()));null!==b.updateQueue&&(b.flags|=4);S(b);return null;case 4:return Jh(),\nBj(a,b),null===a&&sf(b.stateNode.containerInfo),S(b),null;case 10:return Rg(b.type._context),S(b),null;case 17:return Zf(b.type)&&$f(),S(b),null;case 19:E(M);f=b.memoizedState;if(null===f)return S(b),null;d=0!==(b.flags&128);g=f.rendering;if(null===g)if(d)Ej(f,!1);else{if(0!==T||null!==a&&0!==(a.flags&128))for(a=b.child;null!==a;){g=Mh(a);if(null!==g){b.flags|=128;Ej(f,!1);d=g.updateQueue;null!==d&&(b.updateQueue=d,b.flags|=4);b.subtreeFlags=0;d=c;for(c=b.child;null!==c;)f=c,a=d,f.flags&=14680066,\ng=f.alternate,null===g?(f.childLanes=0,f.lanes=a,f.child=null,f.subtreeFlags=0,f.memoizedProps=null,f.memoizedState=null,f.updateQueue=null,f.dependencies=null,f.stateNode=null):(f.childLanes=g.childLanes,f.lanes=g.lanes,f.child=g.child,f.subtreeFlags=0,f.deletions=null,f.memoizedProps=g.memoizedProps,f.memoizedState=g.memoizedState,f.updateQueue=g.updateQueue,f.type=g.type,a=g.dependencies,f.dependencies=null===a?null:{lanes:a.lanes,firstContext:a.firstContext}),c=c.sibling;G(M,M.current&1|2);return b.child}a=\na.sibling}null!==f.tail&&B()>Hj&&(b.flags|=128,d=!0,Ej(f,!1),b.lanes=4194304)}else{if(!d)if(a=Mh(g),null!==a){if(b.flags|=128,d=!0,c=a.updateQueue,null!==c&&(b.updateQueue=c,b.flags|=4),Ej(f,!0),null===f.tail&&\"hidden\"===f.tailMode&&!g.alternate&&!I)return S(b),null}else 2*B()-f.renderingStartTime>Hj&&1073741824!==c&&(b.flags|=128,d=!0,Ej(f,!1),b.lanes=4194304);f.isBackwards?(g.sibling=b.child,b.child=g):(c=f.last,null!==c?c.sibling=g:b.child=g,f.last=g)}if(null!==f.tail)return b=f.tail,f.rendering=\nb,f.tail=b.sibling,f.renderingStartTime=B(),b.sibling=null,c=M.current,G(M,d?c&1|2:c&1),b;S(b);return null;case 22:case 23:return Ij(),d=null!==b.memoizedState,null!==a&&null!==a.memoizedState!==d&&(b.flags|=8192),d&&0!==(b.mode&1)?0!==(gj&1073741824)&&(S(b),b.subtreeFlags&6&&(b.flags|=8192)):S(b),null;case 24:return null;case 25:return null}throw Error(p(156,b.tag));}\nfunction Jj(a,b){wg(b);switch(b.tag){case 1:return Zf(b.type)&&$f(),a=b.flags,a&65536?(b.flags=a&-65537|128,b):null;case 3:return Jh(),E(Wf),E(H),Oh(),a=b.flags,0!==(a&65536)&&0===(a&128)?(b.flags=a&-65537|128,b):null;case 5:return Lh(b),null;case 13:E(M);a=b.memoizedState;if(null!==a&&null!==a.dehydrated){if(null===b.alternate)throw Error(p(340));Ig()}a=b.flags;return a&65536?(b.flags=a&-65537|128,b):null;case 19:return E(M),null;case 4:return Jh(),null;case 10:return Rg(b.type._context),null;case 22:case 23:return Ij(),\nnull;case 24:return null;default:return null}}var Kj=!1,U=!1,Lj=\"function\"===typeof WeakSet?WeakSet:Set,V=null;function Mj(a,b){var c=a.ref;if(null!==c)if(\"function\"===typeof c)try{c(null)}catch(d){W(a,b,d)}else c.current=null}function Nj(a,b,c){try{c()}catch(d){W(a,b,d)}}var Oj=!1;\nfunction Pj(a,b){Cf=dd;a=Me();if(Ne(a)){if(\"selectionStart\"in a)var c={start:a.selectionStart,end:a.selectionEnd};else a:{c=(c=a.ownerDocument)&&c.defaultView||window;var d=c.getSelection&&c.getSelection();if(d&&0!==d.rangeCount){c=d.anchorNode;var e=d.anchorOffset,f=d.focusNode;d=d.focusOffset;try{c.nodeType,f.nodeType}catch(F){c=null;break a}var g=0,h=-1,k=-1,l=0,m=0,q=a,r=null;b:for(;;){for(var y;;){q!==c||0!==e&&3!==q.nodeType||(h=g+e);q!==f||0!==d&&3!==q.nodeType||(k=g+d);3===q.nodeType&&(g+=\nq.nodeValue.length);if(null===(y=q.firstChild))break;r=q;q=y}for(;;){if(q===a)break b;r===c&&++l===e&&(h=g);r===f&&++m===d&&(k=g);if(null!==(y=q.nextSibling))break;q=r;r=q.parentNode}q=y}c=-1===h||-1===k?null:{start:h,end:k}}else c=null}c=c||{start:0,end:0}}else c=null;Df={focusedElem:a,selectionRange:c};dd=!1;for(V=b;null!==V;)if(b=V,a=b.child,0!==(b.subtreeFlags&1028)&&null!==a)a.return=b,V=a;else for(;null!==V;){b=V;try{var n=b.alternate;if(0!==(b.flags&1024))switch(b.tag){case 0:case 11:case 15:break;\ncase 1:if(null!==n){var t=n.memoizedProps,J=n.memoizedState,x=b.stateNode,w=x.getSnapshotBeforeUpdate(b.elementType===b.type?t:Lg(b.type,t),J);x.__reactInternalSnapshotBeforeUpdate=w}break;case 3:var u=b.stateNode.containerInfo;1===u.nodeType?u.textContent=\"\":9===u.nodeType&&u.documentElement&&u.removeChild(u.documentElement);break;case 5:case 6:case 4:case 17:break;default:throw Error(p(163));}}catch(F){W(b,b.return,F)}a=b.sibling;if(null!==a){a.return=b.return;V=a;break}V=b.return}n=Oj;Oj=!1;return n}\nfunction Qj(a,b,c){var d=b.updateQueue;d=null!==d?d.lastEffect:null;if(null!==d){var e=d=d.next;do{if((e.tag&a)===a){var f=e.destroy;e.destroy=void 0;void 0!==f&&Nj(b,c,f)}e=e.next}while(e!==d)}}function Rj(a,b){b=b.updateQueue;b=null!==b?b.lastEffect:null;if(null!==b){var c=b=b.next;do{if((c.tag&a)===a){var d=c.create;c.destroy=d()}c=c.next}while(c!==b)}}function Sj(a){var b=a.ref;if(null!==b){var c=a.stateNode;switch(a.tag){case 5:a=c;break;default:a=c}\"function\"===typeof b?b(a):b.current=a}}\nfunction Tj(a){var b=a.alternate;null!==b&&(a.alternate=null,Tj(b));a.child=null;a.deletions=null;a.sibling=null;5===a.tag&&(b=a.stateNode,null!==b&&(delete b[Of],delete b[Pf],delete b[of],delete b[Qf],delete b[Rf]));a.stateNode=null;a.return=null;a.dependencies=null;a.memoizedProps=null;a.memoizedState=null;a.pendingProps=null;a.stateNode=null;a.updateQueue=null}function Uj(a){return 5===a.tag||3===a.tag||4===a.tag}\nfunction Vj(a){a:for(;;){for(;null===a.sibling;){if(null===a.return||Uj(a.return))return null;a=a.return}a.sibling.return=a.return;for(a=a.sibling;5!==a.tag&&6!==a.tag&&18!==a.tag;){if(a.flags&2)continue a;if(null===a.child||4===a.tag)continue a;else a.child.return=a,a=a.child}if(!(a.flags&2))return a.stateNode}}\nfunction Wj(a,b,c){var d=a.tag;if(5===d||6===d)a=a.stateNode,b?8===c.nodeType?c.parentNode.insertBefore(a,b):c.insertBefore(a,b):(8===c.nodeType?(b=c.parentNode,b.insertBefore(a,c)):(b=c,b.appendChild(a)),c=c._reactRootContainer,null!==c&&void 0!==c||null!==b.onclick||(b.onclick=Bf));else if(4!==d&&(a=a.child,null!==a))for(Wj(a,b,c),a=a.sibling;null!==a;)Wj(a,b,c),a=a.sibling}\nfunction Xj(a,b,c){var d=a.tag;if(5===d||6===d)a=a.stateNode,b?c.insertBefore(a,b):c.appendChild(a);else if(4!==d&&(a=a.child,null!==a))for(Xj(a,b,c),a=a.sibling;null!==a;)Xj(a,b,c),a=a.sibling}var X=null,Yj=!1;function Zj(a,b,c){for(c=c.child;null!==c;)ak(a,b,c),c=c.sibling}\nfunction ak(a,b,c){if(lc&&\"function\"===typeof lc.onCommitFiberUnmount)try{lc.onCommitFiberUnmount(kc,c)}catch(h){}switch(c.tag){case 5:U||Mj(c,b);case 6:var d=X,e=Yj;X=null;Zj(a,b,c);X=d;Yj=e;null!==X&&(Yj?(a=X,c=c.stateNode,8===a.nodeType?a.parentNode.removeChild(c):a.removeChild(c)):X.removeChild(c.stateNode));break;case 18:null!==X&&(Yj?(a=X,c=c.stateNode,8===a.nodeType?Kf(a.parentNode,c):1===a.nodeType&&Kf(a,c),bd(a)):Kf(X,c.stateNode));break;case 4:d=X;e=Yj;X=c.stateNode.containerInfo;Yj=!0;\nZj(a,b,c);X=d;Yj=e;break;case 0:case 11:case 14:case 15:if(!U&&(d=c.updateQueue,null!==d&&(d=d.lastEffect,null!==d))){e=d=d.next;do{var f=e,g=f.destroy;f=f.tag;void 0!==g&&(0!==(f&2)?Nj(c,b,g):0!==(f&4)&&Nj(c,b,g));e=e.next}while(e!==d)}Zj(a,b,c);break;case 1:if(!U&&(Mj(c,b),d=c.stateNode,\"function\"===typeof d.componentWillUnmount))try{d.props=c.memoizedProps,d.state=c.memoizedState,d.componentWillUnmount()}catch(h){W(c,b,h)}Zj(a,b,c);break;case 21:Zj(a,b,c);break;case 22:c.mode&1?(U=(d=U)||null!==\nc.memoizedState,Zj(a,b,c),U=d):Zj(a,b,c);break;default:Zj(a,b,c)}}function bk(a){var b=a.updateQueue;if(null!==b){a.updateQueue=null;var c=a.stateNode;null===c&&(c=a.stateNode=new Lj);b.forEach(function(b){var d=ck.bind(null,a,b);c.has(b)||(c.add(b),b.then(d,d))})}}\nfunction dk(a,b){var c=b.deletions;if(null!==c)for(var d=0;d<c.length;d++){var e=c[d];try{var f=a,g=b,h=g;a:for(;null!==h;){switch(h.tag){case 5:X=h.stateNode;Yj=!1;break a;case 3:X=h.stateNode.containerInfo;Yj=!0;break a;case 4:X=h.stateNode.containerInfo;Yj=!0;break a}h=h.return}if(null===X)throw Error(p(160));ak(f,g,e);X=null;Yj=!1;var k=e.alternate;null!==k&&(k.return=null);e.return=null}catch(l){W(e,b,l)}}if(b.subtreeFlags&12854)for(b=b.child;null!==b;)ek(b,a),b=b.sibling}\nfunction ek(a,b){var c=a.alternate,d=a.flags;switch(a.tag){case 0:case 11:case 14:case 15:dk(b,a);fk(a);if(d&4){try{Qj(3,a,a.return),Rj(3,a)}catch(t){W(a,a.return,t)}try{Qj(5,a,a.return)}catch(t){W(a,a.return,t)}}break;case 1:dk(b,a);fk(a);d&512&&null!==c&&Mj(c,c.return);break;case 5:dk(b,a);fk(a);d&512&&null!==c&&Mj(c,c.return);if(a.flags&32){var e=a.stateNode;try{ob(e,\"\")}catch(t){W(a,a.return,t)}}if(d&4&&(e=a.stateNode,null!=e)){var f=a.memoizedProps,g=null!==c?c.memoizedProps:f,h=a.type,k=a.updateQueue;\na.updateQueue=null;if(null!==k)try{\"input\"===h&&\"radio\"===f.type&&null!=f.name&&ab(e,f);vb(h,g);var l=vb(h,f);for(g=0;g<k.length;g+=2){var m=k[g],q=k[g+1];\"style\"===m?sb(e,q):\"dangerouslySetInnerHTML\"===m?nb(e,q):\"children\"===m?ob(e,q):ta(e,m,q,l)}switch(h){case \"input\":bb(e,f);break;case \"textarea\":ib(e,f);break;case \"select\":var r=e._wrapperState.wasMultiple;e._wrapperState.wasMultiple=!!f.multiple;var y=f.value;null!=y?fb(e,!!f.multiple,y,!1):r!==!!f.multiple&&(null!=f.defaultValue?fb(e,!!f.multiple,\nf.defaultValue,!0):fb(e,!!f.multiple,f.multiple?[]:\"\",!1))}e[Pf]=f}catch(t){W(a,a.return,t)}}break;case 6:dk(b,a);fk(a);if(d&4){if(null===a.stateNode)throw Error(p(162));e=a.stateNode;f=a.memoizedProps;try{e.nodeValue=f}catch(t){W(a,a.return,t)}}break;case 3:dk(b,a);fk(a);if(d&4&&null!==c&&c.memoizedState.isDehydrated)try{bd(b.containerInfo)}catch(t){W(a,a.return,t)}break;case 4:dk(b,a);fk(a);break;case 13:dk(b,a);fk(a);e=a.child;e.flags&8192&&(f=null!==e.memoizedState,e.stateNode.isHidden=f,!f||\nnull!==e.alternate&&null!==e.alternate.memoizedState||(gk=B()));d&4&&bk(a);break;case 22:m=null!==c&&null!==c.memoizedState;a.mode&1?(U=(l=U)||m,dk(b,a),U=l):dk(b,a);fk(a);if(d&8192){l=null!==a.memoizedState;if((a.stateNode.isHidden=l)&&!m&&0!==(a.mode&1))for(V=a,m=a.child;null!==m;){for(q=V=m;null!==V;){r=V;y=r.child;switch(r.tag){case 0:case 11:case 14:case 15:Qj(4,r,r.return);break;case 1:Mj(r,r.return);var n=r.stateNode;if(\"function\"===typeof n.componentWillUnmount){d=r;c=r.return;try{b=d,n.props=\nb.memoizedProps,n.state=b.memoizedState,n.componentWillUnmount()}catch(t){W(d,c,t)}}break;case 5:Mj(r,r.return);break;case 22:if(null!==r.memoizedState){hk(q);continue}}null!==y?(y.return=r,V=y):hk(q)}m=m.sibling}a:for(m=null,q=a;;){if(5===q.tag){if(null===m){m=q;try{e=q.stateNode,l?(f=e.style,\"function\"===typeof f.setProperty?f.setProperty(\"display\",\"none\",\"important\"):f.display=\"none\"):(h=q.stateNode,k=q.memoizedProps.style,g=void 0!==k&&null!==k&&k.hasOwnProperty(\"display\")?k.display:null,h.style.display=\nrb(\"display\",g))}catch(t){W(a,a.return,t)}}}else if(6===q.tag){if(null===m)try{q.stateNode.nodeValue=l?\"\":q.memoizedProps}catch(t){W(a,a.return,t)}}else if((22!==q.tag&&23!==q.tag||null===q.memoizedState||q===a)&&null!==q.child){q.child.return=q;q=q.child;continue}if(q===a)break a;for(;null===q.sibling;){if(null===q.return||q.return===a)break a;m===q&&(m=null);q=q.return}m===q&&(m=null);q.sibling.return=q.return;q=q.sibling}}break;case 19:dk(b,a);fk(a);d&4&&bk(a);break;case 21:break;default:dk(b,\na),fk(a)}}function fk(a){var b=a.flags;if(b&2){try{a:{for(var c=a.return;null!==c;){if(Uj(c)){var d=c;break a}c=c.return}throw Error(p(160));}switch(d.tag){case 5:var e=d.stateNode;d.flags&32&&(ob(e,\"\"),d.flags&=-33);var f=Vj(a);Xj(a,f,e);break;case 3:case 4:var g=d.stateNode.containerInfo,h=Vj(a);Wj(a,h,g);break;default:throw Error(p(161));}}catch(k){W(a,a.return,k)}a.flags&=-3}b&4096&&(a.flags&=-4097)}function ik(a,b,c){V=a;jk(a,b,c)}\nfunction jk(a,b,c){for(var d=0!==(a.mode&1);null!==V;){var e=V,f=e.child;if(22===e.tag&&d){var g=null!==e.memoizedState||Kj;if(!g){var h=e.alternate,k=null!==h&&null!==h.memoizedState||U;h=Kj;var l=U;Kj=g;if((U=k)&&!l)for(V=e;null!==V;)g=V,k=g.child,22===g.tag&&null!==g.memoizedState?kk(e):null!==k?(k.return=g,V=k):kk(e);for(;null!==f;)V=f,jk(f,b,c),f=f.sibling;V=e;Kj=h;U=l}lk(a,b,c)}else 0!==(e.subtreeFlags&8772)&&null!==f?(f.return=e,V=f):lk(a,b,c)}}\nfunction lk(a){for(;null!==V;){var b=V;if(0!==(b.flags&8772)){var c=b.alternate;try{if(0!==(b.flags&8772))switch(b.tag){case 0:case 11:case 15:U||Rj(5,b);break;case 1:var d=b.stateNode;if(b.flags&4&&!U)if(null===c)d.componentDidMount();else{var e=b.elementType===b.type?c.memoizedProps:Lg(b.type,c.memoizedProps);d.componentDidUpdate(e,c.memoizedState,d.__reactInternalSnapshotBeforeUpdate)}var f=b.updateQueue;null!==f&&ih(b,f,d);break;case 3:var g=b.updateQueue;if(null!==g){c=null;if(null!==b.child)switch(b.child.tag){case 5:c=\nb.child.stateNode;break;case 1:c=b.child.stateNode}ih(b,g,c)}break;case 5:var h=b.stateNode;if(null===c&&b.flags&4){c=h;var k=b.memoizedProps;switch(b.type){case \"button\":case \"input\":case \"select\":case \"textarea\":k.autoFocus&&c.focus();break;case \"img\":k.src&&(c.src=k.src)}}break;case 6:break;case 4:break;case 12:break;case 13:if(null===b.memoizedState){var l=b.alternate;if(null!==l){var m=l.memoizedState;if(null!==m){var q=m.dehydrated;null!==q&&bd(q)}}}break;case 19:case 17:case 21:case 22:case 23:case 25:break;\ndefault:throw Error(p(163));}U||b.flags&512&&Sj(b)}catch(r){W(b,b.return,r)}}if(b===a){V=null;break}c=b.sibling;if(null!==c){c.return=b.return;V=c;break}V=b.return}}function hk(a){for(;null!==V;){var b=V;if(b===a){V=null;break}var c=b.sibling;if(null!==c){c.return=b.return;V=c;break}V=b.return}}\nfunction kk(a){for(;null!==V;){var b=V;try{switch(b.tag){case 0:case 11:case 15:var c=b.return;try{Rj(4,b)}catch(k){W(b,c,k)}break;case 1:var d=b.stateNode;if(\"function\"===typeof d.componentDidMount){var e=b.return;try{d.componentDidMount()}catch(k){W(b,e,k)}}var f=b.return;try{Sj(b)}catch(k){W(b,f,k)}break;case 5:var g=b.return;try{Sj(b)}catch(k){W(b,g,k)}}}catch(k){W(b,b.return,k)}if(b===a){V=null;break}var h=b.sibling;if(null!==h){h.return=b.return;V=h;break}V=b.return}}\nvar mk=Math.ceil,nk=ua.ReactCurrentDispatcher,ok=ua.ReactCurrentOwner,pk=ua.ReactCurrentBatchConfig,K=0,R=null,Y=null,Z=0,gj=0,fj=Uf(0),T=0,qk=null,hh=0,rk=0,sk=0,tk=null,uk=null,gk=0,Hj=Infinity,vk=null,Pi=!1,Qi=null,Si=null,wk=!1,xk=null,yk=0,zk=0,Ak=null,Bk=-1,Ck=0;function L(){return 0!==(K&6)?B():-1!==Bk?Bk:Bk=B()}\nfunction lh(a){if(0===(a.mode&1))return 1;if(0!==(K&2)&&0!==Z)return Z&-Z;if(null!==Kg.transition)return 0===Ck&&(Ck=yc()),Ck;a=C;if(0!==a)return a;a=window.event;a=void 0===a?16:jd(a.type);return a}function mh(a,b,c,d){if(50<zk)throw zk=0,Ak=null,Error(p(185));Ac(a,c,d);if(0===(K&2)||a!==R)a===R&&(0===(K&2)&&(rk|=c),4===T&&Dk(a,Z)),Ek(a,d),1===c&&0===K&&0===(b.mode&1)&&(Hj=B()+500,fg&&jg())}\nfunction Ek(a,b){var c=a.callbackNode;wc(a,b);var d=uc(a,a===R?Z:0);if(0===d)null!==c&&bc(c),a.callbackNode=null,a.callbackPriority=0;else if(b=d&-d,a.callbackPriority!==b){null!=c&&bc(c);if(1===b)0===a.tag?ig(Fk.bind(null,a)):hg(Fk.bind(null,a)),Jf(function(){0===(K&6)&&jg()}),c=null;else{switch(Dc(d)){case 1:c=fc;break;case 4:c=gc;break;case 16:c=hc;break;case 536870912:c=jc;break;default:c=hc}c=Gk(c,Hk.bind(null,a))}a.callbackPriority=b;a.callbackNode=c}}\nfunction Hk(a,b){Bk=-1;Ck=0;if(0!==(K&6))throw Error(p(327));var c=a.callbackNode;if(Ik()&&a.callbackNode!==c)return null;var d=uc(a,a===R?Z:0);if(0===d)return null;if(0!==(d&30)||0!==(d&a.expiredLanes)||b)b=Jk(a,d);else{b=d;var e=K;K|=2;var f=Kk();if(R!==a||Z!==b)vk=null,Hj=B()+500,Lk(a,b);do try{Mk();break}catch(h){Nk(a,h)}while(1);Qg();nk.current=f;K=e;null!==Y?b=0:(R=null,Z=0,b=T)}if(0!==b){2===b&&(e=xc(a),0!==e&&(d=e,b=Ok(a,e)));if(1===b)throw c=qk,Lk(a,0),Dk(a,d),Ek(a,B()),c;if(6===b)Dk(a,d);\nelse{e=a.current.alternate;if(0===(d&30)&&!Pk(e)&&(b=Jk(a,d),2===b&&(f=xc(a),0!==f&&(d=f,b=Ok(a,f))),1===b))throw c=qk,Lk(a,0),Dk(a,d),Ek(a,B()),c;a.finishedWork=e;a.finishedLanes=d;switch(b){case 0:case 1:throw Error(p(345));case 2:Qk(a,uk,vk);break;case 3:Dk(a,d);if((d&130023424)===d&&(b=gk+500-B(),10<b)){if(0!==uc(a,0))break;e=a.suspendedLanes;if((e&d)!==d){L();a.pingedLanes|=a.suspendedLanes&e;break}a.timeoutHandle=Ff(Qk.bind(null,a,uk,vk),b);break}Qk(a,uk,vk);break;case 4:Dk(a,d);if((d&4194240)===\nd)break;b=a.eventTimes;for(e=-1;0<d;){var g=31-oc(d);f=1<<g;g=b[g];g>e&&(e=g);d&=~f}d=e;d=B()-d;d=(120>d?120:480>d?480:1080>d?1080:1920>d?1920:3E3>d?3E3:4320>d?4320:1960*mk(d/1960))-d;if(10<d){a.timeoutHandle=Ff(Qk.bind(null,a,uk,vk),d);break}Qk(a,uk,vk);break;case 5:Qk(a,uk,vk);break;default:throw Error(p(329));}}}Ek(a,B());return a.callbackNode===c?Hk.bind(null,a):null}\nfunction Ok(a,b){var c=tk;a.current.memoizedState.isDehydrated&&(Lk(a,b).flags|=256);a=Jk(a,b);2!==a&&(b=uk,uk=c,null!==b&&Gj(b));return a}function Gj(a){null===uk?uk=a:uk.push.apply(uk,a)}\nfunction Pk(a){for(var b=a;;){if(b.flags&16384){var c=b.updateQueue;if(null!==c&&(c=c.stores,null!==c))for(var d=0;d<c.length;d++){var e=c[d],f=e.getSnapshot;e=e.value;try{if(!He(f(),e))return!1}catch(g){return!1}}}c=b.child;if(b.subtreeFlags&16384&&null!==c)c.return=b,b=c;else{if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return!0;b=b.return}b.sibling.return=b.return;b=b.sibling}}return!0}\nfunction Dk(a,b){b&=~sk;b&=~rk;a.suspendedLanes|=b;a.pingedLanes&=~b;for(a=a.expirationTimes;0<b;){var c=31-oc(b),d=1<<c;a[c]=-1;b&=~d}}function Fk(a){if(0!==(K&6))throw Error(p(327));Ik();var b=uc(a,0);if(0===(b&1))return Ek(a,B()),null;var c=Jk(a,b);if(0!==a.tag&&2===c){var d=xc(a);0!==d&&(b=d,c=Ok(a,d))}if(1===c)throw c=qk,Lk(a,0),Dk(a,b),Ek(a,B()),c;if(6===c)throw Error(p(345));a.finishedWork=a.current.alternate;a.finishedLanes=b;Qk(a,uk,vk);Ek(a,B());return null}\nfunction Rk(a,b){var c=K;K|=1;try{return a(b)}finally{K=c,0===K&&(Hj=B()+500,fg&&jg())}}function Sk(a){null!==xk&&0===xk.tag&&0===(K&6)&&Ik();var b=K;K|=1;var c=pk.transition,d=C;try{if(pk.transition=null,C=1,a)return a()}finally{C=d,pk.transition=c,K=b,0===(K&6)&&jg()}}function Ij(){gj=fj.current;E(fj)}\nfunction Lk(a,b){a.finishedWork=null;a.finishedLanes=0;var c=a.timeoutHandle;-1!==c&&(a.timeoutHandle=-1,Gf(c));if(null!==Y)for(c=Y.return;null!==c;){var d=c;wg(d);switch(d.tag){case 1:d=d.type.childContextTypes;null!==d&&void 0!==d&&$f();break;case 3:Jh();E(Wf);E(H);Oh();break;case 5:Lh(d);break;case 4:Jh();break;case 13:E(M);break;case 19:E(M);break;case 10:Rg(d.type._context);break;case 22:case 23:Ij()}c=c.return}R=a;Y=a=wh(a.current,null);Z=gj=b;T=0;qk=null;sk=rk=hh=0;uk=tk=null;if(null!==Wg){for(b=\n0;b<Wg.length;b++)if(c=Wg[b],d=c.interleaved,null!==d){c.interleaved=null;var e=d.next,f=c.pending;if(null!==f){var g=f.next;f.next=e;d.next=g}c.pending=d}Wg=null}return a}\nfunction Nk(a,b){do{var c=Y;try{Qg();Ph.current=ai;if(Sh){for(var d=N.memoizedState;null!==d;){var e=d.queue;null!==e&&(e.pending=null);d=d.next}Sh=!1}Rh=0;P=O=N=null;Th=!1;Uh=0;ok.current=null;if(null===c||null===c.return){T=1;qk=b;Y=null;break}a:{var f=a,g=c.return,h=c,k=b;b=Z;h.flags|=32768;if(null!==k&&\"object\"===typeof k&&\"function\"===typeof k.then){var l=k,m=h,q=m.tag;if(0===(m.mode&1)&&(0===q||11===q||15===q)){var r=m.alternate;r?(m.updateQueue=r.updateQueue,m.memoizedState=r.memoizedState,\nm.lanes=r.lanes):(m.updateQueue=null,m.memoizedState=null)}var y=Vi(g);if(null!==y){y.flags&=-257;Wi(y,g,h,f,b);y.mode&1&&Ti(f,l,b);b=y;k=l;var n=b.updateQueue;if(null===n){var t=new Set;t.add(k);b.updateQueue=t}else n.add(k);break a}else{if(0===(b&1)){Ti(f,l,b);uj();break a}k=Error(p(426))}}else if(I&&h.mode&1){var J=Vi(g);if(null!==J){0===(J.flags&65536)&&(J.flags|=256);Wi(J,g,h,f,b);Jg(Ki(k,h));break a}}f=k=Ki(k,h);4!==T&&(T=2);null===tk?tk=[f]:tk.push(f);f=g;do{switch(f.tag){case 3:f.flags|=65536;\nb&=-b;f.lanes|=b;var x=Oi(f,k,b);fh(f,x);break a;case 1:h=k;var w=f.type,u=f.stateNode;if(0===(f.flags&128)&&(\"function\"===typeof w.getDerivedStateFromError||null!==u&&\"function\"===typeof u.componentDidCatch&&(null===Si||!Si.has(u)))){f.flags|=65536;b&=-b;f.lanes|=b;var F=Ri(f,h,b);fh(f,F);break a}}f=f.return}while(null!==f)}Tk(c)}catch(na){b=na;Y===c&&null!==c&&(Y=c=c.return);continue}break}while(1)}function Kk(){var a=nk.current;nk.current=ai;return null===a?ai:a}\nfunction uj(){if(0===T||3===T||2===T)T=4;null===R||0===(hh&268435455)&&0===(rk&268435455)||Dk(R,Z)}function Jk(a,b){var c=K;K|=2;var d=Kk();if(R!==a||Z!==b)vk=null,Lk(a,b);do try{Uk();break}catch(e){Nk(a,e)}while(1);Qg();K=c;nk.current=d;if(null!==Y)throw Error(p(261));R=null;Z=0;return T}function Uk(){for(;null!==Y;)Vk(Y)}function Mk(){for(;null!==Y&&!cc();)Vk(Y)}function Vk(a){var b=Wk(a.alternate,a,gj);a.memoizedProps=a.pendingProps;null===b?Tk(a):Y=b;ok.current=null}\nfunction Tk(a){var b=a;do{var c=b.alternate;a=b.return;if(0===(b.flags&32768)){if(c=Fj(c,b,gj),null!==c){Y=c;return}}else{c=Jj(c,b);if(null!==c){c.flags&=32767;Y=c;return}if(null!==a)a.flags|=32768,a.subtreeFlags=0,a.deletions=null;else{T=6;Y=null;return}}b=b.sibling;if(null!==b){Y=b;return}Y=b=a}while(null!==b);0===T&&(T=5)}function Qk(a,b,c){var d=C,e=pk.transition;try{pk.transition=null,C=1,Xk(a,b,c,d)}finally{pk.transition=e,C=d}return null}\nfunction Xk(a,b,c,d){do Ik();while(null!==xk);if(0!==(K&6))throw Error(p(327));c=a.finishedWork;var e=a.finishedLanes;if(null===c)return null;a.finishedWork=null;a.finishedLanes=0;if(c===a.current)throw Error(p(177));a.callbackNode=null;a.callbackPriority=0;var f=c.lanes|c.childLanes;Bc(a,f);a===R&&(Y=R=null,Z=0);0===(c.subtreeFlags&2064)&&0===(c.flags&2064)||wk||(wk=!0,Gk(hc,function(){Ik();return null}));f=0!==(c.flags&15990);if(0!==(c.subtreeFlags&15990)||f){f=pk.transition;pk.transition=null;\nvar g=C;C=1;var h=K;K|=4;ok.current=null;Pj(a,c);ek(c,a);Oe(Df);dd=!!Cf;Df=Cf=null;a.current=c;ik(c,a,e);dc();K=h;C=g;pk.transition=f}else a.current=c;wk&&(wk=!1,xk=a,yk=e);f=a.pendingLanes;0===f&&(Si=null);mc(c.stateNode,d);Ek(a,B());if(null!==b)for(d=a.onRecoverableError,c=0;c<b.length;c++)e=b[c],d(e.value,{componentStack:e.stack,digest:e.digest});if(Pi)throw Pi=!1,a=Qi,Qi=null,a;0!==(yk&1)&&0!==a.tag&&Ik();f=a.pendingLanes;0!==(f&1)?a===Ak?zk++:(zk=0,Ak=a):zk=0;jg();return null}\nfunction Ik(){if(null!==xk){var a=Dc(yk),b=pk.transition,c=C;try{pk.transition=null;C=16>a?16:a;if(null===xk)var d=!1;else{a=xk;xk=null;yk=0;if(0!==(K&6))throw Error(p(331));var e=K;K|=4;for(V=a.current;null!==V;){var f=V,g=f.child;if(0!==(V.flags&16)){var h=f.deletions;if(null!==h){for(var k=0;k<h.length;k++){var l=h[k];for(V=l;null!==V;){var m=V;switch(m.tag){case 0:case 11:case 15:Qj(8,m,f)}var q=m.child;if(null!==q)q.return=m,V=q;else for(;null!==V;){m=V;var r=m.sibling,y=m.return;Tj(m);if(m===\nl){V=null;break}if(null!==r){r.return=y;V=r;break}V=y}}}var n=f.alternate;if(null!==n){var t=n.child;if(null!==t){n.child=null;do{var J=t.sibling;t.sibling=null;t=J}while(null!==t)}}V=f}}if(0!==(f.subtreeFlags&2064)&&null!==g)g.return=f,V=g;else b:for(;null!==V;){f=V;if(0!==(f.flags&2048))switch(f.tag){case 0:case 11:case 15:Qj(9,f,f.return)}var x=f.sibling;if(null!==x){x.return=f.return;V=x;break b}V=f.return}}var w=a.current;for(V=w;null!==V;){g=V;var u=g.child;if(0!==(g.subtreeFlags&2064)&&null!==\nu)u.return=g,V=u;else b:for(g=w;null!==V;){h=V;if(0!==(h.flags&2048))try{switch(h.tag){case 0:case 11:case 15:Rj(9,h)}}catch(na){W(h,h.return,na)}if(h===g){V=null;break b}var F=h.sibling;if(null!==F){F.return=h.return;V=F;break b}V=h.return}}K=e;jg();if(lc&&\"function\"===typeof lc.onPostCommitFiberRoot)try{lc.onPostCommitFiberRoot(kc,a)}catch(na){}d=!0}return d}finally{C=c,pk.transition=b}}return!1}function Yk(a,b,c){b=Ki(c,b);b=Oi(a,b,1);a=dh(a,b,1);b=L();null!==a&&(Ac(a,1,b),Ek(a,b))}\nfunction W(a,b,c){if(3===a.tag)Yk(a,a,c);else for(;null!==b;){if(3===b.tag){Yk(b,a,c);break}else if(1===b.tag){var d=b.stateNode;if(\"function\"===typeof b.type.getDerivedStateFromError||\"function\"===typeof d.componentDidCatch&&(null===Si||!Si.has(d))){a=Ki(c,a);a=Ri(b,a,1);b=dh(b,a,1);a=L();null!==b&&(Ac(b,1,a),Ek(b,a));break}}b=b.return}}\nfunction Ui(a,b,c){var d=a.pingCache;null!==d&&d.delete(b);b=L();a.pingedLanes|=a.suspendedLanes&c;R===a&&(Z&c)===c&&(4===T||3===T&&(Z&130023424)===Z&&500>B()-gk?Lk(a,0):sk|=c);Ek(a,b)}function Zk(a,b){0===b&&(0===(a.mode&1)?b=1:(b=sc,sc<<=1,0===(sc&130023424)&&(sc=4194304)));var c=L();a=Zg(a,b);null!==a&&(Ac(a,b,c),Ek(a,c))}function vj(a){var b=a.memoizedState,c=0;null!==b&&(c=b.retryLane);Zk(a,c)}\nfunction ck(a,b){var c=0;switch(a.tag){case 13:var d=a.stateNode;var e=a.memoizedState;null!==e&&(c=e.retryLane);break;case 19:d=a.stateNode;break;default:throw Error(p(314));}null!==d&&d.delete(b);Zk(a,c)}var Wk;\nWk=function(a,b,c){if(null!==a)if(a.memoizedProps!==b.pendingProps||Wf.current)Ug=!0;else{if(0===(a.lanes&c)&&0===(b.flags&128))return Ug=!1,zj(a,b,c);Ug=0!==(a.flags&131072)?!0:!1}else Ug=!1,I&&0!==(b.flags&1048576)&&ug(b,ng,b.index);b.lanes=0;switch(b.tag){case 2:var d=b.type;jj(a,b);a=b.pendingProps;var e=Yf(b,H.current);Tg(b,c);e=Xh(null,b,d,a,e,c);var f=bi();b.flags|=1;\"object\"===typeof e&&null!==e&&\"function\"===typeof e.render&&void 0===e.$$typeof?(b.tag=1,b.memoizedState=null,b.updateQueue=\nnull,Zf(d)?(f=!0,cg(b)):f=!1,b.memoizedState=null!==e.state&&void 0!==e.state?e.state:null,ah(b),e.updater=nh,b.stateNode=e,e._reactInternals=b,rh(b,d,a,c),b=kj(null,b,d,!0,f,c)):(b.tag=0,I&&f&&vg(b),Yi(null,b,e,c),b=b.child);return b;case 16:d=b.elementType;a:{jj(a,b);a=b.pendingProps;e=d._init;d=e(d._payload);b.type=d;e=b.tag=$k(d);a=Lg(d,a);switch(e){case 0:b=dj(null,b,d,a,c);break a;case 1:b=ij(null,b,d,a,c);break a;case 11:b=Zi(null,b,d,a,c);break a;case 14:b=aj(null,b,d,Lg(d.type,a),c);break a}throw Error(p(306,\nd,\"\"));}return b;case 0:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Lg(d,e),dj(a,b,d,e,c);case 1:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Lg(d,e),ij(a,b,d,e,c);case 3:a:{lj(b);if(null===a)throw Error(p(387));d=b.pendingProps;f=b.memoizedState;e=f.element;bh(a,b);gh(b,d,null,c);var g=b.memoizedState;d=g.element;if(f.isDehydrated)if(f={element:d,isDehydrated:!1,cache:g.cache,pendingSuspenseBoundaries:g.pendingSuspenseBoundaries,transitions:g.transitions},b.updateQueue.baseState=\nf,b.memoizedState=f,b.flags&256){e=Ki(Error(p(423)),b);b=mj(a,b,d,c,e);break a}else if(d!==e){e=Ki(Error(p(424)),b);b=mj(a,b,d,c,e);break a}else for(yg=Lf(b.stateNode.containerInfo.firstChild),xg=b,I=!0,zg=null,c=Ch(b,null,d,c),b.child=c;c;)c.flags=c.flags&-3|4096,c=c.sibling;else{Ig();if(d===e){b=$i(a,b,c);break a}Yi(a,b,d,c)}b=b.child}return b;case 5:return Kh(b),null===a&&Eg(b),d=b.type,e=b.pendingProps,f=null!==a?a.memoizedProps:null,g=e.children,Ef(d,e)?g=null:null!==f&&Ef(d,f)&&(b.flags|=32),\nhj(a,b),Yi(a,b,g,c),b.child;case 6:return null===a&&Eg(b),null;case 13:return pj(a,b,c);case 4:return Ih(b,b.stateNode.containerInfo),d=b.pendingProps,null===a?b.child=Bh(b,null,d,c):Yi(a,b,d,c),b.child;case 11:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Lg(d,e),Zi(a,b,d,e,c);case 7:return Yi(a,b,b.pendingProps,c),b.child;case 8:return Yi(a,b,b.pendingProps.children,c),b.child;case 12:return Yi(a,b,b.pendingProps.children,c),b.child;case 10:a:{d=b.type._context;e=b.pendingProps;f=b.memoizedProps;\ng=e.value;G(Mg,d._currentValue);d._currentValue=g;if(null!==f)if(He(f.value,g)){if(f.children===e.children&&!Wf.current){b=$i(a,b,c);break a}}else for(f=b.child,null!==f&&(f.return=b);null!==f;){var h=f.dependencies;if(null!==h){g=f.child;for(var k=h.firstContext;null!==k;){if(k.context===d){if(1===f.tag){k=ch(-1,c&-c);k.tag=2;var l=f.updateQueue;if(null!==l){l=l.shared;var m=l.pending;null===m?k.next=k:(k.next=m.next,m.next=k);l.pending=k}}f.lanes|=c;k=f.alternate;null!==k&&(k.lanes|=c);Sg(f.return,\nc,b);h.lanes|=c;break}k=k.next}}else if(10===f.tag)g=f.type===b.type?null:f.child;else if(18===f.tag){g=f.return;if(null===g)throw Error(p(341));g.lanes|=c;h=g.alternate;null!==h&&(h.lanes|=c);Sg(g,c,b);g=f.sibling}else g=f.child;if(null!==g)g.return=f;else for(g=f;null!==g;){if(g===b){g=null;break}f=g.sibling;if(null!==f){f.return=g.return;g=f;break}g=g.return}f=g}Yi(a,b,e.children,c);b=b.child}return b;case 9:return e=b.type,d=b.pendingProps.children,Tg(b,c),e=Vg(e),d=d(e),b.flags|=1,Yi(a,b,d,c),\nb.child;case 14:return d=b.type,e=Lg(d,b.pendingProps),e=Lg(d.type,e),aj(a,b,d,e,c);case 15:return cj(a,b,b.type,b.pendingProps,c);case 17:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Lg(d,e),jj(a,b),b.tag=1,Zf(d)?(a=!0,cg(b)):a=!1,Tg(b,c),ph(b,d,e),rh(b,d,e,c),kj(null,b,d,!0,a,c);case 19:return yj(a,b,c);case 22:return ej(a,b,c)}throw Error(p(156,b.tag));};function Gk(a,b){return ac(a,b)}\nfunction al(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null;this.index=0;this.ref=null;this.pendingProps=b;this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.subtreeFlags=this.flags=0;this.deletions=null;this.childLanes=this.lanes=0;this.alternate=null}function Bg(a,b,c,d){return new al(a,b,c,d)}function bj(a){a=a.prototype;return!(!a||!a.isReactComponent)}\nfunction $k(a){if(\"function\"===typeof a)return bj(a)?1:0;if(void 0!==a&&null!==a){a=a.$$typeof;if(a===Da)return 11;if(a===Ga)return 14}return 2}\nfunction wh(a,b){var c=a.alternate;null===c?(c=Bg(a.tag,b,a.key,a.mode),c.elementType=a.elementType,c.type=a.type,c.stateNode=a.stateNode,c.alternate=a,a.alternate=c):(c.pendingProps=b,c.type=a.type,c.flags=0,c.subtreeFlags=0,c.deletions=null);c.flags=a.flags&14680064;c.childLanes=a.childLanes;c.lanes=a.lanes;c.child=a.child;c.memoizedProps=a.memoizedProps;c.memoizedState=a.memoizedState;c.updateQueue=a.updateQueue;b=a.dependencies;c.dependencies=null===b?null:{lanes:b.lanes,firstContext:b.firstContext};\nc.sibling=a.sibling;c.index=a.index;c.ref=a.ref;return c}\nfunction yh(a,b,c,d,e,f){var g=2;d=a;if(\"function\"===typeof a)bj(a)&&(g=1);else if(\"string\"===typeof a)g=5;else a:switch(a){case ya:return Ah(c.children,e,f,b);case za:g=8;e|=8;break;case Aa:return a=Bg(12,c,b,e|2),a.elementType=Aa,a.lanes=f,a;case Ea:return a=Bg(13,c,b,e),a.elementType=Ea,a.lanes=f,a;case Fa:return a=Bg(19,c,b,e),a.elementType=Fa,a.lanes=f,a;case Ia:return qj(c,e,f,b);default:if(\"object\"===typeof a&&null!==a)switch(a.$$typeof){case Ba:g=10;break a;case Ca:g=9;break a;case Da:g=11;\nbreak a;case Ga:g=14;break a;case Ha:g=16;d=null;break a}throw Error(p(130,null==a?a:typeof a,\"\"));}b=Bg(g,c,b,e);b.elementType=a;b.type=d;b.lanes=f;return b}function Ah(a,b,c,d){a=Bg(7,a,d,b);a.lanes=c;return a}function qj(a,b,c,d){a=Bg(22,a,d,b);a.elementType=Ia;a.lanes=c;a.stateNode={isHidden:!1};return a}function xh(a,b,c){a=Bg(6,a,null,b);a.lanes=c;return a}\nfunction zh(a,b,c){b=Bg(4,null!==a.children?a.children:[],a.key,b);b.lanes=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}\nfunction bl(a,b,c,d,e){this.tag=b;this.containerInfo=a;this.finishedWork=this.pingCache=this.current=this.pendingChildren=null;this.timeoutHandle=-1;this.callbackNode=this.pendingContext=this.context=null;this.callbackPriority=0;this.eventTimes=zc(0);this.expirationTimes=zc(-1);this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0;this.entanglements=zc(0);this.identifierPrefix=d;this.onRecoverableError=e;this.mutableSourceEagerHydrationData=\nnull}function cl(a,b,c,d,e,f,g,h,k){a=new bl(a,b,c,h,k);1===b?(b=1,!0===f&&(b|=8)):b=0;f=Bg(3,null,null,b);a.current=f;f.stateNode=a;f.memoizedState={element:d,isDehydrated:c,cache:null,transitions:null,pendingSuspenseBoundaries:null};ah(f);return a}function dl(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:wa,key:null==d?null:\"\"+d,children:a,containerInfo:b,implementation:c}}\nfunction el(a){if(!a)return Vf;a=a._reactInternals;a:{if(Vb(a)!==a||1!==a.tag)throw Error(p(170));var b=a;do{switch(b.tag){case 3:b=b.stateNode.context;break a;case 1:if(Zf(b.type)){b=b.stateNode.__reactInternalMemoizedMergedChildContext;break a}}b=b.return}while(null!==b);throw Error(p(171));}if(1===a.tag){var c=a.type;if(Zf(c))return bg(a,c,b)}return b}\nfunction fl(a,b,c,d,e,f,g,h,k){a=cl(c,d,!0,a,e,f,g,h,k);a.context=el(null);c=a.current;d=L();e=lh(c);f=ch(d,e);f.callback=void 0!==b&&null!==b?b:null;dh(c,f,e);a.current.lanes=e;Ac(a,e,d);Ek(a,d);return a}function gl(a,b,c,d){var e=b.current,f=L(),g=lh(e);c=el(c);null===b.context?b.context=c:b.pendingContext=c;b=ch(f,g);b.payload={element:a};d=void 0===d?null:d;null!==d&&(b.callback=d);a=dh(e,b,g);null!==a&&(mh(a,e,g,f),eh(a,e,g));return g}\nfunction hl(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}function il(a,b){a=a.memoizedState;if(null!==a&&null!==a.dehydrated){var c=a.retryLane;a.retryLane=0!==c&&c<b?c:b}}function jl(a,b){il(a,b);(a=a.alternate)&&il(a,b)}function kl(){return null}var ll=\"function\"===typeof reportError?reportError:function(a){console.error(a)};function ml(a){this._internalRoot=a}\nnl.prototype.render=ml.prototype.render=function(a){var b=this._internalRoot;if(null===b)throw Error(p(409));gl(a,b,null,null)};nl.prototype.unmount=ml.prototype.unmount=function(){var a=this._internalRoot;if(null!==a){this._internalRoot=null;var b=a.containerInfo;Sk(function(){gl(null,a,null,null)});b[uf]=null}};function nl(a){this._internalRoot=a}\nnl.prototype.unstable_scheduleHydration=function(a){if(a){var b=Hc();a={blockedOn:null,target:a,priority:b};for(var c=0;c<Qc.length&&0!==b&&b<Qc[c].priority;c++);Qc.splice(c,0,a);0===c&&Vc(a)}};function ol(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType)}function pl(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||\" react-mount-point-unstable \"!==a.nodeValue))}function ql(){}\nfunction rl(a,b,c,d,e){if(e){if(\"function\"===typeof d){var f=d;d=function(){var a=hl(g);f.call(a)}}var g=fl(b,d,a,0,null,!1,!1,\"\",ql);a._reactRootContainer=g;a[uf]=g.current;sf(8===a.nodeType?a.parentNode:a);Sk();return g}for(;e=a.lastChild;)a.removeChild(e);if(\"function\"===typeof d){var h=d;d=function(){var a=hl(k);h.call(a)}}var k=cl(a,0,!1,null,null,!1,!1,\"\",ql);a._reactRootContainer=k;a[uf]=k.current;sf(8===a.nodeType?a.parentNode:a);Sk(function(){gl(b,k,c,d)});return k}\nfunction sl(a,b,c,d,e){var f=c._reactRootContainer;if(f){var g=f;if(\"function\"===typeof e){var h=e;e=function(){var a=hl(g);h.call(a)}}gl(b,g,a,e)}else g=rl(c,b,a,e,d);return hl(g)}Ec=function(a){switch(a.tag){case 3:var b=a.stateNode;if(b.current.memoizedState.isDehydrated){var c=tc(b.pendingLanes);0!==c&&(Cc(b,c|1),Ek(b,B()),0===(K&6)&&(Hj=B()+500,jg()))}break;case 13:Sk(function(){var b=Zg(a,1);if(null!==b){var c=L();mh(b,a,1,c)}}),jl(a,1)}};\nFc=function(a){if(13===a.tag){var b=Zg(a,134217728);if(null!==b){var c=L();mh(b,a,134217728,c)}jl(a,134217728)}};Gc=function(a){if(13===a.tag){var b=lh(a),c=Zg(a,b);if(null!==c){var d=L();mh(c,a,b,d)}jl(a,b)}};Hc=function(){return C};Ic=function(a,b){var c=C;try{return C=a,b()}finally{C=c}};\nyb=function(a,b,c){switch(b){case \"input\":bb(a,c);b=c.name;if(\"radio\"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;c=c.querySelectorAll(\"input[name=\"+JSON.stringify(\"\"+b)+'][type=\"radio\"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=Db(d);if(!e)throw Error(p(90));Wa(d);bb(d,e)}}}break;case \"textarea\":ib(a,c);break;case \"select\":b=c.value,null!=b&&fb(a,!!c.multiple,b,!1)}};Gb=Rk;Hb=Sk;\nvar tl={usingClientEntryPoint:!1,Events:[Cb,ue,Db,Eb,Fb,Rk]},ul={findFiberByHostInstance:Wc,bundleType:0,version:\"18.2.0\",rendererPackageName:\"react-dom\"};\nvar vl={bundleType:ul.bundleType,version:ul.version,rendererPackageName:ul.rendererPackageName,rendererConfig:ul.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:ua.ReactCurrentDispatcher,findHostInstanceByFiber:function(a){a=Zb(a);return null===a?null:a.stateNode},findFiberByHostInstance:ul.findFiberByHostInstance||\nkl,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:\"18.2.0-next-9e3b772b8-20220608\"};if(\"undefined\"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var wl=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!wl.isDisabled&&wl.supportsFiber)try{kc=wl.inject(vl),lc=wl}catch(a){}}exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=tl;\nexports.createPortal=function(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!ol(b))throw Error(p(200));return dl(a,b,null,c)};exports.createRoot=function(a,b){if(!ol(a))throw Error(p(299));var c=!1,d=\"\",e=ll;null!==b&&void 0!==b&&(!0===b.unstable_strictMode&&(c=!0),void 0!==b.identifierPrefix&&(d=b.identifierPrefix),void 0!==b.onRecoverableError&&(e=b.onRecoverableError));b=cl(a,1,!1,null,null,c,!1,d,e);a[uf]=b.current;sf(8===a.nodeType?a.parentNode:a);return new ml(b)};\nexports.findDOMNode=function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternals;if(void 0===b){if(\"function\"===typeof a.render)throw Error(p(188));a=Object.keys(a).join(\",\");throw Error(p(268,a));}a=Zb(b);a=null===a?null:a.stateNode;return a};exports.flushSync=function(a){return Sk(a)};exports.hydrate=function(a,b,c){if(!pl(b))throw Error(p(200));return sl(null,a,b,!0,c)};\nexports.hydrateRoot=function(a,b,c){if(!ol(a))throw Error(p(405));var d=null!=c&&c.hydratedSources||null,e=!1,f=\"\",g=ll;null!==c&&void 0!==c&&(!0===c.unstable_strictMode&&(e=!0),void 0!==c.identifierPrefix&&(f=c.identifierPrefix),void 0!==c.onRecoverableError&&(g=c.onRecoverableError));b=fl(b,null,a,1,null!=c?c:null,e,!1,f,g);a[uf]=b.current;sf(a);if(d)for(a=0;a<d.length;a++)c=d[a],e=c._getVersion,e=e(c._source),null==b.mutableSourceEagerHydrationData?b.mutableSourceEagerHydrationData=[c,e]:b.mutableSourceEagerHydrationData.push(c,\ne);return new nl(b)};exports.render=function(a,b,c){if(!pl(b))throw Error(p(200));return sl(null,a,b,!1,c)};exports.unmountComponentAtNode=function(a){if(!pl(a))throw Error(p(40));return a._reactRootContainer?(Sk(function(){sl(null,null,a,!1,function(){a._reactRootContainer=null;a[uf]=null})}),!0):!1};exports.unstable_batchedUpdates=Rk;\nexports.unstable_renderSubtreeIntoContainer=function(a,b,c,d){if(!pl(c))throw Error(p(200));if(null==a||void 0===a._reactInternals)throw Error(p(38));return sl(a,b,c,!1,d)};exports.version=\"18.2.0-next-9e3b772b8-20220608\";\n","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.min.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n","/**\n * @license React\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var b=Symbol.for(\"react.element\"),c=Symbol.for(\"react.portal\"),d=Symbol.for(\"react.fragment\"),e=Symbol.for(\"react.strict_mode\"),f=Symbol.for(\"react.profiler\"),g=Symbol.for(\"react.provider\"),h=Symbol.for(\"react.context\"),k=Symbol.for(\"react.server_context\"),l=Symbol.for(\"react.forward_ref\"),m=Symbol.for(\"react.suspense\"),n=Symbol.for(\"react.suspense_list\"),p=Symbol.for(\"react.memo\"),q=Symbol.for(\"react.lazy\"),t=Symbol.for(\"react.offscreen\"),u;u=Symbol.for(\"react.module.reference\");\nfunction v(a){if(\"object\"===typeof a&&null!==a){var r=a.$$typeof;switch(r){case b:switch(a=a.type,a){case d:case f:case e:case m:case n:return a;default:switch(a=a&&a.$$typeof,a){case k:case h:case l:case q:case p:case g:return a;default:return r}}case c:return r}}}exports.ContextConsumer=h;exports.ContextProvider=g;exports.Element=b;exports.ForwardRef=l;exports.Fragment=d;exports.Lazy=q;exports.Memo=p;exports.Portal=c;exports.Profiler=f;exports.StrictMode=e;exports.Suspense=m;\nexports.SuspenseList=n;exports.isAsyncMode=function(){return!1};exports.isConcurrentMode=function(){return!1};exports.isContextConsumer=function(a){return v(a)===h};exports.isContextProvider=function(a){return v(a)===g};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===b};exports.isForwardRef=function(a){return v(a)===l};exports.isFragment=function(a){return v(a)===d};exports.isLazy=function(a){return v(a)===q};exports.isMemo=function(a){return v(a)===p};\nexports.isPortal=function(a){return v(a)===c};exports.isProfiler=function(a){return v(a)===f};exports.isStrictMode=function(a){return v(a)===e};exports.isSuspense=function(a){return v(a)===m};exports.isSuspenseList=function(a){return v(a)===n};\nexports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===d||a===f||a===e||a===m||a===n||a===t||\"object\"===typeof a&&null!==a&&(a.$$typeof===q||a.$$typeof===p||a.$$typeof===g||a.$$typeof===h||a.$$typeof===l||a.$$typeof===u||void 0!==a.getModuleId)?!0:!1};exports.typeOf=v;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","/**\n * @license React\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var l=Symbol.for(\"react.element\"),n=Symbol.for(\"react.portal\"),p=Symbol.for(\"react.fragment\"),q=Symbol.for(\"react.strict_mode\"),r=Symbol.for(\"react.profiler\"),t=Symbol.for(\"react.provider\"),u=Symbol.for(\"react.context\"),v=Symbol.for(\"react.forward_ref\"),w=Symbol.for(\"react.suspense\"),x=Symbol.for(\"react.memo\"),y=Symbol.for(\"react.lazy\"),z=Symbol.iterator;function A(a){if(null===a||\"object\"!==typeof a)return null;a=z&&a[z]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}\nvar B={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},C=Object.assign,D={};function E(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}E.prototype.isReactComponent={};\nE.prototype.setState=function(a,b){if(\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a)throw Error(\"setState(...): takes an object of state variables to update or a function which returns an object of state variables.\");this.updater.enqueueSetState(this,a,b,\"setState\")};E.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};function F(){}F.prototype=E.prototype;function G(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}var H=G.prototype=new F;\nH.constructor=G;C(H,E.prototype);H.isPureReactComponent=!0;var I=Array.isArray,J=Object.prototype.hasOwnProperty,K={current:null},L={key:!0,ref:!0,__self:!0,__source:!0};\nfunction M(a,b,e){var d,c={},k=null,h=null;if(null!=b)for(d in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(k=\"\"+b.key),b)J.call(b,d)&&!L.hasOwnProperty(d)&&(c[d]=b[d]);var g=arguments.length-2;if(1===g)c.children=e;else if(1<g){for(var f=Array(g),m=0;m<g;m++)f[m]=arguments[m+2];c.children=f}if(a&&a.defaultProps)for(d in g=a.defaultProps,g)void 0===c[d]&&(c[d]=g[d]);return{$$typeof:l,type:a,key:k,ref:h,props:c,_owner:K.current}}\nfunction N(a,b){return{$$typeof:l,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function O(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===l}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+a.replace(/[=:]/g,function(a){return b[a]})}var P=/\\/+/g;function Q(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(\"\"+a.key):b.toString(36)}\nfunction R(a,b,e,d,c){var k=typeof a;if(\"undefined\"===k||\"boolean\"===k)a=null;var h=!1;if(null===a)h=!0;else switch(k){case \"string\":case \"number\":h=!0;break;case \"object\":switch(a.$$typeof){case l:case n:h=!0}}if(h)return h=a,c=c(h),a=\"\"===d?\".\"+Q(h,0):d,I(c)?(e=\"\",null!=a&&(e=a.replace(P,\"$&/\")+\"/\"),R(c,b,e,\"\",function(a){return a})):null!=c&&(O(c)&&(c=N(c,e+(!c.key||h&&h.key===c.key?\"\":(\"\"+c.key).replace(P,\"$&/\")+\"/\")+a)),b.push(c)),1;h=0;d=\"\"===d?\".\":d+\":\";if(I(a))for(var g=0;g<a.length;g++){k=\na[g];var f=d+Q(k,g);h+=R(k,b,e,f,c)}else if(f=A(a),\"function\"===typeof f)for(a=f.call(a),g=0;!(k=a.next()).done;)k=k.value,f=d+Q(k,g++),h+=R(k,b,e,f,c);else if(\"object\"===k)throw b=String(a),Error(\"Objects are not valid as a React child (found: \"+(\"[object Object]\"===b?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":b)+\"). If you meant to render a collection of children, use an array instead.\");return h}\nfunction S(a,b,e){if(null==a)return a;var d=[],c=0;R(a,d,\"\",\"\",function(a){return b.call(e,a,c++)});return d}function T(a){if(-1===a._status){var b=a._result;b=b();b.then(function(b){if(0===a._status||-1===a._status)a._status=1,a._result=b},function(b){if(0===a._status||-1===a._status)a._status=2,a._result=b});-1===a._status&&(a._status=0,a._result=b)}if(1===a._status)return a._result.default;throw a._result;}\nvar U={current:null},V={transition:null},W={ReactCurrentDispatcher:U,ReactCurrentBatchConfig:V,ReactCurrentOwner:K};exports.Children={map:S,forEach:function(a,b,e){S(a,function(){b.apply(this,arguments)},e)},count:function(a){var b=0;S(a,function(){b++});return b},toArray:function(a){return S(a,function(a){return a})||[]},only:function(a){if(!O(a))throw Error(\"React.Children.only expected to receive a single React element child.\");return a}};exports.Component=E;exports.Fragment=p;\nexports.Profiler=r;exports.PureComponent=G;exports.StrictMode=q;exports.Suspense=w;exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=W;\nexports.cloneElement=function(a,b,e){if(null===a||void 0===a)throw Error(\"React.cloneElement(...): The argument must be a React element, but you passed \"+a+\".\");var d=C({},a.props),c=a.key,k=a.ref,h=a._owner;if(null!=b){void 0!==b.ref&&(k=b.ref,h=K.current);void 0!==b.key&&(c=\"\"+b.key);if(a.type&&a.type.defaultProps)var g=a.type.defaultProps;for(f in b)J.call(b,f)&&!L.hasOwnProperty(f)&&(d[f]=void 0===b[f]&&void 0!==g?g[f]:b[f])}var f=arguments.length-2;if(1===f)d.children=e;else if(1<f){g=Array(f);\nfor(var m=0;m<f;m++)g[m]=arguments[m+2];d.children=g}return{$$typeof:l,type:a.type,key:c,ref:k,props:d,_owner:h}};exports.createContext=function(a){a={$$typeof:u,_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null};a.Provider={$$typeof:t,_context:a};return a.Consumer=a};exports.createElement=M;exports.createFactory=function(a){var b=M.bind(null,a);b.type=a;return b};exports.createRef=function(){return{current:null}};\nexports.forwardRef=function(a){return{$$typeof:v,render:a}};exports.isValidElement=O;exports.lazy=function(a){return{$$typeof:y,_payload:{_status:-1,_result:a},_init:T}};exports.memo=function(a,b){return{$$typeof:x,type:a,compare:void 0===b?null:b}};exports.startTransition=function(a){var b=V.transition;V.transition={};try{a()}finally{V.transition=b}};exports.unstable_act=function(){throw Error(\"act(...) is not supported in production builds of React.\");};\nexports.useCallback=function(a,b){return U.current.useCallback(a,b)};exports.useContext=function(a){return U.current.useContext(a)};exports.useDebugValue=function(){};exports.useDeferredValue=function(a){return U.current.useDeferredValue(a)};exports.useEffect=function(a,b){return U.current.useEffect(a,b)};exports.useId=function(){return U.current.useId()};exports.useImperativeHandle=function(a,b,e){return U.current.useImperativeHandle(a,b,e)};\nexports.useInsertionEffect=function(a,b){return U.current.useInsertionEffect(a,b)};exports.useLayoutEffect=function(a,b){return U.current.useLayoutEffect(a,b)};exports.useMemo=function(a,b){return U.current.useMemo(a,b)};exports.useReducer=function(a,b,e){return U.current.useReducer(a,b,e)};exports.useRef=function(a){return U.current.useRef(a)};exports.useState=function(a){return U.current.useState(a)};exports.useSyncExternalStore=function(a,b,e){return U.current.useSyncExternalStore(a,b,e)};\nexports.useTransition=function(){return U.current.useTransition()};exports.version=\"18.2.0\";\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","/**\n * @license React\n * scheduler.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';function f(a,b){var c=a.length;a.push(b);a:for(;0<c;){var d=c-1>>>1,e=a[d];if(0<g(e,b))a[d]=b,a[c]=e,c=d;else break a}}function h(a){return 0===a.length?null:a[0]}function k(a){if(0===a.length)return null;var b=a[0],c=a.pop();if(c!==b){a[0]=c;a:for(var d=0,e=a.length,w=e>>>1;d<w;){var m=2*(d+1)-1,C=a[m],n=m+1,x=a[n];if(0>g(C,c))n<e&&0>g(x,C)?(a[d]=x,a[n]=c,d=n):(a[d]=C,a[m]=c,d=m);else if(n<e&&0>g(x,c))a[d]=x,a[n]=c,d=n;else break a}}return b}\nfunction g(a,b){var c=a.sortIndex-b.sortIndex;return 0!==c?c:a.id-b.id}if(\"object\"===typeof performance&&\"function\"===typeof performance.now){var l=performance;exports.unstable_now=function(){return l.now()}}else{var p=Date,q=p.now();exports.unstable_now=function(){return p.now()-q}}var r=[],t=[],u=1,v=null,y=3,z=!1,A=!1,B=!1,D=\"function\"===typeof setTimeout?setTimeout:null,E=\"function\"===typeof clearTimeout?clearTimeout:null,F=\"undefined\"!==typeof setImmediate?setImmediate:null;\n\"undefined\"!==typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function G(a){for(var b=h(t);null!==b;){if(null===b.callback)k(t);else if(b.startTime<=a)k(t),b.sortIndex=b.expirationTime,f(r,b);else break;b=h(t)}}function H(a){B=!1;G(a);if(!A)if(null!==h(r))A=!0,I(J);else{var b=h(t);null!==b&&K(H,b.startTime-a)}}\nfunction J(a,b){A=!1;B&&(B=!1,E(L),L=-1);z=!0;var c=y;try{G(b);for(v=h(r);null!==v&&(!(v.expirationTime>b)||a&&!M());){var d=v.callback;if(\"function\"===typeof d){v.callback=null;y=v.priorityLevel;var e=d(v.expirationTime<=b);b=exports.unstable_now();\"function\"===typeof e?v.callback=e:v===h(r)&&k(r);G(b)}else k(r);v=h(r)}if(null!==v)var w=!0;else{var m=h(t);null!==m&&K(H,m.startTime-b);w=!1}return w}finally{v=null,y=c,z=!1}}var N=!1,O=null,L=-1,P=5,Q=-1;\nfunction M(){return exports.unstable_now()-Q<P?!1:!0}function R(){if(null!==O){var a=exports.unstable_now();Q=a;var b=!0;try{b=O(!0,a)}finally{b?S():(N=!1,O=null)}}else N=!1}var S;if(\"function\"===typeof F)S=function(){F(R)};else if(\"undefined\"!==typeof MessageChannel){var T=new MessageChannel,U=T.port2;T.port1.onmessage=R;S=function(){U.postMessage(null)}}else S=function(){D(R,0)};function I(a){O=a;N||(N=!0,S())}function K(a,b){L=D(function(){a(exports.unstable_now())},b)}\nexports.unstable_IdlePriority=5;exports.unstable_ImmediatePriority=1;exports.unstable_LowPriority=4;exports.unstable_NormalPriority=3;exports.unstable_Profiling=null;exports.unstable_UserBlockingPriority=2;exports.unstable_cancelCallback=function(a){a.callback=null};exports.unstable_continueExecution=function(){A||z||(A=!0,I(J))};\nexports.unstable_forceFrameRate=function(a){0>a||125<a?console.error(\"forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported\"):P=0<a?Math.floor(1E3/a):5};exports.unstable_getCurrentPriorityLevel=function(){return y};exports.unstable_getFirstCallbackNode=function(){return h(r)};exports.unstable_next=function(a){switch(y){case 1:case 2:case 3:var b=3;break;default:b=y}var c=y;y=b;try{return a()}finally{y=c}};exports.unstable_pauseExecution=function(){};\nexports.unstable_requestPaint=function(){};exports.unstable_runWithPriority=function(a,b){switch(a){case 1:case 2:case 3:case 4:case 5:break;default:a=3}var c=y;y=a;try{return b()}finally{y=c}};\nexports.unstable_scheduleCallback=function(a,b,c){var d=exports.unstable_now();\"object\"===typeof c&&null!==c?(c=c.delay,c=\"number\"===typeof c&&0<c?d+c:d):c=d;switch(a){case 1:var e=-1;break;case 2:e=250;break;case 5:e=1073741823;break;case 4:e=1E4;break;default:e=5E3}e=c+e;a={id:u++,callback:b,priorityLevel:a,startTime:c,expirationTime:e,sortIndex:-1};c>d?(a.sortIndex=c,f(t,a),null===h(r)&&a===h(t)&&(B?(E(L),L=-1):B=!0,K(H,c-d))):(a.sortIndex=e,f(r,a),A||z||(A=!0,I(J)));return a};\nexports.unstable_shouldYield=M;exports.unstable_wrapCallback=function(a){var b=y;return function(){var c=y;y=b;try{return a.apply(this,arguments)}finally{y=c}}};\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/scheduler.production.min.js');\n} else {\n  module.exports = require('./cjs/scheduler.development.js');\n}\n","/**\n * @license React\n * use-sync-external-store-shim.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var e=require(\"react\");function h(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var k=\"function\"===typeof Object.is?Object.is:h,l=e.useState,m=e.useEffect,n=e.useLayoutEffect,p=e.useDebugValue;function q(a,b){var d=b(),f=l({inst:{value:d,getSnapshot:b}}),c=f[0].inst,g=f[1];n(function(){c.value=d;c.getSnapshot=b;r(c)&&g({inst:c})},[a,d,b]);m(function(){r(c)&&g({inst:c});return a(function(){r(c)&&g({inst:c})})},[a]);p(d);return d}\nfunction r(a){var b=a.getSnapshot;a=a.value;try{var d=b();return!k(a,d)}catch(f){return!0}}function t(a,b){return b()}var u=\"undefined\"===typeof window||\"undefined\"===typeof window.document||\"undefined\"===typeof window.document.createElement?t:q;exports.useSyncExternalStore=void 0!==e.useSyncExternalStore?e.useSyncExternalStore:u;\n","/**\n * @license React\n * use-sync-external-store-shim/with-selector.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var h=require(\"react\"),n=require(\"use-sync-external-store/shim\");function p(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var q=\"function\"===typeof Object.is?Object.is:p,r=n.useSyncExternalStore,t=h.useRef,u=h.useEffect,v=h.useMemo,w=h.useDebugValue;\nexports.useSyncExternalStoreWithSelector=function(a,b,e,l,g){var c=t(null);if(null===c.current){var f={hasValue:!1,value:null};c.current=f}else f=c.current;c=v(function(){function a(a){if(!c){c=!0;d=a;a=l(a);if(void 0!==g&&f.hasValue){var b=f.value;if(g(b,a))return k=b}return k=a}b=k;if(q(d,a))return b;var e=l(a);if(void 0!==g&&g(b,e))return b;d=a;return k=e}var c=!1,d,k,m=void 0===e?null:e;return[function(){return a(b())},null===m?void 0:function(){return a(m())}]},[b,e,l,g]);var d=r(a,c[0],c[1]);\nu(function(){f.hasValue=!0;f.value=d},[d]);w(d);return d};\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('../cjs/use-sync-external-store-shim.production.min.js');\n} else {\n  module.exports = require('../cjs/use-sync-external-store-shim.development.js');\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('../cjs/use-sync-external-store-shim/with-selector.production.min.js');\n} else {\n  module.exports = require('../cjs/use-sync-external-store-shim/with-selector.development.js');\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? function(obj) { return Object.getPrototypeOf(obj); } : function(obj) { return obj.__proto__; };\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach(function(key) { def[key] = function() { return value[key]; }; });\n\t}\n\tdef['default'] = function() { return value; };\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// Default to a dummy \"batch\" implementation that just runs the callback\nfunction defaultNoopBatch(callback) {\n  callback();\n}\n\nlet batch = defaultNoopBatch; // Allow injecting another batching function later\n\nexport const setBatch = newBatch => batch = newBatch; // Supply a getter just to skip dealing with ESM bindings\n\nexport const getBatch = () => batch;","import { createContext } from 'react';\nexport const ReactReduxContext = /*#__PURE__*/createContext(null);\n\nif (process.env.NODE_ENV !== 'production') {\n  ReactReduxContext.displayName = 'ReactRedux';\n}\n\nexport default ReactReduxContext;","export const notInitialized = () => {\n  throw new Error('uSES not initialized!');\n};","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"initMapStateToProps\", \"initMapDispatchToProps\", \"initMergeProps\"];\nimport verifySubselectors from './verifySubselectors';\nexport function pureFinalPropsSelectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch, {\n  areStatesEqual,\n  areOwnPropsEqual,\n  areStatePropsEqual\n}) {\n  let hasRunAtLeastOnce = false;\n  let state;\n  let ownProps;\n  let stateProps;\n  let dispatchProps;\n  let mergedProps;\n\n  function handleFirstCall(firstState, firstOwnProps) {\n    state = firstState;\n    ownProps = firstOwnProps;\n    stateProps = mapStateToProps(state, ownProps);\n    dispatchProps = mapDispatchToProps(dispatch, ownProps);\n    mergedProps = mergeProps(stateProps, dispatchProps, ownProps);\n    hasRunAtLeastOnce = true;\n    return mergedProps;\n  }\n\n  function handleNewPropsAndNewState() {\n    stateProps = mapStateToProps(state, ownProps);\n    if (mapDispatchToProps.dependsOnOwnProps) dispatchProps = mapDispatchToProps(dispatch, ownProps);\n    mergedProps = mergeProps(stateProps, dispatchProps, ownProps);\n    return mergedProps;\n  }\n\n  function handleNewProps() {\n    if (mapStateToProps.dependsOnOwnProps) stateProps = mapStateToProps(state, ownProps);\n    if (mapDispatchToProps.dependsOnOwnProps) dispatchProps = mapDispatchToProps(dispatch, ownProps);\n    mergedProps = mergeProps(stateProps, dispatchProps, ownProps);\n    return mergedProps;\n  }\n\n  function handleNewState() {\n    const nextStateProps = mapStateToProps(state, ownProps);\n    const statePropsChanged = !areStatePropsEqual(nextStateProps, stateProps);\n    stateProps = nextStateProps;\n    if (statePropsChanged) mergedProps = mergeProps(stateProps, dispatchProps, ownProps);\n    return mergedProps;\n  }\n\n  function handleSubsequentCalls(nextState, nextOwnProps) {\n    const propsChanged = !areOwnPropsEqual(nextOwnProps, ownProps);\n    const stateChanged = !areStatesEqual(nextState, state, nextOwnProps, ownProps);\n    state = nextState;\n    ownProps = nextOwnProps;\n    if (propsChanged && stateChanged) return handleNewPropsAndNewState();\n    if (propsChanged) return handleNewProps();\n    if (stateChanged) return handleNewState();\n    return mergedProps;\n  }\n\n  return function pureFinalPropsSelector(nextState, nextOwnProps) {\n    return hasRunAtLeastOnce ? handleSubsequentCalls(nextState, nextOwnProps) : handleFirstCall(nextState, nextOwnProps);\n  };\n}\n// TODO: Add more comments\n// The selector returned by selectorFactory will memoize its results,\n// allowing connect's shouldComponentUpdate to return false if final\n// props have not changed.\nexport default function finalPropsSelectorFactory(dispatch, _ref) {\n  let {\n    initMapStateToProps,\n    initMapDispatchToProps,\n    initMergeProps\n  } = _ref,\n      options = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const mapStateToProps = initMapStateToProps(dispatch, options);\n  const mapDispatchToProps = initMapDispatchToProps(dispatch, options);\n  const mergeProps = initMergeProps(dispatch, options);\n\n  if (process.env.NODE_ENV !== 'production') {\n    verifySubselectors(mapStateToProps, mapDispatchToProps, mergeProps);\n  }\n\n  return pureFinalPropsSelectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch, options);\n}","import verifyPlainObject from '../utils/verifyPlainObject';\nexport function wrapMapToPropsConstant( // * Note:\n//  It seems that the dispatch argument\n//  could be a dispatch function in some cases (ex: whenMapDispatchToPropsIsMissing)\n//  and a state object in some others (ex: whenMapStateToPropsIsMissing)\n// eslint-disable-next-line no-unused-vars\ngetConstant) {\n  return function initConstantSelector(dispatch) {\n    const constant = getConstant(dispatch);\n\n    function constantSelector() {\n      return constant;\n    }\n\n    constantSelector.dependsOnOwnProps = false;\n    return constantSelector;\n  };\n} // dependsOnOwnProps is used by createMapToPropsProxy to determine whether to pass props as args\n// to the mapToProps function being wrapped. It is also used by makePurePropsSelector to determine\n// whether mapToProps needs to be invoked when props have changed.\n//\n// A length of one signals that mapToProps does not depend on props from the parent component.\n// A length of zero is assumed to mean mapToProps is getting args via arguments or ...args and\n// therefore not reporting its length accurately..\n// TODO Can this get pulled out so that we can subscribe directly to the store if we don't need ownProps?\n\nexport function getDependsOnOwnProps(mapToProps) {\n  return mapToProps.dependsOnOwnProps ? Boolean(mapToProps.dependsOnOwnProps) : mapToProps.length !== 1;\n} // Used by whenMapStateToPropsIsFunction and whenMapDispatchToPropsIsFunction,\n// this function wraps mapToProps in a proxy function which does several things:\n//\n//  * Detects whether the mapToProps function being called depends on props, which\n//    is used by selectorFactory to decide if it should reinvoke on props changes.\n//\n//  * On first call, handles mapToProps if returns another function, and treats that\n//    new function as the true mapToProps for subsequent calls.\n//\n//  * On first call, verifies the first result is a plain object, in order to warn\n//    the developer that their mapToProps function is not returning a valid result.\n//\n\nexport function wrapMapToPropsFunc(mapToProps, methodName) {\n  return function initProxySelector(dispatch, {\n    displayName\n  }) {\n    const proxy = function mapToPropsProxy(stateOrDispatch, ownProps) {\n      return proxy.dependsOnOwnProps ? proxy.mapToProps(stateOrDispatch, ownProps) : proxy.mapToProps(stateOrDispatch, undefined);\n    }; // allow detectFactoryAndVerify to get ownProps\n\n\n    proxy.dependsOnOwnProps = true;\n\n    proxy.mapToProps = function detectFactoryAndVerify(stateOrDispatch, ownProps) {\n      proxy.mapToProps = mapToProps;\n      proxy.dependsOnOwnProps = getDependsOnOwnProps(mapToProps);\n      let props = proxy(stateOrDispatch, ownProps);\n\n      if (typeof props === 'function') {\n        proxy.mapToProps = props;\n        proxy.dependsOnOwnProps = getDependsOnOwnProps(props);\n        props = proxy(stateOrDispatch, ownProps);\n      }\n\n      if (process.env.NODE_ENV !== 'production') verifyPlainObject(props, displayName, methodName);\n      return props;\n    };\n\n    return proxy;\n  };\n}","export function createInvalidArgFactory(arg, name) {\n  return (dispatch, options) => {\n    throw new Error(`Invalid value of type ${typeof arg} for ${name} argument when connecting component ${options.wrappedComponentName}.`);\n  };\n}","import bindActionCreators from '../utils/bindActionCreators';\nimport { wrapMapToPropsConstant, wrapMapToPropsFunc } from './wrapMapToProps';\nimport { createInvalidArgFactory } from './invalidArgFactory';\nexport function mapDispatchToPropsFactory(mapDispatchToProps) {\n  return mapDispatchToProps && typeof mapDispatchToProps === 'object' ? wrapMapToPropsConstant(dispatch => // @ts-ignore\n  bindActionCreators(mapDispatchToProps, dispatch)) : !mapDispatchToProps ? wrapMapToPropsConstant(dispatch => ({\n    dispatch\n  })) : typeof mapDispatchToProps === 'function' ? // @ts-ignore\n  wrapMapToPropsFunc(mapDispatchToProps, 'mapDispatchToProps') : createInvalidArgFactory(mapDispatchToProps, 'mapDispatchToProps');\n}","export default function bindActionCreators(actionCreators, dispatch) {\n  const boundActionCreators = {};\n\n  for (const key in actionCreators) {\n    const actionCreator = actionCreators[key];\n\n    if (typeof actionCreator === 'function') {\n      boundActionCreators[key] = (...args) => dispatch(actionCreator(...args));\n    }\n  }\n\n  return boundActionCreators;\n}","import { wrapMapToPropsConstant, wrapMapToPropsFunc } from './wrapMapToProps';\nimport { createInvalidArgFactory } from './invalidArgFactory';\nexport function mapStateToPropsFactory(mapStateToProps) {\n  return !mapStateToProps ? wrapMapToPropsConstant(() => ({})) : typeof mapStateToProps === 'function' ? // @ts-ignore\n  wrapMapToPropsFunc(mapStateToProps, 'mapStateToProps') : createInvalidArgFactory(mapStateToProps, 'mapStateToProps');\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport verifyPlainObject from '../utils/verifyPlainObject';\nimport { createInvalidArgFactory } from './invalidArgFactory';\nexport function defaultMergeProps(stateProps, dispatchProps, ownProps) {\n  // @ts-ignore\n  return _extends({}, ownProps, stateProps, dispatchProps);\n}\nexport function wrapMergePropsFunc(mergeProps) {\n  return function initMergePropsProxy(dispatch, {\n    displayName,\n    areMergedPropsEqual\n  }) {\n    let hasRunOnce = false;\n    let mergedProps;\n    return function mergePropsProxy(stateProps, dispatchProps, ownProps) {\n      const nextMergedProps = mergeProps(stateProps, dispatchProps, ownProps);\n\n      if (hasRunOnce) {\n        if (!areMergedPropsEqual(nextMergedProps, mergedProps)) mergedProps = nextMergedProps;\n      } else {\n        hasRunOnce = true;\n        mergedProps = nextMergedProps;\n        if (process.env.NODE_ENV !== 'production') verifyPlainObject(mergedProps, displayName, 'mergeProps');\n      }\n\n      return mergedProps;\n    };\n  };\n}\nexport function mergePropsFactory(mergeProps) {\n  return !mergeProps ? () => defaultMergeProps : typeof mergeProps === 'function' ? wrapMergePropsFunc(mergeProps) : createInvalidArgFactory(mergeProps, 'mergeProps');\n}","import { getBatch } from './batch'; // encapsulates the subscription logic for connecting a component to the redux store, as\n// well as nesting subscriptions of descendant components, so that we can ensure the\n// ancestor components re-render before descendants\n\nfunction createListenerCollection() {\n  const batch = getBatch();\n  let first = null;\n  let last = null;\n  return {\n    clear() {\n      first = null;\n      last = null;\n    },\n\n    notify() {\n      batch(() => {\n        let listener = first;\n\n        while (listener) {\n          listener.callback();\n          listener = listener.next;\n        }\n      });\n    },\n\n    get() {\n      let listeners = [];\n      let listener = first;\n\n      while (listener) {\n        listeners.push(listener);\n        listener = listener.next;\n      }\n\n      return listeners;\n    },\n\n    subscribe(callback) {\n      let isSubscribed = true;\n      let listener = last = {\n        callback,\n        next: null,\n        prev: last\n      };\n\n      if (listener.prev) {\n        listener.prev.next = listener;\n      } else {\n        first = listener;\n      }\n\n      return function unsubscribe() {\n        if (!isSubscribed || first === null) return;\n        isSubscribed = false;\n\n        if (listener.next) {\n          listener.next.prev = listener.prev;\n        } else {\n          last = listener.prev;\n        }\n\n        if (listener.prev) {\n          listener.prev.next = listener.next;\n        } else {\n          first = listener.next;\n        }\n      };\n    }\n\n  };\n}\n\nconst nullListeners = {\n  notify() {},\n\n  get: () => []\n};\nexport function createSubscription(store, parentSub) {\n  let unsubscribe;\n  let listeners = nullListeners;\n\n  function addNestedSub(listener) {\n    trySubscribe();\n    return listeners.subscribe(listener);\n  }\n\n  function notifyNestedSubs() {\n    listeners.notify();\n  }\n\n  function handleChangeWrapper() {\n    if (subscription.onStateChange) {\n      subscription.onStateChange();\n    }\n  }\n\n  function isSubscribed() {\n    return Boolean(unsubscribe);\n  }\n\n  function trySubscribe() {\n    if (!unsubscribe) {\n      unsubscribe = parentSub ? parentSub.addNestedSub(handleChangeWrapper) : store.subscribe(handleChangeWrapper);\n      listeners = createListenerCollection();\n    }\n  }\n\n  function tryUnsubscribe() {\n    if (unsubscribe) {\n      unsubscribe();\n      unsubscribe = undefined;\n      listeners.clear();\n      listeners = nullListeners;\n    }\n  }\n\n  const subscription = {\n    addNestedSub,\n    notifyNestedSubs,\n    handleChangeWrapper,\n    isSubscribed,\n    trySubscribe,\n    tryUnsubscribe,\n    getListeners: () => listeners\n  };\n  return subscription;\n}","import { useEffect, useLayoutEffect } from 'react'; // React currently throws a warning when using useLayoutEffect on the server.\n// To get around it, we can conditionally useEffect on the server (no-op) and\n// useLayoutEffect in the browser. We need useLayoutEffect to ensure the store\n// subscription callback always has the selector from the latest render commit\n// available, otherwise a store update may happen between render and the effect,\n// which may cause missed updates; we also must ensure the store subscription\n// is created synchronously, otherwise a store update may occur before the\n// subscription is created and an inconsistent state may be observed\n// Matches logic in React's `shared/ExecutionEnvironment` file\n\nexport const canUseDOM = !!(typeof window !== 'undefined' && typeof window.document !== 'undefined' && typeof window.document.createElement !== 'undefined');\nexport const useIsomorphicLayoutEffect = canUseDOM ? useLayoutEffect : useEffect;","function is(x, y) {\n  if (x === y) {\n    return x !== 0 || y !== 0 || 1 / x === 1 / y;\n  } else {\n    return x !== x && y !== y;\n  }\n}\n\nexport default function shallowEqual(objA, objB) {\n  if (is(objA, objB)) return true;\n\n  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {\n    return false;\n  }\n\n  const keysA = Object.keys(objA);\n  const keysB = Object.keys(objB);\n  if (keysA.length !== keysB.length) return false;\n\n  for (let i = 0; i < keysA.length; i++) {\n    if (!Object.prototype.hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {\n      return false;\n    }\n  }\n\n  return true;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"reactReduxForwardedRef\"];\n\n/* eslint-disable valid-jsdoc, @typescript-eslint/no-unused-vars */\nimport hoistStatics from 'hoist-non-react-statics';\nimport React, { useContext, useMemo, useRef } from 'react';\nimport { isValidElementType, isContextConsumer } from 'react-is';\nimport defaultSelectorFactory from '../connect/selectorFactory';\nimport { mapDispatchToPropsFactory } from '../connect/mapDispatchToProps';\nimport { mapStateToPropsFactory } from '../connect/mapStateToProps';\nimport { mergePropsFactory } from '../connect/mergeProps';\nimport { createSubscription } from '../utils/Subscription';\nimport { useIsomorphicLayoutEffect } from '../utils/useIsomorphicLayoutEffect';\nimport shallowEqual from '../utils/shallowEqual';\nimport warning from '../utils/warning';\nimport { ReactReduxContext } from './Context';\nimport { notInitialized } from '../utils/useSyncExternalStore';\nlet useSyncExternalStore = notInitialized;\nexport const initializeConnect = fn => {\n  useSyncExternalStore = fn;\n}; // Define some constant arrays just to avoid re-creating these\n\nconst EMPTY_ARRAY = [null, 0];\nconst NO_SUBSCRIPTION_ARRAY = [null, null]; // Attempts to stringify whatever not-really-a-component value we were given\n// for logging in an error message\n\nconst stringifyComponent = Comp => {\n  try {\n    return JSON.stringify(Comp);\n  } catch (err) {\n    return String(Comp);\n  }\n};\n\n// This is \"just\" a `useLayoutEffect`, but with two modifications:\n// - we need to fall back to `useEffect` in SSR to avoid annoying warnings\n// - we extract this to a separate function to avoid closing over values\n//   and causing memory leaks\nfunction useIsomorphicLayoutEffectWithArgs(effectFunc, effectArgs, dependencies) {\n  useIsomorphicLayoutEffect(() => effectFunc(...effectArgs), dependencies);\n} // Effect callback, extracted: assign the latest props values to refs for later usage\n\n\nfunction captureWrapperProps(lastWrapperProps, lastChildProps, renderIsScheduled, wrapperProps, // actualChildProps: unknown,\nchildPropsFromStoreUpdate, notifyNestedSubs) {\n  // We want to capture the wrapper props and child props we used for later comparisons\n  lastWrapperProps.current = wrapperProps;\n  renderIsScheduled.current = false; // If the render was from a store update, clear out that reference and cascade the subscriber update\n\n  if (childPropsFromStoreUpdate.current) {\n    childPropsFromStoreUpdate.current = null;\n    notifyNestedSubs();\n  }\n} // Effect callback, extracted: subscribe to the Redux store or nearest connected ancestor,\n// check for updates after dispatched actions, and trigger re-renders.\n\n\nfunction subscribeUpdates(shouldHandleStateChanges, store, subscription, childPropsSelector, lastWrapperProps, lastChildProps, renderIsScheduled, isMounted, childPropsFromStoreUpdate, notifyNestedSubs, // forceComponentUpdateDispatch: React.Dispatch<any>,\nadditionalSubscribeListener) {\n  // If we're not subscribed to the store, nothing to do here\n  if (!shouldHandleStateChanges) return () => {}; // Capture values for checking if and when this component unmounts\n\n  let didUnsubscribe = false;\n  let lastThrownError = null; // We'll run this callback every time a store subscription update propagates to this component\n\n  const checkForUpdates = () => {\n    if (didUnsubscribe || !isMounted.current) {\n      // Don't run stale listeners.\n      // Redux doesn't guarantee unsubscriptions happen until next dispatch.\n      return;\n    } // TODO We're currently calling getState ourselves here, rather than letting `uSES` do it\n\n\n    const latestStoreState = store.getState();\n    let newChildProps, error;\n\n    try {\n      // Actually run the selector with the most recent store state and wrapper props\n      // to determine what the child props should be\n      newChildProps = childPropsSelector(latestStoreState, lastWrapperProps.current);\n    } catch (e) {\n      error = e;\n      lastThrownError = e;\n    }\n\n    if (!error) {\n      lastThrownError = null;\n    } // If the child props haven't changed, nothing to do here - cascade the subscription update\n\n\n    if (newChildProps === lastChildProps.current) {\n      if (!renderIsScheduled.current) {\n        notifyNestedSubs();\n      }\n    } else {\n      // Save references to the new child props.  Note that we track the \"child props from store update\"\n      // as a ref instead of a useState/useReducer because we need a way to determine if that value has\n      // been processed.  If this went into useState/useReducer, we couldn't clear out the value without\n      // forcing another re-render, which we don't want.\n      lastChildProps.current = newChildProps;\n      childPropsFromStoreUpdate.current = newChildProps;\n      renderIsScheduled.current = true; // TODO This is hacky and not how `uSES` is meant to be used\n      // Trigger the React `useSyncExternalStore` subscriber\n\n      additionalSubscribeListener();\n    }\n  }; // Actually subscribe to the nearest connected ancestor (or store)\n\n\n  subscription.onStateChange = checkForUpdates;\n  subscription.trySubscribe(); // Pull data from the store after first render in case the store has\n  // changed since we began.\n\n  checkForUpdates();\n\n  const unsubscribeWrapper = () => {\n    didUnsubscribe = true;\n    subscription.tryUnsubscribe();\n    subscription.onStateChange = null;\n\n    if (lastThrownError) {\n      // It's possible that we caught an error due to a bad mapState function, but the\n      // parent re-rendered without this component and we're about to unmount.\n      // This shouldn't happen as long as we do top-down subscriptions correctly, but\n      // if we ever do those wrong, this throw will surface the error in our tests.\n      // In that case, throw the error from here so it doesn't get lost.\n      throw lastThrownError;\n    }\n  };\n\n  return unsubscribeWrapper;\n} // Reducer initial state creation for our update reducer\n\n\nconst initStateUpdates = () => EMPTY_ARRAY;\n\nfunction strictEqual(a, b) {\n  return a === b;\n}\n/**\r\n * Infers the type of props that a connector will inject into a component.\r\n */\n\n\nlet hasWarnedAboutDeprecatedPureOption = false;\n/**\r\n * Connects a React component to a Redux store.\r\n *\r\n * - Without arguments, just wraps the component, without changing the behavior / props\r\n *\r\n * - If 2 params are passed (3rd param, mergeProps, is skipped), default behavior\r\n * is to override ownProps (as stated in the docs), so what remains is everything that's\r\n * not a state or dispatch prop\r\n *\r\n * - When 3rd param is passed, we don't know if ownProps propagate and whether they\r\n * should be valid component props, because it depends on mergeProps implementation.\r\n * As such, it is the user's responsibility to extend ownProps interface from state or\r\n * dispatch props or both when applicable\r\n *\r\n * @param mapStateToProps A function that extracts values from state\r\n * @param mapDispatchToProps Setup for dispatching actions\r\n * @param mergeProps Optional callback to merge state and dispatch props together\r\n * @param options Options for configuring the connection\r\n *\r\n */\n\nfunction connect(mapStateToProps, mapDispatchToProps, mergeProps, {\n  // The `pure` option has been removed, so TS doesn't like us destructuring this to check its existence.\n  // @ts-ignore\n  pure,\n  areStatesEqual = strictEqual,\n  areOwnPropsEqual = shallowEqual,\n  areStatePropsEqual = shallowEqual,\n  areMergedPropsEqual = shallowEqual,\n  // use React's forwardRef to expose a ref of the wrapped component\n  forwardRef = false,\n  // the context consumer to use\n  context = ReactReduxContext\n} = {}) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (pure !== undefined && !hasWarnedAboutDeprecatedPureOption) {\n      hasWarnedAboutDeprecatedPureOption = true;\n      warning('The `pure` option has been removed. `connect` is now always a \"pure/memoized\" component');\n    }\n  }\n\n  const Context = context;\n  const initMapStateToProps = mapStateToPropsFactory(mapStateToProps);\n  const initMapDispatchToProps = mapDispatchToPropsFactory(mapDispatchToProps);\n  const initMergeProps = mergePropsFactory(mergeProps);\n  const shouldHandleStateChanges = Boolean(mapStateToProps);\n\n  const wrapWithConnect = WrappedComponent => {\n    if (process.env.NODE_ENV !== 'production' && !isValidElementType(WrappedComponent)) {\n      throw new Error(`You must pass a component to the function returned by connect. Instead received ${stringifyComponent(WrappedComponent)}`);\n    }\n\n    const wrappedComponentName = WrappedComponent.displayName || WrappedComponent.name || 'Component';\n    const displayName = `Connect(${wrappedComponentName})`;\n    const selectorFactoryOptions = {\n      shouldHandleStateChanges,\n      displayName,\n      wrappedComponentName,\n      WrappedComponent,\n      // @ts-ignore\n      initMapStateToProps,\n      // @ts-ignore\n      initMapDispatchToProps,\n      initMergeProps,\n      areStatesEqual,\n      areStatePropsEqual,\n      areOwnPropsEqual,\n      areMergedPropsEqual\n    };\n\n    function ConnectFunction(props) {\n      const [propsContext, reactReduxForwardedRef, wrapperProps] = useMemo(() => {\n        // Distinguish between actual \"data\" props that were passed to the wrapper component,\n        // and values needed to control behavior (forwarded refs, alternate context instances).\n        // To maintain the wrapperProps object reference, memoize this destructuring.\n        const {\n          reactReduxForwardedRef\n        } = props,\n              wrapperProps = _objectWithoutPropertiesLoose(props, _excluded);\n\n        return [props.context, reactReduxForwardedRef, wrapperProps];\n      }, [props]);\n      const ContextToUse = useMemo(() => {\n        // Users may optionally pass in a custom context instance to use instead of our ReactReduxContext.\n        // Memoize the check that determines which context instance we should use.\n        return propsContext && propsContext.Consumer && // @ts-ignore\n        isContextConsumer( /*#__PURE__*/React.createElement(propsContext.Consumer, null)) ? propsContext : Context;\n      }, [propsContext, Context]); // Retrieve the store and ancestor subscription via context, if available\n\n      const contextValue = useContext(ContextToUse); // The store _must_ exist as either a prop or in context.\n      // We'll check to see if it _looks_ like a Redux store first.\n      // This allows us to pass through a `store` prop that is just a plain value.\n\n      const didStoreComeFromProps = Boolean(props.store) && Boolean(props.store.getState) && Boolean(props.store.dispatch);\n      const didStoreComeFromContext = Boolean(contextValue) && Boolean(contextValue.store);\n\n      if (process.env.NODE_ENV !== 'production' && !didStoreComeFromProps && !didStoreComeFromContext) {\n        throw new Error(`Could not find \"store\" in the context of ` + `\"${displayName}\". Either wrap the root component in a <Provider>, ` + `or pass a custom React context provider to <Provider> and the corresponding ` + `React context consumer to ${displayName} in connect options.`);\n      } // Based on the previous check, one of these must be true\n\n\n      const store = didStoreComeFromProps ? props.store : contextValue.store;\n      const getServerState = didStoreComeFromContext ? contextValue.getServerState : store.getState;\n      const childPropsSelector = useMemo(() => {\n        // The child props selector needs the store reference as an input.\n        // Re-create this selector whenever the store changes.\n        return defaultSelectorFactory(store.dispatch, selectorFactoryOptions);\n      }, [store]);\n      const [subscription, notifyNestedSubs] = useMemo(() => {\n        if (!shouldHandleStateChanges) return NO_SUBSCRIPTION_ARRAY; // This Subscription's source should match where store came from: props vs. context. A component\n        // connected to the store via props shouldn't use subscription from context, or vice versa.\n\n        const subscription = createSubscription(store, didStoreComeFromProps ? undefined : contextValue.subscription); // `notifyNestedSubs` is duplicated to handle the case where the component is unmounted in\n        // the middle of the notification loop, where `subscription` will then be null. This can\n        // probably be avoided if Subscription's listeners logic is changed to not call listeners\n        // that have been unsubscribed in the  middle of the notification loop.\n\n        const notifyNestedSubs = subscription.notifyNestedSubs.bind(subscription);\n        return [subscription, notifyNestedSubs];\n      }, [store, didStoreComeFromProps, contextValue]); // Determine what {store, subscription} value should be put into nested context, if necessary,\n      // and memoize that value to avoid unnecessary context updates.\n\n      const overriddenContextValue = useMemo(() => {\n        if (didStoreComeFromProps) {\n          // This component is directly subscribed to a store from props.\n          // We don't want descendants reading from this store - pass down whatever\n          // the existing context value is from the nearest connected ancestor.\n          return contextValue;\n        } // Otherwise, put this component's subscription instance into context, so that\n        // connected descendants won't update until after this component is done\n\n\n        return _extends({}, contextValue, {\n          subscription\n        });\n      }, [didStoreComeFromProps, contextValue, subscription]); // Set up refs to coordinate values between the subscription effect and the render logic\n\n      const lastChildProps = useRef();\n      const lastWrapperProps = useRef(wrapperProps);\n      const childPropsFromStoreUpdate = useRef();\n      const renderIsScheduled = useRef(false);\n      const isProcessingDispatch = useRef(false);\n      const isMounted = useRef(false);\n      const latestSubscriptionCallbackError = useRef();\n      useIsomorphicLayoutEffect(() => {\n        isMounted.current = true;\n        return () => {\n          isMounted.current = false;\n        };\n      }, []);\n      const actualChildPropsSelector = useMemo(() => {\n        const selector = () => {\n          // Tricky logic here:\n          // - This render may have been triggered by a Redux store update that produced new child props\n          // - However, we may have gotten new wrapper props after that\n          // If we have new child props, and the same wrapper props, we know we should use the new child props as-is.\n          // But, if we have new wrapper props, those might change the child props, so we have to recalculate things.\n          // So, we'll use the child props from store update only if the wrapper props are the same as last time.\n          if (childPropsFromStoreUpdate.current && wrapperProps === lastWrapperProps.current) {\n            return childPropsFromStoreUpdate.current;\n          } // TODO We're reading the store directly in render() here. Bad idea?\n          // This will likely cause Bad Things (TM) to happen in Concurrent Mode.\n          // Note that we do this because on renders _not_ caused by store updates, we need the latest store state\n          // to determine what the child props should be.\n\n\n          return childPropsSelector(store.getState(), wrapperProps);\n        };\n\n        return selector;\n      }, [store, wrapperProps]); // We need this to execute synchronously every time we re-render. However, React warns\n      // about useLayoutEffect in SSR, so we try to detect environment and fall back to\n      // just useEffect instead to avoid the warning, since neither will run anyway.\n\n      const subscribeForReact = useMemo(() => {\n        const subscribe = reactListener => {\n          if (!subscription) {\n            return () => {};\n          }\n\n          return subscribeUpdates(shouldHandleStateChanges, store, subscription, // @ts-ignore\n          childPropsSelector, lastWrapperProps, lastChildProps, renderIsScheduled, isMounted, childPropsFromStoreUpdate, notifyNestedSubs, reactListener);\n        };\n\n        return subscribe;\n      }, [subscription]);\n      useIsomorphicLayoutEffectWithArgs(captureWrapperProps, [lastWrapperProps, lastChildProps, renderIsScheduled, wrapperProps, childPropsFromStoreUpdate, notifyNestedSubs]);\n      let actualChildProps;\n\n      try {\n        actualChildProps = useSyncExternalStore( // TODO We're passing through a big wrapper that does a bunch of extra side effects besides subscribing\n        subscribeForReact, // TODO This is incredibly hacky. We've already processed the store update and calculated new child props,\n        // TODO and we're just passing that through so it triggers a re-render for us rather than relying on `uSES`.\n        actualChildPropsSelector, getServerState ? () => childPropsSelector(getServerState(), wrapperProps) : actualChildPropsSelector);\n      } catch (err) {\n        if (latestSubscriptionCallbackError.current) {\n          ;\n          err.message += `\\nThe error may be correlated with this previous error:\\n${latestSubscriptionCallbackError.current.stack}\\n\\n`;\n        }\n\n        throw err;\n      }\n\n      useIsomorphicLayoutEffect(() => {\n        latestSubscriptionCallbackError.current = undefined;\n        childPropsFromStoreUpdate.current = undefined;\n        lastChildProps.current = actualChildProps;\n      }); // Now that all that's done, we can finally try to actually render the child component.\n      // We memoize the elements for the rendered child component as an optimization.\n\n      const renderedWrappedComponent = useMemo(() => {\n        return (\n          /*#__PURE__*/\n          // @ts-ignore\n          React.createElement(WrappedComponent, _extends({}, actualChildProps, {\n            ref: reactReduxForwardedRef\n          }))\n        );\n      }, [reactReduxForwardedRef, WrappedComponent, actualChildProps]); // If React sees the exact same element reference as last time, it bails out of re-rendering\n      // that child, same as if it was wrapped in React.memo() or returned false from shouldComponentUpdate.\n\n      const renderedChild = useMemo(() => {\n        if (shouldHandleStateChanges) {\n          // If this component is subscribed to store updates, we need to pass its own\n          // subscription instance down to our descendants. That means rendering the same\n          // Context instance, and putting a different value into the context.\n          return /*#__PURE__*/React.createElement(ContextToUse.Provider, {\n            value: overriddenContextValue\n          }, renderedWrappedComponent);\n        }\n\n        return renderedWrappedComponent;\n      }, [ContextToUse, renderedWrappedComponent, overriddenContextValue]);\n      return renderedChild;\n    }\n\n    const _Connect = React.memo(ConnectFunction);\n\n    // Add a hacky cast to get the right output type\n    const Connect = _Connect;\n    Connect.WrappedComponent = WrappedComponent;\n    Connect.displayName = ConnectFunction.displayName = displayName;\n\n    if (forwardRef) {\n      const _forwarded = React.forwardRef(function forwardConnectRef(props, ref) {\n        // @ts-ignore\n        return /*#__PURE__*/React.createElement(Connect, _extends({}, props, {\n          reactReduxForwardedRef: ref\n        }));\n      });\n\n      const forwarded = _forwarded;\n      forwarded.displayName = displayName;\n      forwarded.WrappedComponent = WrappedComponent;\n      return hoistStatics(forwarded, WrappedComponent);\n    }\n\n    return hoistStatics(Connect, WrappedComponent);\n  };\n\n  return wrapWithConnect;\n}\n\nexport default connect;","import React, { useMemo } from 'react';\nimport { ReactReduxContext } from './Context';\nimport { createSubscription } from '../utils/Subscription';\nimport { useIsomorphicLayoutEffect } from '../utils/useIsomorphicLayoutEffect';\n\nfunction Provider({\n  store,\n  context,\n  children,\n  serverState\n}) {\n  const contextValue = useMemo(() => {\n    const subscription = createSubscription(store);\n    return {\n      store,\n      subscription,\n      getServerState: serverState ? () => serverState : undefined\n    };\n  }, [store, serverState]);\n  const previousState = useMemo(() => store.getState(), [store]);\n  useIsomorphicLayoutEffect(() => {\n    const {\n      subscription\n    } = contextValue;\n    subscription.onStateChange = subscription.notifyNestedSubs;\n    subscription.trySubscribe();\n\n    if (previousState !== store.getState()) {\n      subscription.notifyNestedSubs();\n    }\n\n    return () => {\n      subscription.tryUnsubscribe();\n      subscription.onStateChange = undefined;\n    };\n  }, [contextValue, previousState]);\n  const Context = context || ReactReduxContext; // @ts-ignore 'AnyAction' is assignable to the constraint of type 'A', but 'A' could be instantiated with a different subtype\n\n  return /*#__PURE__*/React.createElement(Context.Provider, {\n    value: contextValue\n  }, children);\n}\n\nexport default Provider;","import { ReactReduxContext } from '../components/Context';\nimport { useStore as useDefaultStore, createStoreHook } from './useStore';\n/**\r\n * Hook factory, which creates a `useDispatch` hook bound to a given context.\r\n *\r\n * @param {React.Context} [context=ReactReduxContext] Context passed to your `<Provider>`.\r\n * @returns {Function} A `useDispatch` hook bound to the specified context.\r\n */\n\nexport function createDispatchHook(context = ReactReduxContext) {\n  const useStore = // @ts-ignore\n  context === ReactReduxContext ? useDefaultStore : createStoreHook(context);\n  return function useDispatch() {\n    const store = useStore(); // @ts-ignore\n\n    return store.dispatch;\n  };\n}\n/**\r\n * A hook to access the redux `dispatch` function.\r\n *\r\n * @returns {any|function} redux store's `dispatch` function\r\n *\r\n * @example\r\n *\r\n * import React, { useCallback } from 'react'\r\n * import { useDispatch } from 'react-redux'\r\n *\r\n * export const CounterComponent = ({ value }) => {\r\n *   const dispatch = useDispatch()\r\n *   const increaseCounter = useCallback(() => dispatch({ type: 'increase-counter' }), [])\r\n *   return (\r\n *     <div>\r\n *       <span>{value}</span>\r\n *       <button onClick={increaseCounter}>Increase counter</button>\r\n *     </div>\r\n *   )\r\n * }\r\n */\n\nexport const useDispatch = /*#__PURE__*/createDispatchHook();","import { useContext, useDebugValue } from 'react';\nimport { useReduxContext as useDefaultReduxContext } from './useReduxContext';\nimport { ReactReduxContext } from '../components/Context';\nimport { notInitialized } from '../utils/useSyncExternalStore';\nlet useSyncExternalStoreWithSelector = notInitialized;\nexport const initializeUseSelector = fn => {\n  useSyncExternalStoreWithSelector = fn;\n};\n\nconst refEquality = (a, b) => a === b;\n/**\r\n * Hook factory, which creates a `useSelector` hook bound to a given context.\r\n *\r\n * @param {React.Context} [context=ReactReduxContext] Context passed to your `<Provider>`.\r\n * @returns {Function} A `useSelector` hook bound to the specified context.\r\n */\n\n\nexport function createSelectorHook(context = ReactReduxContext) {\n  const useReduxContext = context === ReactReduxContext ? useDefaultReduxContext : () => useContext(context);\n  return function useSelector(selector, equalityFn = refEquality) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!selector) {\n        throw new Error(`You must pass a selector to useSelector`);\n      }\n\n      if (typeof selector !== 'function') {\n        throw new Error(`You must pass a function as a selector to useSelector`);\n      }\n\n      if (typeof equalityFn !== 'function') {\n        throw new Error(`You must pass a function as an equality function to useSelector`);\n      }\n    }\n\n    const {\n      store,\n      subscription,\n      getServerState\n    } = useReduxContext();\n    const selectedState = useSyncExternalStoreWithSelector(subscription.addNestedSub, store.getState, getServerState || store.getState, selector, equalityFn);\n    useDebugValue(selectedState);\n    return selectedState;\n  };\n}\n/**\r\n * A hook to access the redux store's state. This hook takes a selector function\r\n * as an argument. The selector is called with the store state.\r\n *\r\n * This hook takes an optional equality comparison function as the second parameter\r\n * that allows you to customize the way the selected state is compared to determine\r\n * whether the component needs to be re-rendered.\r\n *\r\n * @param {Function} selector the selector function\r\n * @param {Function=} equalityFn the function that will be used to determine equality\r\n *\r\n * @returns {any} the selected state\r\n *\r\n * @example\r\n *\r\n * import React from 'react'\r\n * import { useSelector } from 'react-redux'\r\n *\r\n * export const CounterComponent = () => {\r\n *   const counter = useSelector(state => state.counter)\r\n *   return <div>{counter}</div>\r\n * }\r\n */\n\nexport const useSelector = /*#__PURE__*/createSelectorHook();","import _objectSpread from '@babel/runtime/helpers/esm/objectSpread2';\n\n/**\n * Adapted from React: https://github.com/facebook/react/blob/master/packages/shared/formatProdErrorMessage.js\n *\n * Do not require this module directly! Use normal throw error calls. These messages will be replaced with error codes\n * during build.\n * @param {number} code\n */\nfunction formatProdErrorMessage(code) {\n  return \"Minified Redux error #\" + code + \"; visit https://redux.js.org/Errors?code=\" + code + \" for the full message or \" + 'use the non-minified dev environment for full errors. ';\n}\n\n// Inlined version of the `symbol-observable` polyfill\nvar $$observable = (function () {\n  return typeof Symbol === 'function' && Symbol.observable || '@@observable';\n})();\n\n/**\n * These are private action types reserved by Redux.\n * For any unknown actions, you must return the current state.\n * If the current state is undefined, you must return the initial state.\n * Do not reference these action types directly in your code.\n */\nvar randomString = function randomString() {\n  return Math.random().toString(36).substring(7).split('').join('.');\n};\n\nvar ActionTypes = {\n  INIT: \"@@redux/INIT\" + randomString(),\n  REPLACE: \"@@redux/REPLACE\" + randomString(),\n  PROBE_UNKNOWN_ACTION: function PROBE_UNKNOWN_ACTION() {\n    return \"@@redux/PROBE_UNKNOWN_ACTION\" + randomString();\n  }\n};\n\n/**\n * @param {any} obj The object to inspect.\n * @returns {boolean} True if the argument appears to be a plain object.\n */\nfunction isPlainObject(obj) {\n  if (typeof obj !== 'object' || obj === null) return false;\n  var proto = obj;\n\n  while (Object.getPrototypeOf(proto) !== null) {\n    proto = Object.getPrototypeOf(proto);\n  }\n\n  return Object.getPrototypeOf(obj) === proto;\n}\n\n// Inlined / shortened version of `kindOf` from https://github.com/jonschlinkert/kind-of\nfunction miniKindOf(val) {\n  if (val === void 0) return 'undefined';\n  if (val === null) return 'null';\n  var type = typeof val;\n\n  switch (type) {\n    case 'boolean':\n    case 'string':\n    case 'number':\n    case 'symbol':\n    case 'function':\n      {\n        return type;\n      }\n  }\n\n  if (Array.isArray(val)) return 'array';\n  if (isDate(val)) return 'date';\n  if (isError(val)) return 'error';\n  var constructorName = ctorName(val);\n\n  switch (constructorName) {\n    case 'Symbol':\n    case 'Promise':\n    case 'WeakMap':\n    case 'WeakSet':\n    case 'Map':\n    case 'Set':\n      return constructorName;\n  } // other\n\n\n  return type.slice(8, -1).toLowerCase().replace(/\\s/g, '');\n}\n\nfunction ctorName(val) {\n  return typeof val.constructor === 'function' ? val.constructor.name : null;\n}\n\nfunction isError(val) {\n  return val instanceof Error || typeof val.message === 'string' && val.constructor && typeof val.constructor.stackTraceLimit === 'number';\n}\n\nfunction isDate(val) {\n  if (val instanceof Date) return true;\n  return typeof val.toDateString === 'function' && typeof val.getDate === 'function' && typeof val.setDate === 'function';\n}\n\nfunction kindOf(val) {\n  var typeOfVal = typeof val;\n\n  if (process.env.NODE_ENV !== 'production') {\n    typeOfVal = miniKindOf(val);\n  }\n\n  return typeOfVal;\n}\n\n/**\n * @deprecated\n *\n * **We recommend using the `configureStore` method\n * of the `@reduxjs/toolkit` package**, which replaces `createStore`.\n *\n * Redux Toolkit is our recommended approach for writing Redux logic today,\n * including store setup, reducers, data fetching, and more.\n *\n * **For more details, please read this Redux docs page:**\n * **https://redux.js.org/introduction/why-rtk-is-redux-today**\n *\n * `configureStore` from Redux Toolkit is an improved version of `createStore` that\n * simplifies setup and helps avoid common bugs.\n *\n * You should not be using the `redux` core package by itself today, except for learning purposes.\n * The `createStore` method from the core `redux` package will not be removed, but we encourage\n * all users to migrate to using Redux Toolkit for all Redux code.\n *\n * If you want to use `createStore` without this visual deprecation warning, use\n * the `legacy_createStore` import instead:\n *\n * `import { legacy_createStore as createStore} from 'redux'`\n *\n */\n\nfunction createStore(reducer, preloadedState, enhancer) {\n  var _ref2;\n\n  if (typeof preloadedState === 'function' && typeof enhancer === 'function' || typeof enhancer === 'function' && typeof arguments[3] === 'function') {\n    throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(0) : 'It looks like you are passing several store enhancers to ' + 'createStore(). This is not supported. Instead, compose them ' + 'together to a single function. See https://redux.js.org/tutorials/fundamentals/part-4-store#creating-a-store-with-enhancers for an example.');\n  }\n\n  if (typeof preloadedState === 'function' && typeof enhancer === 'undefined') {\n    enhancer = preloadedState;\n    preloadedState = undefined;\n  }\n\n  if (typeof enhancer !== 'undefined') {\n    if (typeof enhancer !== 'function') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(1) : \"Expected the enhancer to be a function. Instead, received: '\" + kindOf(enhancer) + \"'\");\n    }\n\n    return enhancer(createStore)(reducer, preloadedState);\n  }\n\n  if (typeof reducer !== 'function') {\n    throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(2) : \"Expected the root reducer to be a function. Instead, received: '\" + kindOf(reducer) + \"'\");\n  }\n\n  var currentReducer = reducer;\n  var currentState = preloadedState;\n  var currentListeners = [];\n  var nextListeners = currentListeners;\n  var isDispatching = false;\n  /**\n   * This makes a shallow copy of currentListeners so we can use\n   * nextListeners as a temporary list while dispatching.\n   *\n   * This prevents any bugs around consumers calling\n   * subscribe/unsubscribe in the middle of a dispatch.\n   */\n\n  function ensureCanMutateNextListeners() {\n    if (nextListeners === currentListeners) {\n      nextListeners = currentListeners.slice();\n    }\n  }\n  /**\n   * Reads the state tree managed by the store.\n   *\n   * @returns {any} The current state tree of your application.\n   */\n\n\n  function getState() {\n    if (isDispatching) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(3) : 'You may not call store.getState() while the reducer is executing. ' + 'The reducer has already received the state as an argument. ' + 'Pass it down from the top reducer instead of reading it from the store.');\n    }\n\n    return currentState;\n  }\n  /**\n   * Adds a change listener. It will be called any time an action is dispatched,\n   * and some part of the state tree may potentially have changed. You may then\n   * call `getState()` to read the current state tree inside the callback.\n   *\n   * You may call `dispatch()` from a change listener, with the following\n   * caveats:\n   *\n   * 1. The subscriptions are snapshotted just before every `dispatch()` call.\n   * If you subscribe or unsubscribe while the listeners are being invoked, this\n   * will not have any effect on the `dispatch()` that is currently in progress.\n   * However, the next `dispatch()` call, whether nested or not, will use a more\n   * recent snapshot of the subscription list.\n   *\n   * 2. The listener should not expect to see all state changes, as the state\n   * might have been updated multiple times during a nested `dispatch()` before\n   * the listener is called. It is, however, guaranteed that all subscribers\n   * registered before the `dispatch()` started will be called with the latest\n   * state by the time it exits.\n   *\n   * @param {Function} listener A callback to be invoked on every dispatch.\n   * @returns {Function} A function to remove this change listener.\n   */\n\n\n  function subscribe(listener) {\n    if (typeof listener !== 'function') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(4) : \"Expected the listener to be a function. Instead, received: '\" + kindOf(listener) + \"'\");\n    }\n\n    if (isDispatching) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(5) : 'You may not call store.subscribe() while the reducer is executing. ' + 'If you would like to be notified after the store has been updated, subscribe from a ' + 'component and invoke store.getState() in the callback to access the latest state. ' + 'See https://redux.js.org/api/store#subscribelistener for more details.');\n    }\n\n    var isSubscribed = true;\n    ensureCanMutateNextListeners();\n    nextListeners.push(listener);\n    return function unsubscribe() {\n      if (!isSubscribed) {\n        return;\n      }\n\n      if (isDispatching) {\n        throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(6) : 'You may not unsubscribe from a store listener while the reducer is executing. ' + 'See https://redux.js.org/api/store#subscribelistener for more details.');\n      }\n\n      isSubscribed = false;\n      ensureCanMutateNextListeners();\n      var index = nextListeners.indexOf(listener);\n      nextListeners.splice(index, 1);\n      currentListeners = null;\n    };\n  }\n  /**\n   * Dispatches an action. It is the only way to trigger a state change.\n   *\n   * The `reducer` function, used to create the store, will be called with the\n   * current state tree and the given `action`. Its return value will\n   * be considered the **next** state of the tree, and the change listeners\n   * will be notified.\n   *\n   * The base implementation only supports plain object actions. If you want to\n   * dispatch a Promise, an Observable, a thunk, or something else, you need to\n   * wrap your store creating function into the corresponding middleware. For\n   * example, see the documentation for the `redux-thunk` package. Even the\n   * middleware will eventually dispatch plain object actions using this method.\n   *\n   * @param {Object} action A plain object representing “what changed”. It is\n   * a good idea to keep actions serializable so you can record and replay user\n   * sessions, or use the time travelling `redux-devtools`. An action must have\n   * a `type` property which may not be `undefined`. It is a good idea to use\n   * string constants for action types.\n   *\n   * @returns {Object} For convenience, the same action object you dispatched.\n   *\n   * Note that, if you use a custom middleware, it may wrap `dispatch()` to\n   * return something else (for example, a Promise you can await).\n   */\n\n\n  function dispatch(action) {\n    if (!isPlainObject(action)) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(7) : \"Actions must be plain objects. Instead, the actual type was: '\" + kindOf(action) + \"'. You may need to add middleware to your store setup to handle dispatching other values, such as 'redux-thunk' to handle dispatching functions. See https://redux.js.org/tutorials/fundamentals/part-4-store#middleware and https://redux.js.org/tutorials/fundamentals/part-6-async-logic#using-the-redux-thunk-middleware for examples.\");\n    }\n\n    if (typeof action.type === 'undefined') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(8) : 'Actions may not have an undefined \"type\" property. You may have misspelled an action type string constant.');\n    }\n\n    if (isDispatching) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(9) : 'Reducers may not dispatch actions.');\n    }\n\n    try {\n      isDispatching = true;\n      currentState = currentReducer(currentState, action);\n    } finally {\n      isDispatching = false;\n    }\n\n    var listeners = currentListeners = nextListeners;\n\n    for (var i = 0; i < listeners.length; i++) {\n      var listener = listeners[i];\n      listener();\n    }\n\n    return action;\n  }\n  /**\n   * Replaces the reducer currently used by the store to calculate the state.\n   *\n   * You might need this if your app implements code splitting and you want to\n   * load some of the reducers dynamically. You might also need this if you\n   * implement a hot reloading mechanism for Redux.\n   *\n   * @param {Function} nextReducer The reducer for the store to use instead.\n   * @returns {void}\n   */\n\n\n  function replaceReducer(nextReducer) {\n    if (typeof nextReducer !== 'function') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(10) : \"Expected the nextReducer to be a function. Instead, received: '\" + kindOf(nextReducer));\n    }\n\n    currentReducer = nextReducer; // This action has a similiar effect to ActionTypes.INIT.\n    // Any reducers that existed in both the new and old rootReducer\n    // will receive the previous state. This effectively populates\n    // the new state tree with any relevant data from the old one.\n\n    dispatch({\n      type: ActionTypes.REPLACE\n    });\n  }\n  /**\n   * Interoperability point for observable/reactive libraries.\n   * @returns {observable} A minimal observable of state changes.\n   * For more information, see the observable proposal:\n   * https://github.com/tc39/proposal-observable\n   */\n\n\n  function observable() {\n    var _ref;\n\n    var outerSubscribe = subscribe;\n    return _ref = {\n      /**\n       * The minimal observable subscription method.\n       * @param {Object} observer Any object that can be used as an observer.\n       * The observer object should have a `next` method.\n       * @returns {subscription} An object with an `unsubscribe` method that can\n       * be used to unsubscribe the observable from the store, and prevent further\n       * emission of values from the observable.\n       */\n      subscribe: function subscribe(observer) {\n        if (typeof observer !== 'object' || observer === null) {\n          throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(11) : \"Expected the observer to be an object. Instead, received: '\" + kindOf(observer) + \"'\");\n        }\n\n        function observeState() {\n          if (observer.next) {\n            observer.next(getState());\n          }\n        }\n\n        observeState();\n        var unsubscribe = outerSubscribe(observeState);\n        return {\n          unsubscribe: unsubscribe\n        };\n      }\n    }, _ref[$$observable] = function () {\n      return this;\n    }, _ref;\n  } // When a store is created, an \"INIT\" action is dispatched so that every\n  // reducer returns their initial state. This effectively populates\n  // the initial state tree.\n\n\n  dispatch({\n    type: ActionTypes.INIT\n  });\n  return _ref2 = {\n    dispatch: dispatch,\n    subscribe: subscribe,\n    getState: getState,\n    replaceReducer: replaceReducer\n  }, _ref2[$$observable] = observable, _ref2;\n}\n/**\n * Creates a Redux store that holds the state tree.\n *\n * **We recommend using `configureStore` from the\n * `@reduxjs/toolkit` package**, which replaces `createStore`:\n * **https://redux.js.org/introduction/why-rtk-is-redux-today**\n *\n * The only way to change the data in the store is to call `dispatch()` on it.\n *\n * There should only be a single store in your app. To specify how different\n * parts of the state tree respond to actions, you may combine several reducers\n * into a single reducer function by using `combineReducers`.\n *\n * @param {Function} reducer A function that returns the next state tree, given\n * the current state tree and the action to handle.\n *\n * @param {any} [preloadedState] The initial state. You may optionally specify it\n * to hydrate the state from the server in universal apps, or to restore a\n * previously serialized user session.\n * If you use `combineReducers` to produce the root reducer function, this must be\n * an object with the same shape as `combineReducers` keys.\n *\n * @param {Function} [enhancer] The store enhancer. You may optionally specify it\n * to enhance the store with third-party capabilities such as middleware,\n * time travel, persistence, etc. The only store enhancer that ships with Redux\n * is `applyMiddleware()`.\n *\n * @returns {Store} A Redux store that lets you read the state, dispatch actions\n * and subscribe to changes.\n */\n\nvar legacy_createStore = createStore;\n\n/**\n * Prints a warning in the console if it exists.\n *\n * @param {String} message The warning message.\n * @returns {void}\n */\nfunction warning(message) {\n  /* eslint-disable no-console */\n  if (typeof console !== 'undefined' && typeof console.error === 'function') {\n    console.error(message);\n  }\n  /* eslint-enable no-console */\n\n\n  try {\n    // This error was thrown as a convenience so that if you enable\n    // \"break on all exceptions\" in your console,\n    // it would pause the execution at this line.\n    throw new Error(message);\n  } catch (e) {} // eslint-disable-line no-empty\n\n}\n\nfunction getUnexpectedStateShapeWarningMessage(inputState, reducers, action, unexpectedKeyCache) {\n  var reducerKeys = Object.keys(reducers);\n  var argumentName = action && action.type === ActionTypes.INIT ? 'preloadedState argument passed to createStore' : 'previous state received by the reducer';\n\n  if (reducerKeys.length === 0) {\n    return 'Store does not have a valid reducer. Make sure the argument passed ' + 'to combineReducers is an object whose values are reducers.';\n  }\n\n  if (!isPlainObject(inputState)) {\n    return \"The \" + argumentName + \" has unexpected type of \\\"\" + kindOf(inputState) + \"\\\". Expected argument to be an object with the following \" + (\"keys: \\\"\" + reducerKeys.join('\", \"') + \"\\\"\");\n  }\n\n  var unexpectedKeys = Object.keys(inputState).filter(function (key) {\n    return !reducers.hasOwnProperty(key) && !unexpectedKeyCache[key];\n  });\n  unexpectedKeys.forEach(function (key) {\n    unexpectedKeyCache[key] = true;\n  });\n  if (action && action.type === ActionTypes.REPLACE) return;\n\n  if (unexpectedKeys.length > 0) {\n    return \"Unexpected \" + (unexpectedKeys.length > 1 ? 'keys' : 'key') + \" \" + (\"\\\"\" + unexpectedKeys.join('\", \"') + \"\\\" found in \" + argumentName + \". \") + \"Expected to find one of the known reducer keys instead: \" + (\"\\\"\" + reducerKeys.join('\", \"') + \"\\\". Unexpected keys will be ignored.\");\n  }\n}\n\nfunction assertReducerShape(reducers) {\n  Object.keys(reducers).forEach(function (key) {\n    var reducer = reducers[key];\n    var initialState = reducer(undefined, {\n      type: ActionTypes.INIT\n    });\n\n    if (typeof initialState === 'undefined') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(12) : \"The slice reducer for key \\\"\" + key + \"\\\" returned undefined during initialization. \" + \"If the state passed to the reducer is undefined, you must \" + \"explicitly return the initial state. The initial state may \" + \"not be undefined. If you don't want to set a value for this reducer, \" + \"you can use null instead of undefined.\");\n    }\n\n    if (typeof reducer(undefined, {\n      type: ActionTypes.PROBE_UNKNOWN_ACTION()\n    }) === 'undefined') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(13) : \"The slice reducer for key \\\"\" + key + \"\\\" returned undefined when probed with a random type. \" + (\"Don't try to handle '\" + ActionTypes.INIT + \"' or other actions in \\\"redux/*\\\" \") + \"namespace. They are considered private. Instead, you must return the \" + \"current state for any unknown actions, unless it is undefined, \" + \"in which case you must return the initial state, regardless of the \" + \"action type. The initial state may not be undefined, but can be null.\");\n    }\n  });\n}\n/**\n * Turns an object whose values are different reducer functions, into a single\n * reducer function. It will call every child reducer, and gather their results\n * into a single state object, whose keys correspond to the keys of the passed\n * reducer functions.\n *\n * @param {Object} reducers An object whose values correspond to different\n * reducer functions that need to be combined into one. One handy way to obtain\n * it is to use ES6 `import * as reducers` syntax. The reducers may never return\n * undefined for any action. Instead, they should return their initial state\n * if the state passed to them was undefined, and the current state for any\n * unrecognized action.\n *\n * @returns {Function} A reducer function that invokes every reducer inside the\n * passed object, and builds a state object with the same shape.\n */\n\n\nfunction combineReducers(reducers) {\n  var reducerKeys = Object.keys(reducers);\n  var finalReducers = {};\n\n  for (var i = 0; i < reducerKeys.length; i++) {\n    var key = reducerKeys[i];\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof reducers[key] === 'undefined') {\n        warning(\"No reducer provided for key \\\"\" + key + \"\\\"\");\n      }\n    }\n\n    if (typeof reducers[key] === 'function') {\n      finalReducers[key] = reducers[key];\n    }\n  }\n\n  var finalReducerKeys = Object.keys(finalReducers); // This is used to make sure we don't warn about the same\n  // keys multiple times.\n\n  var unexpectedKeyCache;\n\n  if (process.env.NODE_ENV !== 'production') {\n    unexpectedKeyCache = {};\n  }\n\n  var shapeAssertionError;\n\n  try {\n    assertReducerShape(finalReducers);\n  } catch (e) {\n    shapeAssertionError = e;\n  }\n\n  return function combination(state, action) {\n    if (state === void 0) {\n      state = {};\n    }\n\n    if (shapeAssertionError) {\n      throw shapeAssertionError;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      var warningMessage = getUnexpectedStateShapeWarningMessage(state, finalReducers, action, unexpectedKeyCache);\n\n      if (warningMessage) {\n        warning(warningMessage);\n      }\n    }\n\n    var hasChanged = false;\n    var nextState = {};\n\n    for (var _i = 0; _i < finalReducerKeys.length; _i++) {\n      var _key = finalReducerKeys[_i];\n      var reducer = finalReducers[_key];\n      var previousStateForKey = state[_key];\n      var nextStateForKey = reducer(previousStateForKey, action);\n\n      if (typeof nextStateForKey === 'undefined') {\n        var actionType = action && action.type;\n        throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(14) : \"When called with an action of type \" + (actionType ? \"\\\"\" + String(actionType) + \"\\\"\" : '(unknown type)') + \", the slice reducer for key \\\"\" + _key + \"\\\" returned undefined. \" + \"To ignore an action, you must explicitly return the previous state. \" + \"If you want this reducer to hold no value, you can return null instead of undefined.\");\n      }\n\n      nextState[_key] = nextStateForKey;\n      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;\n    }\n\n    hasChanged = hasChanged || finalReducerKeys.length !== Object.keys(state).length;\n    return hasChanged ? nextState : state;\n  };\n}\n\nfunction bindActionCreator(actionCreator, dispatch) {\n  return function () {\n    return dispatch(actionCreator.apply(this, arguments));\n  };\n}\n/**\n * Turns an object whose values are action creators, into an object with the\n * same keys, but with every function wrapped into a `dispatch` call so they\n * may be invoked directly. This is just a convenience method, as you can call\n * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.\n *\n * For convenience, you can also pass an action creator as the first argument,\n * and get a dispatch wrapped function in return.\n *\n * @param {Function|Object} actionCreators An object whose values are action\n * creator functions. One handy way to obtain it is to use ES6 `import * as`\n * syntax. You may also pass a single function.\n *\n * @param {Function} dispatch The `dispatch` function available on your Redux\n * store.\n *\n * @returns {Function|Object} The object mimicking the original object, but with\n * every action creator wrapped into the `dispatch` call. If you passed a\n * function as `actionCreators`, the return value will also be a single\n * function.\n */\n\n\nfunction bindActionCreators(actionCreators, dispatch) {\n  if (typeof actionCreators === 'function') {\n    return bindActionCreator(actionCreators, dispatch);\n  }\n\n  if (typeof actionCreators !== 'object' || actionCreators === null) {\n    throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(16) : \"bindActionCreators expected an object or a function, but instead received: '\" + kindOf(actionCreators) + \"'. \" + \"Did you write \\\"import ActionCreators from\\\" instead of \\\"import * as ActionCreators from\\\"?\");\n  }\n\n  var boundActionCreators = {};\n\n  for (var key in actionCreators) {\n    var actionCreator = actionCreators[key];\n\n    if (typeof actionCreator === 'function') {\n      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);\n    }\n  }\n\n  return boundActionCreators;\n}\n\n/**\n * Composes single-argument functions from right to left. The rightmost\n * function can take multiple arguments as it provides the signature for\n * the resulting composite function.\n *\n * @param {...Function} funcs The functions to compose.\n * @returns {Function} A function obtained by composing the argument functions\n * from right to left. For example, compose(f, g, h) is identical to doing\n * (...args) => f(g(h(...args))).\n */\nfunction compose() {\n  for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {\n    funcs[_key] = arguments[_key];\n  }\n\n  if (funcs.length === 0) {\n    return function (arg) {\n      return arg;\n    };\n  }\n\n  if (funcs.length === 1) {\n    return funcs[0];\n  }\n\n  return funcs.reduce(function (a, b) {\n    return function () {\n      return a(b.apply(void 0, arguments));\n    };\n  });\n}\n\n/**\n * Creates a store enhancer that applies middleware to the dispatch method\n * of the Redux store. This is handy for a variety of tasks, such as expressing\n * asynchronous actions in a concise manner, or logging every action payload.\n *\n * See `redux-thunk` package as an example of the Redux middleware.\n *\n * Because middleware is potentially asynchronous, this should be the first\n * store enhancer in the composition chain.\n *\n * Note that each middleware will be given the `dispatch` and `getState` functions\n * as named arguments.\n *\n * @param {...Function} middlewares The middleware chain to be applied.\n * @returns {Function} A store enhancer applying the middleware.\n */\n\nfunction applyMiddleware() {\n  for (var _len = arguments.length, middlewares = new Array(_len), _key = 0; _key < _len; _key++) {\n    middlewares[_key] = arguments[_key];\n  }\n\n  return function (createStore) {\n    return function () {\n      var store = createStore.apply(void 0, arguments);\n\n      var _dispatch = function dispatch() {\n        throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(15) : 'Dispatching while constructing your middleware is not allowed. ' + 'Other middleware would not be applied to this dispatch.');\n      };\n\n      var middlewareAPI = {\n        getState: store.getState,\n        dispatch: function dispatch() {\n          return _dispatch.apply(void 0, arguments);\n        }\n      };\n      var chain = middlewares.map(function (middleware) {\n        return middleware(middlewareAPI);\n      });\n      _dispatch = compose.apply(void 0, chain)(store.dispatch);\n      return _objectSpread(_objectSpread({}, store), {}, {\n        dispatch: _dispatch\n      });\n    };\n  };\n}\n\n/*\n * This is a dummy function to check if the function name has been altered by minification.\n * If the function has been minified and NODE_ENV !== 'production', warn the user.\n */\n\nfunction isCrushed() {}\n\nif (process.env.NODE_ENV !== 'production' && typeof isCrushed.name === 'string' && isCrushed.name !== 'isCrushed') {\n  warning('You are currently using minified code outside of NODE_ENV === \"production\". ' + 'This means that you are running a slower development build of Redux. ' + 'You can use loose-envify (https://github.com/zertosh/loose-envify) for browserify ' + 'or setting mode to production in webpack (https://webpack.js.org/concepts/mode/) ' + 'to ensure you have the correct code for your production build.');\n}\n\nexport { ActionTypes as __DO_NOT_USE__ActionTypes, applyMiddleware, bindActionCreators, combineReducers, compose, createStore, legacy_createStore };\n","// The primary entry point assumes we're working with standard ReactDOM/RN, but\n// older versions that do not include `useSyncExternalStore` (React 16.9 - 17.x).\n// Because of that, the useSyncExternalStore compat shim is needed.\nimport { useSyncExternalStore } from 'use-sync-external-store/shim';\nimport { useSyncExternalStoreWithSelector } from 'use-sync-external-store/shim/with-selector';\nimport { unstable_batchedUpdates as batch } from './utils/reactBatchedUpdates';\nimport { setBatch } from './utils/batch';\nimport { initializeUseSelector } from './hooks/useSelector';\nimport { initializeConnect } from './components/connect';\ninitializeUseSelector(useSyncExternalStoreWithSelector);\ninitializeConnect(useSyncExternalStore); // Enable batched updates in our subscriptions for use\n// with standard React renderers (ReactDOM, React Native)\n\nsetBatch(batch);\nexport { batch };\nexport * from './exports';","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}","export const initialState = {\r\n  counties: {\r\n    number: [],\r\n    name: [],\r\n    governor: [],\r\n    senator: []\r\n  },\r\n  projects: {\r\n    details: {\r\n      projectID: [],\r\n      name: [],\r\n      description: [],\r\n      status: []\r\n    },\r\n    timelines: {\r\n      projectID: [],\r\n      approvalDate: [],\r\n      startDate: [],\r\n      endDate: [],\r\n      duration: []\r\n    },\r\n    implementation: {\r\n      projectID: [],\r\n      sector: [],\r\n      ministry: [],\r\n      agency: [],\r\n      contractor: [],\r\n      priority: []\r\n    },\r\n    finances: {\r\n      projectID: [],\r\n      estimatedCost: [],\r\n      budget: [],\r\n      financialYear: [],\r\n      fundingSource: []\r\n    },\r\n    locations: {\r\n      projectID: [],\r\n      countyNo: [],\r\n      subCounty: [],\r\n      constituency: [],\r\n      ward: []\r\n    }\r\n  },\r\n  tracking: {\r\n    date: [],\r\n    projectID: [],\r\n    field: [],\r\n    action: [],\r\n    valueFrom: [],\r\n    valueTo: []\r\n  },\r\n  admins: {\r\n    username: [],\r\n    firstName: [],\r\n    lastName: [],\r\n    email: []\r\n  }\r\n}","////////////////////////////////////////////////////////////////////////////////\n//#region Types and Constants\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Actions represent the type of change to a location value.\n */\nexport enum Action {\n  /**\n   * A POP indicates a change to an arbitrary index in the history stack, such\n   * as a back or forward navigation. It does not describe the direction of the\n   * navigation, only that the current index changed.\n   *\n   * Note: This is the default action for newly created history objects.\n   */\n  Pop = \"POP\",\n\n  /**\n   * A PUSH indicates a new entry being added to the history stack, such as when\n   * a link is clicked and a new page loads. When this happens, all subsequent\n   * entries in the stack are lost.\n   */\n  Push = \"PUSH\",\n\n  /**\n   * A REPLACE indicates the entry at the current index in the history stack\n   * being replaced by a new one.\n   */\n  Replace = \"REPLACE\",\n}\n\n/**\n * The pathname, search, and hash values of a URL.\n */\nexport interface Path {\n  /**\n   * A URL pathname, beginning with a /.\n   */\n  pathname: string;\n\n  /**\n   * A URL search string, beginning with a ?.\n   */\n  search: string;\n\n  /**\n   * A URL fragment identifier, beginning with a #.\n   */\n  hash: string;\n}\n\n/**\n * An entry in a history stack. A location contains information about the\n * URL path, as well as possibly some arbitrary state and a key.\n */\nexport interface Location extends Path {\n  /**\n   * A value of arbitrary data associated with this location.\n   */\n  state: any;\n\n  /**\n   * A unique string associated with this location. May be used to safely store\n   * and retrieve data in some other storage API, like `localStorage`.\n   *\n   * Note: This value is always \"default\" on the initial location.\n   */\n  key: string;\n}\n\n/**\n * A change to the current location.\n */\nexport interface Update {\n  /**\n   * The action that triggered the change.\n   */\n  action: Action;\n\n  /**\n   * The new location.\n   */\n  location: Location;\n}\n\n/**\n * A function that receives notifications about location changes.\n */\nexport interface Listener {\n  (update: Update): void;\n}\n\n/**\n * Describes a location that is the destination of some navigation, either via\n * `history.push` or `history.replace`. May be either a URL or the pieces of a\n * URL path.\n */\nexport type To = string | Partial<Path>;\n\n/**\n * A history is an interface to the navigation stack. The history serves as the\n * source of truth for the current location, as well as provides a set of\n * methods that may be used to change it.\n *\n * It is similar to the DOM's `window.history` object, but with a smaller, more\n * focused API.\n */\nexport interface History {\n  /**\n   * The last action that modified the current location. This will always be\n   * Action.Pop when a history instance is first created. This value is mutable.\n   */\n  readonly action: Action;\n\n  /**\n   * The current location. This value is mutable.\n   */\n  readonly location: Location;\n\n  /**\n   * Returns a valid href for the given `to` value that may be used as\n   * the value of an <a href> attribute.\n   *\n   * @param to - The destination URL\n   */\n  createHref(to: To): string;\n\n  /**\n   * Pushes a new location onto the history stack, increasing its length by one.\n   * If there were any entries in the stack after the current one, they are\n   * lost.\n   *\n   * @param to - The new URL\n   * @param state - Data to associate with the new location\n   */\n  push(to: To, state?: any): void;\n\n  /**\n   * Replaces the current location in the history stack with a new one.  The\n   * location that was replaced will no longer be available.\n   *\n   * @param to - The new URL\n   * @param state - Data to associate with the new location\n   */\n  replace(to: To, state?: any): void;\n\n  /**\n   * Navigates `n` entries backward/forward in the history stack relative to the\n   * current index. For example, a \"back\" navigation would use go(-1).\n   *\n   * @param delta - The delta in the stack index\n   */\n  go(delta: number): void;\n\n  /**\n   * Sets up a listener that will be called whenever the current location\n   * changes.\n   *\n   * @param listener - A function that will be called when the location changes\n   * @returns unlisten - A function that may be used to stop listening\n   */\n  listen(listener: Listener): () => void;\n}\n\ntype HistoryState = {\n  usr: any;\n  key?: string;\n};\n\nconst PopStateEventType = \"popstate\";\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Memory History\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A user-supplied object that describes a location. Used when providing\n * entries to `createMemoryHistory` via its `initialEntries` option.\n */\nexport type InitialEntry = string | Partial<Location>;\n\nexport type MemoryHistoryOptions = {\n  initialEntries?: InitialEntry[];\n  initialIndex?: number;\n  v5Compat?: boolean;\n};\n\n/**\n * A memory history stores locations in memory. This is useful in stateful\n * environments where there is no web browser, such as node tests or React\n * Native.\n */\nexport interface MemoryHistory extends History {\n  /**\n   * The current index in the history stack.\n   */\n  readonly index: number;\n}\n\n/**\n * Memory history stores the current location in memory. It is designed for use\n * in stateful non-browser environments like tests and React Native.\n */\nexport function createMemoryHistory(\n  options: MemoryHistoryOptions = {}\n): MemoryHistory {\n  let { initialEntries = [\"/\"], initialIndex, v5Compat = false } = options;\n  let entries: Location[]; // Declare so we can access from createMemoryLocation\n  entries = initialEntries.map((entry, index) =>\n    createMemoryLocation(\n      entry,\n      typeof entry === \"string\" ? null : entry.state,\n      index === 0 ? \"default\" : undefined\n    )\n  );\n  let index = clampIndex(\n    initialIndex == null ? entries.length - 1 : initialIndex\n  );\n  let action = Action.Pop;\n  let listener: Listener | null = null;\n\n  function clampIndex(n: number): number {\n    return Math.min(Math.max(n, 0), entries.length - 1);\n  }\n  function getCurrentLocation(): Location {\n    return entries[index];\n  }\n  function createMemoryLocation(\n    to: To,\n    state: any = null,\n    key?: string\n  ): Location {\n    let location = createLocation(\n      entries ? getCurrentLocation().pathname : \"/\",\n      to,\n      state,\n      key\n    );\n    warning(\n      location.pathname.charAt(0) === \"/\",\n      `relative pathnames are not supported in memory history: ${JSON.stringify(\n        to\n      )}`\n    );\n    return location;\n  }\n\n  let history: MemoryHistory = {\n    get index() {\n      return index;\n    },\n    get action() {\n      return action;\n    },\n    get location() {\n      return getCurrentLocation();\n    },\n    createHref(to) {\n      return typeof to === \"string\" ? to : createPath(to);\n    },\n    push(to, state) {\n      action = Action.Push;\n      let nextLocation = createMemoryLocation(to, state);\n      index += 1;\n      entries.splice(index, entries.length, nextLocation);\n      if (v5Compat && listener) {\n        listener({ action, location: nextLocation });\n      }\n    },\n    replace(to, state) {\n      action = Action.Replace;\n      let nextLocation = createMemoryLocation(to, state);\n      entries[index] = nextLocation;\n      if (v5Compat && listener) {\n        listener({ action, location: nextLocation });\n      }\n    },\n    go(delta) {\n      action = Action.Pop;\n      index = clampIndex(index + delta);\n      if (listener) {\n        listener({ action, location: getCurrentLocation() });\n      }\n    },\n    listen(fn: Listener) {\n      listener = fn;\n      return () => {\n        listener = null;\n      };\n    },\n  };\n\n  return history;\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Browser History\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A browser history stores the current location in regular URLs in a web\n * browser environment. This is the standard for most web apps and provides the\n * cleanest URLs the browser's address bar.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#browserhistory\n */\nexport interface BrowserHistory extends UrlHistory {}\n\nexport type BrowserHistoryOptions = UrlHistoryOptions;\n\n/**\n * Browser history stores the location in regular URLs. This is the standard for\n * most web apps, but it requires some configuration on the server to ensure you\n * serve the same app at multiple URLs.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createbrowserhistory\n */\nexport function createBrowserHistory(\n  options: BrowserHistoryOptions = {}\n): BrowserHistory {\n  function createBrowserLocation(\n    window: Window,\n    globalHistory: Window[\"history\"]\n  ) {\n    let { pathname, search, hash } = window.location;\n    return createLocation(\n      \"\",\n      { pathname, search, hash },\n      // state defaults to `null` because `window.history.state` does\n      (globalHistory.state && globalHistory.state.usr) || null,\n      (globalHistory.state && globalHistory.state.key) || \"default\"\n    );\n  }\n\n  function createBrowserHref(window: Window, to: To) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n\n  return getUrlBasedHistory(\n    createBrowserLocation,\n    createBrowserHref,\n    null,\n    options\n  );\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Hash History\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A hash history stores the current location in the fragment identifier portion\n * of the URL in a web browser environment.\n *\n * This is ideal for apps that do not control the server for some reason\n * (because the fragment identifier is never sent to the server), including some\n * shared hosting environments that do not provide fine-grained controls over\n * which pages are served at which URLs.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#hashhistory\n */\nexport interface HashHistory extends UrlHistory {}\n\nexport type HashHistoryOptions = UrlHistoryOptions;\n\n/**\n * Hash history stores the location in window.location.hash. This makes it ideal\n * for situations where you don't want to send the location to the server for\n * some reason, either because you do cannot configure it or the URL space is\n * reserved for something else.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createhashhistory\n */\nexport function createHashHistory(\n  options: HashHistoryOptions = {}\n): HashHistory {\n  function createHashLocation(\n    window: Window,\n    globalHistory: Window[\"history\"]\n  ) {\n    let {\n      pathname = \"/\",\n      search = \"\",\n      hash = \"\",\n    } = parsePath(window.location.hash.substr(1));\n    return createLocation(\n      \"\",\n      { pathname, search, hash },\n      // state defaults to `null` because `window.history.state` does\n      (globalHistory.state && globalHistory.state.usr) || null,\n      (globalHistory.state && globalHistory.state.key) || \"default\"\n    );\n  }\n\n  function createHashHref(window: Window, to: To) {\n    let base = window.document.querySelector(\"base\");\n    let href = \"\";\n\n    if (base && base.getAttribute(\"href\")) {\n      let url = window.location.href;\n      let hashIndex = url.indexOf(\"#\");\n      href = hashIndex === -1 ? url : url.slice(0, hashIndex);\n    }\n\n    return href + \"#\" + (typeof to === \"string\" ? to : createPath(to));\n  }\n\n  function validateHashLocation(location: Location, to: To) {\n    warning(\n      location.pathname.charAt(0) === \"/\",\n      `relative pathnames are not supported in hash history.push(${JSON.stringify(\n        to\n      )})`\n    );\n  }\n\n  return getUrlBasedHistory(\n    createHashLocation,\n    createHashHref,\n    validateHashLocation,\n    options\n  );\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region UTILS\n////////////////////////////////////////////////////////////////////////////////\n\nfunction warning(cond: any, message: string) {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n\n    try {\n      // Welcome to debugging history!\n      //\n      // This error is thrown as a convenience so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message);\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\n\nfunction createKey() {\n  return Math.random().toString(36).substr(2, 8);\n}\n\n/**\n * For browser-based histories, we combine the state and key into an object\n */\nfunction getHistoryState(location: Location): HistoryState {\n  return {\n    usr: location.state,\n    key: location.key,\n  };\n}\n\n/**\n * Creates a Location object with a unique key from the given Path\n */\nexport function createLocation(\n  current: string | Location,\n  to: To,\n  state: any = null,\n  key?: string\n): Readonly<Location> {\n  let location: Readonly<Location> = {\n    pathname: typeof current === \"string\" ? current : current.pathname,\n    search: \"\",\n    hash: \"\",\n    ...(typeof to === \"string\" ? parsePath(to) : to),\n    state,\n    // TODO: This could be cleaned up.  push/replace should probably just take\n    // full Locations now and avoid the need to run through this flow at all\n    // But that's a pretty big refactor to the current test suite so going to\n    // keep as is for the time being and just let any incoming keys take precedence\n    key: (to && (to as Location).key) || key || createKey(),\n  };\n  return location;\n}\n\n/**\n * Creates a string URL path from the given pathname, search, and hash components.\n */\nexport function createPath({\n  pathname = \"/\",\n  search = \"\",\n  hash = \"\",\n}: Partial<Path>) {\n  if (search && search !== \"?\")\n    pathname += search.charAt(0) === \"?\" ? search : \"?\" + search;\n  if (hash && hash !== \"#\")\n    pathname += hash.charAt(0) === \"#\" ? hash : \"#\" + hash;\n  return pathname;\n}\n\n/**\n * Parses a string URL path into its separate pathname, search, and hash components.\n */\nexport function parsePath(path: string): Partial<Path> {\n  let parsedPath: Partial<Path> = {};\n\n  if (path) {\n    let hashIndex = path.indexOf(\"#\");\n    if (hashIndex >= 0) {\n      parsedPath.hash = path.substr(hashIndex);\n      path = path.substr(0, hashIndex);\n    }\n\n    let searchIndex = path.indexOf(\"?\");\n    if (searchIndex >= 0) {\n      parsedPath.search = path.substr(searchIndex);\n      path = path.substr(0, searchIndex);\n    }\n\n    if (path) {\n      parsedPath.pathname = path;\n    }\n  }\n\n  return parsedPath;\n}\n\nexport interface UrlHistory extends History {}\n\nexport type UrlHistoryOptions = {\n  window?: Window;\n  v5Compat?: boolean;\n};\n\nfunction getUrlBasedHistory(\n  getLocation: (window: Window, globalHistory: Window[\"history\"]) => Location,\n  createHref: (window: Window, to: To) => string,\n  validateLocation: ((location: Location, to: To) => void) | null,\n  options: UrlHistoryOptions = {}\n): UrlHistory {\n  let { window = document.defaultView!, v5Compat = false } = options;\n  let globalHistory = window.history;\n  let action = Action.Pop;\n  let listener: Listener | null = null;\n\n  function handlePop() {\n    action = Action.Pop;\n    if (listener) {\n      listener({ action, location: history.location });\n    }\n  }\n\n  function push(to: To, state?: any) {\n    action = Action.Push;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n\n    let historyState = getHistoryState(location);\n    let url = history.createHref(location);\n\n    // try...catch because iOS limits us to 100 pushState calls :/\n    try {\n      globalHistory.pushState(historyState, \"\", url);\n    } catch (error) {\n      // They are going to lose state here, but there is no real\n      // way to warn them about it since the page will refresh...\n      window.location.assign(url);\n    }\n\n    if (v5Compat && listener) {\n      listener({ action, location });\n    }\n  }\n\n  function replace(to: To, state?: any) {\n    action = Action.Replace;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n\n    let historyState = getHistoryState(location);\n    let url = history.createHref(location);\n    globalHistory.replaceState(historyState, \"\", url);\n\n    if (v5Compat && listener) {\n      listener({ action, location: location });\n    }\n  }\n\n  let history: History = {\n    get action() {\n      return action;\n    },\n    get location() {\n      return getLocation(window, globalHistory);\n    },\n    listen(fn: Listener) {\n      if (listener) {\n        throw new Error(\"A history only accepts one active listener\");\n      }\n      window.addEventListener(PopStateEventType, handlePop);\n      listener = fn;\n\n      return () => {\n        window.removeEventListener(PopStateEventType, handlePop);\n        listener = null;\n      };\n    },\n    createHref(to) {\n      return createHref(window, to);\n    },\n    push,\n    replace,\n    go(n) {\n      return globalHistory.go(n);\n    },\n  };\n\n  return history;\n}\n\n//#endregion\n","import { legacy_createStore as createStore } from \"redux\"\r\nimport { appReducer } from './Reducer'\r\n\r\nexport const store = createStore(appReducer)","import { initialState } from './State'\r\n\r\nexport const appReducer = (state = initialState, action) => {\r\n  switch(action.type) {\r\n    case 'COU_ADD':\r\n      return {...state,\r\n        counties: {\r\n          number: [...state.counties.number, action.number],\r\n          name: [...state.counties.name, action.name],\r\n          governor: [...state.counties.governor, action.governor],\r\n          senator: [...state.counties.senator, action.senator]\r\n        }\r\n      }\r\n    case 'COU_RESET':\r\n      return {...state,\r\n        counties: { number: [], name: [], governor: [], senator: [] }\r\n      }\r\n    case 'PRO_ADD_DETAILS':\r\n      return {...state,\r\n        projects: {...state.projects,\r\n          details: {\r\n            projectID: [...state.projects.details.projectID, action.projectID],\r\n            name: [...state.projects.details.name, action.name],\r\n            description: [...state.projects.details.description, action.description],\r\n            status: [...state.projects.details.status, action.status]\r\n          }\r\n        }\r\n      }\r\n    case 'PRO_RESET_DETAILS':\r\n      return {...state,\r\n        projects: {...state.projects,\r\n          details: { projectID: [], name: [], description: [], status: [] }\r\n        }\r\n      }\r\n    case 'PRO_ADD_TIMELINES':\r\n      return {...state,\r\n        projects: {...state.projects,\r\n          timelines: {\r\n            projectID: [...state.projects.timelines.projectID, action.projectID],\r\n            approvalDate: [...state.projects.timelines.approvalDate, action.approvalDate],\r\n            startDate: [...state.projects.timelines.startDate, action.startDate],\r\n            endDate: [...state.projects.timelines.endDate, action.endDate],\r\n            duration: [...state.projects.timelines.duration, action.duration]\r\n          }\r\n        }\r\n      }\r\n    case 'PRO_RESET_TIMELINES':\r\n      return {...state,\r\n        projects: {...state.projects,\r\n          timelines: { projectID: [], approvalDate: [], startDate: [], endDate: [], duration: [] }\r\n        }\r\n      }\r\n    case 'PRO_ADD_IMPLEMENTATIONS':\r\n      return {...state,\r\n        projects: {...state.projects,\r\n          implementation: {\r\n            projectID: [...state.projects.implementation.projectID, action.projectID],\r\n            sector: [...state.projects.implementation.sector, action.sector],\r\n            ministry: [...state.projects.implementation.ministry, action.ministry],\r\n            agency: [...state.projects.implementation.agency, action.agency],\r\n            contractor: [...state.projects.implementation.contractor, action.contractor],\r\n            priority: [...state.projects.implementation.priority, action.priority]\r\n          }\r\n        }\r\n      }\r\n    case 'PRO_RESET_IMPLEMENTATIONS':\r\n      return {...state,\r\n        projects: {...state.projects,\r\n          implementation: { projectID: [], sector: [], ministry: [], agency: [], contractor: [], contacts: [], priority: [] }\r\n        }\r\n      }\r\n    case 'PRO_ADD_FINANCES':\r\n      return {...state,\r\n        projects: {...state.projects,\r\n          finances: {\r\n            projectID: [...state.projects.finances.projectID, action.projectID],\r\n            estimatedCost: [...state.projects.finances.estimatedCost, action.estimatedCost],\r\n            budget: [...state.projects.finances.budget, action.budget],\r\n            financialYear: [...state.projects.finances.financialYear, action.financialYear],\r\n            fundingSource: [...state.projects.finances.fundingSource, action.fundingSource]\r\n          }\r\n        }\r\n      }\r\n    case 'PRO_RESET_FINANCES':\r\n      return {...state,\r\n        projects: {...state.projects,\r\n          finances: { projectID: [], estimatedCost: [], budget: [], financialYear: [], fundingSource: [] }\r\n        }\r\n      }\r\n    case 'PRO_ADD_LOCATIONS':\r\n      return {...state,\r\n        projects: {...state.projects,\r\n          locations: {\r\n            projectID: [...state.projects.locations.projectID, action.projectID],\r\n            countyNo: [...state.projects.locations.countyNo, action.countyNo],\r\n            subCounty: [...state.projects.locations.subCounty, action.subCounty],\r\n            constituency: [...state.projects.locations.constituency, action.constituency],\r\n            ward: [...state.projects.locations.ward, action.ward]\r\n          }\r\n        }\r\n      }\r\n    case 'PRO_RESET_LOCATIONS':\r\n      return {...state,\r\n        projects: {...state.projects,\r\n          locations: { projectID: [], countyNo: [], subCounty: [], constituency: [], ward: [] }  \r\n        }\r\n      }\r\n    case 'TRA_ADD':\r\n    return {...state,\r\n      tracking: {\r\n        date: [...state.tracking.date, action.date],\r\n        projectID: [...state.tracking.projectID, action.projectID],\r\n        field: [...state.tracking.field, action.field],\r\n        action: [...state.tracking.action, action.action],\r\n        valueFrom: [...state.tracking.valueFrom, action.valueFrom],\r\n        valueTo: [...state.tracking.valueTo, action.valueTo]\r\n      }\r\n    }\r\n  case 'TRA_RESET':\r\n    return {...state,\r\n      tracking: { date: [], projectID: [], field: [], action: [], valueFrom: [], valueTo: [] }\r\n    }\r\n  case 'ADM_ADD':\r\n    return {...state,\r\n      admins: {\r\n        username: [...state.admins.username, action.username],\r\n        firstName: [...state.admins.firstName, action.firstName],\r\n        lastName: [...state.admins.lastName, action.lastName],\r\n        email: [...state.admins.email, action.email]\r\n      }\r\n    }\r\n  case 'ADM_RESET':\r\n    return {...state,\r\n      admins: { username: [], firstName: [], lastName: [], email: [] }\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return assertThisInitialized(self);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nimport possibleConstructorReturn from \"./possibleConstructorReturn.js\";\nexport default function _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return possibleConstructorReturn(this, result);\n  };\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct.bind();\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeFunction from \"./isNativeFunction.js\";\nimport construct from \"./construct.js\";\nexport default function _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n\n      _cache.set(Class, Wrapper);\n    }\n\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n\n  return _wrapNativeSuper(Class);\n}","export default function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}","import type { Location, Path, To } from \"./history\";\nimport { parsePath } from \"./history\";\n\n/**\n * Map of routeId -> data returned from a loader/action/error\n */\nexport interface RouteData {\n  [routeId: string]: any;\n}\n\nexport enum ResultType {\n  data = \"data\",\n  deferred = \"deferred\",\n  redirect = \"redirect\",\n  error = \"error\",\n}\n\n/**\n * Successful result from a loader or action\n */\nexport interface SuccessResult {\n  type: ResultType.data;\n  data: any;\n  statusCode?: number;\n  headers?: Headers;\n}\n\n/**\n * Successful defer() result from a loader or action\n */\nexport interface DeferredResult {\n  type: ResultType.deferred;\n  deferredData: DeferredData;\n}\n\n/**\n * Redirect result from a loader or action\n */\nexport interface RedirectResult {\n  type: ResultType.redirect;\n  status: number;\n  location: string;\n  revalidate: boolean;\n}\n\n/**\n * Unsuccessful result from a loader or action\n */\nexport interface ErrorResult {\n  type: ResultType.error;\n  error: any;\n  headers?: Headers;\n}\n\n/**\n * Result from a loader or action - potentially successful or unsuccessful\n */\nexport type DataResult =\n  | SuccessResult\n  | DeferredResult\n  | RedirectResult\n  | ErrorResult;\n\nexport type FormMethod = \"get\" | \"post\" | \"put\" | \"patch\" | \"delete\";\nexport type FormEncType =\n  | \"application/x-www-form-urlencoded\"\n  | \"multipart/form-data\";\n\n/**\n * @private\n * Internal interface to pass around for action submissions, not intended for\n * external consumption\n */\nexport interface Submission {\n  formMethod: Exclude<FormMethod, \"get\">;\n  formAction: string;\n  formEncType: FormEncType;\n  formData: FormData;\n}\n\n/**\n * @private\n * Arguments passed to route loader/action functions.  Same for now but we keep\n * this as a private implementation detail in case they diverge in the future.\n */\ninterface DataFunctionArgs {\n  request: Request;\n  params: Params;\n}\n\n/**\n * Arguments passed to loader functions\n */\nexport interface LoaderFunctionArgs extends DataFunctionArgs {}\n\n/**\n * Arguments passed to action functions\n */\nexport interface ActionFunctionArgs extends DataFunctionArgs {}\n\n/**\n * Route loader function signature\n */\nexport interface LoaderFunction {\n  (args: LoaderFunctionArgs): Promise<Response> | Response | Promise<any> | any;\n}\n\n/**\n * Route action function signature\n */\nexport interface ActionFunction {\n  (args: ActionFunctionArgs): Promise<Response> | Response | Promise<any> | any;\n}\n\n/**\n * Route shouldRevalidate function signature.  This runs after any submission\n * (navigation or fetcher), so we flatten the navigation/fetcher submission\n * onto the arguments.  It shouldn't matter whether it came from a navigation\n * or a fetcher, what really matters is the URLs and the formData since loaders\n * have to re-run based on the data models that were potentially mutated.\n */\nexport interface ShouldRevalidateFunction {\n  (args: {\n    currentUrl: URL;\n    currentParams: AgnosticDataRouteMatch[\"params\"];\n    nextUrl: URL;\n    nextParams: AgnosticDataRouteMatch[\"params\"];\n    formMethod?: Submission[\"formMethod\"];\n    formAction?: Submission[\"formAction\"];\n    formEncType?: Submission[\"formEncType\"];\n    formData?: Submission[\"formData\"];\n    actionResult?: DataResult;\n    defaultShouldRevalidate: boolean;\n  }): boolean;\n}\n\n/**\n * A route object represents a logical route, with (optionally) its child\n * routes organized in a tree-like structure.\n */\nexport interface AgnosticRouteObject {\n  caseSensitive?: boolean;\n  children?: AgnosticRouteObject[];\n  index?: boolean;\n  path?: string;\n  id?: string;\n  loader?: LoaderFunction;\n  action?: ActionFunction;\n  hasErrorBoundary?: boolean;\n  shouldRevalidate?: ShouldRevalidateFunction;\n  handle?: any;\n}\n\n/**\n * A data route object, which is just a RouteObject with a required unique ID\n */\nexport interface AgnosticDataRouteObject extends AgnosticRouteObject {\n  children?: AgnosticDataRouteObject[];\n  id: string;\n}\n\n// Recursive helper for finding path parameters in the absence of wildcards\ntype _PathParam<Path extends string> =\n  // split path into individual path segments\n  Path extends `${infer L}/${infer R}`\n    ? _PathParam<L> | _PathParam<R>\n    : // find params after `:`\n    Path extends `${string}:${infer Param}`\n    ? Param\n    : // otherwise, there aren't any params present\n      never;\n\n/**\n * Examples:\n * \"/a/b/*\" -> \"*\"\n * \":a\" -> \"a\"\n * \"/a/:b\" -> \"b\"\n * \"/a/blahblahblah:b\" -> \"b\"\n * \"/:a/:b\" -> \"a\" | \"b\"\n * \"/:a/b/:c/*\" -> \"a\" | \"c\" | \"*\"\n */\ntype PathParam<Path extends string> =\n  // check if path is just a wildcard\n  Path extends \"*\"\n    ? \"*\"\n    : // look for wildcard at the end of the path\n    Path extends `${infer Rest}/*`\n    ? \"*\" | _PathParam<Rest>\n    : // look for params in the absence of wildcards\n      _PathParam<Path>;\n\n// Attempt to parse the given string segment. If it fails, then just return the\n// plain string type as a default fallback. Otherwise return the union of the\n// parsed string literals that were referenced as dynamic segments in the route.\nexport type ParamParseKey<Segment extends string> =\n  // if could not find path params, fallback to `string`\n  [PathParam<Segment>] extends [never] ? string : PathParam<Segment>;\n\n/**\n * The parameters that were parsed from the URL path.\n */\nexport type Params<Key extends string = string> = {\n  readonly [key in Key]: string | undefined;\n};\n\n/**\n * A RouteMatch contains info about how a route matched a URL.\n */\nexport interface AgnosticRouteMatch<\n  ParamKey extends string = string,\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n> {\n  /**\n   * The names and values of dynamic parameters in the URL.\n   */\n  params: Params<ParamKey>;\n  /**\n   * The portion of the URL pathname that was matched.\n   */\n  pathname: string;\n  /**\n   * The portion of the URL pathname that was matched before child routes.\n   */\n  pathnameBase: string;\n  /**\n   * The route object that was used to match.\n   */\n  route: RouteObjectType;\n}\n\nexport interface AgnosticDataRouteMatch\n  extends AgnosticRouteMatch<string, AgnosticDataRouteObject> {}\n\n// Walk the route tree generating unique IDs where necessary so we are working\n// solely with AgnosticDataRouteObject's within the Router\nexport function convertRoutesToDataRoutes(\n  routes: AgnosticRouteObject[],\n  parentPath: number[] = [],\n  allIds: Set<string> = new Set<string>()\n): AgnosticDataRouteObject[] {\n  return routes.map((route, index) => {\n    let treePath = [...parentPath, index];\n    let id = typeof route.id === \"string\" ? route.id : treePath.join(\"-\");\n    invariant(\n      !allIds.has(id),\n      `Found a route id collision on id \"${id}\".  Route ` +\n        \"id's must be globally unique within Data Router usages\"\n    );\n    allIds.add(id);\n    let dataRoute: AgnosticDataRouteObject = {\n      ...route,\n      id,\n      children: route.children\n        ? convertRoutesToDataRoutes(route.children, treePath, allIds)\n        : undefined,\n    };\n    return dataRoute;\n  });\n}\n\n/**\n * Matches the given routes to a location and returns the match data.\n *\n * @see https://reactrouter.com/docs/en/v6/utils/match-routes\n */\nexport function matchRoutes<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n>(\n  routes: RouteObjectType[],\n  locationArg: Partial<Location> | string,\n  basename = \"/\"\n): AgnosticRouteMatch<string, RouteObjectType>[] | null {\n  let location =\n    typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n\n  let pathname = stripBasename(location.pathname || \"/\", basename);\n\n  if (pathname == null) {\n    return null;\n  }\n\n  let branches = flattenRoutes(routes);\n  rankRouteBranches(branches);\n\n  let matches = null;\n  for (let i = 0; matches == null && i < branches.length; ++i) {\n    matches = matchRouteBranch<string, RouteObjectType>(branches[i], pathname);\n  }\n\n  return matches;\n}\n\ninterface RouteMeta<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n> {\n  relativePath: string;\n  caseSensitive: boolean;\n  childrenIndex: number;\n  route: RouteObjectType;\n}\n\ninterface RouteBranch<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n> {\n  path: string;\n  score: number;\n  routesMeta: RouteMeta<RouteObjectType>[];\n}\n\nfunction flattenRoutes<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n>(\n  routes: RouteObjectType[],\n  branches: RouteBranch<RouteObjectType>[] = [],\n  parentsMeta: RouteMeta<RouteObjectType>[] = [],\n  parentPath = \"\"\n): RouteBranch<RouteObjectType>[] {\n  routes.forEach((route, index) => {\n    let meta: RouteMeta<RouteObjectType> = {\n      relativePath: route.path || \"\",\n      caseSensitive: route.caseSensitive === true,\n      childrenIndex: index,\n      route,\n    };\n\n    if (meta.relativePath.startsWith(\"/\")) {\n      invariant(\n        meta.relativePath.startsWith(parentPath),\n        `Absolute route path \"${meta.relativePath}\" nested under path ` +\n          `\"${parentPath}\" is not valid. An absolute child route path ` +\n          `must start with the combined path of all its parent routes.`\n      );\n\n      meta.relativePath = meta.relativePath.slice(parentPath.length);\n    }\n\n    let path = joinPaths([parentPath, meta.relativePath]);\n    let routesMeta = parentsMeta.concat(meta);\n\n    // Add the children before adding this route to the array so we traverse the\n    // route tree depth-first and child routes appear before their parents in\n    // the \"flattened\" version.\n    if (route.children && route.children.length > 0) {\n      invariant(\n        route.index !== true,\n        `Index routes must not have child routes. Please remove ` +\n          `all child routes from route path \"${path}\".`\n      );\n\n      flattenRoutes(route.children, branches, routesMeta, path);\n    }\n\n    // Routes without a path shouldn't ever match by themselves unless they are\n    // index routes, so don't add them to the list of possible branches.\n    if (route.path == null && !route.index) {\n      return;\n    }\n\n    branches.push({ path, score: computeScore(path, route.index), routesMeta });\n  });\n\n  return branches;\n}\n\nfunction rankRouteBranches(branches: RouteBranch[]): void {\n  branches.sort((a, b) =>\n    a.score !== b.score\n      ? b.score - a.score // Higher score first\n      : compareIndexes(\n          a.routesMeta.map((meta) => meta.childrenIndex),\n          b.routesMeta.map((meta) => meta.childrenIndex)\n        )\n  );\n}\n\nconst paramRe = /^:\\w+$/;\nconst dynamicSegmentValue = 3;\nconst indexRouteValue = 2;\nconst emptySegmentValue = 1;\nconst staticSegmentValue = 10;\nconst splatPenalty = -2;\nconst isSplat = (s: string) => s === \"*\";\n\nfunction computeScore(path: string, index: boolean | undefined): number {\n  let segments = path.split(\"/\");\n  let initialScore = segments.length;\n  if (segments.some(isSplat)) {\n    initialScore += splatPenalty;\n  }\n\n  if (index) {\n    initialScore += indexRouteValue;\n  }\n\n  return segments\n    .filter((s) => !isSplat(s))\n    .reduce(\n      (score, segment) =>\n        score +\n        (paramRe.test(segment)\n          ? dynamicSegmentValue\n          : segment === \"\"\n          ? emptySegmentValue\n          : staticSegmentValue),\n      initialScore\n    );\n}\n\nfunction compareIndexes(a: number[], b: number[]): number {\n  let siblings =\n    a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]);\n\n  return siblings\n    ? // If two routes are siblings, we should try to match the earlier sibling\n      // first. This allows people to have fine-grained control over the matching\n      // behavior by simply putting routes with identical paths in the order they\n      // want them tried.\n      a[a.length - 1] - b[b.length - 1]\n    : // Otherwise, it doesn't really make sense to rank non-siblings by index,\n      // so they sort equally.\n      0;\n}\n\nfunction matchRouteBranch<\n  ParamKey extends string = string,\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n>(\n  branch: RouteBranch<RouteObjectType>,\n  pathname: string\n): AgnosticRouteMatch<ParamKey, RouteObjectType>[] | null {\n  let { routesMeta } = branch;\n\n  let matchedParams = {};\n  let matchedPathname = \"/\";\n  let matches: AgnosticRouteMatch<ParamKey, RouteObjectType>[] = [];\n  for (let i = 0; i < routesMeta.length; ++i) {\n    let meta = routesMeta[i];\n    let end = i === routesMeta.length - 1;\n    let remainingPathname =\n      matchedPathname === \"/\"\n        ? pathname\n        : pathname.slice(matchedPathname.length) || \"/\";\n    let match = matchPath(\n      { path: meta.relativePath, caseSensitive: meta.caseSensitive, end },\n      remainingPathname\n    );\n\n    if (!match) return null;\n\n    Object.assign(matchedParams, match.params);\n\n    let route = meta.route;\n\n    matches.push({\n      // TODO: Can this as be avoided?\n      params: matchedParams as Params<ParamKey>,\n      pathname: joinPaths([matchedPathname, match.pathname]),\n      pathnameBase: normalizePathname(\n        joinPaths([matchedPathname, match.pathnameBase])\n      ),\n      route,\n    });\n\n    if (match.pathnameBase !== \"/\") {\n      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);\n    }\n  }\n\n  return matches;\n}\n\n/**\n * Returns a path with params interpolated.\n *\n * @see https://reactrouter.com/docs/en/v6/utils/generate-path\n */\nexport function generatePath<Path extends string>(\n  path: Path,\n  params: {\n    [key in PathParam<Path>]: string;\n  } = {} as any\n): string {\n  return path\n    .replace(/:(\\w+)/g, (_, key: PathParam<Path>) => {\n      invariant(params[key] != null, `Missing \":${key}\" param`);\n      return params[key]!;\n    })\n    .replace(/(\\/?)\\*/, (_, prefix, __, str) => {\n      const star = \"*\" as PathParam<Path>;\n\n      if (params[star] == null) {\n        // If no splat was provided, trim the trailing slash _unless_ it's\n        // the entire path\n        return str === \"/*\" ? \"/\" : \"\";\n      }\n\n      // Apply the splat\n      return `${prefix}${params[star]}`;\n    });\n}\n\n/**\n * A PathPattern is used to match on some portion of a URL pathname.\n */\nexport interface PathPattern<Path extends string = string> {\n  /**\n   * A string to match against a URL pathname. May contain `:id`-style segments\n   * to indicate placeholders for dynamic parameters. May also end with `/*` to\n   * indicate matching the rest of the URL pathname.\n   */\n  path: Path;\n  /**\n   * Should be `true` if the static portions of the `path` should be matched in\n   * the same case.\n   */\n  caseSensitive?: boolean;\n  /**\n   * Should be `true` if this pattern should match the entire URL pathname.\n   */\n  end?: boolean;\n}\n\n/**\n * A PathMatch contains info about how a PathPattern matched on a URL pathname.\n */\nexport interface PathMatch<ParamKey extends string = string> {\n  /**\n   * The names and values of dynamic parameters in the URL.\n   */\n  params: Params<ParamKey>;\n  /**\n   * The portion of the URL pathname that was matched.\n   */\n  pathname: string;\n  /**\n   * The portion of the URL pathname that was matched before child routes.\n   */\n  pathnameBase: string;\n  /**\n   * The pattern that was used to match.\n   */\n  pattern: PathPattern;\n}\n\ntype Mutable<T> = {\n  -readonly [P in keyof T]: T[P];\n};\n\n/**\n * Performs pattern matching on a URL pathname and returns information about\n * the match.\n *\n * @see https://reactrouter.com/docs/en/v6/utils/match-path\n */\nexport function matchPath<\n  ParamKey extends ParamParseKey<Path>,\n  Path extends string\n>(\n  pattern: PathPattern<Path> | Path,\n  pathname: string\n): PathMatch<ParamKey> | null {\n  if (typeof pattern === \"string\") {\n    pattern = { path: pattern, caseSensitive: false, end: true };\n  }\n\n  let [matcher, paramNames] = compilePath(\n    pattern.path,\n    pattern.caseSensitive,\n    pattern.end\n  );\n\n  let match = pathname.match(matcher);\n  if (!match) return null;\n\n  let matchedPathname = match[0];\n  let pathnameBase = matchedPathname.replace(/(.)\\/+$/, \"$1\");\n  let captureGroups = match.slice(1);\n  let params: Params = paramNames.reduce<Mutable<Params>>(\n    (memo, paramName, index) => {\n      // We need to compute the pathnameBase here using the raw splat value\n      // instead of using params[\"*\"] later because it will be decoded then\n      if (paramName === \"*\") {\n        let splatValue = captureGroups[index] || \"\";\n        pathnameBase = matchedPathname\n          .slice(0, matchedPathname.length - splatValue.length)\n          .replace(/(.)\\/+$/, \"$1\");\n      }\n\n      memo[paramName] = safelyDecodeURIComponent(\n        captureGroups[index] || \"\",\n        paramName\n      );\n      return memo;\n    },\n    {}\n  );\n\n  return {\n    params,\n    pathname: matchedPathname,\n    pathnameBase,\n    pattern,\n  };\n}\n\nfunction compilePath(\n  path: string,\n  caseSensitive = false,\n  end = true\n): [RegExp, string[]] {\n  warning(\n    path === \"*\" || !path.endsWith(\"*\") || path.endsWith(\"/*\"),\n    `Route path \"${path}\" will be treated as if it were ` +\n      `\"${path.replace(/\\*$/, \"/*\")}\" because the \\`*\\` character must ` +\n      `always follow a \\`/\\` in the pattern. To get rid of this warning, ` +\n      `please change the route path to \"${path.replace(/\\*$/, \"/*\")}\".`\n  );\n\n  let paramNames: string[] = [];\n  let regexpSource =\n    \"^\" +\n    path\n      .replace(/\\/*\\*?$/, \"\") // Ignore trailing / and /*, we'll handle it below\n      .replace(/^\\/*/, \"/\") // Make sure it has a leading /\n      .replace(/[\\\\.*+^$?{}|()[\\]]/g, \"\\\\$&\") // Escape special regex chars\n      .replace(/:(\\w+)/g, (_: string, paramName: string) => {\n        paramNames.push(paramName);\n        return \"([^\\\\/]+)\";\n      });\n\n  if (path.endsWith(\"*\")) {\n    paramNames.push(\"*\");\n    regexpSource +=\n      path === \"*\" || path === \"/*\"\n        ? \"(.*)$\" // Already matched the initial /, just match the rest\n        : \"(?:\\\\/(.+)|\\\\/*)$\"; // Don't include the / in params[\"*\"]\n  } else {\n    regexpSource += end\n      ? \"\\\\/*$\" // When matching to the end, ignore trailing slashes\n      : // Otherwise, match a word boundary or a proceeding /. The word boundary restricts\n        // parent routes to matching only their own words and nothing more, e.g. parent\n        // route \"/home\" should not match \"/home2\".\n        // Additionally, allow paths starting with `.`, `-`, `~`, and url-encoded entities,\n        // but do not consume the character in the matched path so they can match against\n        // nested paths.\n        \"(?:(?=[@.~-]|%[0-9A-F]{2})|\\\\b|\\\\/|$)\";\n  }\n\n  let matcher = new RegExp(regexpSource, caseSensitive ? undefined : \"i\");\n\n  return [matcher, paramNames];\n}\n\nfunction safelyDecodeURIComponent(value: string, paramName: string) {\n  try {\n    return decodeURIComponent(value);\n  } catch (error) {\n    warning(\n      false,\n      `The value for the URL param \"${paramName}\" will not be decoded because` +\n        ` the string \"${value}\" is a malformed URL segment. This is probably` +\n        ` due to a bad percent encoding (${error}).`\n    );\n\n    return value;\n  }\n}\n\n/**\n * @private\n */\nexport function stripBasename(\n  pathname: string,\n  basename: string\n): string | null {\n  if (basename === \"/\") return pathname;\n\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\n    return null;\n  }\n\n  // We want to leave trailing slash behavior in the user's control, so if they\n  // specify a basename with a trailing slash, we should support it\n  let startIndex = basename.endsWith(\"/\")\n    ? basename.length - 1\n    : basename.length;\n  let nextChar = pathname.charAt(startIndex);\n  if (nextChar && nextChar !== \"/\") {\n    // pathname does not start with basename/\n    return null;\n  }\n\n  return pathname.slice(startIndex) || \"/\";\n}\n\n/**\n * @private\n */\nexport function invariant(value: boolean, message?: string): asserts value;\nexport function invariant<T>(\n  value: T | null | undefined,\n  message?: string\n): asserts value is T;\nexport function invariant(value: any, message?: string) {\n  if (value === false || value === null || typeof value === \"undefined\") {\n    throw new Error(message);\n  }\n}\n\n/**\n * @private\n */\nexport function warning(cond: any, message: string): void {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n\n    try {\n      // Welcome to debugging React Router!\n      //\n      // This error is thrown as a convenience so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message);\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\n\n/**\n * Returns a resolved path object relative to the given pathname.\n *\n * @see https://reactrouter.com/docs/en/v6/utils/resolve-path\n */\nexport function resolvePath(to: To, fromPathname = \"/\"): Path {\n  let {\n    pathname: toPathname,\n    search = \"\",\n    hash = \"\",\n  } = typeof to === \"string\" ? parsePath(to) : to;\n\n  let pathname = toPathname\n    ? toPathname.startsWith(\"/\")\n      ? toPathname\n      : resolvePathname(toPathname, fromPathname)\n    : fromPathname;\n\n  return {\n    pathname,\n    search: normalizeSearch(search),\n    hash: normalizeHash(hash),\n  };\n}\n\nfunction resolvePathname(relativePath: string, fromPathname: string): string {\n  let segments = fromPathname.replace(/\\/+$/, \"\").split(\"/\");\n  let relativeSegments = relativePath.split(\"/\");\n\n  relativeSegments.forEach((segment) => {\n    if (segment === \"..\") {\n      // Keep the root \"\" segment so the pathname starts at /\n      if (segments.length > 1) segments.pop();\n    } else if (segment !== \".\") {\n      segments.push(segment);\n    }\n  });\n\n  return segments.length > 1 ? segments.join(\"/\") : \"/\";\n}\n\n/**\n * @private\n */\nexport function resolveTo(\n  toArg: To,\n  routePathnames: string[],\n  locationPathname: string,\n  isPathRelative = false\n): Path {\n  let to = typeof toArg === \"string\" ? parsePath(toArg) : { ...toArg };\n  let isEmptyPath = toArg === \"\" || to.pathname === \"\";\n  let toPathname = isEmptyPath ? \"/\" : to.pathname;\n\n  let from: string;\n\n  // Routing is relative to the current pathname if explicitly requested.\n  //\n  // If a pathname is explicitly provided in `to`, it should be relative to the\n  // route context. This is explained in `Note on `<Link to>` values` in our\n  // migration guide from v5 as a means of disambiguation between `to` values\n  // that begin with `/` and those that do not. However, this is problematic for\n  // `to` values that do not provide a pathname. `to` can simply be a search or\n  // hash string, in which case we should assume that the navigation is relative\n  // to the current location's pathname and *not* the route pathname.\n  if (isPathRelative || toPathname == null) {\n    from = locationPathname;\n  } else {\n    let routePathnameIndex = routePathnames.length - 1;\n\n    if (toPathname.startsWith(\"..\")) {\n      let toSegments = toPathname.split(\"/\");\n\n      // Each leading .. segment means \"go up one route\" instead of \"go up one\n      // URL segment\".  This is a key difference from how <a href> works and a\n      // major reason we call this a \"to\" value instead of a \"href\".\n      while (toSegments[0] === \"..\") {\n        toSegments.shift();\n        routePathnameIndex -= 1;\n      }\n\n      to.pathname = toSegments.join(\"/\");\n    }\n\n    // If there are more \"..\" segments than parent routes, resolve relative to\n    // the root / URL.\n    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : \"/\";\n  }\n\n  let path = resolvePath(to, from);\n\n  // Ensure the pathname has a trailing slash if the original \"to\" had one\n  let hasExplicitTrailingSlash =\n    toPathname && toPathname !== \"/\" && toPathname.endsWith(\"/\");\n  // Or if this was a link to the current path which has a trailing slash\n  let hasCurrentTrailingSlash =\n    (isEmptyPath || toPathname === \".\") && locationPathname.endsWith(\"/\");\n  if (\n    !path.pathname.endsWith(\"/\") &&\n    (hasExplicitTrailingSlash || hasCurrentTrailingSlash)\n  ) {\n    path.pathname += \"/\";\n  }\n\n  return path;\n}\n\n/**\n * @private\n */\nexport function getToPathname(to: To): string | undefined {\n  // Empty strings should be treated the same as / paths\n  return to === \"\" || (to as Path).pathname === \"\"\n    ? \"/\"\n    : typeof to === \"string\"\n    ? parsePath(to).pathname\n    : to.pathname;\n}\n\n/**\n * @private\n */\nexport const joinPaths = (paths: string[]): string =>\n  paths.join(\"/\").replace(/\\/\\/+/g, \"/\");\n\n/**\n * @private\n */\nexport const normalizePathname = (pathname: string): string =>\n  pathname.replace(/\\/+$/, \"\").replace(/^\\/*/, \"/\");\n\n/**\n * @private\n */\nexport const normalizeSearch = (search: string): string =>\n  !search || search === \"?\"\n    ? \"\"\n    : search.startsWith(\"?\")\n    ? search\n    : \"?\" + search;\n\n/**\n * @private\n */\nexport const normalizeHash = (hash: string): string =>\n  !hash || hash === \"#\" ? \"\" : hash.startsWith(\"#\") ? hash : \"#\" + hash;\n\nexport type JsonFunction = <Data>(\n  data: Data,\n  init?: number | ResponseInit\n) => Response;\n\n/**\n * This is a shortcut for creating `application/json` responses. Converts `data`\n * to JSON and sets the `Content-Type` header.\n */\nexport const json: JsonFunction = (data, init = {}) => {\n  let responseInit = typeof init === \"number\" ? { status: init } : init;\n\n  let headers = new Headers(responseInit.headers);\n  if (!headers.has(\"Content-Type\")) {\n    headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\n  }\n\n  return new Response(JSON.stringify(data), {\n    ...responseInit,\n    headers,\n  });\n};\n\nexport interface TrackedPromise extends Promise<any> {\n  _tracked?: boolean;\n  _data?: any;\n  _error?: any;\n}\n\nexport class AbortedDeferredError extends Error {}\n\nexport class DeferredData {\n  private pendingKeys: Set<string | number> = new Set<string | number>();\n  private controller: AbortController;\n  private abortPromise: Promise<void>;\n  private unlistenAbortSignal: () => void;\n  private subscriber?: (aborted: boolean) => void = undefined;\n  data: Record<string, unknown>;\n\n  constructor(data: Record<string, unknown>) {\n    invariant(\n      data && typeof data === \"object\" && !Array.isArray(data),\n      \"defer() only accepts plain objects\"\n    );\n\n    // Set up an AbortController + Promise we can race against to exit early\n    // cancellation\n    let reject: (e: AbortedDeferredError) => void;\n    this.abortPromise = new Promise((_, r) => (reject = r));\n    this.controller = new AbortController();\n    let onAbort = () =>\n      reject(new AbortedDeferredError(\"Deferred data aborted\"));\n    this.unlistenAbortSignal = () =>\n      this.controller.signal.removeEventListener(\"abort\", onAbort);\n    this.controller.signal.addEventListener(\"abort\", onAbort);\n\n    this.data = Object.entries(data).reduce(\n      (acc, [key, value]) =>\n        Object.assign(acc, {\n          [key]: this.trackPromise(key, value),\n        }),\n      {}\n    );\n  }\n\n  private trackPromise(\n    key: string | number,\n    value: Promise<unknown> | unknown\n  ): TrackedPromise | unknown {\n    if (!(value instanceof Promise)) {\n      return value;\n    }\n\n    this.pendingKeys.add(key);\n\n    // We store a little wrapper promise that will be extended with\n    // _data/_error props upon resolve/reject\n    let promise: TrackedPromise = Promise.race([value, this.abortPromise]).then(\n      (data) => this.onSettle(promise, key, null, data as unknown),\n      (error) => this.onSettle(promise, key, error as unknown)\n    );\n\n    // Register rejection listeners to avoid uncaught promise rejections on\n    // errors or aborted deferred values\n    promise.catch(() => {});\n\n    Object.defineProperty(promise, \"_tracked\", { get: () => true });\n    return promise;\n  }\n\n  private onSettle(\n    promise: TrackedPromise,\n    key: string | number,\n    error: unknown,\n    data?: unknown\n  ): unknown {\n    if (\n      this.controller.signal.aborted &&\n      error instanceof AbortedDeferredError\n    ) {\n      this.unlistenAbortSignal();\n      Object.defineProperty(promise, \"_error\", { get: () => error });\n      return Promise.reject(error);\n    }\n\n    this.pendingKeys.delete(key);\n\n    if (this.done) {\n      // Nothing left to abort!\n      this.unlistenAbortSignal();\n    }\n\n    const subscriber = this.subscriber;\n    if (error) {\n      Object.defineProperty(promise, \"_error\", { get: () => error });\n      subscriber && subscriber(false);\n      return Promise.reject(error);\n    }\n\n    Object.defineProperty(promise, \"_data\", { get: () => data });\n    subscriber && subscriber(false);\n    return data;\n  }\n\n  subscribe(fn: (aborted: boolean) => void) {\n    this.subscriber = fn;\n  }\n\n  cancel() {\n    this.controller.abort();\n    this.pendingKeys.forEach((v, k) => this.pendingKeys.delete(k));\n    let subscriber = this.subscriber;\n    subscriber && subscriber(true);\n  }\n\n  async resolveData(signal: AbortSignal) {\n    let aborted = false;\n    if (!this.done) {\n      let onAbort = () => this.cancel();\n      signal.addEventListener(\"abort\", onAbort);\n      aborted = await new Promise((resolve) => {\n        this.subscribe((aborted) => {\n          signal.removeEventListener(\"abort\", onAbort);\n          if (aborted || this.done) {\n            resolve(aborted);\n          }\n        });\n      });\n    }\n    return aborted;\n  }\n\n  get done() {\n    return this.pendingKeys.size === 0;\n  }\n\n  get unwrappedData() {\n    invariant(\n      this.data !== null && this.done,\n      \"Can only unwrap data on initialized and settled deferreds\"\n    );\n\n    return Object.entries(this.data).reduce(\n      (acc, [key, value]) =>\n        Object.assign(acc, {\n          [key]: unwrapTrackedPromise(value),\n        }),\n      {}\n    );\n  }\n}\n\nfunction isTrackedPromise(value: any): value is TrackedPromise {\n  return (\n    value instanceof Promise && (value as TrackedPromise)._tracked === true\n  );\n}\n\nfunction unwrapTrackedPromise(value: any) {\n  if (!isTrackedPromise(value)) {\n    return value;\n  }\n\n  if (value._error) {\n    throw value._error;\n  }\n  return value._data;\n}\n\nexport function defer(data: Record<string, unknown>) {\n  return new DeferredData(data);\n}\n\nexport type RedirectFunction = (\n  url: string,\n  init?: number | ResponseInit\n) => Response;\n\n/**\n * A redirect response. Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nexport const redirect: RedirectFunction = (url, init = 302) => {\n  let responseInit = init;\n  if (typeof responseInit === \"number\") {\n    responseInit = { status: responseInit };\n  } else if (typeof responseInit.status === \"undefined\") {\n    responseInit.status = 302;\n  }\n\n  let headers = new Headers(responseInit.headers);\n  headers.set(\"Location\", url);\n\n  return new Response(null, {\n    ...responseInit,\n    headers,\n  });\n};\n\n/**\n * @private\n * Utility class we use to hold auto-unwrapped 4xx/5xx Response bodies\n */\nexport class ErrorResponse {\n  status: number;\n  statusText: string;\n  data: any;\n\n  constructor(status: number, statusText: string | undefined, data: any) {\n    this.status = status;\n    this.statusText = statusText || \"\";\n    this.data = data;\n  }\n}\n\n/**\n * Check if the given error is an ErrorResponse generated from a 4xx/5xx\n * Response throw from an action/loader\n */\nexport function isRouteErrorResponse(e: any): e is ErrorResponse {\n  return e instanceof ErrorResponse;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport * as React from \"react\";\n\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\nfunction isPolyfill(x: any, y: any) {\n  return (\n    (x === y && (x !== 0 || 1 / x === 1 / y)) || (x !== x && y !== y) // eslint-disable-line no-self-compare\n  );\n}\n\nconst is: (x: any, y: any) => boolean =\n  typeof Object.is === \"function\" ? Object.is : isPolyfill;\n\n// Intentionally not using named imports because Rollup uses dynamic\n// dispatch for CommonJS interop named imports.\nconst { useState, useEffect, useLayoutEffect, useDebugValue } = React;\n\nlet didWarnOld18Alpha = false;\nlet didWarnUncachedGetSnapshot = false;\n\n// Disclaimer: This shim breaks many of the rules of React, and only works\n// because of a very particular set of implementation details and assumptions\n// -- change any one of them and it will break. The most important assumption\n// is that updates are always synchronous, because concurrent rendering is\n// only available in versions of React that also have a built-in\n// useSyncExternalStore API. And we only use this shim when the built-in API\n// does not exist.\n//\n// Do not assume that the clever hacks used by this hook also work in general.\n// The point of this shim is to replace the need for hacks by other libraries.\nexport function useSyncExternalStore<T>(\n  subscribe: (fn: () => void) => () => void,\n  getSnapshot: () => T,\n  // Note: The shim does not use getServerSnapshot, because pre-18 versions of\n  // React do not expose a way to check if we're hydrating. So users of the shim\n  // will need to track that themselves and return the correct value\n  // from `getSnapshot`.\n  getServerSnapshot?: () => T\n): T {\n  if (__DEV__) {\n    if (!didWarnOld18Alpha) {\n      if (\"startTransition\" in React) {\n        didWarnOld18Alpha = true;\n        console.error(\n          \"You are using an outdated, pre-release alpha of React 18 that \" +\n            \"does not support useSyncExternalStore. The \" +\n            \"use-sync-external-store shim will not work correctly. Upgrade \" +\n            \"to a newer pre-release.\"\n        );\n      }\n    }\n  }\n\n  // Read the current snapshot from the store on every render. Again, this\n  // breaks the rules of React, and only works here because of specific\n  // implementation details, most importantly that updates are\n  // always synchronous.\n  const value = getSnapshot();\n  if (__DEV__) {\n    if (!didWarnUncachedGetSnapshot) {\n      const cachedValue = getSnapshot();\n      if (!is(value, cachedValue)) {\n        console.error(\n          \"The result of getSnapshot should be cached to avoid an infinite loop\"\n        );\n        didWarnUncachedGetSnapshot = true;\n      }\n    }\n  }\n\n  // Because updates are synchronous, we don't queue them. Instead we force a\n  // re-render whenever the subscribed state changes by updating an some\n  // arbitrary useState hook. Then, during render, we call getSnapshot to read\n  // the current value.\n  //\n  // Because we don't actually use the state returned by the useState hook, we\n  // can save a bit of memory by storing other stuff in that slot.\n  //\n  // To implement the early bailout, we need to track some things on a mutable\n  // object. Usually, we would put that in a useRef hook, but we can stash it in\n  // our useState hook instead.\n  //\n  // To force a re-render, we call forceUpdate({inst}). That works because the\n  // new object always fails an equality check.\n  const [{ inst }, forceUpdate] = useState({ inst: { value, getSnapshot } });\n\n  // Track the latest getSnapshot function with a ref. This needs to be updated\n  // in the layout phase so we can access it during the tearing check that\n  // happens on subscribe.\n  useLayoutEffect(() => {\n    inst.value = value;\n    inst.getSnapshot = getSnapshot;\n\n    // Whenever getSnapshot or subscribe changes, we need to check in the\n    // commit phase if there was an interleaved mutation. In concurrent mode\n    // this can happen all the time, but even in synchronous mode, an earlier\n    // effect may have mutated the store.\n    if (checkIfSnapshotChanged(inst)) {\n      // Force a re-render.\n      forceUpdate({ inst });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [subscribe, value, getSnapshot]);\n\n  useEffect(() => {\n    // Check for changes right before subscribing. Subsequent changes will be\n    // detected in the subscription handler.\n    if (checkIfSnapshotChanged(inst)) {\n      // Force a re-render.\n      forceUpdate({ inst });\n    }\n    const handleStoreChange = () => {\n      // TODO: Because there is no cross-renderer API for batching updates, it's\n      // up to the consumer of this library to wrap their subscription event\n      // with unstable_batchedUpdates. Should we try to detect when this isn't\n      // the case and print a warning in development?\n\n      // The store changed. Check if the snapshot changed since the last time we\n      // read from the store.\n      if (checkIfSnapshotChanged(inst)) {\n        // Force a re-render.\n        forceUpdate({ inst });\n      }\n    };\n    // Subscribe to the store and return a clean-up function.\n    return subscribe(handleStoreChange);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [subscribe]);\n\n  useDebugValue(value);\n  return value;\n}\n\nfunction checkIfSnapshotChanged(inst: any) {\n  const latestGetSnapshot = inst.getSnapshot;\n  const prevValue = inst.value;\n  try {\n    const nextValue = latestGetSnapshot();\n    return !is(prevValue, nextValue);\n  } catch (error) {\n    return true;\n  }\n}\n","/**\n * Inlined into the react-router repo since use-sync-external-store does not\n * provide a UMD-compatible package, so we need this to be able to distribute\n * UMD react-router bundles\n */\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport * as React from \"react\";\n\nimport { useSyncExternalStore as client } from \"./useSyncExternalStoreShimClient\";\nimport { useSyncExternalStore as server } from \"./useSyncExternalStoreShimServer\";\n\nconst canUseDOM: boolean = !!(\n  typeof window !== \"undefined\" &&\n  typeof window.document !== \"undefined\" &&\n  typeof window.document.createElement !== \"undefined\"\n);\nconst isServerEnvironment = !canUseDOM;\nconst shim = isServerEnvironment ? server : client;\n\nexport const useSyncExternalStore =\n  \"useSyncExternalStore\" in React\n    ? ((module) => module.useSyncExternalStore)(React)\n    : shim;\n","import * as React from \"react\";\nimport type {\n  TrackedPromise,\n  History,\n  Location,\n  Router,\n  StaticHandlerContext,\n  To,\n  AgnosticRouteObject,\n  AgnosticRouteMatch,\n} from \"@remix-run/router\";\nimport type { Action as NavigationType } from \"@remix-run/router\";\n\n// Create react-specific types from the agnostic types in @remix-run/router to\n// export from react-router\nexport interface RouteObject extends AgnosticRouteObject {\n  children?: RouteObject[];\n  element?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n}\n\nexport interface DataRouteObject extends RouteObject {\n  children?: DataRouteObject[];\n  id: string;\n}\n\nexport interface RouteMatch<\n  ParamKey extends string = string,\n  RouteObjectType extends RouteObject = RouteObject\n> extends AgnosticRouteMatch<ParamKey, RouteObjectType> {}\n\nexport interface DataRouteMatch extends RouteMatch<string, DataRouteObject> {}\n\n// Contexts for data routers\nexport const DataStaticRouterContext =\n  React.createContext<StaticHandlerContext | null>(null);\nif (__DEV__) {\n  DataStaticRouterContext.displayName = \"DataStaticRouterContext\";\n}\n\nexport interface DataRouterContextObject extends NavigationContextObject {\n  router: Router;\n}\n\nexport const DataRouterContext =\n  React.createContext<DataRouterContextObject | null>(null);\nif (__DEV__) {\n  DataRouterContext.displayName = \"DataRouter\";\n}\n\nexport const DataRouterStateContext = React.createContext<\n  Router[\"state\"] | null\n>(null);\nif (__DEV__) {\n  DataRouterStateContext.displayName = \"DataRouterState\";\n}\n\nexport const AwaitContext = React.createContext<TrackedPromise | null>(null);\nif (__DEV__) {\n  AwaitContext.displayName = \"Await\";\n}\n\nexport type RelativeRoutingType = \"route\" | \"path\";\n\nexport interface NavigateOptions {\n  replace?: boolean;\n  state?: any;\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n}\n\n/**\n * A Navigator is a \"location changer\"; it's how you get to different locations.\n *\n * Every history instance conforms to the Navigator interface, but the\n * distinction is useful primarily when it comes to the low-level <Router> API\n * where both the location and a navigator must be provided separately in order\n * to avoid \"tearing\" that may occur in a suspense-enabled app if the action\n * and/or location were to be read directly from the history instance.\n */\nexport interface Navigator {\n  createHref: History[\"createHref\"];\n  go: History[\"go\"];\n  push(to: To, state?: any, opts?: NavigateOptions): void;\n  replace(to: To, state?: any, opts?: NavigateOptions): void;\n}\n\ninterface NavigationContextObject {\n  basename: string;\n  navigator: Navigator;\n  static: boolean;\n}\n\nexport const NavigationContext = React.createContext<NavigationContextObject>(\n  null!\n);\n\nif (__DEV__) {\n  NavigationContext.displayName = \"Navigation\";\n}\n\ninterface LocationContextObject {\n  location: Location;\n  navigationType: NavigationType;\n}\n\nexport const LocationContext = React.createContext<LocationContextObject>(\n  null!\n);\n\nif (__DEV__) {\n  LocationContext.displayName = \"Location\";\n}\n\nexport interface RouteContextObject {\n  outlet: React.ReactElement | null;\n  matches: RouteMatch[];\n}\n\nexport const RouteContext = React.createContext<RouteContextObject>({\n  outlet: null,\n  matches: [],\n});\n\nif (__DEV__) {\n  RouteContext.displayName = \"Route\";\n}\n\nexport const RouteErrorContext = React.createContext<any>(null);\n\nif (__DEV__) {\n  RouteErrorContext.displayName = \"RouteError\";\n}\n","import * as React from \"react\";\nimport type {\n  Location,\n  ParamParseKey,\n  Params,\n  Path,\n  PathMatch,\n  PathPattern,\n  Router as RemixRouter,\n  To,\n} from \"@remix-run/router\";\nimport {\n  Action as NavigationType,\n  invariant,\n  isRouteErrorResponse,\n  joinPaths,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  resolveTo,\n  warning,\n} from \"@remix-run/router\";\n\nimport type {\n  NavigateOptions,\n  RouteContextObject,\n  RouteMatch,\n  RouteObject,\n  DataRouteMatch,\n  RelativeRoutingType,\n} from \"./context\";\nimport {\n  DataRouterContext,\n  DataRouterStateContext,\n  LocationContext,\n  NavigationContext,\n  RouteContext,\n  RouteErrorContext,\n  AwaitContext,\n  DataStaticRouterContext,\n} from \"./context\";\n\n/**\n * Returns the full href for the given \"to\" value. This is useful for building\n * custom links that are also accessible and preserve right-click behavior.\n *\n * @see https://reactrouter.com/docs/en/v6/hooks/use-href\n */\nexport function useHref(\n  to: To,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): string {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useHref() may be used only in the context of a <Router> component.`\n  );\n\n  let { basename, navigator } = React.useContext(NavigationContext);\n  let { hash, pathname, search } = useResolvedPath(to, { relative });\n\n  let joinedPathname = pathname;\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the href.  If this is a root navigation, then just use the raw\n  // basename which allows the basename to have full control over the presence\n  // of a trailing slash on root links\n  if (basename !== \"/\") {\n    joinedPathname =\n      pathname === \"/\" ? basename : joinPaths([basename, pathname]);\n  }\n\n  return navigator.createHref({ pathname: joinedPathname, search, hash });\n}\n\n/**\n * Returns true if this component is a descendant of a <Router>.\n *\n * @see https://reactrouter.com/docs/en/v6/hooks/use-in-router-context\n */\nexport function useInRouterContext(): boolean {\n  return React.useContext(LocationContext) != null;\n}\n\n/**\n * Returns the current location object, which represents the current URL in web\n * browsers.\n *\n * Note: If you're using this it may mean you're doing some of your own\n * \"routing\" in your app, and we'd like to know what your use case is. We may\n * be able to provide something higher-level to better suit your needs.\n *\n * @see https://reactrouter.com/docs/en/v6/hooks/use-location\n */\nexport function useLocation(): Location {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useLocation() may be used only in the context of a <Router> component.`\n  );\n\n  return React.useContext(LocationContext).location;\n}\n\n/**\n * Returns the current navigation action which describes how the router came to\n * the current location, either by a pop, push, or replace on the history stack.\n *\n * @see https://reactrouter.com/docs/en/v6/hooks/use-navigation-type\n */\nexport function useNavigationType(): NavigationType {\n  return React.useContext(LocationContext).navigationType;\n}\n\n/**\n * Returns true if the URL for the given \"to\" value matches the current URL.\n * This is useful for components that need to know \"active\" state, e.g.\n * <NavLink>.\n *\n * @see https://reactrouter.com/docs/en/v6/hooks/use-match\n */\nexport function useMatch<\n  ParamKey extends ParamParseKey<Path>,\n  Path extends string\n>(pattern: PathPattern<Path> | Path): PathMatch<ParamKey> | null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useMatch() may be used only in the context of a <Router> component.`\n  );\n\n  let { pathname } = useLocation();\n  return React.useMemo(\n    () => matchPath<ParamKey, Path>(pattern, pathname),\n    [pathname, pattern]\n  );\n}\n\n/**\n * The interface for the navigate() function returned from useNavigate().\n */\nexport interface NavigateFunction {\n  (to: To, options?: NavigateOptions): void;\n  (delta: number): void;\n}\n\n/**\n * When processing relative navigation we want to ignore ancestor routes that\n * do not contribute to the path, such that index/pathless layout routes don't\n * interfere.\n *\n * For example, when moving a route element into an index route and/or a\n * pathless layout route, relative link behavior contained within should stay\n * the same.  Both of the following examples should link back to the root:\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\" element={<Link to=\"..\"}>\n *   </Route>\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\">\n *       <Route element={<AccountsLayout />}>       // <-- Does not contribute\n *         <Route index element={<Link to=\"..\"} />  // <-- Does not contribute\n *       </Route\n *     </Route>\n *   </Route>\n */\nfunction getPathContributingMatches(matches: RouteMatch[]) {\n  return matches.filter(\n    (match, index) =>\n      index === 0 ||\n      (!match.route.index &&\n        match.pathnameBase !== matches[index - 1].pathnameBase)\n  );\n}\n\n/**\n * Returns an imperative method for changing the location. Used by <Link>s, but\n * may also be used by other elements to change the location.\n *\n * @see https://reactrouter.com/docs/en/v6/hooks/use-navigate\n */\nexport function useNavigate(): NavigateFunction {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useNavigate() may be used only in the context of a <Router> component.`\n  );\n\n  let { basename, navigator } = React.useContext(NavigationContext);\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n\n  let routePathnamesJson = JSON.stringify(\n    getPathContributingMatches(matches).map((match) => match.pathnameBase)\n  );\n\n  let activeRef = React.useRef(false);\n  React.useEffect(() => {\n    activeRef.current = true;\n  });\n\n  let navigate: NavigateFunction = React.useCallback(\n    (to: To | number, options: NavigateOptions = {}) => {\n      warning(\n        activeRef.current,\n        `You should call navigate() in a React.useEffect(), not when ` +\n          `your component is first rendered.`\n      );\n\n      if (!activeRef.current) return;\n\n      if (typeof to === \"number\") {\n        navigator.go(to);\n        return;\n      }\n\n      let path = resolveTo(\n        to,\n        JSON.parse(routePathnamesJson),\n        locationPathname,\n        options.relative === \"path\"\n      );\n\n      // If we're operating within a basename, prepend it to the pathname prior\n      // to handing off to history.  If this is a root navigation, then we\n      // navigate to the raw basename which allows the basename to have full\n      // control over the presence of a trailing slash on root links\n      if (basename !== \"/\") {\n        path.pathname =\n          path.pathname === \"/\"\n            ? basename\n            : joinPaths([basename, path.pathname]);\n      }\n\n      (!!options.replace ? navigator.replace : navigator.push)(\n        path,\n        options.state,\n        options\n      );\n    },\n    [basename, navigator, routePathnamesJson, locationPathname]\n  );\n\n  return navigate;\n}\n\nconst OutletContext = React.createContext<unknown>(null);\n\n/**\n * Returns the context (if provided) for the child route at this level of the route\n * hierarchy.\n * @see https://reactrouter.com/docs/en/v6/hooks/use-outlet-context\n */\nexport function useOutletContext<Context = unknown>(): Context {\n  return React.useContext(OutletContext) as Context;\n}\n\n/**\n * Returns the element for the child route at this level of the route\n * hierarchy. Used internally by <Outlet> to render child routes.\n *\n * @see https://reactrouter.com/docs/en/v6/hooks/use-outlet\n */\nexport function useOutlet(context?: unknown): React.ReactElement | null {\n  let outlet = React.useContext(RouteContext).outlet;\n  if (outlet) {\n    return (\n      <OutletContext.Provider value={context}>{outlet}</OutletContext.Provider>\n    );\n  }\n  return outlet;\n}\n\n/**\n * Returns an object of key/value pairs of the dynamic params from the current\n * URL that were matched by the route path.\n *\n * @see https://reactrouter.com/docs/en/v6/hooks/use-params\n */\nexport function useParams<\n  ParamsOrKey extends string | Record<string, string | undefined> = string\n>(): Readonly<\n  [ParamsOrKey] extends [string] ? Params<ParamsOrKey> : Partial<ParamsOrKey>\n> {\n  let { matches } = React.useContext(RouteContext);\n  let routeMatch = matches[matches.length - 1];\n  return routeMatch ? (routeMatch.params as any) : {};\n}\n\n/**\n * Resolves the pathname of the given `to` value against the current location.\n *\n * @see https://reactrouter.com/docs/en/v6/hooks/use-resolved-path\n */\nexport function useResolvedPath(\n  to: To,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): Path {\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n\n  let routePathnamesJson = JSON.stringify(\n    getPathContributingMatches(matches).map((match) => match.pathnameBase)\n  );\n\n  return React.useMemo(\n    () =>\n      resolveTo(\n        to,\n        JSON.parse(routePathnamesJson),\n        locationPathname,\n        relative === \"path\"\n      ),\n    [to, routePathnamesJson, locationPathname, relative]\n  );\n}\n\n/**\n * Returns the element of the route that matched the current location, prepared\n * with the correct context to render the remainder of the route tree. Route\n * elements in the tree must render an <Outlet> to render their child route's\n * element.\n *\n * @see https://reactrouter.com/docs/en/v6/hooks/use-routes\n */\nexport function useRoutes(\n  routes: RouteObject[],\n  locationArg?: Partial<Location> | string\n): React.ReactElement | null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useRoutes() may be used only in the context of a <Router> component.`\n  );\n\n  let dataRouterStateContext = React.useContext(DataRouterStateContext);\n  let { matches: parentMatches } = React.useContext(RouteContext);\n  let routeMatch = parentMatches[parentMatches.length - 1];\n  let parentParams = routeMatch ? routeMatch.params : {};\n  let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n  let parentRoute = routeMatch && routeMatch.route;\n\n  if (__DEV__) {\n    // You won't get a warning about 2 different <Routes> under a <Route>\n    // without a trailing *, but this is a best-effort warning anyway since we\n    // cannot even give the warning unless they land at the parent route.\n    //\n    // Example:\n    //\n    // <Routes>\n    //   {/* This route path MUST end with /* because otherwise\n    //       it will never match /blog/post/123 */}\n    //   <Route path=\"blog\" element={<Blog />} />\n    //   <Route path=\"blog/feed\" element={<BlogFeed />} />\n    // </Routes>\n    //\n    // function Blog() {\n    //   return (\n    //     <Routes>\n    //       <Route path=\"post/:id\" element={<Post />} />\n    //     </Routes>\n    //   );\n    // }\n    let parentPath = (parentRoute && parentRoute.path) || \"\";\n    warningOnce(\n      parentPathname,\n      !parentRoute || parentPath.endsWith(\"*\"),\n      `You rendered descendant <Routes> (or called \\`useRoutes()\\`) at ` +\n        `\"${parentPathname}\" (under <Route path=\"${parentPath}\">) but the ` +\n        `parent route path has no trailing \"*\". This means if you navigate ` +\n        `deeper, the parent won't match anymore and therefore the child ` +\n        `routes will never render.\\n\\n` +\n        `Please change the parent <Route path=\"${parentPath}\"> to <Route ` +\n        `path=\"${parentPath === \"/\" ? \"*\" : `${parentPath}/*`}\">.`\n    );\n  }\n\n  let locationFromContext = useLocation();\n\n  let location;\n  if (locationArg) {\n    let parsedLocationArg =\n      typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n\n    invariant(\n      parentPathnameBase === \"/\" ||\n        parsedLocationArg.pathname?.startsWith(parentPathnameBase),\n      `When overriding the location using \\`<Routes location>\\` or \\`useRoutes(routes, location)\\`, ` +\n        `the location pathname must begin with the portion of the URL pathname that was ` +\n        `matched by all parent routes. The current pathname base is \"${parentPathnameBase}\" ` +\n        `but pathname \"${parsedLocationArg.pathname}\" was given in the \\`location\\` prop.`\n    );\n\n    location = parsedLocationArg;\n  } else {\n    location = locationFromContext;\n  }\n\n  let pathname = location.pathname || \"/\";\n  let remainingPathname =\n    parentPathnameBase === \"/\"\n      ? pathname\n      : pathname.slice(parentPathnameBase.length) || \"/\";\n\n  let matches = matchRoutes(routes, { pathname: remainingPathname });\n\n  if (__DEV__) {\n    warning(\n      parentRoute || matches != null,\n      `No routes matched location \"${location.pathname}${location.search}${location.hash}\" `\n    );\n\n    warning(\n      matches == null ||\n        matches[matches.length - 1].route.element !== undefined,\n      `Matched leaf route at location \"${location.pathname}${location.search}${location.hash}\" does not have an element. ` +\n        `This means it will render an <Outlet /> with a null value by default resulting in an \"empty\" page.`\n    );\n  }\n\n  let renderedMatches = _renderMatches(\n    matches &&\n      matches.map((match) =>\n        Object.assign({}, match, {\n          params: Object.assign({}, parentParams, match.params),\n          pathname: joinPaths([parentPathnameBase, match.pathname]),\n          pathnameBase:\n            match.pathnameBase === \"/\"\n              ? parentPathnameBase\n              : joinPaths([parentPathnameBase, match.pathnameBase]),\n        })\n      ),\n    parentMatches,\n    dataRouterStateContext || undefined\n  );\n\n  // When a user passes in a `locationArg`, the associated routes need to\n  // be wrapped in a new `LocationContext.Provider` in order for `useLocation`\n  // to use the scoped location instead of the global location.\n  if (locationArg) {\n    return (\n      <LocationContext.Provider\n        value={{\n          location: {\n            pathname: \"/\",\n            search: \"\",\n            hash: \"\",\n            state: null,\n            key: \"default\",\n            ...location,\n          },\n          navigationType: NavigationType.Pop,\n        }}\n      >\n        {renderedMatches}\n      </LocationContext.Provider>\n    );\n  }\n\n  return renderedMatches;\n}\n\nfunction DefaultErrorElement() {\n  let error = useRouteError();\n  let message = isRouteErrorResponse(error)\n    ? `${error.status} ${error.statusText}`\n    : error instanceof Error\n    ? error.message\n    : JSON.stringify(error);\n  let stack = error instanceof Error ? error.stack : null;\n  let lightgrey = \"rgba(200,200,200, 0.5)\";\n  let preStyles = { padding: \"0.5rem\", backgroundColor: lightgrey };\n  let codeStyles = { padding: \"2px 4px\", backgroundColor: lightgrey };\n  return (\n    <>\n      <h2>Unhandled Thrown Error!</h2>\n      <h3 style={{ fontStyle: \"italic\" }}>{message}</h3>\n      {stack ? <pre style={preStyles}>{stack}</pre> : null}\n      <p>💿 Hey developer 👋</p>\n      <p>\n        You can provide a way better UX than this when your app throws errors by\n        providing your own&nbsp;\n        <code style={codeStyles}>errorElement</code> props on&nbsp;\n        <code style={codeStyles}>&lt;Route&gt;</code>\n      </p>\n    </>\n  );\n}\n\ntype RenderErrorBoundaryProps = React.PropsWithChildren<{\n  location: Location;\n  error: any;\n  component: React.ReactNode;\n}>;\n\ntype RenderErrorBoundaryState = {\n  location: Location;\n  error: any;\n};\n\nexport class RenderErrorBoundary extends React.Component<\n  RenderErrorBoundaryProps,\n  RenderErrorBoundaryState\n> {\n  constructor(props: RenderErrorBoundaryProps) {\n    super(props);\n    this.state = {\n      location: props.location,\n      error: props.error,\n    };\n  }\n\n  static getDerivedStateFromError(error: any) {\n    return { error: error };\n  }\n\n  static getDerivedStateFromProps(\n    props: RenderErrorBoundaryProps,\n    state: RenderErrorBoundaryState\n  ) {\n    // When we get into an error state, the user will likely click \"back\" to the\n    // previous page that didn't have an error. Because this wraps the entire\n    // application, that will have no effect--the error page continues to display.\n    // This gives us a mechanism to recover from the error when the location changes.\n    //\n    // Whether we're in an error state or not, we update the location in state\n    // so that when we are in an error state, it gets reset when a new location\n    // comes in and the user recovers from the error.\n    if (state.location !== props.location) {\n      return {\n        error: props.error,\n        location: props.location,\n      };\n    }\n\n    // If we're not changing locations, preserve the location but still surface\n    // any new errors that may come through. We retain the existing error, we do\n    // this because the error provided from the app state may be cleared without\n    // the location changing.\n    return {\n      error: props.error || state.error,\n      location: state.location,\n    };\n  }\n\n  componentDidCatch(error: any, errorInfo: any) {\n    console.error(\n      \"React Router caught the following error during render\",\n      error,\n      errorInfo\n    );\n  }\n\n  render() {\n    return this.state.error ? (\n      <RouteErrorContext.Provider\n        value={this.state.error}\n        children={this.props.component}\n      />\n    ) : (\n      this.props.children\n    );\n  }\n}\n\ninterface RenderedRouteProps {\n  routeContext: RouteContextObject;\n  match: RouteMatch<string, RouteObject>;\n  children: React.ReactNode | null;\n}\n\nfunction RenderedRoute({ routeContext, match, children }: RenderedRouteProps) {\n  let dataStaticRouterContext = React.useContext(DataStaticRouterContext);\n\n  // Track how deep we got in our render pass to emulate SSR componentDidCatch\n  // in a DataStaticRouter\n  if (dataStaticRouterContext && match.route.errorElement) {\n    dataStaticRouterContext._deepestRenderedBoundaryId = match.route.id;\n  }\n\n  return (\n    <RouteContext.Provider value={routeContext}>\n      {children}\n    </RouteContext.Provider>\n  );\n}\n\nexport function _renderMatches(\n  matches: RouteMatch[] | null,\n  parentMatches: RouteMatch[] = [],\n  dataRouterState?: RemixRouter[\"state\"]\n): React.ReactElement | null {\n  if (matches == null) {\n    if (dataRouterState?.errors) {\n      // Don't bail if we have data router errors so we can render them in the\n      // boundary.  Use the pre-matched (or shimmed) matches\n      matches = dataRouterState.matches as DataRouteMatch[];\n    } else {\n      return null;\n    }\n  }\n\n  let renderedMatches = matches;\n\n  // If we have data errors, trim matches to the highest error boundary\n  let errors = dataRouterState?.errors;\n  if (errors != null) {\n    let errorIndex = renderedMatches.findIndex(\n      (m) => m.route.id && errors?.[m.route.id]\n    );\n    invariant(\n      errorIndex >= 0,\n      `Could not find a matching route for the current errors: ${errors}`\n    );\n    renderedMatches = renderedMatches.slice(\n      0,\n      Math.min(renderedMatches.length, errorIndex + 1)\n    );\n  }\n\n  return renderedMatches.reduceRight((outlet, match, index) => {\n    let error = match.route.id ? errors?.[match.route.id] : null;\n    // Only data routers handle errors\n    let errorElement = dataRouterState\n      ? match.route.errorElement || <DefaultErrorElement />\n      : null;\n    let getChildren = () => (\n      <RenderedRoute\n        match={match}\n        routeContext={{\n          outlet,\n          matches: parentMatches.concat(renderedMatches.slice(0, index + 1)),\n        }}\n      >\n        {error\n          ? errorElement\n          : match.route.element !== undefined\n          ? match.route.element\n          : outlet}\n      </RenderedRoute>\n    );\n    // Only wrap in an error boundary within data router usages when we have an\n    // errorElement on this route.  Otherwise let it bubble up to an ancestor\n    // errorElement\n    return dataRouterState && (match.route.errorElement || index === 0) ? (\n      <RenderErrorBoundary\n        location={dataRouterState.location}\n        component={errorElement}\n        error={error}\n        children={getChildren()}\n      />\n    ) : (\n      getChildren()\n    );\n  }, null as React.ReactElement | null);\n}\n\nenum DataRouterHook {\n  UseLoaderData = \"useLoaderData\",\n  UseActionData = \"useActionData\",\n  UseRouteError = \"useRouteError\",\n  UseNavigation = \"useNavigation\",\n  UseRouteLoaderData = \"useRouteLoaderData\",\n  UseMatches = \"useMatches\",\n  UseRevalidator = \"useRevalidator\",\n}\n\nfunction useDataRouterState(hookName: DataRouterHook) {\n  let state = React.useContext(DataRouterStateContext);\n  invariant(state, `${hookName} must be used within a DataRouterStateContext`);\n  return state;\n}\n\n/**\n * Returns the current navigation, defaulting to an \"idle\" navigation when\n * no navigation is in progress\n */\nexport function useNavigation() {\n  let state = useDataRouterState(DataRouterHook.UseNavigation);\n  return state.navigation;\n}\n\n/**\n * Returns a revalidate function for manually triggering revalidation, as well\n * as the current state of any manual revalidations\n */\nexport function useRevalidator() {\n  let dataRouterContext = React.useContext(DataRouterContext);\n  invariant(\n    dataRouterContext,\n    `useRevalidator must be used within a DataRouterContext`\n  );\n  let state = useDataRouterState(DataRouterHook.UseRevalidator);\n  return {\n    revalidate: dataRouterContext.router.revalidate,\n    state: state.revalidation,\n  };\n}\n\n/**\n * Returns the active route matches, useful for accessing loaderData for\n * parent/child routes or the route \"handle\" property\n */\nexport function useMatches() {\n  let { matches, loaderData } = useDataRouterState(DataRouterHook.UseMatches);\n  return React.useMemo(\n    () =>\n      matches.map((match) => {\n        let { pathname, params } = match;\n        // Note: This structure matches that created by createUseMatchesMatch\n        // in the @remix-run/router , so if you change this please also change\n        // that :)  Eventually we'll DRY this up\n        return {\n          id: match.route.id,\n          pathname,\n          params,\n          data: loaderData[match.route.id] as unknown,\n          handle: match.route.handle as unknown,\n        };\n      }),\n    [matches, loaderData]\n  );\n}\n\n/**\n * Returns the loader data for the nearest ancestor Route loader\n */\nexport function useLoaderData(): unknown {\n  let state = useDataRouterState(DataRouterHook.UseLoaderData);\n\n  let route = React.useContext(RouteContext);\n  invariant(route, `useLoaderData must be used inside a RouteContext`);\n\n  let thisRoute = route.matches[route.matches.length - 1];\n  invariant(\n    thisRoute.route.id,\n    `useLoaderData can only be used on routes that contain a unique \"id\"`\n  );\n\n  return state.loaderData[thisRoute.route.id];\n}\n\n/**\n * Returns the loaderData for the given routeId\n */\nexport function useRouteLoaderData(routeId: string): unknown {\n  let state = useDataRouterState(DataRouterHook.UseRouteLoaderData);\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the action data for the nearest ancestor Route action\n */\nexport function useActionData(): unknown {\n  let state = useDataRouterState(DataRouterHook.UseActionData);\n\n  let route = React.useContext(RouteContext);\n  invariant(route, `useActionData must be used inside a RouteContext`);\n\n  return Object.values(state?.actionData || {})[0];\n}\n\n/**\n * Returns the nearest ancestor Route error, which could be a loader/action\n * error or a render error.  This is intended to be called from your\n * errorElement to display a proper error message.\n */\nexport function useRouteError(): unknown {\n  let error = React.useContext(RouteErrorContext);\n  let state = useDataRouterState(DataRouterHook.UseRouteError);\n  let route = React.useContext(RouteContext);\n  let thisRoute = route.matches[route.matches.length - 1];\n\n  // If this was a render error, we put it in a RouteError context inside\n  // of RenderErrorBoundary\n  if (error) {\n    return error;\n  }\n\n  invariant(route, `useRouteError must be used inside a RouteContext`);\n  invariant(\n    thisRoute.route.id,\n    `useRouteError can only be used on routes that contain a unique \"id\"`\n  );\n\n  // Otherwise look for errors from our data router state\n  return state.errors?.[thisRoute.route.id];\n}\n\n/**\n * Returns the happy-path data from the nearest ancestor <Await /> value\n */\nexport function useAsyncValue(): unknown {\n  let value = React.useContext(AwaitContext);\n  return value?._data;\n}\n\n/**\n * Returns the error from the nearest ancestor <Await /> value\n */\nexport function useAsyncError(): unknown {\n  let value = React.useContext(AwaitContext);\n  return value?._error;\n}\n\nconst alreadyWarned: Record<string, boolean> = {};\n\nfunction warningOnce(key: string, cond: boolean, message: string) {\n  if (!cond && !alreadyWarned[key]) {\n    alreadyWarned[key] = true;\n    warning(false, message);\n  }\n}\n","import * as React from \"react\";\nimport type {\n  TrackedPromise,\n  HydrationState,\n  InitialEntry,\n  Location,\n  MemoryHistory,\n  Router as RemixRouter,\n  RouterState,\n  To,\n} from \"@remix-run/router\";\nimport {\n  Action as NavigationType,\n  AbortedDeferredError,\n  createMemoryHistory,\n  invariant,\n  parsePath,\n  stripBasename,\n  warning,\n} from \"@remix-run/router\";\nimport { useSyncExternalStore as useSyncExternalStoreShim } from \"./use-sync-external-store-shim\";\n\nimport type {\n  DataRouteObject,\n  RouteMatch,\n  RouteObject,\n  Navigator,\n  RelativeRoutingType,\n} from \"./context\";\nimport {\n  LocationContext,\n  NavigationContext,\n  DataRouterContext,\n  DataRouterStateContext,\n  AwaitContext,\n} from \"./context\";\nimport {\n  useAsyncValue,\n  useInRouterContext,\n  useNavigate,\n  useOutlet,\n  useRoutes,\n  _renderMatches,\n} from \"./hooks\";\n\nexport interface RouterProviderProps {\n  fallbackElement?: React.ReactNode;\n  router: RemixRouter;\n}\n\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nexport function RouterProvider({\n  fallbackElement,\n  router,\n}: RouterProviderProps): React.ReactElement {\n  // Sync router state to our component state to force re-renders\n  let state: RouterState = useSyncExternalStoreShim(\n    router.subscribe,\n    () => router.state,\n    // We have to provide this so React@18 doesn't complain during hydration,\n    // but we pass our serialized hydration data into the router so state here\n    // is already synced with what the server saw\n    () => router.state\n  );\n\n  let navigator = React.useMemo((): Navigator => {\n    return {\n      createHref: router.createHref,\n      go: (n) => router.navigate(n),\n      push: (to, state, opts) =>\n        router.navigate(to, {\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n      replace: (to, state, opts) =>\n        router.navigate(to, {\n          replace: true,\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n    };\n  }, [router]);\n\n  let basename = router.basename || \"/\";\n\n  return (\n    <DataRouterContext.Provider\n      value={{\n        router,\n        navigator,\n        static: false,\n        // Do we need this?\n        basename,\n      }}\n    >\n      <DataRouterStateContext.Provider value={state}>\n        <Router\n          basename={router.basename}\n          location={router.state.location}\n          navigationType={router.state.historyAction}\n          navigator={navigator}\n        >\n          {router.state.initialized ? <Routes /> : fallbackElement}\n        </Router>\n      </DataRouterStateContext.Provider>\n    </DataRouterContext.Provider>\n  );\n}\n\nexport interface MemoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  initialEntries?: InitialEntry[];\n  initialIndex?: number;\n}\n\n/**\n * A <Router> that stores all entries in memory.\n *\n * @see https://reactrouter.com/docs/en/v6/routers/memory-router\n */\nexport function MemoryRouter({\n  basename,\n  children,\n  initialEntries,\n  initialIndex,\n}: MemoryRouterProps): React.ReactElement {\n  let historyRef = React.useRef<MemoryHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createMemoryHistory({\n      initialEntries,\n      initialIndex,\n      v5Compat: true,\n    });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface NavigateProps {\n  to: To;\n  replace?: boolean;\n  state?: any;\n  relative?: RelativeRoutingType;\n}\n\n/**\n * Changes the current location.\n *\n * Note: This API is mostly useful in React.Component subclasses that are not\n * able to use hooks. In functional components, we recommend you use the\n * `useNavigate` hook instead.\n *\n * @see https://reactrouter.com/docs/en/v6/components/navigate\n */\nexport function Navigate({\n  to,\n  replace,\n  state,\n  relative,\n}: NavigateProps): null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of\n    // the router loaded. We can help them understand how to avoid that.\n    `<Navigate> may be used only in the context of a <Router> component.`\n  );\n\n  warning(\n    !React.useContext(NavigationContext).static,\n    `<Navigate> must not be used on the initial render in a <StaticRouter>. ` +\n      `This is a no-op, but you should modify your code so the <Navigate> is ` +\n      `only ever rendered in response to some user interaction or state change.`\n  );\n\n  let dataRouterState = React.useContext(DataRouterStateContext);\n  let navigate = useNavigate();\n\n  React.useEffect(() => {\n    // Avoid kicking off multiple navigations if we're in the middle of a\n    // data-router navigation, since components get re-rendered when we enter\n    // a submitting/loading state\n    if (dataRouterState && dataRouterState.navigation.state !== \"idle\") {\n      return;\n    }\n    navigate(to, { replace, state, relative });\n  });\n\n  return null;\n}\n\nexport interface OutletProps {\n  context?: unknown;\n}\n\n/**\n * Renders the child route's element, if there is one.\n *\n * @see https://reactrouter.com/docs/en/v6/components/outlet\n */\nexport function Outlet(props: OutletProps): React.ReactElement | null {\n  return useOutlet(props.context);\n}\n\ninterface DataRouteProps {\n  id?: RouteObject[\"id\"];\n  loader?: RouteObject[\"loader\"];\n  action?: RouteObject[\"action\"];\n  errorElement?: RouteObject[\"errorElement\"];\n  shouldRevalidate?: RouteObject[\"shouldRevalidate\"];\n  handle?: RouteObject[\"handle\"];\n}\n\nexport interface RouteProps extends DataRouteProps {\n  caseSensitive?: boolean;\n  children?: React.ReactNode;\n  element?: React.ReactNode | null;\n  index?: boolean;\n  path?: string;\n}\n\nexport interface PathRouteProps extends DataRouteProps {\n  caseSensitive?: boolean;\n  children?: React.ReactNode;\n  element?: React.ReactNode | null;\n  index?: false;\n  path: string;\n}\n\nexport interface LayoutRouteProps extends DataRouteProps {\n  children?: React.ReactNode;\n  element?: React.ReactNode | null;\n}\n\nexport interface IndexRouteProps extends DataRouteProps {\n  element?: React.ReactNode | null;\n  index: true;\n}\n\n/**\n * Declares an element that should be rendered at a certain URL path.\n *\n * @see https://reactrouter.com/docs/en/v6/components/route\n */\nexport function Route(\n  _props: PathRouteProps | LayoutRouteProps | IndexRouteProps\n): React.ReactElement | null {\n  invariant(\n    false,\n    `A <Route> is only ever to be used as the child of <Routes> element, ` +\n      `never rendered directly. Please wrap your <Route> in a <Routes>.`\n  );\n}\n\nexport interface RouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  location: Partial<Location> | string;\n  navigationType?: NavigationType;\n  navigator: Navigator;\n  static?: boolean;\n}\n\n/**\n * Provides location context for the rest of the app.\n *\n * Note: You usually won't render a <Router> directly. Instead, you'll render a\n * router that is more specific to your environment such as a <BrowserRouter>\n * in web browsers or a <StaticRouter> for server rendering.\n *\n * @see https://reactrouter.com/docs/en/v6/routers/router\n */\nexport function Router({\n  basename: basenameProp = \"/\",\n  children = null,\n  location: locationProp,\n  navigationType = NavigationType.Pop,\n  navigator,\n  static: staticProp = false,\n}: RouterProps): React.ReactElement | null {\n  invariant(\n    !useInRouterContext(),\n    `You cannot render a <Router> inside another <Router>.` +\n      ` You should never have more than one in your app.`\n  );\n\n  // Preserve trailing slashes on basename, so we can let the user control\n  // the enforcement of trailing slashes throughout the app\n  let basename = basenameProp.replace(/^\\/*/, \"/\");\n  let navigationContext = React.useMemo(\n    () => ({ basename, navigator, static: staticProp }),\n    [basename, navigator, staticProp]\n  );\n\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\",\n    state = null,\n    key = \"default\",\n  } = locationProp;\n\n  let location = React.useMemo(() => {\n    let trailingPathname = stripBasename(pathname, basename);\n\n    if (trailingPathname == null) {\n      return null;\n    }\n\n    return {\n      pathname: trailingPathname,\n      search,\n      hash,\n      state,\n      key,\n    };\n  }, [basename, pathname, search, hash, state, key]);\n\n  warning(\n    location != null,\n    `<Router basename=\"${basename}\"> is not able to match the URL ` +\n      `\"${pathname}${search}${hash}\" because it does not start with the ` +\n      `basename, so the <Router> won't render anything.`\n  );\n\n  if (location == null) {\n    return null;\n  }\n\n  return (\n    <NavigationContext.Provider value={navigationContext}>\n      <LocationContext.Provider\n        children={children}\n        value={{ location, navigationType }}\n      />\n    </NavigationContext.Provider>\n  );\n}\n\nexport interface RoutesProps {\n  children?: React.ReactNode;\n  location?: Partial<Location> | string;\n}\n\n/**\n * A container for a nested tree of <Route> elements that renders the branch\n * that best matches the current location.\n *\n * @see https://reactrouter.com/docs/en/v6/components/routes\n */\nexport function Routes({\n  children,\n  location,\n}: RoutesProps): React.ReactElement | null {\n  let dataRouterContext = React.useContext(DataRouterContext);\n  // When in a DataRouterContext _without_ children, we use the router routes\n  // directly.  If we have children, then we're in a descendant tree and we\n  // need to use child routes.\n  let routes =\n    dataRouterContext && !children\n      ? (dataRouterContext.router.routes as DataRouteObject[])\n      : createRoutesFromChildren(children);\n  return useRoutes(routes, location);\n}\n\nexport interface AwaitResolveRenderFunction {\n  (data: Awaited<any>): React.ReactElement;\n}\n\nexport interface AwaitProps {\n  children: React.ReactNode | AwaitResolveRenderFunction;\n  errorElement?: React.ReactNode;\n  resolve: TrackedPromise | any;\n}\n\n/**\n * Component to use for rendering lazily loaded data from returning defer()\n * in a loader function\n */\nexport function Await({ children, errorElement, resolve }: AwaitProps) {\n  return (\n    <AwaitErrorBoundary resolve={resolve} errorElement={errorElement}>\n      <ResolveAwait>{children}</ResolveAwait>\n    </AwaitErrorBoundary>\n  );\n}\n\ntype AwaitErrorBoundaryProps = React.PropsWithChildren<{\n  errorElement?: React.ReactNode;\n  resolve: TrackedPromise | any;\n}>;\n\ntype AwaitErrorBoundaryState = {\n  error: any;\n};\n\nenum AwaitRenderStatus {\n  pending,\n  success,\n  error,\n}\n\nconst neverSettledPromise = new Promise(() => {});\n\nclass AwaitErrorBoundary extends React.Component<\n  AwaitErrorBoundaryProps,\n  AwaitErrorBoundaryState\n> {\n  constructor(props: AwaitErrorBoundaryProps) {\n    super(props);\n    this.state = { error: null };\n  }\n\n  static getDerivedStateFromError(error: any) {\n    return { error };\n  }\n\n  componentDidCatch(error: any, errorInfo: any) {\n    console.error(\n      \"<Await> caught the following error during render\",\n      error,\n      errorInfo\n    );\n  }\n\n  render() {\n    let { children, errorElement, resolve } = this.props;\n\n    let promise: TrackedPromise | null = null;\n    let status: AwaitRenderStatus = AwaitRenderStatus.pending;\n\n    if (!(resolve instanceof Promise)) {\n      // Didn't get a promise - provide as a resolved promise\n      status = AwaitRenderStatus.success;\n      promise = Promise.resolve();\n      Object.defineProperty(promise, \"_tracked\", { get: () => true });\n      Object.defineProperty(promise, \"_data\", { get: () => resolve });\n    } else if (this.state.error) {\n      // Caught a render error, provide it as a rejected promise\n      status = AwaitRenderStatus.error;\n      let renderError = this.state.error;\n      promise = Promise.reject().catch(() => {}); // Avoid unhandled rejection warnings\n      Object.defineProperty(promise, \"_tracked\", { get: () => true });\n      Object.defineProperty(promise, \"_error\", { get: () => renderError });\n    } else if ((resolve as TrackedPromise)._tracked) {\n      // Already tracked promise - check contents\n      promise = resolve;\n      status =\n        promise._error !== undefined\n          ? AwaitRenderStatus.error\n          : promise._data !== undefined\n          ? AwaitRenderStatus.success\n          : AwaitRenderStatus.pending;\n    } else {\n      // Raw (untracked) promise - track it\n      status = AwaitRenderStatus.pending;\n      Object.defineProperty(resolve, \"_tracked\", { get: () => true });\n      promise = resolve.then(\n        (data: any) =>\n          Object.defineProperty(resolve, \"_data\", { get: () => data }),\n        (error: any) =>\n          Object.defineProperty(resolve, \"_error\", { get: () => error })\n      );\n    }\n\n    if (\n      status === AwaitRenderStatus.error &&\n      promise._error instanceof AbortedDeferredError\n    ) {\n      // Freeze the UI by throwing a never resolved promise\n      throw neverSettledPromise;\n    }\n\n    if (status === AwaitRenderStatus.error && !errorElement) {\n      // No errorElement, throw to the nearest route-level error boundary\n      throw promise._error;\n    }\n\n    if (status === AwaitRenderStatus.error) {\n      // Render via our errorElement\n      return <AwaitContext.Provider value={promise} children={errorElement} />;\n    }\n\n    if (status === AwaitRenderStatus.success) {\n      // Render children with resolved value\n      return <AwaitContext.Provider value={promise} children={children} />;\n    }\n\n    // Throw to the suspense boundary\n    throw promise;\n  }\n}\n\n/**\n * @private\n * Indirection to leverage useAsyncValue for a render-prop API on <Await>\n */\nfunction ResolveAwait({\n  children,\n}: {\n  children: React.ReactNode | AwaitResolveRenderFunction;\n}) {\n  let data = useAsyncValue();\n  if (typeof children === \"function\") {\n    return children(data);\n  }\n  return <>{children}</>;\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// UTILS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Creates a route config from a React \"children\" object, which is usually\n * either a `<Route>` element or an array of them. Used internally by\n * `<Routes>` to create a route config from its children.\n *\n * @see https://reactrouter.com/docs/en/v6/utils/create-routes-from-children\n */\nexport function createRoutesFromChildren(\n  children: React.ReactNode,\n  parentPath: number[] = []\n): RouteObject[] {\n  let routes: RouteObject[] = [];\n\n  React.Children.forEach(children, (element, index) => {\n    if (!React.isValidElement(element)) {\n      // Ignore non-elements. This allows people to more easily inline\n      // conditionals in their route config.\n      return;\n    }\n\n    if (element.type === React.Fragment) {\n      // Transparently support React.Fragment and its children.\n      routes.push.apply(\n        routes,\n        createRoutesFromChildren(element.props.children, parentPath)\n      );\n      return;\n    }\n\n    invariant(\n      element.type === Route,\n      `[${\n        typeof element.type === \"string\" ? element.type : element.type.name\n      }] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>`\n    );\n\n    let treePath = [...parentPath, index];\n    let route: RouteObject = {\n      id: element.props.id || treePath.join(\"-\"),\n      caseSensitive: element.props.caseSensitive,\n      element: element.props.element,\n      index: element.props.index,\n      path: element.props.path,\n      loader: element.props.loader,\n      action: element.props.action,\n      errorElement: element.props.errorElement,\n      hasErrorBoundary: element.props.errorElement != null,\n      shouldRevalidate: element.props.shouldRevalidate,\n      handle: element.props.handle,\n    };\n\n    if (element.props.children) {\n      route.children = createRoutesFromChildren(\n        element.props.children,\n        treePath\n      );\n    }\n\n    routes.push(route);\n  });\n\n  return routes;\n}\n\n/**\n * Renders the result of `matchRoutes()` into a React element.\n */\nexport function renderMatches(\n  matches: RouteMatch[] | null\n): React.ReactElement | null {\n  return _renderMatches(matches);\n}\n\n/**\n * @private\n * Walk the route tree and add hasErrorBoundary if it's not provided, so that\n * users providing manual route arrays can just specify errorElement\n */\nexport function enhanceManualRouteObjects(\n  routes: RouteObject[]\n): RouteObject[] {\n  return routes.map((route) => {\n    let routeClone = { ...route };\n    if (routeClone.hasErrorBoundary == null) {\n      routeClone.hasErrorBoundary = routeClone.errorElement != null;\n    }\n    if (routeClone.children) {\n      routeClone.children = enhanceManualRouteObjects(routeClone.children);\n    }\n    return routeClone;\n  });\n}\n","/**\n * NOTE: If you refactor this to split up the modules into separate files,\n * you'll need to update the rollup config for react-router-dom-v5-compat.\n */\nimport * as React from \"react\";\nimport type {\n  NavigateOptions,\n  RelativeRoutingType,\n  RouteObject,\n  To,\n} from \"react-router\";\nimport {\n  Router,\n  createPath,\n  useHref,\n  useLocation,\n  useMatch,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useResolvedPath,\n  UNSAFE_DataRouterContext as DataRouterContext,\n  UNSAFE_DataRouterStateContext as DataRouterStateContext,\n  UNSAFE_RouteContext as RouteContext,\n  UNSAFE_enhanceManualRouteObjects as enhanceManualRouteObjects,\n} from \"react-router\";\nimport type {\n  BrowserHistory,\n  Fetcher,\n  FormEncType,\n  FormMethod,\n  GetScrollRestorationKeyFunction,\n  HashHistory,\n  History,\n  HydrationState,\n  Router as RemixRouter,\n} from \"@remix-run/router\";\nimport {\n  createRouter,\n  createBrowserHistory,\n  createHashHistory,\n  invariant,\n  matchPath,\n} from \"@remix-run/router\";\n\nimport type {\n  SubmitOptions,\n  ParamKeyValuePair,\n  URLSearchParamsInit,\n} from \"./dom\";\nimport {\n  createSearchParams,\n  defaultMethod,\n  getFormSubmissionInfo,\n  getSearchParamsForLocation,\n  shouldProcessLinkClick,\n} from \"./dom\";\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Re-exports\n////////////////////////////////////////////////////////////////////////////////\n\nexport type {\n  FormEncType,\n  FormMethod,\n  ParamKeyValuePair,\n  SubmitOptions,\n  URLSearchParamsInit,\n};\nexport { createSearchParams };\n\n// Note: Keep in sync with react-router exports!\nexport type {\n  ActionFunction,\n  ActionFunctionArgs,\n  AwaitProps,\n  DataRouteMatch,\n  DataRouteObject,\n  Fetcher,\n  Hash,\n  IndexRouteProps,\n  JsonFunction,\n  LayoutRouteProps,\n  LoaderFunction,\n  LoaderFunctionArgs,\n  Location,\n  MemoryRouterProps,\n  NavigateFunction,\n  NavigateOptions,\n  NavigateProps,\n  Navigation,\n  Navigator,\n  OutletProps,\n  Params,\n  ParamParseKey,\n  Path,\n  PathMatch,\n  Pathname,\n  PathPattern,\n  PathRouteProps,\n  RedirectFunction,\n  RelativeRoutingType,\n  RouteMatch,\n  RouteObject,\n  RouteProps,\n  RouterProps,\n  RouterProviderProps,\n  RoutesProps,\n  Search,\n  ShouldRevalidateFunction,\n  To,\n} from \"react-router\";\nexport {\n  AbortedDeferredError,\n  Await,\n  MemoryRouter,\n  Navigate,\n  NavigationType,\n  Outlet,\n  Route,\n  Router,\n  RouterProvider,\n  Routes,\n  createMemoryRouter,\n  createPath,\n  createRoutesFromChildren,\n  createRoutesFromElements,\n  defer,\n  isRouteErrorResponse,\n  generatePath,\n  json,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  redirect,\n  renderMatches,\n  resolvePath,\n  useActionData,\n  useAsyncError,\n  useAsyncValue,\n  useHref,\n  useInRouterContext,\n  useLoaderData,\n  useLocation,\n  useMatch,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useNavigationType,\n  useOutlet,\n  useOutletContext,\n  useParams,\n  useResolvedPath,\n  useRevalidator,\n  useRouteError,\n  useRouteLoaderData,\n  useRoutes,\n} from \"react-router\";\n\n///////////////////////////////////////////////////////////////////////////////\n// DANGER! PLEASE READ ME!\n// We provide these exports as an escape hatch in the event that you need any\n// routing data that we don't provide an explicit API for. With that said, we\n// want to cover your use case if we can, so if you feel the need to use these\n// we want to hear from you. Let us know what you're building and we'll do our\n// best to make sure we can support you!\n//\n// We consider these exports an implementation detail and do not guarantee\n// against any breaking changes, regardless of the semver release. Use with\n// extreme caution and only if you understand the consequences. Godspeed.\n///////////////////////////////////////////////////////////////////////////////\n\n/** @internal */\nexport {\n  UNSAFE_DataRouterContext,\n  UNSAFE_DataRouterStateContext,\n  UNSAFE_DataStaticRouterContext,\n  UNSAFE_NavigationContext,\n  UNSAFE_LocationContext,\n  UNSAFE_RouteContext,\n  UNSAFE_enhanceManualRouteObjects,\n} from \"react-router\";\n//#endregion\n\ndeclare global {\n  var __staticRouterHydrationData: HydrationState | undefined;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Routers\n////////////////////////////////////////////////////////////////////////////////\n\nexport function createBrowserRouter(\n  routes: RouteObject[],\n  opts?: {\n    basename?: string;\n    hydrationData?: HydrationState;\n    window?: Window;\n  }\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    history: createBrowserHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || window?.__staticRouterHydrationData,\n    routes: enhanceManualRouteObjects(routes),\n  }).initialize();\n}\n\nexport function createHashRouter(\n  routes: RouteObject[],\n  opts?: {\n    basename?: string;\n    hydrationData?: HydrationState;\n    window?: Window;\n  }\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    history: createHashHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || window?.__staticRouterHydrationData,\n    routes: enhanceManualRouteObjects(routes),\n  }).initialize();\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Components\n////////////////////////////////////////////////////////////////////////////////\n\nexport interface BrowserRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\nexport function BrowserRouter({\n  basename,\n  children,\n  window,\n}: BrowserRouterProps) {\n  let historyRef = React.useRef<BrowserHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({ window, v5Compat: true });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface HashRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\nexport function HashRouter({ basename, children, window }: HashRouterProps) {\n  let historyRef = React.useRef<HashHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({ window, v5Compat: true });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface HistoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  history: History;\n}\n\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\nfunction HistoryRouter({ basename, children, history }: HistoryRouterProps) {\n  const [state, setState] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nif (__DEV__) {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\n\nexport { HistoryRouter as unstable_HistoryRouter };\n\nexport interface LinkProps\n  extends Omit<React.AnchorHTMLAttributes<HTMLAnchorElement>, \"href\"> {\n  reloadDocument?: boolean;\n  replace?: boolean;\n  state?: any;\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n  to: To;\n}\n\n/**\n * The public API for rendering a history-aware <a>.\n */\nexport const Link = React.forwardRef<HTMLAnchorElement, LinkProps>(\n  function LinkWithRef(\n    {\n      onClick,\n      relative,\n      reloadDocument,\n      replace,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      ...rest\n    },\n    ref\n  ) {\n    let href = useHref(to, { relative });\n    let internalOnClick = useLinkClickHandler(to, {\n      replace,\n      state,\n      target,\n      preventScrollReset,\n      relative,\n    });\n    function handleClick(\n      event: React.MouseEvent<HTMLAnchorElement, MouseEvent>\n    ) {\n      if (onClick) onClick(event);\n      if (!event.defaultPrevented) {\n        internalOnClick(event);\n      }\n    }\n\n    return (\n      // eslint-disable-next-line jsx-a11y/anchor-has-content\n      <a\n        {...rest}\n        href={href}\n        onClick={reloadDocument ? onClick : handleClick}\n        ref={ref}\n        target={target}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  Link.displayName = \"Link\";\n}\n\nexport interface NavLinkProps\n  extends Omit<LinkProps, \"className\" | \"style\" | \"children\"> {\n  children?:\n    | React.ReactNode\n    | ((props: { isActive: boolean; isPending: boolean }) => React.ReactNode);\n  caseSensitive?: boolean;\n  className?:\n    | string\n    | ((props: {\n        isActive: boolean;\n        isPending: boolean;\n      }) => string | undefined);\n  end?: boolean;\n  style?:\n    | React.CSSProperties\n    | ((props: {\n        isActive: boolean;\n        isPending: boolean;\n      }) => React.CSSProperties | undefined);\n}\n\n/**\n * A <Link> wrapper that knows if it's \"active\" or not.\n */\nexport const NavLink = React.forwardRef<HTMLAnchorElement, NavLinkProps>(\n  function NavLinkWithRef(\n    {\n      \"aria-current\": ariaCurrentProp = \"page\",\n      caseSensitive = false,\n      className: classNameProp = \"\",\n      end = false,\n      style: styleProp,\n      to,\n      children,\n      ...rest\n    },\n    ref\n  ) {\n    let path = useResolvedPath(to);\n    let match = useMatch({ path: path.pathname, end, caseSensitive });\n\n    let routerState = React.useContext(DataRouterStateContext);\n    let nextLocation = routerState?.navigation.location;\n    let nextPath = useResolvedPath(nextLocation || \"\");\n    let nextMatch = React.useMemo(\n      () =>\n        nextLocation\n          ? matchPath(\n              { path: path.pathname, end, caseSensitive },\n              nextPath.pathname\n            )\n          : null,\n      [nextLocation, path.pathname, caseSensitive, end, nextPath.pathname]\n    );\n\n    let isPending = nextMatch != null;\n    let isActive = match != null;\n\n    let ariaCurrent = isActive ? ariaCurrentProp : undefined;\n\n    let className: string | undefined;\n    if (typeof classNameProp === \"function\") {\n      className = classNameProp({ isActive, isPending });\n    } else {\n      // If the className prop is not a function, we use a default `active`\n      // class for <NavLink />s that are active. In v5 `active` was the default\n      // value for `activeClassName`, but we are removing that API and can still\n      // use the old default behavior for a cleaner upgrade path and keep the\n      // simple styling rules working as they currently do.\n      className = [\n        classNameProp,\n        isActive ? \"active\" : null,\n        isPending ? \"pending\" : null,\n      ]\n        .filter(Boolean)\n        .join(\" \");\n    }\n\n    let style =\n      typeof styleProp === \"function\"\n        ? styleProp({ isActive, isPending })\n        : styleProp;\n\n    return (\n      <Link\n        {...rest}\n        aria-current={ariaCurrent}\n        className={className}\n        ref={ref}\n        style={style}\n        to={to}\n      >\n        {typeof children === \"function\"\n          ? children({ isActive, isPending })\n          : children}\n      </Link>\n    );\n  }\n);\n\nif (__DEV__) {\n  NavLink.displayName = \"NavLink\";\n}\n\nexport interface FormProps extends React.FormHTMLAttributes<HTMLFormElement> {\n  /**\n   * The HTTP verb to use when the form is submit. Supports \"get\", \"post\",\n   * \"put\", \"delete\", \"patch\".\n   */\n  method?: FormMethod;\n\n  /**\n   * Normal `<form action>` but supports React Router's relative paths.\n   */\n  action?: string;\n\n  /**\n   * Forces a full document navigation instead of a fetch.\n   */\n  reloadDocument?: boolean;\n\n  /**\n   * Replaces the current entry in the browser history stack when the form\n   * navigates. Use this if you don't want the user to be able to click \"back\"\n   * to the page with the form on it.\n   */\n  replace?: boolean;\n\n  /**\n   * Determines whether the form action is relative to the route hierarchy or\n   * the pathname.  Use this if you want to opt out of navigating the route\n   * hierarchy and want to instead route based on /-delimited URL segments\n   */\n  relative?: RelativeRoutingType;\n\n  /**\n   * A function to call when the form is submitted. If you call\n   * `event.preventDefault()` then this form will not do anything.\n   */\n  onSubmit?: React.FormEventHandler<HTMLFormElement>;\n}\n\n/**\n * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except\n * that the interaction with the server is with `fetch` instead of new document\n * requests, allowing components to add nicer UX to the page as the form is\n * submitted and returns with data.\n */\nexport const Form = React.forwardRef<HTMLFormElement, FormProps>(\n  (props, ref) => {\n    return <FormImpl {...props} ref={ref} />;\n  }\n);\n\nif (__DEV__) {\n  Form.displayName = \"Form\";\n}\n\ntype HTMLSubmitEvent = React.BaseSyntheticEvent<\n  SubmitEvent,\n  Event,\n  HTMLFormElement\n>;\n\ntype HTMLFormSubmitter = HTMLButtonElement | HTMLInputElement;\n\ninterface FormImplProps extends FormProps {\n  fetcherKey?: string;\n  routeId?: string;\n}\n\nconst FormImpl = React.forwardRef<HTMLFormElement, FormImplProps>(\n  (\n    {\n      reloadDocument,\n      replace,\n      method = defaultMethod,\n      action,\n      onSubmit,\n      fetcherKey,\n      routeId,\n      relative,\n      ...props\n    },\n    forwardedRef\n  ) => {\n    let submit = useSubmitImpl(fetcherKey, routeId);\n    let formMethod: FormMethod =\n      method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n    let formAction = useFormAction(action, { relative });\n    let submitHandler: React.FormEventHandler<HTMLFormElement> = (event) => {\n      onSubmit && onSubmit(event);\n      if (event.defaultPrevented) return;\n      event.preventDefault();\n\n      let submitter = (event as unknown as HTMLSubmitEvent).nativeEvent\n        .submitter as HTMLFormSubmitter | null;\n\n      submit(submitter || event.currentTarget, { method, replace, relative });\n    };\n\n    return (\n      <form\n        ref={forwardedRef}\n        method={formMethod}\n        action={formAction}\n        onSubmit={reloadDocument ? onSubmit : submitHandler}\n        {...props}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  Form.displayName = \"Form\";\n}\n\ninterface ScrollRestorationProps {\n  getKey?: GetScrollRestorationKeyFunction;\n  storageKey?: string;\n}\n\n/**\n * This component will emulate the browser's scroll restoration on location\n * changes.\n */\nexport function ScrollRestoration({\n  getKey,\n  storageKey,\n}: ScrollRestorationProps) {\n  useScrollRestoration({ getKey, storageKey });\n  return null;\n}\n\nif (__DEV__) {\n  ScrollRestoration.displayName = \"ScrollRestoration\";\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Hooks\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\nexport function useLinkClickHandler<E extends Element = HTMLAnchorElement>(\n  to: To,\n  {\n    target,\n    replace: replaceProp,\n    state,\n    preventScrollReset,\n    relative,\n  }: {\n    target?: React.HTMLAttributeAnchorTarget;\n    replace?: boolean;\n    state?: any;\n    preventScrollReset?: boolean;\n    relative?: RelativeRoutingType;\n  } = {}\n): (event: React.MouseEvent<E, MouseEvent>) => void {\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to, { relative });\n\n  return React.useCallback(\n    (event: React.MouseEvent<E, MouseEvent>) => {\n      if (shouldProcessLinkClick(event, target)) {\n        event.preventDefault();\n\n        // If the URL hasn't changed, a regular <a> will do a replace instead of\n        // a push, so do the same here unless the replace prop is explicitly set\n        let replace =\n          replaceProp !== undefined\n            ? replaceProp\n            : createPath(location) === createPath(path);\n\n        navigate(to, { replace, state, preventScrollReset, relative });\n      }\n    },\n    [\n      location,\n      navigate,\n      path,\n      replaceProp,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      relative,\n    ]\n  );\n}\n\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\nexport function useSearchParams(\n  defaultInit?: URLSearchParamsInit\n): [URLSearchParams, SetURLSearchParams] {\n  warning(\n    typeof URLSearchParams !== \"undefined\",\n    `You cannot use the \\`useSearchParams\\` hook in a browser that does not ` +\n      `support the URLSearchParams API. If you need to support Internet ` +\n      `Explorer 11, we recommend you load a polyfill such as ` +\n      `https://github.com/ungap/url-search-params\\n\\n` +\n      `If you're unsure how to load polyfills, we recommend you check out ` +\n      `https://polyfill.io/v3/ which provides some recommendations about how ` +\n      `to load polyfills only for users that need them, instead of for every ` +\n      `user.`\n  );\n\n  let defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n\n  let location = useLocation();\n  let searchParams = React.useMemo(\n    () =>\n      getSearchParamsForLocation(\n        location.search,\n        defaultSearchParamsRef.current\n      ),\n    [location.search]\n  );\n\n  let navigate = useNavigate();\n  let setSearchParams = React.useCallback<SetURLSearchParams>(\n    (nextInit, navigateOptions) => {\n      const newSearchParams = createSearchParams(\n        typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit\n      );\n      navigate(\"?\" + newSearchParams, navigateOptions);\n    },\n    [navigate, searchParams]\n  );\n\n  return [searchParams, setSearchParams];\n}\n\ntype SetURLSearchParams = (\n  nextInit?:\n    | URLSearchParamsInit\n    | ((prev: URLSearchParams) => URLSearchParamsInit),\n  navigateOpts?: NavigateOptions\n) => void;\n\ntype SubmitTarget =\n  | HTMLFormElement\n  | HTMLButtonElement\n  | HTMLInputElement\n  | FormData\n  | URLSearchParams\n  | { [name: string]: string }\n  | null;\n\n/**\n * Submits a HTML `<form>` to the server without reloading the page.\n */\nexport interface SubmitFunction {\n  (\n    /**\n     * Specifies the `<form>` to be submitted to the server, a specific\n     * `<button>` or `<input type=\"submit\">` to use to submit the form, or some\n     * arbitrary data to submit.\n     *\n     * Note: When using a `<button>` its `name` and `value` will also be\n     * included in the form data that is submitted.\n     */\n    target: SubmitTarget,\n\n    /**\n     * Options that override the `<form>`'s own attributes. Required when\n     * submitting arbitrary data without a backing `<form>`.\n     */\n    options?: SubmitOptions\n  ): void;\n}\n\n/**\n * Returns a function that may be used to programmatically submit a form (or\n * some arbitrary data) to the server.\n */\nexport function useSubmit(): SubmitFunction {\n  return useSubmitImpl();\n}\n\nfunction useSubmitImpl(fetcherKey?: string, routeId?: string): SubmitFunction {\n  let dataRouterContext = React.useContext(DataRouterContext);\n  invariant(\n    dataRouterContext,\n    \"useSubmitImpl must be used within a Data Router\"\n  );\n  let { router } = dataRouterContext;\n  let defaultAction = useFormAction();\n\n  return React.useCallback(\n    (target, options = {}) => {\n      if (typeof document === \"undefined\") {\n        throw new Error(\n          \"You are calling submit during the server render. \" +\n            \"Try calling submit within a `useEffect` or callback instead.\"\n        );\n      }\n\n      let { method, encType, formData, url } = getFormSubmissionInfo(\n        target,\n        defaultAction,\n        options\n      );\n\n      let href = url.pathname + url.search;\n      let opts = {\n        replace: options.replace,\n        formData,\n        formMethod: method as FormMethod,\n        formEncType: encType as FormEncType,\n      };\n      if (fetcherKey) {\n        invariant(routeId != null, \"No routeId available for useFetcher()\");\n        router.fetch(fetcherKey, routeId, href, opts);\n      } else {\n        router.navigate(href, opts);\n      }\n    },\n    [defaultAction, router, fetcherKey, routeId]\n  );\n}\n\nexport function useFormAction(\n  action?: string,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): string {\n  let routeContext = React.useContext(RouteContext);\n  invariant(routeContext, \"useFormAction must be used inside a RouteContext\");\n\n  let [match] = routeContext.matches.slice(-1);\n  let resolvedAction = action ?? \".\";\n  let path = useResolvedPath(resolvedAction, { relative });\n\n  // Previously we set the default action to \".\". The problem with this is that\n  // `useResolvedPath(\".\")` excludes search params and the hash of the resolved\n  // URL. This is the intended behavior of when \".\" is specifically provided as\n  // the form action, but inconsistent w/ browsers when the action is omitted.\n  // https://github.com/remix-run/remix/issues/927\n  let location = useLocation();\n  if (action == null) {\n    // Safe to write to these directly here since if action was undefined, we\n    // would have called useResolvedPath(\".\") which will never include a search\n    // or hash\n    path.search = location.search;\n    path.hash = location.hash;\n\n    // When grabbing search params from the URL, remove the automatically\n    // inserted ?index param so we match the useResolvedPath search behavior\n    // which would not include ?index\n    if (match.route.index) {\n      let params = new URLSearchParams(path.search);\n      params.delete(\"index\");\n      path.search = params.toString() ? `?${params.toString()}` : \"\";\n    }\n  }\n\n  if ((!action || action === \".\") && match.route.index) {\n    path.search = path.search\n      ? path.search.replace(/^\\?/, \"?index&\")\n      : \"?index\";\n  }\n\n  return createPath(path);\n}\n\nfunction createFetcherForm(fetcherKey: string, routeId: string) {\n  let FetcherForm = React.forwardRef<HTMLFormElement, FormProps>(\n    (props, ref) => {\n      return (\n        <FormImpl\n          {...props}\n          ref={ref}\n          fetcherKey={fetcherKey}\n          routeId={routeId}\n        />\n      );\n    }\n  );\n  if (__DEV__) {\n    FetcherForm.displayName = \"fetcher.Form\";\n  }\n  return FetcherForm;\n}\n\nlet fetcherId = 0;\n\nexport type FetcherWithComponents<TData> = Fetcher<TData> & {\n  Form: ReturnType<typeof createFetcherForm>;\n  submit: (\n    target: SubmitTarget,\n    // Fetchers cannot replace because they are not navigation events\n    options?: Omit<SubmitOptions, \"replace\">\n  ) => void;\n  load: (href: string) => void;\n};\n\n/**\n * Interacts with route loaders and actions without causing a navigation. Great\n * for any interaction that stays on the same page.\n */\nexport function useFetcher<TData = any>(): FetcherWithComponents<TData> {\n  let dataRouterContext = React.useContext(DataRouterContext);\n  invariant(dataRouterContext, `useFetcher must be used within a Data Router`);\n  let { router } = dataRouterContext;\n\n  let route = React.useContext(RouteContext);\n  invariant(route, `useFetcher must be used inside a RouteContext`);\n\n  let routeId = route.matches[route.matches.length - 1]?.route.id;\n  invariant(\n    routeId != null,\n    `useFetcher can only be used on routes that contain a unique \"id\"`\n  );\n\n  let [fetcherKey] = React.useState(() => String(++fetcherId));\n  let [Form] = React.useState(() => {\n    invariant(routeId, `No routeId available for fetcher.Form()`);\n    return createFetcherForm(fetcherKey, routeId);\n  });\n  let [load] = React.useState(() => (href: string) => {\n    invariant(router, \"No router available for fetcher.load()\");\n    invariant(routeId, \"No routeId available for fetcher.load()\");\n    router.fetch(fetcherKey, routeId, href);\n  });\n  let submit = useSubmitImpl(fetcherKey, routeId);\n\n  let fetcher = router.getFetcher<TData>(fetcherKey);\n\n  let fetcherWithComponents = React.useMemo(\n    () => ({\n      Form,\n      submit,\n      load,\n      ...fetcher,\n    }),\n    [fetcher, Form, submit, load]\n  );\n\n  React.useEffect(() => {\n    // Is this busted when the React team gets real weird and calls effects\n    // twice on mount?  We really just need to garbage collect here when this\n    // fetcher is no longer around.\n    return () => {\n      if (!router) {\n        console.warn(`No fetcher available to clean up from useFetcher()`);\n        return;\n      }\n      router.deleteFetcher(fetcherKey);\n    };\n  }, [router, fetcherKey]);\n\n  return fetcherWithComponents;\n}\n\n/**\n * Provides all fetchers currently on the page. Useful for layouts and parent\n * routes that need to provide pending/optimistic UI regarding the fetch.\n */\nexport function useFetchers(): Fetcher[] {\n  let state = React.useContext(DataRouterStateContext);\n  invariant(state, `useFetchers must be used within a DataRouterStateContext`);\n  return [...state.fetchers.values()];\n}\n\nconst SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\nlet savedScrollPositions: Record<string, number> = {};\n\n/**\n * When rendered inside a RouterProvider, will restore scroll positions on navigations\n */\nfunction useScrollRestoration({\n  getKey,\n  storageKey,\n}: {\n  getKey?: GetScrollRestorationKeyFunction;\n  storageKey?: string;\n} = {}) {\n  let location = useLocation();\n  let matches = useMatches();\n  let navigation = useNavigation();\n  let dataRouterContext = React.useContext(DataRouterContext);\n  invariant(\n    dataRouterContext,\n    \"useScrollRestoration must be used within a DataRouterContext\"\n  );\n  let { router } = dataRouterContext;\n  let state = React.useContext(DataRouterStateContext);\n\n  invariant(\n    router != null && state != null,\n    \"useScrollRestoration must be used within a DataRouterStateContext\"\n  );\n  let { restoreScrollPosition, preventScrollReset } = state;\n\n  // Trigger manual scroll restoration while we're active\n  React.useEffect(() => {\n    window.history.scrollRestoration = \"manual\";\n    return () => {\n      window.history.scrollRestoration = \"auto\";\n    };\n  }, []);\n\n  // Save positions on unload\n  useBeforeUnload(\n    React.useCallback(() => {\n      if (navigation.state === \"idle\") {\n        let key = (getKey ? getKey(location, matches) : null) || location.key;\n        savedScrollPositions[key] = window.scrollY;\n      }\n      sessionStorage.setItem(\n        storageKey || SCROLL_RESTORATION_STORAGE_KEY,\n        JSON.stringify(savedScrollPositions)\n      );\n      window.history.scrollRestoration = \"auto\";\n    }, [storageKey, getKey, navigation.state, location, matches])\n  );\n\n  // Read in any saved scroll locations\n  React.useLayoutEffect(() => {\n    try {\n      let sessionPositions = sessionStorage.getItem(\n        storageKey || SCROLL_RESTORATION_STORAGE_KEY\n      );\n      if (sessionPositions) {\n        savedScrollPositions = JSON.parse(sessionPositions);\n      }\n    } catch (e) {\n      // no-op, use default empty object\n    }\n  }, [storageKey]);\n\n  // Enable scroll restoration in the router\n  React.useLayoutEffect(() => {\n    let disableScrollRestoration = router?.enableScrollRestoration(\n      savedScrollPositions,\n      () => window.scrollY,\n      getKey\n    );\n    return () => disableScrollRestoration && disableScrollRestoration();\n  }, [router, getKey]);\n\n  // Restore scrolling when state.restoreScrollPosition changes\n  React.useLayoutEffect(() => {\n    // Explicit false means don't do anything (used for submissions)\n    if (restoreScrollPosition === false) {\n      return;\n    }\n\n    // been here before, scroll to it\n    if (typeof restoreScrollPosition === \"number\") {\n      window.scrollTo(0, restoreScrollPosition);\n      return;\n    }\n\n    // try to scroll to the hash\n    if (location.hash) {\n      let el = document.getElementById(location.hash.slice(1));\n      if (el) {\n        el.scrollIntoView();\n        return;\n      }\n    }\n\n    // Opt out of scroll reset if this link requested it\n    if (preventScrollReset === true) {\n      return;\n    }\n\n    // otherwise go to the top on new locations\n    window.scrollTo(0, 0);\n  }, [location, restoreScrollPosition, preventScrollReset]);\n}\n\nfunction useBeforeUnload(callback: () => any): void {\n  React.useEffect(() => {\n    window.addEventListener(\"beforeunload\", callback);\n    return () => {\n      window.removeEventListener(\"beforeunload\", callback);\n    };\n  }, [callback]);\n}\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Utils\n////////////////////////////////////////////////////////////////////////////////\n\nfunction warning(cond: boolean, message: string): void {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n\n    try {\n      // Welcome to debugging React Router!\n      //\n      // This error is thrown as a convenience so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message);\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\n//#endregion\n","import type { FormEncType, FormMethod } from \"@remix-run/router\";\nimport type { RelativeRoutingType } from \"react-router\";\n\nexport const defaultMethod = \"get\";\nconst defaultEncType = \"application/x-www-form-urlencoded\";\n\nexport function isHtmlElement(object: any): object is HTMLElement {\n  return object != null && typeof object.tagName === \"string\";\n}\n\nexport function isButtonElement(object: any): object is HTMLButtonElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\n\nexport function isFormElement(object: any): object is HTMLFormElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\n\nexport function isInputElement(object: any): object is HTMLInputElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\n\ntype LimitedMouseEvent = Pick<\n  MouseEvent,\n  \"button\" | \"metaKey\" | \"altKey\" | \"ctrlKey\" | \"shiftKey\"\n>;\n\nfunction isModifiedEvent(event: LimitedMouseEvent) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nexport function shouldProcessLinkClick(\n  event: LimitedMouseEvent,\n  target?: string\n) {\n  return (\n    event.button === 0 && // Ignore everything but left clicks\n    (!target || target === \"_self\") && // Let browser handle \"target=_blank\" etc.\n    !isModifiedEvent(event) // Ignore clicks with modifier keys\n  );\n}\n\nexport type ParamKeyValuePair = [string, string];\n\nexport type URLSearchParamsInit =\n  | string\n  | ParamKeyValuePair[]\n  | Record<string, string | string[]>\n  | URLSearchParams;\n\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\nexport function createSearchParams(\n  init: URLSearchParamsInit = \"\"\n): URLSearchParams {\n  return new URLSearchParams(\n    typeof init === \"string\" ||\n    Array.isArray(init) ||\n    init instanceof URLSearchParams\n      ? init\n      : Object.keys(init).reduce((memo, key) => {\n          let value = init[key];\n          return memo.concat(\n            Array.isArray(value) ? value.map((v) => [key, v]) : [[key, value]]\n          );\n        }, [] as ParamKeyValuePair[])\n  );\n}\n\nexport function getSearchParamsForLocation(\n  locationSearch: string,\n  defaultSearchParams: URLSearchParams\n) {\n  let searchParams = createSearchParams(locationSearch);\n\n  for (let key of defaultSearchParams.keys()) {\n    if (!searchParams.has(key)) {\n      defaultSearchParams.getAll(key).forEach((value) => {\n        searchParams.append(key, value);\n      });\n    }\n  }\n\n  return searchParams;\n}\n\nexport interface SubmitOptions {\n  /**\n   * The HTTP method used to submit the form. Overrides `<form method>`.\n   * Defaults to \"GET\".\n   */\n  method?: FormMethod;\n\n  /**\n   * The action URL path used to submit the form. Overrides `<form action>`.\n   * Defaults to the path of the current route.\n   *\n   * Note: It is assumed the path is already resolved. If you need to resolve a\n   * relative path, use `useFormAction`.\n   */\n  action?: string;\n\n  /**\n   * The action URL used to submit the form. Overrides `<form encType>`.\n   * Defaults to \"application/x-www-form-urlencoded\".\n   */\n  encType?: FormEncType;\n\n  /**\n   * Set `true` to replace the current entry in the browser's history stack\n   * instead of creating a new one (i.e. stay on \"the same page\"). Defaults\n   * to `false`.\n   */\n  replace?: boolean;\n\n  /**\n   * Determines whether the form action is relative to the route hierarchy or\n   * the pathname.  Use this if you want to opt out of navigating the route\n   * hierarchy and want to instead route based on /-delimited URL segments\n   */\n  relative?: RelativeRoutingType;\n}\n\nexport function getFormSubmissionInfo(\n  target:\n    | HTMLFormElement\n    | HTMLButtonElement\n    | HTMLInputElement\n    | FormData\n    | URLSearchParams\n    | { [name: string]: string }\n    | null,\n  defaultAction: string,\n  options: SubmitOptions\n): {\n  url: URL;\n  method: string;\n  encType: string;\n  formData: FormData;\n} {\n  let method: string;\n  let action: string;\n  let encType: string;\n  let formData: FormData;\n\n  if (isFormElement(target)) {\n    let submissionTrigger: HTMLButtonElement | HTMLInputElement = (\n      options as any\n    ).submissionTrigger;\n\n    method = options.method || target.getAttribute(\"method\") || defaultMethod;\n    action = options.action || target.getAttribute(\"action\") || defaultAction;\n    encType =\n      options.encType || target.getAttribute(\"enctype\") || defaultEncType;\n\n    formData = new FormData(target);\n\n    if (submissionTrigger && submissionTrigger.name) {\n      formData.append(submissionTrigger.name, submissionTrigger.value);\n    }\n  } else if (\n    isButtonElement(target) ||\n    (isInputElement(target) &&\n      (target.type === \"submit\" || target.type === \"image\"))\n  ) {\n    let form = target.form;\n\n    if (form == null) {\n      throw new Error(\n        `Cannot submit a <button> or <input type=\"submit\"> without a <form>`\n      );\n    }\n\n    // <button>/<input type=\"submit\"> may override attributes of <form>\n\n    method =\n      options.method ||\n      target.getAttribute(\"formmethod\") ||\n      form.getAttribute(\"method\") ||\n      defaultMethod;\n    action =\n      options.action ||\n      target.getAttribute(\"formaction\") ||\n      form.getAttribute(\"action\") ||\n      defaultAction;\n    encType =\n      options.encType ||\n      target.getAttribute(\"formenctype\") ||\n      form.getAttribute(\"enctype\") ||\n      defaultEncType;\n\n    formData = new FormData(form);\n\n    // Include name + value from a <button>, appending in case the button name\n    // matches an existing input name\n    if (target.name) {\n      formData.append(target.name, target.value);\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error(\n      `Cannot submit element that is not <form>, <button>, or ` +\n        `<input type=\"submit|image\">`\n    );\n  } else {\n    method = options.method || defaultMethod;\n    action = options.action || defaultAction;\n    encType = options.encType || defaultEncType;\n\n    if (target instanceof FormData) {\n      formData = target;\n    } else {\n      formData = new FormData();\n\n      if (target instanceof URLSearchParams) {\n        for (let [name, value] of target) {\n          formData.append(name, value);\n        }\n      } else if (target != null) {\n        for (let name of Object.keys(target)) {\n          formData.append(name, target[name]);\n        }\n      }\n    }\n  }\n\n  let { protocol, host } = window.location;\n  let url = new URL(action, `${protocol}//${host}`);\n\n  return { url, method, encType, formData };\n}\n","import React from 'react'\r\nimport { Link, Outlet } from 'react-router-dom'\r\nimport { AppContext } from '../../App'\r\nimport { baseURL } from '../../App'\r\n\r\nconst NavbarLanding = () => {\r\n  \r\n  const {panelStatus} = React.useContext(AppContext)\r\n\r\n  return (\r\n    <div>\r\n      <nav className='flex'>\r\n        <h1><Link to={baseURL} className='brand'>County Development Project Tracker</Link></h1>\r\n        <ul>\r\n          <li><Link to={baseURL +'/counties'}>Counties</Link></li>\r\n          <li><Link to={baseURL +'/updates'}>Updates</Link></li>\r\n          <li><Link to={baseURL +'/about'}>About</Link></li>\r\n          <li><button onClick={() => panelStatus.setLoginPanelStatus(true)}>Login</button></li>\r\n        </ul>\r\n      </nav>\r\n      <Outlet />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NavbarLanding","import { Link, Outlet } from 'react-router-dom'\r\nimport { baseURL } from '../../App'\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <div>\r\n      <nav className='secondary_nav flex'>\r\n        <h1><Link to={baseURL} className='brand'>County Development Project Tracker</Link></h1>\r\n        <ul>\r\n          <li><Link to={baseURL +'/counties'}>Counties</Link></li>\r\n          <li><Link to={baseURL +'/updates'}>Updates</Link></li>\r\n          <li><Link to={baseURL +'/about'}>About</Link></li>\r\n        </ul>\r\n      </nav>\r\n      <Outlet />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Navbar","import { Link, Outlet } from 'react-router-dom'\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <div>\r\n      <nav className='secondary_nav flex'>\r\n        <h1><Link to='/admin' className='brand'>County Development Project Tracker Administration</Link></h1>\r\n        <ul>\r\n          <li><Link to='/'>Log out</Link></li>\r\n        </ul>\r\n      </nav>\r\n      <Outlet />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Navbar","const addCounties = (x1,x2,x3,x4) => {\r\n  return {\r\n    type: 'COU_ADD',\r\n    number: x1,\r\n    name: x2,\r\n    governor: x3,\r\n    senator: x4\r\n  }\r\n}\r\n\r\nconst addProjectDetails = (x1,x2,x3,x4) => {\r\n  return {\r\n    type: 'PRO_ADD_DETAILS',\r\n    projectID: x1,\r\n    name: x2,\r\n    description: x3,\r\n    status: x4\r\n  }\r\n}\r\n\r\nconst addProjectTimelines = (x1,x2,x3,x4,x5) => {\r\n  return {\r\n    type: 'PRO_ADD_TIMELINES',\r\n    projectID: x1,\r\n    approvalDate: x2,\r\n    startDate: x3,\r\n    endDate: x4,\r\n    duration: x5\r\n  }\r\n}\r\n\r\nconst addProjectImplementations = (x1,x2,x3,x4,x5,x6,x7) => {\r\n  return {\r\n    type: 'PRO_ADD_IMPLEMENTATIONS',\r\n    projectID: x1,\r\n    sector: x2,\r\n    ministry: x3,\r\n    agency: x4,\r\n    contractor: x5,\r\n    priority: x6\r\n  }\r\n}\r\n\r\nconst addProjectFinances = (x1,x2,x3,x4,x5) => {\r\n  return {\r\n    type: 'PRO_ADD_FINANCES',\r\n    projectID: x1,\r\n    estimatedCost: x2,\r\n    budget: x3,\r\n    financialYear: x4,\r\n    fundingSource: x5\r\n  }\r\n}\r\n\r\nconst addProjectLocations = (x1,x2,x3,x4,x5) => {\r\n  return {\r\n    type: 'PRO_ADD_LOCATIONS',\r\n    projectID: x1,\r\n    countyNo: x2,\r\n    subCounty: x3,\r\n    constituency: x4,\r\n    ward: x5\r\n  }\r\n}\r\n\r\nconst addTrackingLogs = (x1,x2,x3,x4,x5,x6) => {\r\n  return {\r\n    type: 'TRA_ADD',\r\n    date: x1,\r\n    projectID: x2,\r\n    field: x3,\r\n    action: x4,\r\n    valueFrom: x5,\r\n    valueTo: x6\r\n  }\r\n}\r\n\r\nconst addAdmins = (x1,x2,x3,x4) => {\r\n  return {\r\n    type: 'ADM_ADD',\r\n    username: x1,\r\n    firstName: x2,\r\n    lastName: x3,\r\n    email: x4\r\n  }\r\n}\r\n\r\nconst resetCounties = () => { return { type: 'COU_RESET' } }\r\n\r\nconst resetProjectDetails = () => { return { type: 'PRO_RESET_DETAILS' } }\r\n\r\nconst resetProjectTimelines = () => { return { type: 'PRO_RESET_TIMELINES' } }\r\n\r\nconst resetProjectImplementations = () => { return { type: 'PRO_RESET_IMPLEMENTATIONS' } }\r\n\r\nconst resetProjectFinances = () => { return { type: 'PRO_RESET_FINANCES' } }\r\n\r\nconst resetProjectLocations = () => { return { type: 'PRO_RESET_LOCATIONS' } }\r\n\r\nconst resetTrackingLogs = () => { return { type: 'TRA_RESET' } }\r\n\r\nconst resetAdmins = () => { return { type: 'ADM_RESET' } }\r\n\r\nexport const mapDispatchToProps = {\r\n  addCounties,\r\n  addProjectDetails,\r\n  addProjectTimelines,\r\n  addProjectImplementations,\r\n  addProjectFinances,\r\n  addProjectLocations,\r\n  addTrackingLogs,\r\n  addAdmins,\r\n  resetCounties,\r\n  resetProjectDetails,\r\n  resetProjectTimelines,\r\n  resetProjectImplementations,\r\n  resetProjectFinances,\r\n  resetProjectLocations,\r\n  resetTrackingLogs,\r\n  resetAdmins\r\n}","import axios from 'axios'\r\n\r\nlet getCountiesScript = 'http://localhost/development-project-tracker/src/utils/php/select/getCounties.php'\r\n\r\nexport const getCounties = (props) => {\r\n  props.resetCounties()\r\n  axios.get(getCountiesScript)\r\n  .then((response) => {\r\n    let resArray = response.data\r\n    let recordIndex = 0\r\n    while(recordIndex < resArray.length) {\r\n      props.addCounties(\r\n        resArray[recordIndex].countyNo,\r\n        resArray[recordIndex].name,\r\n        resArray[recordIndex].governor,\r\n        resArray[recordIndex].senator\r\n      )\r\n      recordIndex++\r\n    }\r\n  },((error) => console.log(error)))\r\n}","import axios from 'axios'\r\n\r\nlet getProjectDetailsScript = 'http://localhost/development-project-tracker/src/utils/php/select/getProjectDetails.php'\r\n\r\nexport const getProjectDetails = (props) => {\r\n  props.resetProjectDetails()\r\n  axios.get(getProjectDetailsScript)\r\n  .then((response) => {\r\n    let resArray = response.data\r\n    let recordIndex = 0\r\n    while(recordIndex < resArray.length) {\r\n      props.addProjectDetails(\r\n        resArray[recordIndex].projectID,\r\n        resArray[recordIndex].name,\r\n        resArray[recordIndex].description,\r\n        resArray[recordIndex].status\r\n      )\r\n      recordIndex++\r\n    }\r\n  },((error) => console.log(error)))\r\n}","import axios from 'axios'\r\n\r\nlet getProjectTimelinesScript = 'http://localhost/development-project-tracker/src/utils/php/select/getProjectTimelines.php'\r\n\r\nexport const getProjectTimelines = (props) => {\r\n  props.resetProjectTimelines()\r\n  axios.get(getProjectTimelinesScript)\r\n  .then((response) => {\r\n    let resArray = response.data\r\n    let recordIndex = 0\r\n    while(recordIndex < resArray.length) {\r\n      props.addProjectTimelines(\r\n        resArray[recordIndex].projectID,\r\n        resArray[recordIndex]['approval date'],\r\n        resArray[recordIndex]['start date'],\r\n        resArray[recordIndex]['end date'],\r\n        resArray[recordIndex].duration\r\n      )\r\n      recordIndex++\r\n    }\r\n  },((error) => console.log(error)))\r\n}","import axios from 'axios'\r\n\r\nlet getProjectImplementationsScript = 'http://localhost/development-project-tracker/src/utils/php/select/getProjectImplementations.php'\r\n\r\nexport const getProjectImplementations = (props) => {\r\n  props.resetProjectImplementations()\r\n  axios.get(getProjectImplementationsScript)\r\n  .then((response) => {\r\n    let resArray = response.data\r\n    let recordIndex = 0\r\n    while(recordIndex < resArray.length) {\r\n      props.addProjectImplementations(\r\n        resArray[recordIndex].projectID,\r\n        resArray[recordIndex].sector,\r\n        resArray[recordIndex].ministry,\r\n        resArray[recordIndex]['implementing agency'],\r\n        resArray[recordIndex].contractor,\r\n        resArray[recordIndex].priority\r\n      )\r\n      recordIndex++\r\n    }\r\n  },((error) => console.log(error)))\r\n}","import axios from 'axios'\r\n\r\nlet getProjectFinancesScript = 'http://localhost/development-project-tracker/src/utils/php/select/getProjectFinances.php'\r\n\r\nexport const getProjectFinances = (props) => {\r\n  props.resetProjectFinances()\r\n  axios.get(getProjectFinancesScript)\r\n  .then((response) => {\r\n    let resArray = response.data\r\n    let recordIndex = 0\r\n    while(recordIndex < resArray.length) {\r\n      props.addProjectFinances(\r\n        resArray[recordIndex].projectID,\r\n        resArray[recordIndex]['estimated cost'],\r\n        resArray[recordIndex].budget,\r\n        resArray[recordIndex]['financial year'],\r\n        resArray[recordIndex]['funding source']\r\n      )\r\n      recordIndex++\r\n    }\r\n  },((error) => console.log(error)))\r\n}","import axios from 'axios'\r\n\r\nlet getProjectLocationsScript = 'http://localhost/development-project-tracker/src/utils/php/select/getProjectLocations.php'\r\n\r\nexport const getProjectLocations = (props) => {\r\n  props.resetProjectLocations()\r\n  axios.get(getProjectLocationsScript)\r\n  .then((response) => {\r\n    let resArray = response.data\r\n    let recordIndex = 0\r\n    while(recordIndex < resArray.length) {\r\n      props.addProjectLocations(\r\n        resArray[recordIndex].projectID,\r\n        resArray[recordIndex].countyNo,\r\n        resArray[recordIndex]['sub county'],\r\n        resArray[recordIndex].constituency,\r\n        resArray[recordIndex].ward\r\n      )\r\n      recordIndex++\r\n    }\r\n  },((error) => console.log(error)))\r\n}","import axios from 'axios'\r\n\r\nlet getTrackLogsScript = 'http://localhost/development-project-tracker/src/utils/php/select/getTrackingLogs.php'\r\n\r\nexport const getTrackingLogs = (props) => {\r\n  props.resetTrackingLogs()\r\n  axios.get(getTrackLogsScript)\r\n  .then((response) => {\r\n    let resArray = response.data\r\n    let recordIndex = 0\r\n    while(recordIndex < resArray.length) {\r\n      props.addTrackingLogs(\r\n        resArray[recordIndex].date,\r\n        resArray[recordIndex].projectID,\r\n        resArray[recordIndex].field,\r\n        resArray[recordIndex].action,\r\n        resArray[recordIndex]['value from'],\r\n        resArray[recordIndex]['value to']\r\n      )\r\n      recordIndex++\r\n    }\r\n  },((error) => console.log(error)))\r\n}","export const openSidePanel = (ref, contextValue) => {\r\n  if(contextValue === true) {\r\n    if(ref.current !== undefined) {\r\n      ref.current.style.width = '25vw'\r\n      ref.current.style.visibility = 'visible'\r\n      ref.current.style.opacity = '1'\r\n    }\r\n  }\r\n}\r\n\r\nexport const closeSidePanel = (ref, contextValue) => {\r\n  contextValue(false)\r\n  ref.current.style.visibility = 'hidden'\r\n  ref.current.style.opacity = '0';\r\n  ref.current.style.width = '0'\r\n}","import React from 'react'\r\nimport { AppContext } from '../../App'\r\nimport { openSidePanel } from '../../utils/functions/panels'\r\nimport { closeSidePanel } from '../../utils/functions/panels'\r\n\r\nlet loginScript = 'http://localhost/development-project-tracker/src/utils/php/select/login.php';\r\n\r\nconst LoginPanel = () => {\r\n\r\n  const {panelStatus} = React.useContext(AppContext)\r\n  const [formData, setFormData] = React.useState({username: '', password: ''})\r\n  const loginPanelRef = React.useRef()\r\n\r\n  openSidePanel(loginPanelRef, panelStatus.loginPanel)\r\n\r\n  const handleChange = (e) => setFormData({...formData, [e.target.name]: e.target.value})\r\n\r\n  return (\r\n    <div className='sidePanel' ref={loginPanelRef}>\r\n      <svg className='close_modal_svg' onClick={() => closeSidePanel(loginPanelRef, panelStatus.setLoginPanelStatus)} xmlns=\"http://www.w3.org/2000/svg\" height=\"36px\" viewBox=\"0 0 24 24\" width=\"36px\" fill=\"#000\"><path d=\"M0 0h24v24H0V0z\" fill=\"#FFF\"/><path d=\"M18.3 5.71c-.39-.39-1.02-.39-1.41 0L12 10.59 7.11 5.7c-.39-.39-1.02-.39-1.41 0-.39.39-.39 1.02 0 1.41L10.59 12 5.7 16.89c-.39.39-.39 1.02 0 1.41.39.39 1.02.39 1.41 0L12 13.41l4.89 4.89c.39.39 1.02.39 1.41 0 .39-.39.39-1.02 0-1.41L13.41 12l4.89-4.89c.38-.38.38-1.02 0-1.4z\"/></svg>\r\n      <div className='login_container'>\r\n        <div className='sidePanel__content'>\r\n          <form className='login_form' action={loginScript} method='POST'>\r\n            <h3>Administrator login</h3>\r\n            <div className='sidePanel__content__grid'>\r\n              <label htmlFor='username'>Username :</label>\r\n              <input type='text' id='username' name='username' onChange={handleChange} />\r\n              <label htmlFor='password'>Password :</label>\r\n              <input type='password' id='password' name='password' onChange={handleChange} />\r\n            </div>\r\n            <button>Proceed to login</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LoginPanel","const Footer = () => {\r\n  return (\r\n    <footer>\r\n      <span>County Development Project Tracker, 2022</span>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { mapDispatchToProps } from '../../store/Action'\r\nimport { getCounties } from '../../utils/functions/getCounties'\r\nimport { getProjectDetails } from '../../utils/functions/getProjectDetails'\r\nimport { getProjectTimelines } from '../../utils/functions/getProjectTimelines'\r\nimport { getProjectImplementations } from '../../utils/functions/getProjectImplementations'\r\nimport { getProjectFinances } from '../../utils/functions/getProjectFinances'\r\nimport { getProjectLocations } from '../../utils/functions/getProjectLocations'\r\nimport { getTrackingLogs } from '../../utils/functions/getTrackingLogs'\r\nimport LoginPanel from '../../layout/public/LoginPanel'\r\nimport Footer from '../../layout/Footer'\r\n\r\nconst bannerArray = ['https://i.postimg.cc/HLbxh0Qg/banner1.jpg', 'https://i.postimg.cc/RVq0BxcG/banner2.png', 'https://i.postimg.cc/XqP4JXwL/banner3.png']\r\nlet imageOnDisplay = 0\r\n\r\nsetTimeout(() => console.log('active'), 2000)\r\n\r\nconst Landing = (props) => {\r\n\r\n  React.useEffect(() => {\r\n    getCounties(props)\r\n    getProjectDetails(props)\r\n    getProjectTimelines(props)\r\n    getProjectImplementations(props)\r\n    getProjectFinances(props)\r\n    getProjectLocations(props)\r\n    getTrackingLogs(props)\r\n\r\n    const timer = setTimeout(() => {\r\n      console.log('This will run after 1 second!')\r\n    }, 1000)\r\n\r\n    return () => clearTimeout(timer)\r\n    // eslint-disable-next-line\r\n  }, [])\r\n\r\n  const bannerRef = React.useRef()\r\n\r\n  const changeBanner = (arg) => {\r\n    imageOnDisplay += arg\r\n\r\n    if(imageOnDisplay > bannerArray.length-1)\r\n      imageOnDisplay = 0\r\n      \r\n    if(imageOnDisplay < 0)\r\n      imageOnDisplay = bannerArray.length-1\r\n\r\n    bannerRef.current.style.backgroundImage = `url(${bannerArray[imageOnDisplay]})`\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className='banner' ref={bannerRef}>\r\n        <section>\r\n          <h2>Project Tracking, Redefined.</h2>\r\n          <p>The County Development Project Tracker is an online system that facilitates the measurement of project metrics, keeping records of progress for consumption by stakeholders.</p>\r\n        </section>\r\n        <svg className='banner__next_icon' onClick={() => changeBanner(1)} xmlns=\"http://www.w3.org/2000/svg\" height=\"36px\" viewBox=\"0 0 24 24\" width=\"36px\" fill=\"#FFFFFF\"><path d=\"M0 0h24v24H0V0z\" fill=\"none\" opacity=\".87\"/><path d=\"M16.62 2.99c-.49-.49-1.28-.49-1.77 0L6.54 11.3c-.39.39-.39 1.02 0 1.41l8.31 8.31c.49.49 1.28.49 1.77 0s.49-1.28 0-1.77L9.38 12l7.25-7.25c.48-.48.48-1.28-.01-1.76z\"/></svg>\r\n        <svg className='banner__prev_icon' onClick={() => changeBanner(-1)} xmlns=\"http://www.w3.org/2000/svg\" height=\"36px\" viewBox=\"0 0 24 24\" width=\"36px\" fill=\"#FFFFFF\"><path d=\"M0 0h24v24H0V0z\" fill=\"none\" opacity=\".87\"/><path d=\"M16.62 2.99c-.49-.49-1.28-.49-1.77 0L6.54 11.3c-.39.39-.39 1.02 0 1.41l8.31 8.31c.49.49 1.28.49 1.77 0s.49-1.28 0-1.77L9.38 12l7.25-7.25c.48-.48.48-1.28-.01-1.76z\"/></svg>\r\n      </div>\r\n      <section className='page_section page_section_sm'>\r\n        <h2>Explore the feature-packed online platform!</h2>\r\n        <p>The CDPT is a tool that facilitates the logging of county projects - past, present and future - and tracks these projects for transparency and accountability. It seeks to address the static nature of most project tracking systems, offering itself as an easy-to-use platform that prioritizes public engagement and scrutiny.</p>\r\n        <span>Features included:</span>\r\n        <div className='page_section__features flex'>\r\n          <span className='card card_sm'>County insights</span>\r\n          <span className='card card_sm'>Active updates</span>\r\n          <span className='card card_sm'>Report generation</span>\r\n          <span className='card card_sm'>DB management</span>\r\n        </div>\r\n      </section>\r\n      <section className='page_section page_section_sm'>\r\n        <h2>United Nations Sustainable Development Goals</h2>\r\n        <p>The CPDT seeks to contribute to the 17 outlined global goals through SDGs 10 & 11, in the achievement of peace and prosperity for the people and the planet. For more information, follow the links provided.</p>\r\n        <div className='sdg__cards flex'>\r\n          <section className='card card_lg flex'>\r\n            <div>\r\n              <h3>Reduce Inequalities</h3>\r\n              <span className='card_number_effect_lg'>10</span>\r\n              <p>Reduce inequality within and among countries.</p>\r\n            </div>\r\n            <a className='card_a' target='_blank' rel=\"noreferrer\" href='https://sdgs.un.org/goals/goal10'>More information</a>\r\n          </section>\r\n          <hr/>\r\n          <section className='card card_lg flex'>\r\n            <div>\r\n              <h3>Sustainable Cities and Communities</h3>\r\n              <span className='card_number_effect_lg'>11</span>\r\n              <p>Make cities and human settlements inclusive, safe, resilient and sustainable.</p>\r\n            </div>\r\n            <a className='card_a' target='_blank' rel=\"noreferrer\" href='https://sdgs.un.org/goals/goal11'>More information</a>\r\n          </section>\r\n        </div>\r\n      </section>\r\n      <LoginPanel />\r\n      <Footer />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Landing)","import React from 'react'\r\nimport { AppContext } from '../../App'\r\nimport { CountyContext } from '../../views/public/Counties'\r\n  \r\nconst Map = () => {\r\n  // let nationalAllProjects = 0\r\n\r\n  React.useEffect(() => {\r\n    shadeMap()\r\n    if(countyFocus.countyInFocus.number !== -1) {\r\n      countyRefs.current[countyFocus.countyInFocus.number].style.fill = '#669FC3'\r\n      countyRefs.current[countyFocus.countyInFocus.number].style.stroke = '#FFF'\r\n    }\r\n  })\r\n\r\n  const {statsValues} = React.useContext(AppContext)\r\n  const {countyFocus} = React.useContext(CountyContext)\r\n  const countyRefs = React.useRef([])\r\n\r\n  // for(let i=0; i<47; i++) nationalAllProjects += statsValues.stats.allProjects[i]\r\n\r\n  const shadeMap = () => {\r\n    for(let i=0; i<47; i++) {\r\n      if(statsValues.stats.allProjects[i] === 0)\r\n        countyRefs.current[i].style.fill = '#FFF'\r\n      else if(statsValues.stats.allProjects[i] <= 1)\r\n        countyRefs.current[i].style.fill = '#EDF4F8'\r\n      else if(statsValues.stats.allProjects[i] <= 3)\r\n      countyRefs.current[i].style.fill = '#D3E4EE'\r\n      else if(statsValues.stats.allProjects[i]+5 <= 6)\r\n        countyRefs.current[i].style.fill = '#B9D4E4'\r\n      else\r\n      countyRefs.current[i].style.fill = '#A0C4DA'\r\n\r\n      countyRefs.current[i].style.stroke = '#BBB'\r\n    }\r\n  }\r\n\r\n  let keyBlock = (\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><g><rect fill=\"none\" height=\"24\" width=\"24\"/></g><g><g><path d=\"M2,6v12c0,1.1,0.9,2,2,2h16c1.1,0,2-0.9,2-2V6c0-1.1-0.9-2-2-2H4C2.9,4,2,4.9,2,6z\"/></g></g></svg>\r\n  )\r\n\r\n  return (\r\n    <div className='map_contents flex'>\r\n      {/* <div className='tooltip'>tooltip<span className='tooltiptext'>text</span></div> */}\r\n      <svg className='counties_map' xmlns=\"http://www.w3.org/2000/svg\" width=\"600\" height=\"500\">\r\n        <path id=\"Mombasa\" ref={(item) => countyRefs.current[0] = item} d=\"M387.11051212331245,456.26586676030956L387.0048025408355,456.34240480964377L387.0517845667996,456.51314408141104L387.07233920917406,456.7103783406777L386.9666296266946,456.86051253466906L386.83155619379613,456.8987821260867L386.7170374513789,456.96943379348306L386.62894614066545,457.11073746617797L386.26483522292983,457.14900730452774L386.13857094996956,457.29914319667785L386.28245349469626,457.3315255374671L386.51442735013916,457.34624479662216L386.68767369717557,457.40512184097L386.66711905480383,457.60824831483467L386.7170374513789,457.7819370855972L386.66711905480383,457.9732899763384L386.6113278688995,458.10870951476033L386.44689068179764,458.4119332654449L386.3411810512091,458.57679379673584L386.206107666417,458.7593187821768L386.1591256404531,458.9389006216775L385.85080590862185,459.43643512427536L385.77446008034553,459.5748038310864L385.73628716620465,459.73966935807493L385.56304086727755,460.19305318712554L385.4837586683898,460.32259241971406L385.25472113544606,460.74654203314844L385.08147483651896,460.7377097235093L384.4354716667676,460.3137601601218L384.6175271256327,459.9428081643041L384.667445522208,459.76322162043266L384.685063793974,459.5806918578865L384.7232367081124,459.4452671329035L384.9082285375887,459.3333948846556L384.96401972349304,459.1803070842368L384.74379135048684,459.10376341318647L384.64689087983606,458.9771722737257L384.5705450515568,458.82702985000657L384.44428077859334,458.6680561811618L383.8775598077302,458.07043872640094L383.5310672098726,457.6612380241029L383.463530493422,457.91146818059485L383.366630022771,458.07927042116074L383.19338372384095,458.1528681490691L383.0876740932522,458.2971201110754L383.14640164976527,458.4502043929691L383.15521080970257,458.65333641775663L383.07886498142375,458.7887583475464L382.97315535083476,458.90946094125934L382.752926977829,458.9389006216775L382.52976223421456,459.10376341318647L382.3477068234588,459.0978754596581L382.18326963635695,459.1950270496208L381.9835959057259,459.23329895711385L382.33008855169237,458.7593187821768L382.3858797375967,458.57679379673584L382.40643437997164,458.37955001856295L382.37707057765897,458.1823072988619L382.28897926694594,457.9880094798917L382.18326963635695,457.8496464356259L382.1274784504526,457.6406309143515L382.1157329199066,457.45222352164575L382.1274784504526,456.8693439532325L382.1274784504526,455.65945520802137L382.13628756228104,455.4946070804444L382.18326963635695,455.35625296538933L382.22144255049534,455.1914061163511L382.18326963635695,455.08543354652704L382.0775600057682,454.92647515708586L381.9424866209763,454.80578499885644L381.7986041243587,454.6998134235615L381.62535777731955,454.5967858177074L381.4344932066258,454.51142025063166L381.33759273597457,454.3995622287938L381.39632029248764,454.09048253531364L381.47266612076396,453.96096413323926L381.5695665914179,453.8608820430791L381.6165486654936,453.68132368275235L381.62535777731955,453.47527392821854L381.65472157963177,453.2280157673143L381.8955045950097,452.63931207804376L381.6928944937697,452.4744765967537L381.6840853338324,452.2625462969713L381.81034960679585,452.1771857737051L382.3095339093204,452.0035218830711L382.35651593528723,451.7857071929179L382.89680952255867,451.255892702776L383.00251915314743,451.1411004933374L383.16695629213973,451.0822328252294L383.3284571086301,451.22057198040324L383.463530493422,451.29415684588787L383.5310672098726,451.4295533835191L383.74248642294083,451.4383835832872L383.91573272186815,451.4207231374802L384.0889790207982,451.36185505730464L384.4266625068301,451.6709134592926L384.6175271256327,451.6355923695861L384.94640145172684,451.47370449834443L385.09909310828243,451.4089494952101L385.5131224225904,451.444270384216L385.474949508452,451.3177040661957L385.378049037801,451.19702486557725L385.39860368017594,451.01453508753013L385.56304086727755,450.8938568503089L385.6951778814582,450.808499304252L385.5512953367311,450.68782163992705L385.5219315825277,450.5229942249009L385.54248622490263,450.34345088607165L385.3604307660348,450.2904710213419L385.1871844671075,450.1079853716906L385.1871844671075,449.8754645705055L385.39860368017594,449.77539274858634L385.5512953367311,449.73713005463594L385.8419967967934,449.69298080418434L386.62013698072815,449.6076258106587L386.81393792203016,449.6841509888342L387.04297545497343,449.7076972156235L387.25439466804187,449.7459598816023L387.41002269520595,449.7606763124036L387.5450960799949,449.7076972156235L387.70659689648824,449.6076258106587L387.89158872596454,449.6311719927167L387.9003978377932,449.9048975321979L387.85047944121766,450.1138720252775L387.83286116945146,450.2580944637238L387.87103408358985,450.4170341395069L387.9679345542406,450.5848044562468L388.06189865428337,450.7143118501288L388.3526000662391,450.85559309027843L388.487673451031,450.9556676057374L388.64036515569546,451.0527990477908L388.8048022946882,451.1057798724256L389.00741239592776,451.1411004933374L389.2481954113057,451.1646475752104L389.4478691419397,451.19702486557725L389.6123062809297,451.0292519835707L389.814916382172,451.0969497461852L389.9206260127605,451.2029116309283L390.0850631517533,451.30004367377387L390.21720016593395,451.32359084932887L390.3728282412069,451.37657208126757L390.5372654283085,451.40600609724174L390.719320839067,451.38540226931235L390.9101854097605,451.4619308404432L390.8720124956226,451.60321477169896L390.74868464137694,451.6885740158818L390.61361125658755,451.8004243733057L390.44917406948616,451.96525705912575L390.3346553270685,452.17129886445053L390.19958194227956,452.3537939390245L389.75618882565914,452.84241387681766L389.621115440867,453.03079907492304L389.48604205607785,453.3810801583619L389.43905998200194,453.59890361325836L389.2188316089962,453.72547720722685L389.2188316089962,453.9285845872194L389.2951774372725,454.10225692594L389.4008870678613,454.29359179795443L389.2951774372725,454.4731529993335L389.1512949406547,454.5202511860417L389.05439447000344,454.6350531894872L388.93987572758647,454.7910666993524L388.64036515569546,455.28266053710024L388.5346555251069,455.4180706948084L388.4583096968279,455.5770310813883L388.302681669664,455.7683731052625L388.0736441367203,456.13634116234397L387.87103408358985,456.2953044760384L387.70659689648824,456.3777301213788L387.5157323257947,456.41011169335206L387.2837584222425,456.39244901877504ZM387.11051212331245,456.26586676030956L387.1310667656869,456.14517246464004L387.02535718320746,456.0980723214012ZM386.98435340285573,455.6837427093268L386.9666296266946,455.63590544669364L386.899092910244,455.83313521494233L386.97543873852305,455.9950410319252L387.04297545497343,455.8419664485458Z\" stroke=\"#000\" fill=\"#FFF\" strokeWidth=\"0.5\"></path>\r\n        <path id=\"Kwale\" ref={(item) => countyRefs.current[1] = item} d=\"M369.68604433070846,432.62546717866996L369.6096985024292,432.85200859265694L369.6566805283958,433.0550142345403L369.7711993189223,433.1609306046479L369.85048151780984,433.2815578512095L369.9150818155399,433.4080697423343L370.05015520033203,433.5139869123061L370.1764194732955,433.63461517356234L370.379029574535,433.6816896713969L370.898768519432,433.96708003198023L370.9751143477108,434.0906517154258L370.9751143477108,434.4231200753612L370.9369414335729,434.62024849190107L370.95455965722704,434.8232623008752L370.95455965722704,435.2763689608572L370.8312318029814,435.7441918284326L370.86059555718475,435.9089607900802L371.05146017598713,435.9707493600167L371.2247064749172,436.11492291938725L371.2922431432587,436.29440502072845L371.33922521733484,436.4621184591169L371.36858901964433,436.6180630984758L371.4185074162194,436.7769507086171L371.3803345020815,436.95937788002095L371.3127978337427,437.0800156769255L371.3216069455684,437.2624441292645L371.35097074788087,437.51843380957536L371.27168850088424,437.7214611852778L371.27168850088424,437.874467943018L371.2922431432587,438.05395750861305L371.27168850088424,438.23638994770647L371.27168850088424,438.44530566779633L371.20708820315144,438.5983150081009L371.04265101604983,438.60714251269394L371.00447810191145,438.7719224186467L370.9751143477108,438.99261084999966L371.0984422019542,439.2456683338794L371.26287938905557,439.42222091940926L371.3216069455684,439.6252573290848L371.4185074162194,439.7665005889652L371.5242170468082,439.96659606294645L371.4654894902951,440.13138127618527L371.4948532444985,440.287339274842L371.571199072775,440.44624046026L371.76500006218885,440.6198554608527L371.9382463611191,440.66693758338454L372.11149266004645,440.7669873039846L372.24362967422985,440.8640946675333L372.378703059019,440.94060362157006L372.7839232615013,440.85526669425496L372.9483604486029,440.76404466885396L373.10105210515803,440.8022990379608L373.1216067475302,440.96120220609396L373.10105210515803,441.1142206047971L373.13041585935866,441.26429688854194L373.24493460177587,441.43202984087463L373.2537437617136,441.6321331487939L373.19795257580927,441.8086957382749L373.1098612169842,442.2383344086487L372.88963284398073,442.2971893564098L372.72519570498844,442.4325560547885L372.77511410156353,442.5767515235914L372.98653336274083,442.6385497130673L373.0247062768792,442.94165650316677L372.88963284398073,443.07408249057653L372.7163865450507,443.1152817637777L372.6488498767094,443.2359370673107L372.5225856037457,443.3477641740173L372.4667944178443,443.5272768312356L372.6194860743999,443.67147608212895L372.5636948884951,444.0363906461471L372.5225856037457,444.1482199532371L372.70757743322224,444.2453351121987L372.8514599298401,444.43662321913735L373.01589711694146,444.60142600735014L373.19795257580927,444.6602842946737L373.31247131822647,444.78388700438427L373.40056267704927,444.9428052687755L373.54444517366665,445.01049289187335L373.6883277183965,444.84568847367956L373.8703831772614,444.93397648170435L374.02601120442523,444.9428052687755L374.1317208350167,444.804487483882L374.3049671339443,444.77505820304475L374.48702254470277,444.8574602132568L374.56336842108817,445.0458082133373L374.73661472001845,445.11643889867526L374.96858857546135,445.2812443977118L375.17119867670135,445.3871911480702L375.26516277674364,445.5931994659069L375.51769127455873,445.8492397798836L375.81426547584374,446.1347119196935L375.9023568346663,446.2494899841399L375.9698935030078,446.3760404471876L376.12258515956296,446.4142999753732L376.33400442074026,446.44667346503314L376.6129603502593,446.57322458515193L376.7773974892516,446.67917461941397L376.9124709221501,446.84398638800053L377.1033354928436,447.1324085456812L377.2677726318359,447.26190488370514L377.37348226242466,447.3796292147179L377.59371063543085,447.67688453472545L377.8462391332487,447.7681217704049L378.0459128638795,447.87407495534075L378.21035005098133,448.038891553492L378.2015408910436,448.2037087720124L378.25733207694793,448.3714698836951L378.2984413616946,448.5362885013546L378.33661427583297,448.7393695014601L378.4423239064215,448.84826838501584L378.6831069218024,448.90713283099547L378.93269904900876,449.1867398787779L379.0853907055639,449.2397182910732L379.22927325029104,449.3221293089114L379.32617372094455,449.44280282497823L379.29680991863233,449.63411526041597L379.3555375232545,449.81954204118483L379.4318833515333,450.01674290587744L379.634493404664,450.09915546525804L379.78718506121936,450.35816753560925L379.72258476348657,450.59069113154754L379.6638572069737,450.8614798053732L379.83710350590377,451.12932698171517L379.9604314082587,451.22645879744726L380.2217690660111,451.37657208126757L380.5095341073559,451.4001193019565L380.56826166386895,451.52962933643L380.6269892203818,451.7180083103325L380.6269892203818,451.9269922719684L380.53889786155924,452.3155287779598L380.47136119321794,452.47153311999045L380.26875109197795,452.8512443903556L380.3362878084288,452.9954767759749L380.51834321918454,453.092613149827L380.644607492148,452.90422765759547L380.7884900368747,452.7541086085582L380.9529272239763,452.69229506195495L381.11736436296883,452.7364475785162L381.29941982183664,452.7982611939755L381.4814752807017,452.88656656064165L381.6371033078656,453.03079907492304L381.65472157963177,453.2280157673143L381.62535777731955,453.47527392821854L381.6165486654936,453.6872107200385L381.5695665914179,453.8608820430791L381.47266612076396,453.9756821218856L381.39632029248764,454.10225692594L381.37576565011295,454.2464938828583L381.33759273597457,454.3995622287938L381.42274772418887,454.5055329936123L381.54020283721457,454.5938421344619L381.72225824797306,454.64682774324575L381.8955045950097,454.76751746057016L382.0775600057682,454.93530618591757L382.20382427873164,455.11781399808496L382.18326963635695,455.35625296538933L382.13628756228104,455.4946070804444L382.1274784504526,455.65945520802137L382.1274784504526,456.8693439532325L382.1157329199066,457.45222352164575L382.1274784504526,457.6406309143515L382.18326963635695,457.8496464356259L382.28897926694594,457.9880094798917L382.37707057765897,458.1823072988619L382.40643437997164,458.37955001856295L382.3858797375967,458.57679379673584L382.33008855169237,458.7593187821768L382.08930553631467,459.08315553155063L381.97185042328874,459.2244669490985L382.20382427873164,459.1803070842368L382.3477068234588,459.0978754596581L382.52976223421456,459.10376341318647L382.752926977829,458.9389006216775L382.97315535083476,458.90946094125934L383.07886498142375,458.7887583475464L383.15521080970257,458.65333641775663L383.14640164976527,458.4502043929691L383.0876740932522,458.2971201110754L383.19338372384095,458.1528681490691L383.366630022771,458.07927042116074L383.463530493422,457.91146818059485L383.5222580499351,457.68478906147567L383.6749497064902,457.8879170050144L383.8775598077302,458.07043872640094L384.44428077859334,458.6680561811618L384.5705450515568,458.82702985000657L384.667445522208,459.03016386606095L384.78196426462523,459.1420352296214L384.96401972349304,459.1803070842368L384.9082285375887,459.3333948846556L384.7232367081124,459.4452671329035L384.685063793974,459.5806918578865L384.667445522208,459.76322162043266L384.6175271256327,459.9428081643041L384.4354716667676,460.3137601601218L386.2266623087919,461.48552109026645L389.814916382172,462.89874830424026L388.88995728290206,465.0304664773662L388.7666293805471,465.33963462548326L388.49648261096604,465.9668121218354L388.1118170508612,466.82662202351025L387.6508057105839,467.8955231499901L383.7131226206284,476.9014558027046L380.6269892203818,480.93984779806476L376.621769462085,485.46187525558435L375.19762606029303,487.0557753922287L372.6018678026335,489.9992389482861L372.0057830294577,490.3763982049519L371.14836064663837,490.8655330083177L369.4070884011894,492L367.89485368868145,489.94325473478034L366.2504819138835,487.9278857385202L365.645588028882,487.21487489694414L365.3460774569885,486.8731064788283L365.12584908398526,486.6020512477761L364.6736468555364,486.1100326160041L364.4622276424682,486.02753914495287L364.23025378702505,486.059947272005L364.1157350446106,485.921476475516L363.9894707716471,485.6504288350332L363.81622447271707,485.58266730025423L363.5284593832632,485.60329036589906L363.49028646912257,485.35581435842414L363.42274980078355,485.16726241789166L362.7385736687827,484.71945574468816L362.333353514412,484.3953888230909L361.78718718592063,484.0477567902436L361.64036827058544,483.9652683782772L361.2674482410241,483.68539839759603L361.0266652256462,483.51747751012704L360.51573544068424,483.1698544646208L360.2749524253063,483.0196116881453L359.18849250954327,482.2330573029937L358.11965091365596,481.4848162746096L357.56173905462083,481.10775609104473L356.76304418020527,480.53922781760093L355.81165769734343,479.88233887423837L355.3389008265224,479.5347524671799L354.7721798075472,479.1636046748954L354.2994229367264,478.8012975716955L353.06908052434574,477.94709243175373L335.4038297163611,465.5575260542431L335.12487378684204,465.3690793150858L334.1911055276373,464.70363441401423L333.16924595771616,463.99992461704835L332.9284629423355,463.8203187703797L331.6893113700203,462.95174536336765L328.29192186733644,460.5934485702286L327.9366201095386,460.32848056175317L327.62830042581936,460.1165074902435L327.9248746271014,459.99580109281015L331.86255766895033,458.60034534508054L332.64950701281964,458.31183973825887L333.5656570002611,457.99389726359436L334.61394400188306,457.6111922258584L338.4048081283938,456.2629229996079L342.0312351159091,454.9559118632932L342.8974667067755,454.6350531894872L344.6504844346614,454.01394888917343L345.54314336101015,453.6901543354646L346.3124744331162,453.3781366142095L347.3725069652844,453.016081438494L347.8628821078714,452.82769631040435L348.3444480905209,452.6746340594509L348.55586735169845,452.5922161356941L349.8654919629639,452.12420347713385L351.6831100366917,451.51491225602075L352.1353122651408,450.47001417132765L352.58751449358715,449.4722354705158L352.84591578073105,448.86298448847936L352.9428162513823,448.6657893106155L353.18359926676294,448.1154137641148L353.5212827527946,447.373742958755L353.6446106070375,447.0706036365169L353.80904779413936,446.71743443078367L353.944121178931,446.38486959187145L354.5313968402784,445.07818057770197L354.8279709934516,444.40425135696853L354.8955077099022,444.2335635466744L354.97478990878676,444.07170513669763L355.2537458383058,443.44487751113206L355.83808508093534,442.0882546488833L355.95554019396104,441.84695105571154L355.16565447948324,441.31726512475063L353.8853936224182,440.54040441955897L353.55064650699524,440.32853581766466L352.96337089375675,439.9724812226215L350.93139723635227,438.7866349549088L351.19273489410466,438.4070534181752L351.5685912942747,437.7744250124326L351.7007283084581,437.5713973867158L352.5963236535247,436.05313419244163L352.7607607925172,435.7883263035871L355.1362907252801,437.16240262124757L355.44461040899955,437.35365866902816L355.8292759691069,437.56257009522767L356.10823185051663,437.7361733127676L356.64852543778807,438.0539573157753L356.79240798251476,438.13046121890864L356.99501808375476,438.19813788460004L357.21524640865164,437.3830827739695L357.3209560392402,437.02705270370586L357.582293696993,436.0678457998878L357.7819674276268,435.3734638505823L358.16663293962256,433.8699882630011L358.23416965607316,433.63461517356234L358.4749526233418,432.70196154985774L361.27625735285255,432.6990194636293L362.7180190264105,432.68725107246723L367.877235416918,432.70196154985774L368.8286218997798,432.66959851569254L368.99305908688143,432.5783938074359L369.1574962739828,432.5636833711115L369.3395517328506,432.5342625131301L369.5891438600572,432.4577684316797Z\" stroke=\"#000\" fill=\"#FFF\" strokeWidth=\"0.5\"></path>  \r\n        <path id=\"Kilifi\" ref={(item) => countyRefs.current[2] = item} d=\"M388.4583096968279,449.0513509507716L388.2556995955881,449.0719535813173L388.023725740145,449.11021564422924L387.83286116945146,449.4045404468276L387.70659689648824,449.30741303821867L387.59207815407103,449.1955696334426L387.52454143762316,449.3456753242506L387.5157323257947,449.548760391596L387.45700476928187,449.73713005463594L387.25439466804187,449.7459598816023L387.04297545497343,449.7076972156235L386.81393792203016,449.6841509888342L386.6113278688995,449.6017392311288L385.8419967967934,449.69298080418434L385.5512953367311,449.73713005463594L385.39860368017594,449.77539274858634L385.1871844671075,449.8754645705055L385.08147483651896,450.06383576248516L385.22535738124566,450.13153189477254L385.32225785189667,450.275754396622L385.5131224225904,450.32579092339154L385.56304086727755,450.72608523963913L385.6951778814582,450.8026125487246L385.39860368017594,451.01453508753013L385.3486852354888,451.17936452650935L385.474949508452,451.3559682685302L385.2723394072125,451.4207231374802L385.09909310828243,451.4089494952101L384.94640145172684,451.47370449834443L384.6175271256327,451.6355923695861L384.4266625068301,451.6709134592926L384.0889790207982,451.3559682685302L383.64558595228686,451.46781769307313L383.5134489381062,451.32359084932887L383.16695629213973,451.0822328252294L382.96434623900905,451.1881947191812L382.35651593528723,451.7857071929179L382.3095339093204,452.0035218830711L381.81034960679585,452.1771857737051L381.6840853338324,452.2625462969713L381.6928944937697,452.4744765967537L381.9160592373844,452.6599165553372L381.62535777731955,453.0249119907603L381.4814752807017,452.88656656064165L381.29941982183664,452.7982611939755L381.11736436296883,452.7364475785162L380.9529272239763,452.69229506195495L380.7884900368747,452.75116511104056L380.644607492148,452.90422765759547L380.51834321918454,453.092613149827L380.3362878084288,452.9954767759749L380.26875109197795,452.8512443903556L380.4801703050464,452.4568156912163L380.53889786155924,452.2919809677567L380.6269892203818,451.91521848015776L380.6534166520855,451.68563059727796L380.56826166386895,451.52962933643L380.5095341073559,451.4001193019565L380.2217690660111,451.37657208126757L379.9604314082587,451.22645879744726L379.83710350590377,451.12932698171517L379.6932209611771,450.9085737019567L379.6638572069737,450.73491533226854L379.7313939234243,450.56714438731456L379.7783759493909,450.4170341395069L379.7783759493909,450.23749122652623L379.634493404664,450.08738221147763L379.44069246335926,450.0314593875016L379.3555375232545,449.82837193445005L379.29680991863233,449.63411526041597L379.36434663508294,449.43397306444115L379.22927325029104,449.3221293089114L379.0853907055639,449.2397182910732L378.93269904900876,449.1867398787779L378.6831069218024,448.90713283099547L378.4423239064215,448.84826838501584L378.33661427583297,448.7393695014601L378.2690776074944,448.3714698836951L378.2015408910436,448.2037087720124L378.21035005098133,448.038891553492L378.0459128638795,447.87407495534075L377.8462391332487,447.7681217704049L377.64362903200595,447.712202153191L377.52617391898025,447.57681814759655L377.37348226242466,447.3796292147179L377.2677726318359,447.26190488370514L377.1033354928436,447.1324085456812L376.9124709221501,446.84398638800053L376.7773974892516,446.67917461941397L376.6129603502593,446.57322458515193L376.33400442074026,446.44667346503314L376.12258515956296,446.4142999753732L375.9698935030078,446.3760404471876L375.8818021922916,446.23183180319086L375.26516277674364,445.5931994659069L375.17119867670135,445.3871911480702L374.96858857546135,445.2812443977118L374.73661472001845,445.11643889867526L374.56336842108817,445.0458082133373L374.48702254470277,444.8574602132568L374.23743041749367,444.77505820304475L374.0524385880201,444.89571832977003L373.8703831772614,444.93986233954354L373.7088823607685,444.8368597073581L373.54444517366665,445.01049289187335L373.40056267704927,444.9428052687755L373.31247131822647,444.78388700438427L373.19795257580927,444.6602842946737L373.01589711694146,444.60142600735014L372.8514599298401,444.43662321913735L372.67821363091275,444.2335635466744L372.5343311342949,444.10407678746753L372.59012232019654,443.8627615446187L372.6194860743999,443.67147608212895L372.4667944178443,443.5272768312356L372.5225856037457,443.3477641740173L372.6488498767094,443.2359370673107L372.7163865450507,443.1152817637777L372.88963284398073,443.07408249057653L373.0247062768792,442.94165650316677L372.98653336274083,442.6385497130673L372.77511410156353,442.5767515235914L372.72519570498844,442.4325560547885L372.88963284398073,442.2971893564098L373.1098612169842,442.2383344086487L373.14803413112486,442.0323427178435L373.2742984040858,441.5291386873996L373.21557084757274,441.3761187825598L373.13041585935866,441.2554688315394L373.10105210515803,441.1142206047971L373.1216067475302,440.96120220609396L373.10105210515803,440.8022990379608L372.9483604486029,440.76404466885396L372.8132870157017,440.849381411901L372.59012232019654,440.88763585827326L372.3317210330522,440.9141197075116L371.94705547294484,440.66693758338454L371.76500006218885,440.6198554608527L371.571199072775,440.44624046026L371.5036624044362,440.287339274842L371.4654894902951,440.13138127618527L371.5242170468082,439.96659606294645L371.4185074162194,439.7665005889652L371.3216069455684,439.6252573290848L371.26287938905557,439.42222091940926L371.0984422019542,439.2456683338794L370.9751143477108,438.9896683377914L371.00447810191145,438.7719224186467L371.04265101604983,438.60714251269394L371.20708820315144,438.5983150081009L371.26287938905557,438.43942071892707L371.2922431432587,437.9392017167937L371.27168850088424,437.7302884611653L371.33922521733484,437.5919943429527L371.3597798597066,437.43310373100724L371.3304160573971,437.29186817191453L371.3127978337427,437.1182667455354L371.3803345020815,436.95937788002095L371.4185074162194,436.7769507086171L371.36858901964433,436.6180630984758L371.33922521733484,436.4621184591169L371.23351558674585,436.1002113441864L371.11899684432865,435.9678070543521L370.9369414335729,435.94721082386184L370.81948627243514,435.76478791447437L370.898768519432,435.4940971866106L370.9751143477108,435.1233713857978L370.9457505453986,434.9644898231045L370.9369414335729,434.5967107332058L370.9751143477108,434.4231200753612L370.9751143477108,434.0906517154258L370.898768519432,433.96708003198023L370.379029574535,433.6816896713969L370.1470557190921,433.61402009057264L370.0413460885036,433.4875076079867L369.9150818155399,433.41101187581L369.85048151780984,433.2815578512095L369.7242172448464,433.1167987287796L369.5891438600572,432.97851925244476L369.6096985024292,432.8225875911555L369.68604433070846,432.62546717866996L369.5891438600572,432.4577684316797L369.3865337588147,432.5107258697381L369.0782140750955,432.5577991690309L368.8785403444642,432.64900388306L368.17380961820004,432.69313529175724L367.877235416918,432.70196154985774L362.7180190264105,432.68725107246723L358.4749526233418,432.70196154985774L358.85080902351183,431.24270701771667L359.29420214013203,429.56874188593076L359.43808468485895,428.87151995926627L359.5437942673384,428.45672214138716L359.5907763414141,428.31551521489143L360.2455886711032,425.7915155776292L360.45700788417116,425.01492822013836L360.87103719847914,423.43826051531437L361.09420194209406,422.544054762819L361.3144303150998,421.78516975195856L362.81491949706174,416.07038875535943L363.74868775626624,412.55302858011373L363.96891612927243,411.6913720229806L364.1421624282025,411.07381154545766L364.24787205879124,410.63564227633606L364.29779045536634,410.4709621704959L364.538573470747,409.547587234685L364.71181976967455,408.9124090574563L364.80578386971706,408.73891269654314L364.9995848591311,408.4242682151295L365.26973162871195,408.1390314412341L366.2710365562584,406.998100083031L367.7216073416448,405.2838094641187L371.7356362598764,400.7881033280081L378.59501556297687,393.12655416416146L380.17478699193543,391.32744588906564L383.31083883686665,387.785245706908L384.2034977632154,386.7623092897902L386.4263360394232,384.25501243155696L386.59958233835323,384.0698351357973L386.8521108361683,383.7582682819107L389.0250306676912,381.31575560595826L389.1219311383452,381.1952489935371L392.53693891279227,377.2950734772415L395.41458947057936,374.0269826852437L396.65667741350626,372.5869575249594L397.20284374199764,371.9845070834152L401.01426255898946,377.38618265672966L401.79240274292124,378.5030151259215L411.01263007762964,391.56849965145364L411.29158600714845,392.02121305932354L411.4149138613941,392.13880152461485L411.6087148508054,392.4268942892629L411.40610474956566,392.3357627369671L411.42665939194035,392.48862867785806L411.5705419366675,392.59151939199114L411.7144244332851,392.65325390857714L411.75259734742326,392.7884821971601L411.6645060367098,392.9795661270689L411.5411781343548,393.2853017360803L411.4354685518781,393.6498347805927L411.3209497613518,393.96733321720166L411.2534130930103,394.19957858940234L411.29158600714845,394.3495095818015L411.38555010719097,394.4494638603554L411.2534130930103,395.40785762396644L411.24166756246404,395.6018902238045L411.3385680331153,395.76358459912325L411.29158600714845,396.45740566287157L411.2328584506356,396.75140019536207L411.1741308941225,396.93073766004L411.1065941776719,397.2159147715588L411.0508029917705,397.41583359187166L410.9920754352577,397.5510732606144L410.848192890528,397.82743349418786L410.7718470622517,398.0008944023281L410.68375575153823,398.1537756137777L410.6367736774598,398.3184173611156L410.64558283739757,398.4771795724241L410.6749465916005,398.630062101196L410.6074098751501,398.8094056375054L410.64558283739757,398.96228908785645L410.6367736774598,399.1416336583868L410.59860076332166,399.35920004096636L410.68375575153823,399.4826840081995L410.74248330804835,399.6855511849106L410.66613747977203,400.10010816680875L410.6162190350876,400.22947411691206L410.6074098751501,400.3882418104257L410.48114565029596,400.7057786348202L410.4253544643914,400.89982985913457L410.33726310556904,401.27029311902606L410.2814719196647,401.5584330219719L410.2697264372275,401.75248725477326L410.2697264372275,402.0788527756921L410.32845399374037,402.25820767496054L410.3196448338026,402.6727843528368L410.4253544643914,402.8933051830073L410.6162190350876,403.0138569273805L410.7043103939104,403.13440894363157L410.7718470622517,403.28436429630824L410.9920754352577,403.62250046059614L411.1183397082184,403.81362184279664L411.2240492906981,403.92535466881327L411.3209497613518,404.078252639171L411.38555010719097,404.2429124031141L411.5030052202169,404.45461864830605L411.74378823559755,404.50166456342976L411.88767078032424,404.46932046217887L412.0109986345674,404.68690836343694L412.175435821669,404.7721795081891L412.34868212059905,404.8251065197988L412.6364471619463,404.80746417669855L412.8214389914199,404.72513335230315L413.1003949209389,404.54282978552897L413.2442774656656,404.37816904112515L413.40871465276996,404.21938955526656L413.59077006352595,404.13705964591134L413.764016362456,404.0988350817063L413.89908979535426,404.16646314964623L413.9078989071827,404.3046599946343L413.93726270949264,404.44873787572715L413.9078989071827,404.6516237754648L413.81980754835763,404.85451045412424L413.6083883352892,404.8104045587761L413.45569667873406,404.8750931986325L413.3499870481453,404.9985898343263L413.2442774656656,405.10444436503343L413.0710311667383,405.23088199190124L412.7039838783942,405.2985115090354L412.5219284195291,405.3602603352598L412.34868212059905,405.4425921521186L412.19599046404346,405.55432842312007L412.05210791931677,405.69252885636956L411.9463983368371,405.83661058054497L411.8788616203867,405.9571690288151L411.82013406387387,406.1012514807509L411.81132495204815,406.2717985467298L411.82013406387387,406.46881053455155L411.75259734742326,406.6334777836665L411.5499872942926,406.68052569905393L411.3209497613518,406.7569786100029L411.12714882004684,406.85989614882L411.0008845470834,406.95399238303764L410.8687475329027,407.0716129513296L410.71311950573886,407.25980635653957L410.6162190350876,407.4568220360885L410.56923696101194,407.6450168388553L410.54868231863725,407.88026132854543L410.54868231863725,408.0831605023707L410.69550123397266,408.2213676998367L410.76010157981455,408.4242682151295L410.64558283739757,408.63305082169103L410.2990901914309,408.8006655615908L410.0583071760502,409.0035684103758L409.97315223594524,409.1123717226459L409.9144246794324,409.24470037234227L409.876251765294,409.4652488978561L409.961406705399,409.64756968605366L410.0289434218496,409.8651792813664L410.0583071760502,410.13866292354885L410.1258438925006,410.5356578850249L410.19338056084234,411.0973375081856L410.2315534749803,411.2473158561563L410.2432990055265,411.3914131346676L410.2021897207769,411.5943263135554L410.04068890428675,411.82958895630804L409.83807885115607,412.09131996976134L409.74117833239325,412.24424208285757L409.53856827926256,412.6265494527697L409.2889761039469,413.147080258094L409.15390271915476,413.2235428688187L409.0863660508162,413.4117590328766L408.9806564202247,413.5264536501422L408.89550143201086,413.63820754623697L408.7897918495312,413.74407995077104L408.54900883415326,414.07052121260057L408.39338080698667,414.30873649054206L408.24068915043404,414.67929585682725L408.1819615458094,414.9292779273486L408.1937070763554,415.22337613692594L408.2788620645722,415.4263048754733L408.38457164705164,415.56453223409216L408.4521083634995,415.72922914354217L408.5666271059167,416.0527425069715L408.51964503184104,416.2674389049346L408.4814721177029,416.73506862000283L408.4432992035647,417.07917634909177L408.55781794597897,417.19976171780985L408.66352757656796,417.34681742446617L408.7398734048468,417.4732856458763L408.68408221894265,417.6262244362796L408.6459093048045,417.8056340465437L408.54900883415326,417.9732796762975L408.4521083634995,418.07622023775616L408.3757625352232,418.21445511277994L408.3258440905388,418.37033741851207L408.39338080698667,418.5585733432065L408.29941670694416,418.7321039769689L408.22013445995026,418.9056352361945L408.1819615458094,419.05269613347286L408.10561571753306,419.1791688709011L407.97054233274093,419.2762295518237L407.847214478498,419.42623282173156L407.55651301843295,419.67035679326295L406.4612439908444,420.35567530168873L406.2879976919139,420.4262666225295L406.09419670250304,420.49391674452977L405.8827774894346,420.5998040242183L405.7388949447052,420.7498114513371L405.42176614916,420.97629414625175L405.29550187619657,421.11159605197827L404.99892767491156,421.33219771452985L404.85504513018464,421.41455597490403L404.44101581587665,421.60280389645874L404.30594243108453,421.65574872022427L404.18848731805883,421.7469316862463L404.17086904629537,421.8910599639041L404.03579566150324,421.9587121761419L403.7656488438131,422.15284507870365L403.61295718725796,422.15284507870365L403.4866929624061,422.30579884369786L403.10202740229875,422.5469961937255L402.71736189030025,422.63523939931133L402.5264972714974,422.77937039555354L402.00675837471,423.2411808251397L401.63090197454017,423.4970904352473L401.28440932857075,423.79124119437915L401.08179927544006,423.8912528535848L400.89974381657225,423.82359790261216L400.91736208833845,423.66475613508476L400.9760896448515,423.5117979388473L401.00545344716375,423.2941274929359L401.1493359437816,423.19705858346606L401.33139140264643,423.0352775308605L401.54281061571487,422.91761887731786L401.7366115570196,422.9823311074565L402.13889538889066,422.89997015534743L402.16825914309106,422.7411315226067L401.97739457239754,422.7734875048235L401.9656490899604,422.5293475628505L401.88049410174654,422.3705101829827L401.99501284416374,422.1763763837202L401.95683993002285,422.0263644371883L401.79240274292124,421.60868664101696L401.6690748886781,421.438086912098L401.5721744180271,421.23807419814966L401.63090197454017,421.0292383180017L401.7542298287831,420.84687532435L402.11246795718944,420.5968627144036L402.13889538889066,420.38508835539125L401.8893032616843,420.4468557694474L401.6984386428787,420.5909800953252L401.2932184885083,420.5968627144036L401.0906083872685,420.63509985253177L400.9555350024766,420.6880436441034L400.6971337153325,420.8262860043076L400.5444420587771,420.8851126635569L400.3506411174751,420.9468807751411L400.1392218562978,421.038062376465L400.0041484715057,421.11159605197827L399.9366118031644,421.2468982954699L399.9366118031644,421.420438696057L400.08049429978473,421.5557418217528L400.1979494609195,421.64692459487827L400.13041274446914,421.814583691968L399.9366118031644,421.9263567539982L399.79272925843725,421.97341914973003L399.59892831713523,421.90576696460334L399.4550457724058,421.91164974688695L399.34933614181705,422.0616613285114L399.34933614181705,422.30579884369786L399.3698908323008,422.63523939931133L399.4550457724058,422.80878495664143L399.2142627570279,423.10587280691084L399.4080637464417,423.21764893846307L399.62829207133586,423.2470637745627L399.6371012312736,423.47355846802816L399.79272925843725,423.42943605539585L399.898438889026,423.52062241431395L399.98359382913077,423.6912297495637L400.1685856586073,423.82948092535787L400.3976231434417,423.8971358848675L400.6883246035038,424.0089139094505L400.72649751764493,424.1912891670654L400.6883246035038,424.34424959291505L400.7147519870987,424.5089767866568L400.8322071001244,424.6001653066423L400.8116524577499,424.77077655000005L400.70594287527024,424.9560963811341L400.6090423565099,425.10317614289454L400.50333277403024,425.30320532663086L400.4475415881259,425.48264405693766L400.3124682033342,425.7679824471471L400.2625497586496,425.982722798738L400.1685856586073,426.20040586225656L399.898438889026,426.74461798493115L399.8220930607499,426.92406228974363L399.71638343016093,427.1211577184044L399.58131004536926,427.3182539484782L399.4756004147803,427.56536089393177L399.34933614181705,427.92131493272285L399.28179947347803,428.04192811663836L399.2260082875739,428.19195956271017L399.1584715711235,428.3361078562752L399.07918937223576,428.48908208377645L398.85896099923275,428.8273923194604L398.77380605912504,429.03037968401634L398.77380605912504,429.2951471649102L398.6093688720234,429.82468678867383L398.55945042733924,430.01885291323686L398.47429548723426,430.23949718261304L398.3979496589552,430.46602646168543L398.17478491534075,431.0308836834339L398.069075284752,431.3780390866376L397.87821071405847,431.93702377975166L397.63742769868054,432.5636833711115L397.5405272280266,432.76668768921127L397.33791712678703,433.1167987287796L397.079515887752,433.7640702361319L396.9238878124786,434.0965360739141L396.83873287237407,434.308374035338L396.72421412995664,434.5408085769116L396.63612277113157,434.6790929681401L396.53922230048056,434.8085511138388L396.4540673122665,434.949778636719L396.3278030874121,435.23811951676896L396.2514572591358,435.38229064755626L396.1839205426852,435.5676542793133L396.069401800268,435.74124953811054L395.9049646131664,435.8559992975303L395.69354540009795,435.85011465374L395.5202991011679,435.81186470544696L395.31768899992835,435.73536490985373L395.09746062692216,435.71476883774767L394.8948505256826,435.65298067996025L394.7685863008285,435.4882126399914L394.6158946442756,435.3410988472343L394.30757491244435,435.2145814251321L394.1725015276552,435.09983330787793L394.057982785238,434.9939123071568L393.89354559813637,434.64672847954125L393.6909354968968,434.4966753156117L393.54705300027626,434.4201778258992L393.40317045554934,434.3907557760025L393.2005603543096,434.3760447343584L392.9509682271032,434.3936979752816L392.6925669399591,434.35544930364097L392.5075751104828,434.3995823744334L392.32551969972405,434.45842655405187L392.18163715499713,434.5819996223741L392.0083908560671,434.687919672916L392.2198100691355,434.7938399317542L392.48995683871635,434.75559091042464L392.933349955337,434.76147540643797L392.9803320294127,434.9262406523972L393.0654869695177,435.06452631121397L393.2123058848556,435.19398555114077L393.24754618093425,435.206972635278L393.2640215605852,435.2384887269028L393.26102606325344,435.27600794543855L393.24155509005277,435.30452253263064L393.23406629861756,435.3450433167203L393.2760036942391,435.4470958448856L393.28948357655827,435.51463072702336L393.2849902824519,435.60467739952526L393.26252381191944,435.60017506147483L393.2220378353984,435.5640250595818L393.2086042826445,435.5236353858904L393.1696623843518,435.4756105440536L393.1456981651538,435.4591020063614L393.1397071223814,435.42908656067146L393.1232316946214,435.4005718437578L393.0962719299823,435.3810618231031L393.0185049435536,435.38229064755626L392.8658132388864,435.42054026639096L392.7166051517511,435.4761710870534L392.6739022839761,435.507126829988L392.56007213453904,435.5326400466194L392.4522330759835,435.4966214148769L392.40645311696426,435.4225650736065L392.3548835020363,435.2145814251321L392.3370789498256,435.1676829671843L392.2969149709854,435.15426816328954L392.0790558042877,435.1615853460689L392.08879251768417,435.1847563686878L392.0851412862446,435.22378130462545L392.1058317901832,435.2445132783891L392.15938376196823,435.25183047630753L392.16790339821637,435.28597735189896L392.15816668482285,435.3103679592647L392.1904462668256,435.335214321285L392.2105015794623,435.39329622283344L392.23971176775785,435.37866182892515L392.2652706283959,435.38353995968066L392.2908295371403,435.4225650736065L392.3370789498256,435.4286627312316L392.3139542434842,435.4689074086658L392.32247387973234,435.52134751185287L392.3115200891905,435.57134857800946L392.34316443177977,435.6018370752848L392.35168406803064,435.6347646493424L392.38251098008027,435.67224038956545L392.4380974595538,435.67135093089234L392.48995683871635,435.77361479082117L392.55749355516696,435.9619223954114L392.7013760998941,436.11198060394827L392.8834315106526,436.13551918125734L393.0654869695177,436.27380868339253L393.28865171313214,436.3767904679728L393.5587984827134,436.36796346893755L393.75847221334425,436.29440502072845L393.837754412232,436.13551918125734L394.1343286135143,435.88542233561975L394.3839207407234,435.80303782133467L394.59533995379184,435.67357672280355L394.750968029065,435.8177493440596L394.92421432799506,435.8883646357036L395.12682442923483,435.85011465374L395.3558619140665,435.9413262159186L395.49974445879616,436.0089994482271L395.65537248596,436.02959565982303L395.7610820684397,436.1590578195459L395.8198096730616,436.28852036569384L395.89615550133794,436.41504091433694L395.98131044144566,436.647486702007L396.04884715789353,437.0947275852943L396.04884715789353,437.3595434691264L396.01067424375515,437.5772822165734L395.9255192555413,437.75088549350085L395.79925503068694,437.8362162025031L395.9255192555413,437.9038923560165L396.03122888612984,437.9951082560422L396.07821091209644,438.22756256775045L396.0870200720342,438.52769527797625L396.12519298617235,438.6807049129035L396.1163838262348,438.8484276528909L395.8579825871998,439.3898528737441L395.73171831423633,439.5193251558294L395.69354540009795,439.9136295179622L395.59664492944717,440.034275641299L395.5114899412333,440.19023328284493L395.4439532728916,440.3962159737057L395.3764165564412,440.8464387710332L395.3088798399906,441.0229980199666L395.19436109757635,441.18190197066536L395.1150788986886,441.3466919192733L395.08865151509644,441.48205555456366L394.9829418845079,441.8292947473206L394.8948505256826,442.0029153953343L394.8566776115442,442.205964205723L394.80969558557786,442.5708659520594L394.74215886912725,442.7150618974468L394.67462220078573,442.9563704917398L394.4426482972365,443.65970467924865L394.26059288647775,444.0746480042301L394.21067444179334,444.28359266296405L394.19305617002715,444.44250905442766L394.19305617002715,444.6161405833856L394.1255194535793,444.93986233954354L393.9229094004461,445.3871911480702L393.73204482975257,445.73446288202376L393.5969713968541,445.9993331372991L393.5088800861379,446.1935724452418L393.3943613437234,446.5202496467184L393.28865171313214,446.68506077529304L393.23873326844773,446.85870176624746L393.13302368596806,447.0470589407084L393.05667785769197,447.2295307968427L392.97152286947494,447.35019808805305L392.8658132388864,447.5385575308886L392.71018521172255,447.8652454886102L392.6543940258182,448.0094599501474L392.5457480246207,448.15956124406205L392.4517839245784,448.3096630928668L392.34607434209875,448.5274588905929L392.24917387144774,448.69522134197507L392.15227335268764,448.8835870230353L392.0847366843461,449.0513509507716L392.0083908560671,449.3545050654626L391.9408541396192,449.5399305596319L391.8556991995115,449.7224136324405L391.7764169525176,449.9255005989015L391.72062576661324,450.1374185035861L391.61491618413356,450.37877083474L391.509206553545,450.561257667248L391.37413316875313,450.7437453786214L391.26842353816437,450.8703099278604L391.09517723923705,451.0527990477908L390.86320338379414,451.0910629964435L390.6899570848641,451.1587608154957L390.57543834244916,451.24706254336957L390.4403649095484,451.30887384489677L390.2847368823841,451.2706096876881L390.1408543376547,451.24706254336957L389.97935356927337,451.1646475752104L389.67103383744256,450.93212064691875L389.52715134082473,450.9939314614592L389.3803324254891,451.0969497461852L389.18065869485804,451.1057798724256L388.7842476523133,451.04396888502674L388.6491742675214,451.0057049814386L388.54346463693264,450.9085737019567L388.4583096968279,450.7937824893922L388.3702183380053,450.63484132029475L388.3819638685518,450.4346941423408L388.3702183380053,450.296357653453L388.2351449532134,450.2139446895625L388.1206262107962,450.13153189477254L388.0912624084867,449.95787684034894L387.997298308444,449.80776886925304L388.06189865428337,449.6488316503485L388.1881629272468,449.44280282497823L388.3614092261769,449.26032101770375ZM388.4583096968279,449.0513509507716L388.6227468839297,448.87770059729655L388.6873471816625,448.7570287690894L388.69909271220854,448.5745500577179L388.5052917227947,448.5362885013546L388.3819638685518,448.63635725243057L388.3907729803775,448.8306091257916Z\" stroke=\"#000\" fill=\"#FFF\" strokeWidth=\"0.5\"></path>\r\n        <path id=\"TanaRiver\" ref={(item) => countyRefs.current[3] = item} d=\"M355.6002384361659,260.93280204363487L355.9937131080994,260.9416111554857L356.18457772690476,261.00033876031273L356.34020575406885,261.0032751309348L356.5428158553084,261.07668458903817L356.76304418020527,261.1001756022078L356.9832725532083,261.09136644219734L357.35912895337833,261.01795698405294L357.56173905462083,261.00033876031273L357.72617624172244,261.00033876031273L358.1578238277966,261.07081179966656L358.44852523974987,261.16771227123377L358.63058069861745,261.25286726068566L358.8214452693112,261.3732587469197L359.0064370987875,261.54650509987374L359.611330983789,262.4039275720548L360.12226076875095,263.0235035181308L360.31312533944447,263.2701593687337L360.5744629971971,263.57260645434326L360.72715465375245,263.7752166702925L360.9679376691331,264.06004553025844L361.39077614337884,264.43296586161046L361.57283155413484,264.5504210833586L361.7460778530649,264.6267669860026L361.9105150401663,264.6884310234701L362.36271726861264,264.7618405578077L362.57413652979267,264.8176318038855L363.21133053960625,265.10246080833514L363.49028646912257,265.1905522315473L363.74868775626624,265.2169796978793L363.9806616117096,265.19348865409256L364.47984591423415,265.07309696952086L364.71181976967455,265.02611488616776L365.0964853297819,264.97326000779964L365.2491769863375,264.9673872596708L365.40480501350135,264.9673872596708L365.85700724195044,265.07896976610857L366.0390627008155,265.1406337706722L366.22992727151154,265.2169796978793L366.4325373727513,265.275707332826L366.62633831405356,265.3138802990485L366.8465666870593,265.33737134451917L367.0491767882993,265.33443496983136L367.2312321990578,265.31975304835896L367.7509711439543,265.2991983777579L367.9447720852593,265.275707332826L368.41459258547184,265.2522162882236L368.60839357488294,265.21404332340273L368.91671325860216,265.1376973963236L369.2896332881637,265.07896976610857L369.63612588602405,265.11126993121115L369.8211177154976,265.1376973963236L369.9826185319905,265.16999756252056L370.12943744732866,265.2169796978793L370.3026837462562,265.3109439244021L370.42601160050185,265.3902262341342L370.56108503340283,265.4959360185082L370.77250424646854,265.6838645093555L370.92813227363513,265.81012894241474L371.69746334573847,266.36216909892113L371.84134589046516,266.44145146497374L371.9852283870857,266.5031155253743L372.1203018199842,266.5500977029275L372.3317210330522,266.63818926032945L372.5137764438109,266.6998533300344L372.72519570498844,266.7908812754078L372.88963284398073,266.88190917926926L373.0628791910174,267.0228557112084L373.4387355911872,267.40752228441545L373.67951855845877,267.66592435686647L373.87919228909004,267.79806179599643L374.09354792087584,267.8538531661748L374.66907800356785,267.8362348359028L375.03612529190923,267.8391712162426L375.2563536168059,267.86853511630625L375.6498282887421,267.98011786697174L375.81426547584374,268.0564639612943L376.0168755770835,268.18566506790864L376.21948567832305,268.32661171771673L376.621769462085,268.7024696126429L376.81557040339,268.86397111647113L376.99762586225506,268.996108713731L377.19142680356003,269.0959460081037L377.44101897887526,269.24863837889933L377.69061110608163,269.45712228692776L377.922584961525,269.66854258270854L378.0371037039422,269.7948074791509L378.1809862486689,269.9269452646125L378.6537431194897,270.4525599911965L378.8064347760453,270.59644344215263L379.06777243380066,270.7696908679229L379.241018732728,270.85778281486404L379.4025195492211,270.9634931648424L379.54933846455924,271.0692034817448L379.7020301211146,271.21308705054264L379.8928946918081,271.4391898318137L380.1160594354226,271.8767135906963L380.3744607225667,272.4111390100867L380.4801703050464,272.5990689215941L380.644607492148,272.72239792885705L380.81785379107805,272.81049012593763L381.134982634735,272.89564588807195L381.2700560195244,272.94850121941926L381.4814752807017,273.05127549570443L381.6371033078656,273.18047744121384L381.8955045950097,273.3772167882069L382.25080635280756,273.6943490482282L382.3946888494254,273.8587880740117L382.5415077647608,274.06140050502665L382.9819644626634,274.92764283345826L383.1082287356269,275.1038278653651L383.27266592272827,275.2741401330735L383.47233965335977,275.4415160438906L383.7336772630033,275.6000827209048L383.9920785501474,275.7880136860257L384.17707037962373,275.9524533498773L384.4061078644554,276.2167314723892L384.39729875262674,281.5904209422446L384.4560263091398,282.4860430218309L384.5617359397311,282.6475488527422L384.74379135048684,282.8178642012075L384.887673895214,282.9235772383729L384.87886463905807,283.07627401750625L384.74379135048684,283.2260341081995L384.67625468214555,283.4521428204554L384.6380817680076,283.6195221010239L384.685063793974,283.7780920463632L384.67625468214555,283.980709237588L384.64689087983606,284.21269146797886L384.6586364103823,284.38888057268485L384.7232367081124,284.5591968134948L387.6008872658995,284.5826887042872L388.01491658020745,284.98792432299683L388.1499899649996,285.1406219240239L388.21752668144995,285.3344305181182L388.31442715210096,285.51062029832184L388.4201367826897,285.6398261853742L388.7842476523133,285.86593660748986L388.92813019704045,285.99807913951696L389.05439447000344,286.1419677104789L389.13074029828,286.27117386753036L389.18946785479284,286.41212612033496L389.2188316089962,286.5560148915119L389.20708612655903,286.7527609449589L389.18065869485804,286.94069757294034L389.2863683254468,287.0933961667941L389.52715134082473,287.0787135950817L389.67103383744256,287.04053894099786L389.8618984562477,287.01117385181146L390.2083910541053,286.9876817248741L390.719320839067,287.175618505223L390.9101854097605,287.30482511895104L391.05700432509616,287.4164126937582L391.46809726879565,287.79228694250315L391.7088802841763,287.93030337755613L391.9878362136949,288.1153042675878L392.16108251262267,288.20633650059835L392.7483581258607,288.5528465640825L392.98914114124136,288.68205376640475L393.2123058848556,288.8406264046398L393.5088800861379,289.2018199119734L393.64395347093,289.41912358530146L393.7496630534097,289.6716658706332L393.77902685571917,289.8126198455647L393.79664512748536,290.1297665195364L393.7878359675476,290.2883399780878L393.7496630534097,290.4469135344161L393.7202992992063,290.6495354813851L393.7202992992063,290.8844596920941L393.7878359675476,291.048906716833L393.86418184393574,291.2016076976936L393.9904460687876,291.3278796638306L394.11671034175083,291.4101033567618L394.34574782658274,291.68320355051515L394.5013758537493,291.87701677844257L394.6540675584138,292.1178152735429L394.7304133866901,292.2705168704516L394.78914094320294,292.4525843077744L394.8185046974063,292.6757639234611L394.80969558557786,292.866641379713L394.8185046974063,293.039899508107L394.8478684997158,293.18085540029733L394.9418325997585,293.36292353726503L395.1062697868599,293.6418991211612L395.27070692585266,293.81515787393374L395.38522566826987,293.98841670925515L395.45276238472,294.1381829375546L395.49974445879616,294.33493477461514L395.5408537435428,294.56986261650104L395.5408537435428,295.0808314619567L395.54966290348057,295.3451262040149L395.61719957182186,295.5389424540031L395.7610820684397,295.69751959245065L395.8873463414029,295.86490667338046L395.972501329617,296.0293572244605L396.0194833555836,296.1967445627469L396.04884715789353,296.4140546508407L396.03122888612984,296.61668181548004L395.9930559719919,296.76938645944006L395.82861878489007,297.12178224031504L395.77870034020293,297.3802061456015L395.87560085896575,297.62982052017344L396.04884715789353,297.85594200536644L396.21328434499765,298.1026202697242L396.4041489156914,298.36691874560495L396.5773952146185,298.65177415269727L396.6948503276444,298.8867067338362L396.77119615592346,299.0834630293691L396.95325161478854,299.82350327662886L397.09713415951796,300.17590440174223L397.21458927254366,300.34035848675074L397.39664473140874,300.5606097117667L397.5023543138884,300.72506407927847L397.6168730563056,300.9511891152053L397.73432816933155,301.5855153565592L397.751946441095,301.90855268227017L397.751946441095,302.04657792899434L397.71377352695663,302.2638944081338L397.751946441095,302.73964224185573L397.7901193552357,302.9187822099117L397.8400377999201,303.06268165591024L397.8400377999201,303.2594422644564L397.751946441095,303.52962137659716L397.7225826868944,303.68820499743083L397.751946441095,303.91433369967945L397.8194831575456,304.11696876942494L398.069075284752,304.31960407355575L398.1953395577152,304.46350461080004L398.40675877078365,304.79535741437576L398.52127751320086,305.02736105264285L398.5800050697137,305.16538872378084L398.6475417861643,305.3621516992018L398.75325141675285,305.8790227255345L398.8119789732659,306.0464188072757L398.8971339133707,306.25199316884715L399.0116526557879,306.4693149299014L399.1379169287486,306.65139554045925L399.2436265593374,306.85990743172874L399.34052702999134,307.08016672859804L399.38750905595793,307.2974895799648L399.4080637464417,307.5089390859645L399.4374275006421,307.6968944440738L399.44623666057987,307.9142181201173L399.4080637464417,308.29894042280864L399.3199723876164,308.62492727145616L399.2436265593374,308.9479779219267L399.2524356711658,309.15355596176767L399.4638549323431,309.53534444462235L399.56075540299435,309.67924959900614L399.6870196278487,309.808470658764L399.81034753020367,310.01111294540027L399.8896297290885,310.19026075165175L399.95716644553886,310.37234561331275L400.1862039303735,310.7658845259121L400.32127731516266,311.0889396949015L400.4475415881259,311.4354904911417L400.5826149729153,311.68512503702095L400.8615709024343,312.2578176925714L400.96728053302286,312.4634002063736L401.33139140264643,313.09483397883565L401.49582858974804,313.4120203704729L401.6984386428787,313.749765901134L401.79240274292124,313.9465397754215L401.88049410174654,314.1579985299213L402.2181775877782,314.76007035324795L402.2651596618539,314.9098544761779L402.39142388670575,315.2211710264389L402.4295968008464,315.35627085925864L402.62046137154016,315.8907975887613L402.67037981622434,316.1022592801129L402.8700535468556,316.6455998804361L403.13139120460824,317.04209303152896L403.2752737012288,317.23887157367386L403.55422963074466,317.5883743968686L404.08277768747007,318.28738288644405L404.17086904629537,318.4224857763312L404.25602403450944,318.5810849873241L404.3235607028507,318.77199171679314L404.37347914753514,318.9863950279794L404.58489836060335,319.53268443649426L404.83449048780994,320.3814935331833L404.96956387260184,320.71631944540064L405.11344641732876,320.9336630217331L405.1516193314667,321.31842088514804L405.1516193314667,321.56807353459374L405.12225557726606,321.97926725045613L405.08408266312813,322.1760533186509L405.02535505850597,322.39633653900995L404.9402001183987,322.6577398502807L404.88147256188586,322.8721497482086L404.825681375984,323.0983085093815L404.79631757367156,323.26866213712236L404.74639917709646,323.5946843905647L404.74639917709646,323.82671877706457L404.77576293129687,324.1762398175477L404.825681375984,324.3172233507379L405.16042849140445,324.88115924624634L405.3160565185683,325.2894270244356L405.3542294327094,325.53908785176174L405.42176614916,326.0883436128871L405.4893028174986,326.3380061481071L405.815240772984,327.8095575680834L405.97086884825717,328.420506691568L406.0853875906744,328.92277979921175L406.2968068037426,329.7834051429449L406.35553436025543,330.0830100789724L406.4406893484695,330.453111436527L406.47005310267286,330.6880970435473L406.49941690498235,330.83202600998965L406.5170351767488,331.13163382807073L406.5170351767488,331.32256080287885L406.5287806591857,331.47236528902994L406.5669535733239,331.7191025367681L406.6051265355711,331.8953438103794L406.70202700622235,332.20964138228584L406.79599110626464,332.36238447347705L406.9017006887443,332.55625106201444L407.0661378758459,332.8118029447746L407.239384174776,333.0321068271403L407.36564844773943,333.2200998268779L407.4508034359533,333.4462793499513L407.4889763500944,333.6871464038041L407.5477039066045,334.18650666033295L407.57706766080764,334.33631521608356L407.6357952173205,334.5683720648281L407.6739681314589,334.77399246946766L407.729759317363,334.97667580225976L407.8736418620897,335.4290430793973L408.0762519633297,335.85791253268985L408.143788631671,335.97834884109545L408.31703497871035,336.2280342556286L408.40512628942383,336.3484709579218L408.5108359200126,336.4689078526445L408.63416377425824,336.5834698793175L408.96303814846146,336.85959430304445L409.09811153325063,336.991781788578L409.2977852638819,337.22971967564524L409.4534132910487,337.45003308481375L409.5503137616995,337.6292216970197L409.7118145781926,337.9934748960824L409.80871504884385,338.3077912694159L409.8556970748102,338.50460667682705L409.8968064076662,338.777798923467L409.97315223594524,339.0539294439918L410.0494980642218,339.5738795526017L410.0788618184247,340.0673940859855L410.08767097836244,340.4257812381162L410.07005270659624,340.87817350202323L410.04068890428675,341.3100044984182L409.9819613477739,341.81527865515375L409.97315223594524,341.96509884032866L409.9819613477739,342.32643084877157L410.02013426191183,342.63782381514943L410.10822562073463,342.8757757486742L410.26091727728976,343.1636689945524L410.4635273785325,343.47506473105386L410.53106404687105,343.61019910895254L410.5868552327754,343.80702554483526L410.59860076332166,344.00972787303147L410.57804612094674,344.1595516159863L410.5398732068088,344.33287741766804L410.3871815502532,344.67071681696683L410.2814719196647,344.8675455941501L410.1463985348753,345.1554451227208L410.0113251500834,345.5167897200826L409.9819613477739,345.65192709272594L409.9819613477739,345.81056691515386L410.02013426191183,346.2541722555112L410.0494980642218,346.72128229645296L410.10822562073463,347.015063473224L410.13465300432904,347.21189737487305L410.175762337185,347.3617264797599L410.2021897207769,347.55268550428974L410.2139352513259,347.75539632766356L410.19338056084234,348.0814973019529L410.2021897207769,348.3135879719895L410.2315534749803,348.54567921451286L410.3196448338026,348.8482801408077L410.40479982201964,349.03924243178363L410.53106404687105,349.2272672626672L410.81001997638987,349.521056903253L410.96271163294523,349.7032069903537L411.08016679408024,349.89710909165944L411.1858763765597,350.0469428487172L411.3003951189769,350.24965953669516L411.3679318354275,350.4229973587675L411.4354685518781,350.6521563845528L411.46483230607873,350.8607504004699L411.46483230607873,351.048779255326L411.42665939194035,351.5394190242631L411.38555010719097,351.94779804742655L411.38555010719097,352.42375307309806L411.4149138613941,352.77925214296613L411.46483230607873,353.23170770987576L411.46483230607873,353.3727333552869L411.5118143801544,353.71060822791105L411.4912597377797,354.06023670993994L411.4912597377797,354.2776535360442L411.4530867755325,354.5185755490569L411.3473771930526,354.90934082124636L411.3473771930526,355.05330741513376L411.3679318354275,355.2119648375605L411.4149138613941,355.3706225246991L411.6645060367098,355.83190692528353L411.75259734742326,355.9758751739457L411.88767078032424,356.26675068095295L411.90528905209044,356.4136579027008L411.8964798921527,356.5781942673523L411.8788616203867,356.78386525136654L411.8289431757023,357.0247948037045L411.8788616203867,357.1717034315842L411.9933803628039,357.333303248129L412.0902808334549,357.4890269892819L412.22535426635613,357.7182058977302L412.3105092064609,357.89743605337827L412.4074096771119,358.1618747016411L412.5512922218388,358.60554598019934L412.9359577338371,360.7093466137785L413.0240490926624,361.2588124490437L413.1180131927049,361.7436385793922L413.1943590209812,362.2020224921565L413.36760531991126,363.1305524254739L413.59077006352595,364.43521533487603L413.65830677997633,364.7907693851887L413.73465260825265,365.34026539653496L413.81980754835763,365.7163934097066L413.89908979535426,366.14835533689893L414.2455823932146,368.1377645795363L414.28375530735275,368.3111426011802L414.35129202380335,368.70491802113804L414.3894649379413,368.8841747460168L414.4364469639081,369.04286136742326L414.42763785207967,370.2418387547241L414.40708320970475,370.7120316004568L414.42763785207967,371.75234464179084L414.42763785207967,374.30029708771485L414.4188286921419,374.5412848949085L414.4364469639081,374.970362844567L414.42763785207967,375.5463897194908L414.4364469639081,375.725664379744L414.42763785207967,376.04306994021357L414.44525612384564,376.2017733172353L414.67722997928604,376.2605524267545L415.3790243349413,376.2605524267545L415.5229068796684,376.2693692760422L416.6005576354935,376.2752472243754L416.7855494649698,376.3134536846527L416.96760492383487,376.278186174662L418.9966422106313,376.2899419771241L419.16988850956136,376.38986667178506L419.19044339248444,376.6308623187175L419.44884443907995,376.9394550183408L419.60447246624403,377.0687706020073L419.76890965334564,377.0893435538848L419.9010466675263,377.16575744561703L420.0860384970026,377.2509884562793L420.27690306769637,377.44496282923666L420.52649519490274,377.4537798380185L420.72029618431657,377.40675570866887L420.8054511244213,377.52137713760635L420.9610791515854,377.6477548629757L421.2194804387293,377.6653889848306L421.4426451823442,377.78588890540044L421.63350975304,377.83879139777036L421.8067560519678,377.7564986344312L421.9888115108356,377.79176694193023L422.0857119814864,377.6330597570592L422.2031671426214,377.5301941567311L422.4703775415942,377.44496282923666L422.71116055697485,377.41557271228027L422.88440685590217,377.3626706122017L422.93432525247727,377.20396442501357L423.1163807113451,377.1598794655888L423.26907236790066,377.1363674544567L423.3277999244135,377.0070517852276L423.45406419737697,376.9394550183408L423.56858293979144,376.8630413910767L423.7330201268928,376.73666518469145L423.82698422693534,376.51624221012685L423.70365632458333,376.3575380746554L423.96205761172723,376.398683538407L424.3760869260352,376.53975395045813L424.75194332620526,376.6367400104757L424.97217169921123,376.7131533737902L425.5800019548242,376.8865532557757L425.95585835499423,377.0070517852276L426.88669024359024,377.2803784508934L427.9848956417875,377.61836465446265L428.2051240147932,377.6947791664445L429.3796752412695,378.0504017503392L430.05210584272186,378.2620127938407L431.22665711730724,378.61469943724444L431.47624924451657,378.69699324378485L433.55520497599696,379.31713937928345L434.2569993316497,379.54051102445146L434.441991161126,379.5640239100181L435.78685231592385,379.3524085397121L436.03938086184826,379.3259566916485L436.50920136206037,379.24660116477446L437.32845083074176,379.12609847075635L437.55748836368525,379.13491575687056L437.47233337546845,379.25541841928896L436.9144215164338,379.5816585076292L436.61491094454027,379.76682255771345L436.2889729890546,379.94904802757134L436.0012079477099,380.1459696463512L435.5959877452276,380.47809261739565L435.40218680392536,380.59271952229795L435.04688504613046,380.8983922818555L434.46841854471813,381.4950462899169L434.0074072044433,382.0476176231748L433.6051233725723,382.59137601104436L433.4583044572339,382.7559741032373L433.3144219606163,382.891179985274L433.1529211441232,383.01168985996145L432.41001750372106,383.5260637663655L432.16042532840584,383.6671499552607L431.79631445878226,383.89347634884865L431.5643406033389,383.96401977424034L431.3323666997867,383.9258087240843L431.1503112890309,383.8729011922747L431.01523785612994,383.7759040559794L430.80381864306173,383.7288752400018L430.6393814559601,383.7053608454296L430.1490063133758,383.5760317628454L429.9757600144453,383.5495780927962L429.8230683578902,383.48785298690143L429.6968040849267,383.37322078990564L429.5734762306838,383.28504230254407L429.4765757600326,383.1704104803897L429.294520301165,383.08811085595676L429.10071935986275,383.0352039914571L428.91866390099517,383.01168985996145L428.29321537361875,382.80006298011244L428.15814194071754,382.73246007722025L428.0230685559284,382.64134325600503L427.8204584546859,382.5384696166452L427.5503116851046,382.3621151318637L427.1274732589709,382.2180927278855L427.1274732589709,382.3415404824205L427.35063795447354,382.4679277629872L427.4357929426901,382.5884367710861L427.19500992730946,382.64134325600503L426.70463478472243,382.6442824984567L426.4168697433779,382.65897876095204L425.9441128725566,382.7118853057125L424.9927263415859,382.90881556093905L424.05895808237847,383.1557140971289L423.82698422693534,383.22919600006344L423.5392191855908,383.3291315546338L423.39533664086366,383.3879172246844L422.81687013945157,383.6465748740395L421.96238412724347,383.98753431544816L421.42209053997203,384.2285585187169L421.2194804387293,384.3079203395055L420.18000259704513,384.82230504767017L419.5545540696687,385.2161797008405L419.3636894508634,385.3278759620574L419.19925231187085,385.38078479631315L419.00838774117733,385.3954817108893L418.8439505540757,385.48660255435624L418.7764138376251,385.62769324842577L418.62372218107,385.73645087354987L418.29484785497857,385.9157543669228L418.0922377537361,386.05978546233655L417.74574510776915,386.2773024066385L416.6005576354935,387.08564936090545L416.1483554070476,387.47072029416546L415.40838813725395,388.08213564662174L415.0325317370839,388.2702647129473L414.9855496630082,388.43487814494097L414.5920750391813,388.85229277784765L414.3894649379413,389.0463034320046L414.1105090084227,389.33438096566664L413.9078989071827,389.5313327278592L413.5614063093226,389.907600651581L413.32062329394466,390.1956824389865L413.06222200680054,390.53373936239984L412.94476689377484,390.7012987379196L412.5512922218388,391.28923014331457L412.44558259124983,391.4626710333065L412.2723362923225,391.70960472726074L412.05210791931677,392.05648958346814L411.9258436944624,392.3357627369671L411.74378823559755,392.4445326723884L411.01263007762964,391.56849965145364L405.87396837760593,384.2814663557685L405.3718477044729,383.5231244822101L404.3822882593638,382.16518660128406L401.812957433405,378.48538077610914L401.01426255898946,377.38618265672966L397.20284374199764,371.9845070834152L396.65667741350626,372.5869575249594L395.41458947057936,374.0269826852437L392.53693891279227,377.2950734772415L389.1219311383452,381.1952489935371L389.0250306676912,381.31575560595826L386.8521108361683,383.7582682819107L386.4263360394232,384.25501243155696L384.2034977632154,386.7623092897902L383.31083883686665,387.785245706908L380.17478699193543,391.32744588906564L378.59501556297687,393.12655416416146L371.7356362598764,400.7881033280081L367.7216073416448,405.2838094641187L366.2710365562584,406.998100083031L365.26973162871195,408.1390314412341L364.9995848591311,408.4242682151295L364.8175294002633,408.49778310997186L364.6149192990233,408.3948623154849L364.41230919778354,408.4066247022341L364.24787205879124,408.4330900220195L364.0276436857853,408.36251580190566L363.88376114105836,408.2419517729818L363.7017057303026,408.20666478171404L363.46092271492194,408.27135758536735L363.30529463964876,408.30370404172197L363.05570251243967,408.2566547011686L362.8912653253378,408.0478736197017L362.70920991458206,408.0155273719233L362.6240549263682,408.1302097328462L362.56532736985537,408.2654764311833L362.47723601102985,408.38015934787035L362.31573524264604,408.44779300474727L362.1806618578569,408.39192173126196L362.15129805554466,408.1801995300199L361.83416921188746,407.7214711698331L361.75782338361114,407.5920869724367L361.64036827058544,407.44211933536974L361.48767661402985,407.4185950517974L361.3526032292407,407.5273950190567L361.18816604213634,407.5773842333366L361.12062932568847,407.38918967620964L361.014919743209,407.25980635653957L360.79469137020305,407.2774495262564L360.709536381989,407.1627690061761L360.7359638136902,406.97457595244134L360.60382679950953,406.6334777836665L360.58327215713484,406.424703282634L360.51573544068424,406.21298915577853L360.321934499382,406.18946542755816L360.1486881523431,406.2482747920447L359.73759525675246,406.424703282634L359.611330983789,406.55408457391843L359.39110261078326,406.92164681795754L359.20611078130946,407.0716129513296L358.78327235517304,407.23334158911666L358.58066225393054,407.35978436546833L358.5424893397924,407.518573366843L358.5542348703384,407.6920656704971L358.3897976832368,407.8185095181303L358.18718758199725,407.6979467593912L358.1284600254844,407.4744652728226L358.05211419720536,407.2833305681038L336.20252454266756,376.9394550183408L336.34640708739425,376.9012481935571L336.5578263004627,376.96296691049236L336.6811542028174,377.1363674544567L336.8544005017475,377.1069775246698L337.0658197148159,377.18045244615985L337.2977936183679,377.2333544466023L337.51802194326206,377.21865943415366L337.9437967881163,377.21865943415366L338.23156182946354,377.1951474500076L338.4048081283938,377.1510624483835L338.5574998330583,377.08346558073L338.74249161442276,377.02468573381395L339.1829483604347,376.96884492096643L339.47364977239044,376.8483464618691L339.62634142894603,376.81013969025815L339.73205105953457,376.7131533737902L339.8876790866984,376.6690687450588L340.0315616314256,376.53975395045813L340.0873528173297,376.36047702861833L340.27234464680623,376.30757573290555L340.46320921749975,376.2076512113815L340.589473490463,376.08127626580006L340.67462843056774,375.8931837922953L340.8977931741824,375.80207673376475L340.9653298906328,375.66688574672077L341.0710394731125,375.58165683845084L341.1943673754647,375.4993669073758L341.4439595026711,375.29658155372704L341.5232417015586,374.9409738801813L341.61720580160113,374.7528846418614L341.7141063203642,374.63826802698463L341.86973434752827,374.62357359230674L342.01361684414564,374.65296241674946L342.175117660639,374.5883069815341L342.37772776187853,374.5265904815705L342.5715287031808,374.4883850509045L342.6772383337693,374.35319678294036L342.88865754683775,374.20331444575726L343.16761347635656,374.1122096529558L343.41720560356293,374.0975153338089L343.6110065448679,374.1180873622539L343.8106802754992,374.1739257707483L344.0044812168012,374.0828210178847L344.10138173556425,373.9300004385747L344.1483637615306,373.66550409608686L344.31280094863223,373.5391339733523L344.4654926051878,373.5156232935506L344.65929354648983,373.25994502931485L350.8932243222139,361.0266846973708L354.261250022588,354.4891947574996L355.00121734049094,353.0201697435337L354.9160623522739,352.8850207730913L354.6282973109296,351.63931014150177L352.31736772400586,342.74064244718517L352.6051327653531,342.52325459585705L352.79893370665536,342.4116231773045L353.03090761020735,342.2970542366824L353.2423268232758,342.2500516092156L353.34803645386455,342.1325452163676L353.5007281104197,342.1766100843111L353.69452905172193,342.1325452163676L353.8002386823109,341.99447539610435L353.9646758213032,341.96509884032866L354.0791946118295,341.85934342176915L354.18490419430896,341.6772093026779L354.1261766377961,339.4240631361033L352.51997782524813,312.69541508331326L352.43482283703156,311.4795436018787L352.02960263455225,310.6072940985275L351.2778898342124,309.0243354440996L350.69061422097434,307.82611388536395L350.3646762654887,307.10072427676363L349.40154425208084,305.0596653973852L348.919978221322,304.07879113318916L347.1904515064193,300.39321876342103L346.8234042180752,299.63261961495044L345.91019064935426,297.69736324727677L345.28474212197807,296.4169912673648L344.9558677477721,295.8032377008734L344.0044812168012,294.18223182999293L342.9650033751168,292.44377461316617L341.7141063203642,290.3118323417113L340.57772795991696,288.4324489309477L339.3268309051614,286.3328404458401L339.250485028776,286.1889517829855L338.7806645285634,285.4137159307891L338.53107240135455,284.9203850010229L338.0495064187078,284.08348616626813L336.9131280582603,282.16303153528617L336.6547267711162,281.7049429784656L336.43156202750174,281.34375821326864L336.1437969861547,280.83868740534126L335.6328672011955,279.9841796335774L335.4038297163611,279.57894976356994L335.113128256296,279.10324569212526L334.77838114087535,278.51008454990676L334.0560321428454,277.27971830421683L333.1898006000911,275.8320600476337L332.0739769301276,273.92632551101593L330.015575841019,270.4760511984269L329.2550539288536,269.16348303727887L328.6589691556778,268.1709831133169L328.0129659378174,267.05515596843003L327.5020361528559,266.1947952034881L326.47430384171753,264.33900167942573L326.6769138948482,264.46820243704303L326.8677785136538,264.5357392163489L327.0322156526431,264.5210573013372L327.2054619996825,264.3507472200095L327.4344994845171,264.48582072498897L327.56957286930606,264.6267669860026L327.71345541403593,264.75596776224353L327.90725635533795,264.91159600905934L328.1274847283439,265.00556021907886L328.32128566964593,264.987941926321L328.48572285674754,264.9292143010735L328.67658742744106,264.7794588483973L328.87038836874603,264.67081273372486L329.22569012654117,264.60327594982283L329.39893642547145,264.51518455460456L329.54281897019814,264.37130188010616L329.6279739103031,264.2332920095291L329.65733771261534,264.03068175496026L329.70725615729975,263.7898985803859L329.8805024562298,263.7223618235392L330.09192166929824,263.86037171155L330.3209591541297,263.91029014059626L330.5353147859187,263.86037171155L330.7261793566122,263.739980105667L331.1313995109824,263.8897354847264L331.2752820557123,263.84275342856824L331.38099168630083,263.7135527065744L331.4867012687803,263.60197027230646L331.66875672764536,263.5344335203388L331.6981205299576,263.29365043980357L331.65994761581965,263.02937626136907L331.8420030265754,262.95596682732315L332.17087740077886,262.9471576645537L332.1973047843708,262.7651021520716L332.2090503149168,262.58598306779527L332.2472232290552,262.4362277509635L332.4586424421234,262.042753020579L332.526179158574,261.86069754412586L332.67887081512913,261.7256241494893L332.84330800223097,261.6874512330103L332.9871904988488,261.7696698077829L333.16043679777886,261.8019699830203L333.333683144818,261.75792432453795L333.5950208025706,261.8107791436153L334.02666834053593,262.0368802787074L334.4876797289196,262.13378076088446L334.6227531137117,262.2835360680655L334.86353612908965,262.4362277509635L335.07495534215764,262.50376448069665L335.2393925292595,262.4509096549204L335.39208418581484,262.31289982695245L335.5946942870546,262.31289982695245L335.86484105663567,262.5301918697717L336.0380874036748,262.659392542564L336.3258524450223,262.91779390107257L336.4697349416399,263.0763583519647L336.6253630169133,263.2730957405822L336.7692455135309,263.42872388561756L336.9131280582603,263.49038784272324L337.1157381595003,263.4757059343056L337.3271573725683,263.44340579378854L337.453421645532,263.29952318354725L337.55913122801167,263.15564058027593L337.68245913036344,263.09691300178L337.8263416750906,263.1438950933552L337.9437967881163,263.21730453165935L338.1552160011847,263.2613502532133L338.38425348601913,263.3318233705551L338.53107240135455,263.43459662963215L338.71312786022213,263.5050697512188L338.9920837897412,263.4991969589467L339.10660253215565,263.31420509106135L339.08898426039195,263.1409586735205L339.135966286359,262.970648685139L339.2798488310857,262.84144800171356L339.4442860181871,262.9765214763912L339.5411864888383,263.11453128002455L339.68506903356774,263.28484127610545L339.84656980194904,263.41404197752325L340.04917990319154,263.51975165979536L340.2136170902934,263.6606978610984L340.34869047508255,263.7898985803859L340.5013821316377,263.8662444565338L340.74216514701834,263.8867991122039L340.8977931741824,263.9425903350811L341.10921238725064,263.96608136402256L341.3588045625663,264.0864729812665L341.6083966897727,264.23622838249867L341.80219763107766,264.2597194144902L341.9754439300077,264.25678304148937L342.1956723030107,264.34193805254023L342.6273198890849,264.38598379404334L343.0149218198012,264.18337352535883L342.90627581860394,264.05417278478944L342.762393273877,263.97195415737514L342.7447750021108,263.7928349527925L342.87984843501204,263.6489523239916L342.9356396209164,263.47276956225426L342.782947916249,263.30245955542154L342.58914697494697,263.19674988106107L342.36891860194123,263.1409586735205L342.3101910454279,262.96771231357104L342.37772776187853,262.7680385715848L342.2925727736647,262.6153468286787L342.23384521715184,262.47146430129357L342.1956723030107,262.3275817305161L342.40709151607916,262.1778264220396L342.782947916249,262.11616248689916L343.5434698765264,262.13084438989915L343.78425289190704,262.2013174382655L344.1483637615306,262.35988190889526L344.28343714632,262.4039275720548L344.6504844346614,262.63002873325354L345.0234044642227,262.7210564851021L345.2260145173534,262.77978405721535L345.72813519048646,262.95303040765634L345.9395544035549,263.04405816761465L346.0834369482816,263.1350859300834L346.3036653212878,263.21730453165935L346.55325744849415,263.23198643877225L346.70888547566074,263.2084954162895L346.9291138486642,263.15857695201197L347.2286244205577,263.1292131866547L347.49877119013877,263.15857695201197L347.8247091937335,263.29365043980357L348.015573764427,263.3171414629503L348.3826210046593,263.3318233705551L348.6821315765528,263.32301420674037L348.87299614724634,263.2407956023188L349.06679713665744,263.1350859300834L349.48082645096815,262.9324757587288L349.7862097640791,262.82676614443636L349.9888198653189,262.7885932195694L350.2296028806966,262.77978405721535L350.3852309078636,262.8179569819881L350.5672863667287,262.83263888733876L350.8756060504479,262.8943028327366L351.2778898342124,262.9324757587288L351.46288166368595,262.63002873325354L351.5862095660409,262.4479732837453L351.79762877910935,262.23068124478004L352.1147576227661,261.9575980234816L352.4230773064853,261.7491151640063L352.66386032186597,261.60523265907943L352.93400713955657,261.4613501083951L353.4038276397687,261.3057220769864L353.8472207082773,261.20588518587317L354.0292761671451,261.15303041801815L354.25244091075956,261.1001756022078L354.463860123828,261.07081179966656L354.7428160533466,261.00914787218164L354.93368062404033,260.9797840697451L355.3300916665851,260.9592294273027Z\" stroke=\"#000\" fill=\"#FFF\" strokeWidth=\"0.5\"></path>\r\n        <path id=\"Lamu\" ref={(item) => countyRefs.current[4] = item} d=\"M454.2126250841832,375.3935657863933L443.71800963362966,383.72299665255787L441.13693327712485,385.75996604698275L438.5881570454319,379.0291086923025L438.06841814864424,379.00853512467063L436.50920136206037,379.24660116477446L436.03938086184826,379.3259566916485L435.78685231592385,379.3524085397121L434.441991161126,379.5640239100181L434.2569993316497,379.54051102445146L434.0749438727846,379.48760713574785L433.55520497599696,379.31713937928345L432.74770098975296,379.076134048871L432.5832638026516,378.99971790405505L432.27494407082304,378.9321190602064L431.47624924451657,378.69699324378485L431.22665711730724,378.61469943724444L431.01523785612994,378.55591820426787L428.2051240147932,377.6947791664445L427.9848956417875,377.61836465446265L427.81164934286016,377.5448892394186L427.62959388399236,377.51549912551644L426.88669024359024,377.2803784508934L425.95585835499423,377.0070517852276L425.5800019548242,376.8865532557757L424.97217169921123,376.7131533737902L424.75194332620526,376.6367400104757L424.5493332249655,376.5838384922943L423.96205761172723,376.398683538407L423.7418292387215,376.3810497581968L423.82698422693534,376.51624221012685L423.7330201268928,376.73666518469145L423.56858293979144,376.8630413910767L423.45406419737697,376.9394550183408L423.3277999244135,377.0070517852276L423.26907236790066,377.14224548052084L423.1163807113451,377.1598794655888L422.93432525247727,377.20396442501357L422.8286156699978,377.3832436567193L422.4028408251436,377.4596578926869L422.1738033403119,377.550767302311L422.0387299555198,377.7388645360121L421.89484741079286,377.7829498873359L421.739219383629,377.74768158462365L421.63350975304,377.83879139777036L421.4426451823442,377.78588890540044L421.2194804387293,377.6653889848306L420.9610791515854,377.6477548629757L420.8054511244213,377.52137713760635L420.72029618431657,377.40675570866887L420.52649519490274,377.4537798380185L420.27690306769637,377.44496282923666L420.0860384970026,377.2509884562793L419.7571641227994,377.08346558073L419.60447246624403,377.0687706020073L419.44884443907995,376.9394550183408L419.19044315193605,376.6220451320113L419.16988850956136,376.38986667178506L418.9966422106313,376.2899419771241L415.5229068796684,376.2693692760422L415.3114876666,376.2605524267545L414.4658107662178,376.2546745278874L414.42763785207967,376.0871541973462L414.4863654085925,375.9607794827936L414.4951745204212,375.70509185464994L414.42763785207967,375.5463897194908L414.4364469639081,374.970362844567L414.42763785207967,374.5647959340833L414.42763785207967,371.75234464179084L414.4364469639081,371.41144937031993L414.42763785207967,370.7237864805768L414.42763785207967,369.60120612790394L414.4364469639081,369.04286136742326L414.3894649379413,368.8841747460168L414.35129202380335,368.70491802113804L414.28375530735275,368.3111426011802L414.2455823932146,368.1377645795363L414.07233609428454,367.1210138004143L413.59077006352595,364.43521533487603L413.36760531991126,363.1305524254739L413.1943590209812,362.2020224921565L412.9359577338371,360.7093466137785L412.74215679253484,359.66331562078386L412.61001977835167,358.90230768278605L412.859611905561,358.74951934909797L414.88864919235425,357.7857844438848L416.3509655082871,357.107063578505L416.79435862490755,356.8720101361041L421.7891377802043,354.5567705651194L423.69191084214617,353.78699751954554L425.85895788434004,352.8468265379313L426.45504265751583,352.605909443223L427.26254664376006,352.22690716186463L427.4739658568283,352.10057343658286L435.78685231592385,348.0873730397651L437.7689075767505,347.20602174400733L438.2886464735411,346.8799240277657L440.71409485098843,345.69011812735044L442.6667862613963,344.7617867906493L444.0909296631912,344.04498050195366L445.3418267660527,343.43687462937487L451.355529168771,342.9080902190931L454.19500681241993,342.62901076734465L458.3617273872096,342.2764905992895L462.2113190702305,341.97097413149544L466.75976878640995,341.55676594777424L469.7255107030196,341.3100044984182L476.14149693760874,340.7195422233994L477.5568311794657,340.6607899634281L477.64198616767953,342.03266490352536L477.85634175135647,344.35637923610244L477.8739600231229,346.66252618799103L477.7212683665673,348.22251434890404L477.66254081005445,349.73258604350474L472.9467175361649,356.0140708822009L467.2795077313069,363.5918832773313L460.51702889885746,370.04494642171505L458.26482686844656,372.1814049126961Z\" stroke=\"#000\" fill=\"#FFF\" strokeWidth=\"0.5\"></path>\r\n        <path id=\"TaitaTaveta\" ref={(item) => countyRefs.current[5] = item} d=\"M314.5026902221855,390.67778156816127L314.8991012647273,390.8747378799817L315.0341746495192,390.9276516312483L315.3513034931764,391.16576403319937L316.1382528370457,391.7272428918638L316.5229183490442,392.01239390756183L316.8048106491715,392.2005355573025L316.98686610803657,392.34458193802175L317.45668660824913,392.6855910833352L317.76500629196835,392.8943131924699L318.04396222148716,393.1000963022607L318.19959024865125,393.250024459933L318.5548920064491,393.5645808982176L318.68996539123805,393.71157048303917L319.5650060939329,394.73462840139393L319.6795248363471,394.8933803991947L320.24918217782215,395.74594518930076L320.6132930955548,396.26924995256815L320.78653939448486,396.4691653856311L321.24755073475944,396.89545811172627L321.3738150077229,397.0218765883444L321.47071547837413,397.1512352700089L321.6234071349295,397.3776137576417L322.0579911397215,398.1243753257895L322.47202045402946,398.7947053169968L323.38523402275314,400.0854075002187L323.6818082240352,400.4529251131817L324.0018734383009,400.74106062402655L324.7124769538939,401.42906390482256L325.0795241941264,401.69074265921927L325.2410250106193,401.73778614042044L325.4054621977209,401.7289655026342L325.6256905226178,401.67604156169267L325.82830062385733,401.7436665664134L326.0309107250973,401.9935859384814L326.18360238165246,402.21410392967516L326.40676712526715,402.56693466525206L326.858969353716,403.1167671622881L326.982297256068,403.24025975408506L327.1849073091987,403.37551384086714L327.2994260997252,403.4813651297561L327.6371095376478,403.7989202106817L327.76337381061103,403.9547581034251L327.86027428126226,404.1311789085828L328.1274847283439,404.70161029007534L328.2713672249615,404.84862963704495L328.3800132261588,404.73983528958036L328.52389577088593,404.68102761319835L328.6677782675065,404.60457767875687L328.8498337263711,404.53694905131636L329.0700620993773,404.55165093624436L329.65733771261534,404.2370317022178L329.8305840115454,404.4310956582548L329.9862120387095,404.4604993733666L330.48539634123154,404.41639380682625L330.7261793566122,404.4310956582548L330.91998029791444,404.3428847072723L331.005135286131,404.1752842376661L331.1402086709202,404.08413332246005L331.2840912156496,404.0312070518049L331.4485283546396,404.007684297848L331.6511384558819,404.078252639171L331.8038301124375,404.0547298161872L331.9300943853982,403.9929825638541L332.08278604195334,403.9959229006915L332.33237816916267,404.2576142063847L332.6406979009912,404.3164214120903L332.7963259281553,404.4310956582548L332.96957222708534,404.53106831776046L333.1516276859504,404.59575656738326L333.30431934250555,404.62221995409186L333.4981202838105,404.60457767875687L333.6596211003034,404.60457767875687L333.8534220416054,404.63692186273477L334.006113698161,404.61339883977666L334.208723799401,404.63692186273477L334.3643518265674,404.7427756678941L334.4406977029528,404.8780335844771L334.72846274430026,405.1867757816227L334.9310728455398,405.2014778476117L335.113128256296,405.1867757816227L335.2687563315717,405.0809211336701L335.43025709995277,405.0132918477975L335.442002630499,405.17795457290885L335.3627204316142,405.3161540165338L335.34510215984824,405.46611554516767L335.48898465646585,405.57785186620265L335.7004039176461,405.62195840458594L335.85603194480973,405.7219332754254L336.2583157285717,405.7454567936312L336.4227529156733,405.81896789818643L336.5666354604002,405.8130870214469L336.7105179570178,405.7836825512833L336.88376430405697,405.8072060971878L337.0658197148159,405.8571937094366L337.2214477419798,405.97187131051015L337.30660273019384,406.0777278027841L337.43286700315707,406.18946542755816L337.53857658563675,406.3247270696219L337.6149224139133,406.44822711677875L337.81753251515556,406.5364416494781L337.9907788140829,406.66582321792293L338.0583155305335,406.95105188066793L338.2110071870891,407.10983968007747L338.45179020246974,407.04220777226465L338.7043187002846,407.0039810932549L338.8863741591524,406.95399238303764L339.0684296180175,406.9363493231468L339.21231211463487,406.9657544423476L339.5881685148049,406.9657544423476L340.04917990319154,406.79226461416033L340.26059911625975,406.79226461416033L340.589473490463,406.90106326949456L340.74216514701834,406.97457595244134L340.8977931741824,407.0039810932549L341.0504848307378,407.0510292953316L341.18555821552695,407.11866121462447L341.3118224884904,407.2098174002053L341.46451414504577,407.28627108927674L341.6289513321476,407.30685479033116L341.86973434752827,407.3215574527044L342.16630854881055,407.38918967620964L342.37772776187853,407.4597625670997L342.58914697494697,407.49504904857247L342.762393273877,407.4597625670997L342.9738125350543,407.38036809568996L343.1969772305599,407.3303790232228L343.3790326894248,407.336260119244L343.53172434598014,407.42741663882043L343.6286248166314,407.5479788158317L343.78425289190704,407.5803248193644L343.9281353885249,407.5568004248777L344.11900000732726,407.5568004248777L344.3304192203957,407.6244330035165L344.5154110498722,407.7214711698331L344.6504844346614,407.7508767340579L344.9558677477721,407.7744011685665L345.1114957749387,407.8361528781269L345.10268666311026,408.0155273719233L344.9470586359464,408.1008039527487L344.7444485347037,408.03905192689143L344.59175687814854,408.1302097328462L344.5623930758386,408.3095852002681L344.65929354648983,408.46249594349285L344.8795219194958,408.5448327189688L345.3023603456322,408.49778310997186L345.5049704468722,408.4919019299373L345.64885299159914,408.4330900220195L345.88082684704204,408.20372420822895L346.0746278364559,408.1449126291775L346.4005657919388,408.0831605023707L346.5356391767307,407.9184886537801L346.6795217214576,407.8273312214649L346.8145951062495,407.8949641055369L346.9291138486642,408.1684372431169L347.1229147899687,408.1654966718104L347.46940743593564,408.06257649257816L347.66027200663166,408.0155273719233L347.7953453914208,407.9390726061422L348.15064714921596,407.7067683939879L348.30627517638277,407.6244330035165L348.45896683293836,407.5038706967839L348.8553779235922,407.25392526918046L349.0286242225193,407.1245422384859L349.21948879321303,407.0716129513296L349.45146264865593,407.127482798846L349.6129634651488,407.2833305681038L349.77740065225066,407.2833305681038L350.1620661642489,407.3215574527044L350.3441216231138,407.3009737458174L350.6641868373795,407.17747162774447L350.84624224813797,407.1804121429215L351.0106794352398,407.1627690061761L351.11638906582857,407.0216241760867L351.2397169200715,406.9157657688671L351.3953449953474,406.92164681795754L351.5685912942747,406.9686949455462L351.75945586497096,407.0363267577202L351.9708750780394,407.0951370776528L352.5287869370743,407.1333638237062L352.66386032186597,407.15688797798714L352.81948834903005,407.1627690061761L353.039716722036,407.15688797798714L353.2041539091374,407.1245422384859L353.49191895048216,406.9275278195335L353.63580149520885,406.81578861415545L353.73270196586304,406.63641826810306L353.8677753506522,406.50703682079217L354.0791946118295,406.45410811310194L354.37681837256514,406.44559266227293L354.6459155826931,406.4835129119633L354.8955077099022,406.4776319604995L355.16565447948324,406.43058427630666L355.3300916665851,406.34825085872797L355.45341956893685,406.2659176191088L355.6002384361659,406.2570961807427L355.74412098089306,406.3188461360459L355.9173672798231,406.4100008736077L356.0788680963133,406.44822711677875L356.2344961234801,406.3864770566873L356.4371062247196,406.3188461360459L356.4253606941736,406.54526313504044L356.46353360831176,406.7099306255866L356.66614370955153,406.80990762520327L356.87756292261975,406.87753918278423L357.1183459380004,407.1333638237062L357.2358010510261,407.2098174002053L357.4178565098912,407.23922262596665L357.57054816644677,407.2156984343908L357.73498535354815,407.20099580200224L357.9082316524782,407.2156984343908L358.0609233090338,407.28627108927674L358.1284600254844,407.4744652728226L358.18718758199725,407.6979467593912L358.3897976832368,407.8185095181303L358.5542348703384,407.6920656704971L358.5424893397924,407.518573366843L358.58066225393054,407.35978436546833L358.78327235517304,407.23334158911666L359.20611078130946,407.0716129513296L359.39110261078326,406.92164681795754L359.611330983789,406.55408457391843L359.73759525675246,406.424703282634L360.1310699286885,406.2570961807427L360.321934499382,406.18946542755816L360.51573544068424,406.21298915577853L360.5744629971971,406.4070604019363L360.60382679950953,406.6334777836665L360.7359638136902,406.97457595244134L360.709536381989,407.1627690061761L360.79469137020305,407.2774495262564L361.014919743209,407.25980635653957L361.12062932568847,407.38918967620964L361.18816604213634,407.5773842333366L361.3526032292407,407.5273950190567L361.5464041705427,407.4127139946178L361.75782338361114,407.5803248193644L361.83416921188746,407.7361739498564L361.9780517566169,407.92731032599625L362.15129805554466,408.1801995300199L362.1806618578569,408.39192173126196L362.31573524264604,408.44779300474727L362.47723601102985,408.38015934787035L362.56532736985537,408.2654764311833L362.6240549263682,408.1302097328462L362.70920991458206,408.0155273719233L362.8912653253378,408.0478736197017L363.05570251243967,408.2566547011686L363.30529463964876,408.30370404172197L363.46092271492194,408.27135758536735L363.7017057303026,408.20666478171404L363.88376114105836,408.2419517729818L364.0276436857853,408.36251580190566L364.24787205879124,408.4330900220195L364.41230919778354,408.4066247022341L364.6149192990233,408.3948623154849L364.82633851209175,408.47719893461533L364.29779045536634,410.4709621704959L364.24787205879124,410.63564227633606L364.1421624282025,411.07381154545766L363.96891612927243,411.6913720229806L363.74868775626624,412.55302858011373L362.81491949706174,416.07038875535943L361.3144303150998,421.78516975195856L361.09420194209406,422.544054762819L360.87103719847914,423.43826051531437L360.45700788417116,425.01492822013836L360.2455886711032,425.7915155776292L360.12226076875095,426.1239225167682L360.0341694099254,426.6240082274914L359.5907763414141,428.31551521489143L359.5437942673384,428.45672214138716L359.43808468485895,428.87151995926627L359.29420214013203,429.56874188593076L359.20611078130946,429.9158859165525L359.1591287553431,430.0659235830494L358.85080902351183,431.24270701771667L357.7819674276268,435.3734638505823L357.582293696993,436.0678457998878L357.3209560392402,437.02705270370586L357.21524640865164,437.3830827739695L356.99501808375476,438.19813788460004L356.79240798251476,438.13046121890864L356.64852543778807,438.0539573157753L356.10823185051663,437.7361733127676L355.8292759691069,437.56257009522767L355.44461040899955,437.35365866902816L355.1362907252801,437.16240262124757L352.7607607925172,435.7883263035871L352.5963236535247,436.05313419244163L352.14412142507854,436.82402859903607L351.3072536365221,438.2069652584996L351.19273489410466,438.4070534181752L350.93139723635227,438.7866349549088L352.96337089375675,439.9724812226215L353.55064650699524,440.32853581766466L353.8853936224182,440.54040441955897L355.16565447948324,441.31726512475063L355.95554019396104,441.84695105571154L355.83808508093534,442.0882546488833L355.2537458383058,443.44487751113206L354.97478990878676,444.07170513669763L354.8955077099022,444.2335635466744L354.8279709934516,444.40425135696853L354.5313968402784,445.07818057770197L353.944121178931,446.38486959187145L353.80904779413936,446.71743443078367L353.6446106070375,447.0706036365169L353.5212827527946,447.373742958755L353.18359926676294,448.1154137641148L352.9428162513823,448.6657893106155L352.84591578073105,448.86298448847936L352.58751449358715,449.4722354705158L352.27919480986793,450.1462484184266L351.8857201379317,451.0527990477908L351.6831100366917,451.4972517763453L350.7875146916251,451.81514155912794L349.5865360334478,452.2213377655654L348.55586735169845,452.5922161356941L348.3444480905209,452.6746340594509L347.8628821078714,452.82769631040435L347.3725069652844,453.016081438494L346.3124744331162,453.3781366142095L345.54314336101015,453.6901543354646L342.8974667067755,454.6350531894872L342.0312351159091,454.9559118632932L338.4048081283938,456.2629229996079L334.61394400188306,457.6111922258584L333.5656570002611,457.99389726359436L332.64950701281964,458.31183973825887L331.86255766895033,458.60034534508054L327.9248746271014,459.99580109281015L327.5989366235094,460.09589906332565L326.25113909810307,459.15675518031577L326.06027452740955,459.0360518092011L325.18523382471494,458.4119332654449L324.8269956963111,458.1675877211544L322.3839290952071,456.4366056961428L320.9421674216487,455.4269018345502L309.09681807507764,446.98819723645084L306.9415165153205,445.56965557017816L305.71998321476826,444.7014851407979L303.55293617257166,443.18002360233294L302.49584005912106,442.45609812346294L300.57251235480726,441.0906792876992L295.8273253267171,437.75382792060896L295.654079027787,437.3212921864489L295.4896418406852,436.9358388546433L295.33695018413005,436.53567719216977L295.2606043558508,436.1649424570094L295.3839322100964,436.24732765818874L295.4896418406852,436.35325175966204L295.64526986784927,436.3767904679728L295.7803432526414,436.35325175966204L295.7304248560631,436.1973080737518L295.75978861026647,435.80303782133467L295.6834427819874,435.5146932024596L295.5190055948858,435.0556995303561L295.36631393833045,434.6790929681401L295.36631393833045,434.43488888236L295.29877726999166,434.2171659342255L295.2488588253045,433.99944401872966L295.2018767993379,433.69051617547643L295.0961671687494,433.54046628075116L295.01982134047284,433.1609306046479L294.95228462402224,432.9108507026144L294.8084021274044,432.73726669627194L294.8172112392331,432.94321391335995L294.7966565968584,433.1226829570658L294.8084021274044,433.2962685265393L294.7115016086443,433.49927616429517L294.6146011379906,433.39630116218865L294.62341029792833,433.1844675942359L294.5969828662271,432.8078770736422L294.47071864137297,432.6990194636293L294.3180269848174,432.82847178024804L294.1066077236401,432.5283783631585L294.04788016712723,432.30772272497046L294.03907105529856,432.09589437036215L294.0185164129266,431.8752408828585L293.9715343388509,431.65753055573225L293.82765179412127,431.34273502068623L293.61329621044433,431.3015469951331L293.03776607964346,431.1544471729668L292.9320564971638,431.0073478354881L292.7969831123744,430.84848112578095L292.6413550370987,430.7455122242559L292.48866338054336,430.73668635422536L292.3066079216785,430.7072667036306L292.1039978685478,430.6925568855811L291.91019687913354,430.6543114102012L291.71933230844,430.64842750864386L291.46974018123365,430.54840105941776L291.3258576365042,430.4366070370593L291.228957165853,430.3071616726811L291.09388378106405,430.051213975362L290.8912736798213,429.9305954799572L290.70921822095625,429.8982344564614L290.59469947853904,429.76879064348987L290.50660816782556,429.58933509794497L290.36272562309614,429.49813663149587L290.18067016423106,429.5304973674162L290.025042137067,429.49225288135074L289.813622923999,429.57462564605885L289.64918573689715,429.6717080401332L289.517048722714,429.83057063044635L289.1588105943099,430.0129690468285L289.0354826919554,430.124762013764L288.84168175065315,430.1688909235329L288.66843545172287,430.1777166817708L288.4863799928578,430.23949718261304L288.3307519656912,430.3512907135769L288.119332752623,430.36894235173304L287.91965902199195,430.4572006467291L287.6876851665513,430.4748523265798L287.43809299123336,430.41307150161686L287.2266737781649,430.3277552229097L287.1004095052042,430.13947164553474L287.15913710982636,429.89235065403585L287.2531012098689,429.7099526785315L287.2531012098689,429.49813663149587L287.41753834886117,429.3863452208428L287.50562970768397,429.25690287838177L287.59959380772625,429.09804235743275L287.76403099482786,428.9538915916015L287.86974057730754,428.75090457021315L288.0723506785471,428.66264966513484L288.14869650682635,428.52438390926045L288.119332752623,428.32728245805123L288.10171448085975,427.92131493272285L288.01362312203423,427.6477302053461L287.85212230554407,427.56536089393177L287.75522183489034,427.3917975487159L287.5438026218219,427.4447490200322L287.3500016805199,427.46239952412554L287.0534274792376,427.3388461388191L286.88018118030755,427.3182539484782L286.70693488137726,427.2858947903279L286.571861448479,427.3564966019623L286.23417796244735,427.40944803232844L286.17545040593427,427.02408077950986L286.17545040593427,426.36513967251676L287.7933947490312,424.53839243735774L288.3043245820993,424.0500953925663L288.9297731094757,423.4970904352473L289.96925095116285,422.4116902250638L290.77675493740685,422.3175645570393L290.98817415047506,422.04695427921865L290.98817415047506,421.45867649776255L291.0175379527848,420.70569158772537L291.2172116834158,420.73216349134213L291.3258576365042,420.870406028059L291.46974018123365,420.870406028059L291.62243183778924,420.8851126635569L291.79567813671633,420.86158200075397L291.9013877673051,420.6968675910009L292.13336162274845,420.53803641175693L292.24788036516543,420.4086187825127L292.29779880984984,420.18508007337834L292.25668952510296,420.0086029078762L292.0834432261729,418.85269346568475L292.02765204026855,418.5232790453309L291.77805986495287,416.7468329652197L291.4873584529971,414.85575364904594L291.4491855388592,414.3704961761533L291.35228506820795,413.6911437203273L294.16239890954444,413.6176212795557L294.67332869450365,413.5852714766576L294.96109378396,413.57644877175017L295.8361344385428,413.5117491923239L296.14445417037405,413.49704473885197L296.32650958113004,413.5852714766576L296.4527738540935,413.48234028972206L296.5672925965107,413.4058772820472L296.7787118095787,413.3588232040489L296.97251279899,413.3823502374936L297.11639529560784,413.3823502374936L297.3101962850217,413.5029265004456L297.4540787816395,413.6529120414183L297.6361342405073,413.70878912421404L297.7917622676714,413.8264252780564L297.9532630841643,413.979352752295L298.04135444298663,414.1381624863153L298.1852369877165,414.2499178070549L298.4348291149229,414.23521313504943L298.63743916805356,414.15286712953275L298.9163950975724,414.01758468241087L299.08083228467376,413.86465713860565L299.1072596682659,413.6705574317402L299.09845055643723,413.53233541521024L299.1747963847165,413.4117590328766L299.1366234705754,413.15002116634264L299.1366234705754,412.12955045439253L299.14836900112164,411.8031218710055L299.14836900112164,411.47963616612293L299.1366234705754,411.1179227887527L299.14836900112164,410.7915007009862L299.14836900112164,409.44172368999796L299.26288774353884,409.0800247574372L299.71508997198794,409.07120288765844L299.9470638274281,408.98886526865897L300.15848304049655,407.2304010709422L300.1849104722003,406.9275278195335L300.40807521581473,405.26322651178475L300.4668027723278,404.92213948817977L300.59893978650825,403.8577269080552L300.678221985396,403.1491104405629L300.77218608543853,402.42580212165046L301.0893149290953,399.74729350157367L302.2168841296052,398.91524795504546L302.4077487002987,398.0038344142342L302.5428220850879,397.3217540434333L302.60154964160074,396.98365697614156L302.7072592721895,396.51032453106404L302.7542412981561,396.2457304970368L302.81296890277804,395.9811377105474L302.8423326569814,395.79886343534577L302.92748764519524,395.4225570516703L303.1594615006384,394.214277655798L303.6880095573638,394.4406443354594L304.1108480316095,394.64349317630564L304.9389066602255,395.0139146649651L308.239395644149,393.2206267303227L309.7134574906281,392.45923133713484L310.95260906294357,391.7948559138508L311.07887328779816,391.68020783027544L311.2609287466655,391.62141398461586L311.4429842055306,391.54498213199804L311.5986122326947,391.44503294900676L311.7806676915625,391.3009888020056L311.83939524807533,391.09227243317116L312.08017826345326,390.9629274438932L312.2915974765215,390.75421228403104L312.44428913307684,390.69835905505875L312.8583184473878,390.71599691361445L313.069737660456,390.71305727818077L313.22536573572916,390.74539337240833L313.4162303064227,390.7365744139554L313.58947660535273,390.6307473533214L313.7157408783162,390.53373936239984L313.7421682619083,390.34560309589176L313.7920867065925,390.1545278252551L313.8390687325591,390.0046076559729L313.9066054490097,389.8693858324749L313.98295127728625,390.466127802557L314.24428893504137,390.5190411842991L314.35880767745584,390.6013509521133Z\" stroke=\"#000\" fill=\"#FFF\" strokeWidth=\"0.5\"></path>\r\n        <path id=\"Garissa\" ref={(item) => countyRefs.current[6] = item} d=\"M383.69864167335277,227.70769178566334L383.780659337079,227.88015149498074L383.90692361004244,228.00348812829915L384.0508061066603,228.12095149558985L384.2446070960714,228.24428800117664L384.3767441102548,228.4292925654856L384.4354716667676,228.61136046229257L384.5705450515568,228.65834572337462L384.6968093245205,228.73469671065973L384.8583100929045,228.80223792226747L385.01393816817745,228.96668609114167L385.2928940495872,229.1986752465689L385.5043133107645,229.6685260513694L385.5512953367311,229.85352956480665L385.6951778814582,230.18829746954958L385.7157325238327,230.35274470359414L385.75390543797107,230.48782626029424L386.1591256404531,231.07513656317542L386.21491682635474,231.2572025011409L386.33237198748975,231.4010932848113L386.47625443599827,231.51561844119254L386.64950078303764,231.7387955846957L386.7346557231424,231.86213028455225L386.7933832796555,232.03538603476102L386.92845666444737,232.229197462444L386.99599338089774,232.38189724376772L387.1310667656869,232.50816812141983L387.26614015047903,232.65205817504545L387.36010425052154,232.80475771652215L387.4188318551435,232.96920329921778L387.6008872658995,233.08666434854828L387.74476981062617,233.2011888305101L387.85047944121766,233.31571326493685L387.9473799118689,233.53888896484085L388.08245329665783,233.70039759893112L388.2351449532134,233.8178583391429L388.3702183380053,233.9500016254836L388.5346555251069,234.12325605467913L388.70790182403425,234.33468509514643L388.74607473817537,234.469764646403L388.8048022946882,234.57547901079047L388.9692394817898,234.5960346266183L389.0837582242041,234.73111405611087L389.18065869485804,234.88381247061125L389.23644988075966,235.0100822719178L389.3127957090385,235.14516151098485L389.4302508701735,235.2978597114189L389.4684237843119,235.4711133406098L389.57413336679133,235.60619237122646L389.67984299737986,235.68254136390553L389.8530892963099,235.68254136390553L390.01752648341176,235.7794458232331L390.15259986820115,235.9233342336664L390.27592777055565,235.97325469757186L390.39044651297286,236.03785759635616L390.5842474542751,236.1053970175826L390.73693911083046,236.20230134317515L390.8837580261686,236.2228567993614L390.9777221262111,236.3285705937589L391.05700432509616,236.49007765423352L391.2566780557272,236.60753733911662L391.4592881569697,236.78079023064657L391.56499773944915,236.96285246723912L391.76760784068915,237.0509470915975L391.9790270537576,237.21245383212707L392.143464240859,237.27118352277918L392.3079014279606,237.318167248384L392.5075751104828,237.34753210951328L392.6632031857557,237.46205495598517L392.80708568237355,237.55014944442303L392.98914114124136,237.56776833926338L393.3180154673355,237.5295940739272L393.54705300027626,237.5795142365586L393.79664512748536,237.6088790741788L393.961082314587,237.70284646958038L394.14313772534274,237.76157607208995L394.35749335712876,237.71459236205214L394.5571670396507,237.70284646958038L394.69224047255193,237.80855972734184L394.8948505256826,237.82911512854122L395.09746062692216,237.82911512854122L395.28832519761863,237.90546358547923L395.4233986305171,238.11688998666367L395.56728112713495,238.24315848896953L395.73171831423633,238.34887157597413L395.8873463414029,238.3958551970378L396.154556740373,238.6572013417966L396.3395485698493,238.74235900433524L396.51279486877934,238.74235900433524L396.6449319310693,238.69537547893827L396.7917507982984,238.5984718473572L396.9238878124786,238.5514883023032L397.13824344426484,238.53974239097712L397.29974421264865,238.60728129140833L397.472990559688,238.60728129140833L397.63742769868054,238.56029769945084L397.78131024340723,238.5691071444796L397.9075745163707,238.67482017854923L398.1072481988929,238.78053313205422L398.20414866954366,238.9655307832015L398.35977674481705,239.03306960054064L398.9176885557456,239.54107840237978L399.2142627570279,239.781868410551L399.8778842466543,240.2840032541598L400.32127731516266,240.56296676177084L400.73530662947064,240.80375615195982L401.38130984733357,241.12089315986125L401.61034733216525,241.21485962887505L402.1594500312651,241.41747471302753L402.35325097256737,241.46739438116737L402.51475178906026,241.52318692698356L402.6586343337874,241.56136076704888L403.0344907339572,241.64945424860514L403.38979244364305,241.70818320943272L403.6305754590237,241.72580190080427L404.4586340876401,241.7346112221452L404.6994171030208,241.77278504193052L404.96075476077317,241.8315140327557L405.18098313377936,241.91960740668787L405.39240234684735,242.0517474796789L405.54509400340294,242.16039596370976L405.7477041046425,242.28372664944374L406.0090417623953,242.47753189007025L406.17054253077936,242.57149804207546L406.922255331119,243.10299368154463L407.2775570889139,243.37020946859823L407.91475114683954,243.87233982698717L408.39338080698667,244.22764809892567L408.6459093048045,244.4008974742996L408.84558303543554,244.52716394871234L409.1245389649546,244.6798582220614L409.33595817802257,244.7679510681237L409.7118145781926,244.9000902826031L409.88506087711994,244.98818303994202L410.0583071760502,245.10270368703934L410.2021897207769,245.2289699275987L410.3490086361153,245.34349047006071L410.7219286656764,245.68998840127458L411.0977850658462,246.06585026585194L411.79957942149895,246.86455580675633L412.0403624368796,247.17287935938177L412.5424830619038,247.73079765525958L412.7039838783942,247.8952366509933L413.1003949209389,248.25935141170962L413.45569667873406,248.55886493311434L413.73465260825265,248.7702862234528L414.1281272801889,249.03749908646384L414.35129202380335,249.16376448533396L414.67722997928604,249.32820305424633L414.87984008052854,249.44272281658257L415.37021522311284,249.64533454141932L415.9105088103843,249.84794625441853L416.81491326727974,250.28840630268252L417.0938691967983,250.4440354322523L417.2671154957284,250.54974574478527L417.90137318304255,251.03131491400336L418.1715199526236,251.19281671593828L418.4005574374555,251.28090855031772L418.8439505540757,251.37780958584125L419.28734362258706,251.29852692565078L419.5457449097312,251.29852692565078L419.9803288664141,251.32789089972368L420.37380353834715,251.39542795906252L420.5940319113531,251.44534668914122L420.7790237408294,251.52169294800808L420.931715397385,251.6185939549993L421.0961525844864,251.74192252368076L421.30757179755483,251.8681874601742L421.46026345410996,251.9533428372472L421.59533683889936,252.00326153418075L421.89484741079286,252.03262543542635L422.35585879917676,251.8858058230371L422.49974129579437,251.79184123293322L422.6817967546622,251.74192252368076L422.8667885841387,251.72430415783404L423.0782077972069,251.72430415783404L423.31899081258484,251.7624772753515L423.5392191855908,251.83001434740706L423.75063839865925,251.8681874601742L423.9532484998988,251.9151697282686L424.16466771296723,251.93572447576418L424.42600537071985,251.9445336806053L424.5698878673402,251.9151697282686L425.10724508400017,251.90636057123646L425.25112762873005,251.89755136600613L425.41556476772234,251.8769966175943L425.5506382006208,251.83882350522376L425.71507533961335,251.74192252368076L425.97347662675725,251.5305021571726L426.0997408997209,251.41598276743062L426.24362344444785,251.37780958584125L426.3875059410652,251.39542795906252L426.52257932585735,251.5011381904029L426.67527098241294,251.58923003946768L426.8397081695143,251.47177422258753L426.93660864016533,251.28090855031772L426.9835907142415,251.14583435859427L427.0129544684444,251.01076014383182L427.10985498720447,250.8198943604378L427.31246504033516,250.68482008874105L427.4651567449996,250.5203817893021L427.5503116851046,250.27959707935247L427.7353035145809,250.0975402863307L427.9261680852744,249.9918299079249L428.11115991475094,249.93310190240865L428.3490065595229,249.93310190240865L428.5428075008251,250.0094483134359L428.7248629596929,250.0975402863307L428.86874545631076,250.19444152093604L429.01556437164595,250.2502330649639L429.19761983051376,250.28840630268252L429.31213857292823,250.3676890673056L429.46776660009505,250.45284460549485L429.6498220589601,250.49101778454784L429.9375871003074,250.48220861176253L430.14019720154715,250.38530746362014L430.4485168852666,250.46165382674138L430.60120854182173,250.49101778454784L430.7568366170947,250.35594345348943L430.8919100018868,250.1738866796992L431.10332921495524,249.9918299079249L431.3529213421616,250.00063908668184L431.5643406033389,249.96246588172173L431.66124107399014,249.80977304114614L431.8051235706107,249.6923169945347L432.016542831788,249.68350776377483L432.2191528849187,249.72168098400613L432.65960963092766,249.66295295570174L432.8739652146073,249.67469858100858L433.0472115616467,249.67469858100858L433.1999032181991,249.70406257122949L433.420131543096,249.7304902142807L433.6726600890229,249.62477973220464L433.82535174557825,249.4897052355878L434.0661347609562,249.29883904769878L434.40381824698807,249.0492447227785L434.5565099035432,248.9611525655071L434.91181166133833,248.71155811040163L435.1614037885447,248.49132760152457L435.25830425919867,248.3650620688177L435.2876680615084,248.2006232021486L435.26711341913347,248.01856587978963L435.2964771733368,247.84531771022884L435.4227414463003,247.70143357323423L435.60479690516536,247.62508688567505L435.81621611823334,247.4988211694896L436.2596091867447,246.72948069362812L436.3065912608206,246.58559627083042L436.39468261964316,246.40353842841205L436.47102844792244,246.08346878701096L436.63546558691473,245.71054334965132L436.749984377441,245.54610369101326L436.932039788197,245.40221898746154L437.07885870353516,245.34349047006071L437.22274124826185,245.30531695887083L437.5486792037475,245.26714344471944L437.7131163908491,245.2289699275987L437.836444245092,245.16143218515654L437.9333447638553,245.04691160003688L438.0096905921314,244.9294545208069L438.1271457051571,244.78556963537687L438.2211098051996,244.6504939684707L438.3473740781633,244.52716394871234L438.57934793360346,244.3333596143816L438.76140339247127,244.20709308723409L439.44557947636054,243.8811491517962L439.64525320699136,243.8048018888986L439.84786326012204,243.74607317188614L440.0710280037367,243.69909025045365L440.7346494933631,243.525840606599L441.2250246359504,243.411319615841L441.7623818045013,243.25568843713896L442.176411118812,243.17934106607927L442.3408483059136,243.15878600604054L442.8987601649485,243.04426491870743L443.11017937801694,242.98553614783722L443.66809123705434,242.77411249615537L445.0158887624582,242.03412880255945L445.5444368672952,241.54374206839177L445.89973857698124,241.1972409146583L446.50756888070055,240.56296676177084L446.78652481021936,240.36916057777543L447.3150728669448,240.08138751764133L447.7085475388808,239.94631031405405L447.8817938378079,239.87877171760942L448.07559477911286,239.76424967715306L448.4690694510464,239.4647303079316L448.633506638148,239.36782688935966L448.83611673939026,239.28266937913725L449.15324558304724,239.19457534001904L449.5085472927335,239.05949780266894L449.9901133234921,238.69537547893827L450.1339958682188,238.5691071444796L450.16335962242215,246.27727243229458L450.16335962242215,300.73974752560724L455.7160506848629,308.2343305231934L461.04557695558265,315.54423607488656L477.4423124370485,337.57047126188985L477.52746737715347,337.6703469838803L477.56564029129436,337.7819728763267L477.5568311794657,340.60791294605156L476.14149693760874,340.7195422233994L473.93040419194745,340.9251754435897L466.75976878640995,341.55676594777424L462.2113190702305,341.94453527602843L458.3617273872096,342.2588646211152L454.19500681241993,342.62901076734465L451.355529168771,342.9080902190931L445.35357224848985,343.43687462937487L444.0909296631912,344.04498050195366L443.37151703576933,344.3475660715258L442.6667862613963,344.7617867906493L440.71409485098843,345.69011812735044L437.74248014504974,347.14432749923793L435.78685231592385,348.0256781735047L431.59370435754226,350.0704461948104L427.2537374838223,352.2063412002188L426.45504265751583,352.605909443223L425.85895788434004,352.8468265379313L423.69191084214617,353.78699751954554L421.7891377802043,354.5567705651194L418.85275966590416,355.92298887587066L416.80316773673326,356.8661338234441L416.3509655082871,357.107063578505L414.88864919235425,357.7857844438848L412.859611905561,358.74951934909797L412.5894651359797,358.7583340302508L412.4074096771119,358.1618747016411L412.3105092064609,357.89743605337827L412.22535426635613,357.7182058977302L412.0902808334549,357.4890269892819L411.9933803628039,357.333303248129L411.8788616203867,357.1717034315842L411.8289431757023,357.0247948037045L411.8788616203867,356.78386525136654L411.8964798921527,356.5781942673523L411.90528905209044,356.4136579027008L411.88767078032424,356.26675068095295L411.67625151914694,355.8260306413637L411.482450577842,355.49989941352055L411.4149138613941,355.3706225246991L411.3679318354275,355.22077912390375L411.3473771930526,355.05330741513376L411.3473771930526,354.90934082124636L411.4530867755325,354.5185755490569L411.4912597377797,354.2776535360442L411.4912597377797,354.06023670993994L411.5118143801544,353.71060822791105L411.5030052202169,353.50788312747954L411.46483230607873,353.3727333552869L411.46483230607873,353.23170770987576L411.4149138613941,352.77925214296613L411.38555010719097,352.42375307309806L411.38555010719097,351.9272321547564L411.42665939194035,351.5394190242631L411.46483230607873,351.048779255326L411.46483230607873,350.8607504004699L411.4354685518781,350.6521563845528L411.3679318354275,350.4229973587675L411.3003951189769,350.24965953669516L411.1858763765597,350.0469428487172L411.08016679408024,349.89710909165944L410.96271163294523,349.7032069903537L410.81001997638987,349.521056903253L410.53106404687105,349.2272672626672L410.40479982201964,349.03924243178363L410.3196448338026,348.8482801408077L410.2315534749803,348.54567921451286L410.2021897207769,348.3135879719895L410.19338056084234,348.0814973019529L410.2139352513259,347.85528297305757L410.19338056084234,347.5056801895516L410.175762337185,347.3617264797599L410.13465300432904,347.21189737487305L410.10822562073463,347.015063473224L410.0494980642218,346.72128229645296L410.02013426191183,346.2541722555112L409.9819613477739,345.81056691515386L409.9819613477739,345.65192709272594L410.0289434218496,345.455096648857L410.19338056084234,345.0584992629109L410.2814719196647,344.8675455941501L410.3871815502532,344.67071681696683L410.5398732068088,344.33287741766804L410.57804612094674,344.1595516159863L410.59860076332166,344.00972787303147L410.5868552327754,343.80702554483526L410.53106404687105,343.61019910895254L410.4635273785325,343.47506473105386L410.26091727728976,343.1577936279489L410.10822562073463,342.8757757486742L410.02013426191183,342.63782381514943L410.00251599014587,342.4556881772049L409.97315223594524,342.2588646211152L409.97315223594524,341.96509884032866L409.9819613477739,341.81527865515375L410.04068890428675,341.3100044984182L410.07005270659624,340.87817350202323L410.08767097836244,340.4257812381162L410.0788618184247,340.06445649942196L410.0494980642218,339.5738795526017L409.97315223594524,339.0539294439918L409.92323379126105,338.78367401842956L409.80871504884385,338.3077912694159L409.7118145781926,337.9934748960824L409.5503137616995,337.6292216970197L409.4534132910487,337.45003308481375L409.2977852638819,337.22971967564524L409.09811153325063,336.991781788578L408.836773875498,336.74796944728024L408.63416377425824,336.5834698793175L408.5108359200126,336.4689078526445L408.40512628942383,336.3484709579218L408.143788631671,335.97834884109545L407.99109697511585,335.68460205059876L407.8736418620897,335.4290430793973L407.7503139597379,335.03542472234454L407.6915864032251,334.8092417285168L407.57706766080764,334.33631521608356L407.5477039066045,334.18650666033295L407.4889763500944,333.6871464038041L407.4508034359533,333.45215413427417L407.39501225005165,333.2788477023595L407.336284645427,333.1584146002658L407.0661378758459,332.8118029447746L406.81654574863956,332.4211319191849L406.65210856153794,332.045149097504L406.6051265355711,331.8953438103794L406.5375898191205,331.5311121967278L406.5170351767488,331.32256080287885L406.5170351767488,331.13163382807073L406.49941690498235,330.83202600998965L406.47005310267286,330.6880970435473L406.4406893484695,330.453111436527L406.35553436025543,330.0830100789724L406.2968068037426,329.7834051429449L406.0853875906744,328.92277979921175L405.97086884825717,328.420506691568L405.815240772984,327.8095575680834L405.64199447405394,327.0106291200991L405.5744578057124,326.7433417586829L405.52747573163674,326.5054272218496L405.43057526098573,326.0912808087039L405.3718477044729,325.76525165894805L405.3542294327094,325.53908785176174L405.3160565185683,325.2894270244356L405.24851980212065,325.06326413305635L405.18098313377936,324.9222797157702L404.825681375984,324.3172233507379L404.77576293129687,324.1762398175477L404.7375900171587,323.70923295964815L404.7875084618431,323.3156562600888L404.825681375984,323.0983085093815L404.88147256188586,322.8721497482086L404.9402001183987,322.6577398502807L405.06646439136193,322.2906005576661L405.11344641732876,322.04094641069264L405.1516193314667,321.56807353459374L405.1516193314667,321.31842088514804L405.11344641732876,320.9336630217331L404.96956387260184,320.71631944540064L404.83449048780994,320.3814935331833L404.58489836060335,319.53268443649426L404.37347914753514,318.9863950279794L404.3235607028507,318.77199171679314L404.25602403450944,318.5810849873241L404.17086904629537,318.4224857763312L404.08277768747007,318.28738288644405L403.55422963074466,317.5883743968686L403.2752737012288,317.23887157367386L403.13139120460824,317.04209303152896L402.89941730105875,316.6955286009052L402.7760894468131,316.39595664909973L402.67037981622434,316.0963853545534L402.62046137154016,315.8907975887613L402.4295968008464,315.35627085925864L402.39142388670575,315.2211710264389L402.2651596618539,314.9098544761779L402.2181775877782,314.76007035324795L401.88049410174654,314.1579985299213L401.79240274292124,313.9465397754215L401.6984386428787,313.749765901134L401.49582858974804,313.4120203704729L401.33139140264643,313.09483397883565L400.96728053302286,312.4634002063736L400.8615709024343,312.2578176925714L400.5826149729153,311.68512503702095L400.4475415881259,311.4354904911417L400.32127731516266,311.0889396949015L400.1862039303735,310.7658845259121L399.95716644553886,310.37234561331275L399.8896297290885,310.19026075165175L399.81034753020367,310.01111294540027L399.6870196278487,309.808470658764L399.56075540299435,309.67924959900614L399.4638549323431,309.54415493688657L399.2524356711658,309.15355596176767L399.2524356711658,308.9391674150707L399.3199723876164,308.62492727145616L399.4080637464417,308.29894042280864L399.44623666057987,307.9142181201173L399.4374275006421,307.6968944440738L399.4080637464417,307.5089390859645L399.38750905595793,307.2974895799648L399.34052702999134,307.08016672859804L399.2436265593374,306.85990743172874L399.1379169287486,306.65139554045925L399.0116526557879,306.4693149299014L398.8971339133707,306.25199316884715L398.8119789732659,306.0464188072757L398.7150785026122,305.70869004887584L398.6475417861643,305.3621516992018L398.5800050697137,305.16538872378084L398.52127751320086,305.02736105264285L398.40675877078365,304.79535741437576L398.1953395577152,304.46350461080004L398.069075284752,304.31960407355575L397.8194831575456,304.11696876942494L397.751946441095,303.91433369967945L397.7225826868944,303.68820499743083L397.751946441095,303.52962137659716L397.8400377999201,303.2594422644564L397.8400377999201,303.06268165591024L397.7901193552357,302.9187822099117L397.751946441095,302.73964224185573L397.71377352695663,302.2638944081338L397.751946441095,302.04657792899434L397.751946441095,301.90855268227017L397.73432816933155,301.5855153565592L397.6168730563056,300.9511891152053L397.5023543138884,300.72506407927847L397.39664473140874,300.5606097117667L397.21458927254366,300.34035848675074L397.09713415951796,300.17590440174223L396.95325161478854,299.82350327662886L396.77119615592346,299.0834630293691L396.6948503276444,298.8867067338362L396.5773952146185,298.65177415269727L396.4041489156914,298.36691874560495L396.21328434499765,298.1026202697242L396.069401800268,297.85594200536644L395.87560085896575,297.62982052017344L395.77870034020293,297.3802061456015L395.82861878489007,297.12178224031504L395.9930559719919,296.76938645944006L396.03122888612984,296.61668181548004L396.04884715789353,296.4140546508407L396.0194833555836,296.1967445627469L395.972501329617,296.0293572244605L395.8873463414029,295.86490667338046L395.7610820684397,295.69751959245065L395.61719957182186,295.5389424540031L395.54966290348057,295.3451262040149L395.5408537435428,295.0808314619567L395.5408537435428,294.56986261650104L395.49974445879616,294.33493477461514L395.45276238472,294.1381829375546L395.38522566826987,293.98841670925515L395.27070692585266,293.81515787393374L395.1062697868599,293.6418991211612L394.9418325997585,293.36292353726503L394.8478684997158,293.18085540029733L394.8185046974063,293.039899508107L394.80969558557786,292.866641379713L394.8185046974063,292.6757639234611L394.78914094320294,292.4525843077744L394.7127951149266,292.21765865145306L394.5013758537493,291.87701677844257L394.11671034175083,291.4101033567618L393.9904460687876,291.3278796638306L393.86418184393574,291.2016076976936L393.7878359675476,291.048906716833L393.74085394158124,290.8815231459318L393.7202992992063,290.6495354813851L393.7496630534097,290.4469135344161L393.7878359675476,290.2883399780878L393.79664512748536,290.1297665195364L393.77902685571917,289.8126198455647L393.7496630534097,289.6716658706332L393.67331722513063,289.4807908568481L393.58522591441715,289.30753519813675L393.4119795673778,289.07554893858736L393.2123058848556,288.8406264046398L392.98914114124136,288.68205376640475L392.7483581258607,288.5528465640825L392.4224201703778,288.36490886302073L392.2198100691355,288.2386382787594L392.04656377020774,288.14173300370095L391.4592881569697,287.77760433474333L391.05700432509616,287.4164126937582L390.9101854097605,287.30482511895104L390.719320839067,287.175618505223L390.2083910541053,286.9876817248741L389.8618984562477,287.01117385181146L389.67103383744256,287.04053894099786L389.52715134082473,287.0787135950817L389.2863683254468,287.0933961667941L389.18065869485804,286.94069757294034L389.22764076893395,286.5413323949908L389.18946785479284,286.41212612033496L389.13074029828,286.27117386753036L389.05439447000344,286.1419677104789L388.92813019704045,285.99807913951696L388.7842476523133,285.86593660748986L388.4201367826897,285.6398261853742L388.31442715210096,285.51062029832184L388.21752668144995,285.3344305181182L388.1499899649996,285.1406219240239L388.01491658020745,284.98792432299683L387.6008872658995,284.5826887042872L384.7232367081124,284.5591968134948L384.6586364103823,284.38888057268485L384.64689087983606,284.21269146797886L384.67625468214555,283.980709237588L384.685063793974,283.7780920463632L384.6380817680076,283.6195221010239L384.71442759628394,283.278890686053L384.80251890700015,283.15262221624613L384.93759233990113,283.01754439386644L384.87886473527624,282.90008546555896L384.74379135048684,282.8178642012075L384.5617359397311,282.6475488527422L384.4560263091398,282.4860430218309L384.39729875262674,281.5904209422446L384.4061078644554,276.2167314723892L384.17707037962373,275.9524533498773L383.9920785501474,275.7880136860257L383.7336772630033,275.6000827209048L383.47233965335977,275.4415160438906L383.27266592272827,275.2741401330735L383.1082287356269,275.1038278653651L382.9819644626634,274.92764283345826L382.5415077647608,274.06140050502665L382.33008855169237,273.77656853126643L382.0599417340022,273.5211008619715L381.8955045950097,273.3772167882069L381.6371033078656,273.18047744121384L381.4814752807017,273.05127549570443L381.2700560195244,272.94850121941926L381.134982634735,272.89564588807195L380.81785379107805,272.81049012593763L380.644607492148,272.72239792885705L380.4801703050464,272.5990689215941L380.3744607225667,272.4111390100867L380.1160594354226,271.8767135906963L379.8928946918081,271.4391898318137L379.7020301211146,271.21308705054264L379.54933846455924,271.0692034817448L379.4025195492211,270.9634931648424L379.241018732728,270.85778281486404L379.06777243380066,270.7696908679229L378.8064347760453,270.59644344215263L378.6713613912559,270.4290688327804L378.5568426488387,270.34684975979934L378.1809862486689,269.9269452646125L378.0371037039422,269.7948074791509L377.922584961525,269.66854258270854L377.69061110608163,269.45712228692776L377.44101897887526,269.24863837889933L377.19142680356003,269.0959460081037L376.99762586225506,268.996108713731L376.81557040339,268.86397111647113L376.621769462085,268.7024696126429L376.21948567832305,268.32661171771673L376.0168755770835,268.18566506790864L375.81426547584374,268.0564639612943L375.6498282887421,267.98011786697174L375.2563536168059,267.86853511630625L375.03612529190923,267.8391712162426L374.66907800356785,267.8362348359028L374.09354792087584,267.8538531661748L373.87919228909004,267.79806179599643L373.67951855845877,267.66592435686647L373.4387355911872,267.40752228441545L373.0628791910174,267.0228557112084L372.88963284398073,266.88190917926926L372.7163865450507,266.7761993389802L372.3317210330522,266.63818926032945L372.1203018199842,266.5500977029275L371.9852283870857,266.5031155253743L371.84134589046516,266.44145146497374L371.69746334573847,266.36216909892113L370.92813227363513,265.81012894241474L370.77250424646854,265.6838645093555L370.56108503340283,265.4959360185082L370.42601160050185,265.3902262341342L370.3026837462562,265.3109439244021L370.12943744732866,265.2169796978793L369.9826185319905,265.16999756252056L369.8211177154976,265.1376973963236L369.63612588602405,265.11126993121115L369.2896332881637,265.07896976610857L368.9255224185399,265.1376973963236L368.7141031573626,265.1905522315473L368.4821293019195,265.2375343674732L368.19436426057496,265.2668982091021L367.9447720852593,265.275707332826L367.7509711439543,265.2991983777579L366.8465666870593,265.33737134451917L366.62633831405356,265.3138802990485L366.4325373727513,265.275707332826L366.22992727151154,265.2169796978793L366.0390627008155,265.1406337706722L365.85700724195044,265.07896976610857L365.40480501350135,264.9673872596708L365.0964853297819,264.97326000779964L364.90268434037057,264.996751048622L364.71181976967455,265.02611488616776L364.47984591423415,265.07309696952086L363.9806616117096,265.19348865409256L363.74868775626624,265.2169796978793L363.49028646912257,265.1905522315473L363.21133053960625,265.10246080833514L362.57413652979267,264.8176318038855L362.36271726861264,264.7618405578077L361.9105150401663,264.6884310234701L361.7460778530649,264.6267669860026L361.57283155413484,264.5504210833586L361.39077614337884,264.43296586161046L360.9679376691331,264.06004553025844L360.72715465375245,263.7752166702925L360.5744629971971,263.57260645434326L360.31312533944447,263.2701593687337L360.12226076875095,263.0235035181308L359.611330983789,262.4039275720548L359.40872088254946,262.1249715998304L359.26483833782254,261.9076796222408L359.15031959540534,261.7050695058314L359.0064370987875,261.54650509987374L358.8214452693112,261.3732587469197L358.63058069861745,261.25286726068566L358.44852523974987,261.16771227123377L358.1578238277966,261.07081179966656L357.89942254064977,261.02382977340966L357.72617624172244,261.00033876031273L357.56173905462083,261.00033876031273L357.35912895337833,261.01795698405294L357.1565188521388,261.0620026877768L356.93629052724464,261.06493905840813L356.76304418020527,261.1001756022078L356.5428158553084,261.07668458903817L356.34020575406885,261.0032751309348L356.18457772690476,260.96510221664784L355.9937131080994,260.9416111554857L355.6002384361659,260.93280204363487L355.3300916665851,260.9592294273027L354.93368062404033,260.9797840697451L354.7428160533466,261.00914787218164L354.463860123828,261.07081179966656L354.25244091075956,261.1001756022078L354.0292761671451,261.15303041801815L353.8472207082773,261.20588518587317L353.4038276397687,261.3057220769864L352.93400713955657,261.4613501083951L352.672669481801,261.53182319810145L352.4230773064853,261.7491151640063L352.1147576227661,261.9575980234816L351.79762877910935,262.23068124478004L351.5862095660409,262.4479732837453L351.46288166368595,262.63002873325354L351.2778898342124,262.9324757587288L350.8756060504479,262.8943028327366L350.27658490666363,262.7827204286279L349.9888198653189,262.7885932195694L349.7862097640791,262.82676614443636L349.48082645096815,262.9324757587288L349.06679713665744,263.1350859300834L348.87299614724634,263.2407956023188L348.6821315765528,263.32301420674037L348.3826210046593,263.3318233705551L348.0361284068015,263.3171414629503L347.8247091937335,263.29365043980357L347.49877119013877,263.15857695201197L347.2286244205577,263.1292131866547L346.9291138486642,263.15857695201197L346.70888547566074,263.2084954162895L346.55325744849415,263.23198643877225L346.3036653212878,263.21730453165935L346.0834369482816,263.1350859300834L345.9395544035549,263.04405816761465L345.72813519048646,262.95303040765634L345.2260145173534,262.77978405721535L345.0234044642227,262.7210564851021L344.6504844346614,262.63002873325354L344.28343714632,262.4039275720548L344.1483637615306,262.35988190889526L343.78425289190704,262.2013174382655L343.5434698765264,262.13084438989915L342.782947916249,262.11616248689916L342.21622694538564,262.2101265994462L342.1574993888728,261.99577094145326L342.175117660639,261.8372065292458L342.089962720534,261.69038760379266L341.9754439300077,261.58467801571925L341.89616173111995,261.41730445162693L341.89616173111995,261.23524898862644L341.9255255334299,261.01795698405294L341.7434700745648,260.79772865869586L341.66712424628554,260.66265527388947L341.696488048598,260.5070271983443L341.73466096273614,260.36314470082306L341.7640247169393,260.142916324303L341.7229154321899,259.8727695450498L341.63776044397605,259.66135027061534L341.36761367439476,258.80392775591525L341.34999540262856,258.6130630851724L341.3118224884904,258.4310076153757L341.3118224884904,258.20784278556243L341.2912678461157,258.0169781280276L341.2912678461157,257.8525408556685L341.25309493197756,257.67929445578153L341.24428582015184,257.5148571616776L341.2912678461157,257.36216539549486L341.2912678461157,257.19772807872386L341.2707132037435,257.0538454583208L341.23254028960287,256.901153611295L341.23254028960287,256.6867978077753L341.34999540262856,256.3138773365538L341.3764228343325,256.12007613416L341.34999540262856,255.8704836369063L341.32063164842793,255.67668233272914L341.3294407602564,255.4652627476938L341.2912678461157,255.14813328750168L341.4057865885329,254.70473923193475L341.4057865885329,254.34062738735457L341.41753211907917,254.1292075852731L341.51149621912145,253.72398614406626L341.7141063203642,253.5507392697666L342.01361684414564,253.21599096154657L342.44526443022005,252.77259614142537L342.56271959135483,252.63752218258486L342.600892505493,252.47308427034505L342.600892505493,252.00326153418075L342.4159006760169,251.29852692565078L342.3219365759742,250.88743146327863L342.16630854881055,250.37649824146237L342.1369447464979,250.20325069719314L341.9930622017712,249.68350776377483L341.94608017580435,249.4339135825852L341.82862506277866,249.05805391379027L341.561414615697,247.95102844012496L341.22373112966784,246.69130728496313L341.147385301389,246.3829835075833L341.0886577448762,246.10402371958884L341.0211210765344,245.9014107220587L340.8185109752949,245.08508513140907L340.72454687525214,244.67104896060846L340.69518307294265,244.5066089502867L340.62764640460136,244.30399529092483L340.4720183293282,243.7372638925344L340.4338454151871,243.53464989014358L340.42503630336137,243.26449777422636L340.32813583270763,243.09124795848413L340.26059911625975,242.8710150142196L340.0609254337378,242.1016670687203L339.7995877759822,241.03279955942008L339.75260570190653,240.81256549411327L339.6938781453937,240.61875943840283L339.52944095829207,239.99329372205594L339.47364977239044,239.81123306052925L339.4442860181871,239.6673463394696L339.4237313758126,239.51171373039244L339.3473855475363,239.27092349248633L339.1154116439841,238.61902720041996L338.9920837897412,238.30188799651648L338.89518331908994,238.09927112098893L338.8482012450113,237.92601893257444L338.74249161442276,237.14491464820952L338.7043187002846,236.97166195481938L338.57805447543046,236.82777402809307L338.3959990165654,236.73086989613643L338.2110071870891,236.73086989613643L338.06712464236193,236.60753733911662L337.86451458923125,236.41372886192175L337.97022417171115,236.30801514457147L338.164025161122,236.29920563844104L338.38425348601913,236.33738005094483L338.5574998330583,236.29920563844104L338.7307461319856,236.3285705937589L338.90399243091565,236.3285705937589L339.07723872984593,236.29039618017106L339.2798488310857,236.2698407284626L339.4619042899535,236.24047576759347L339.66451434308397,236.2698407284626L339.82014241835714,236.37555445877163L340.01100698905066,236.42547484968793L340.1548895337803,236.30801514457147L340.2341717326651,236.1641269140506L340.4074180315954,236.1465079414703L340.62764640460136,236.1934918821532L340.85962026004427,236.1553174038301L340.8302565058409,235.97325469757186L340.8185109752949,235.71190637817048L341.01231191659963,235.56801786766087L341.22373112966784,235.67373188793718L341.3588045625663,235.77063635007505L341.5320508614964,235.82642982010202L341.73466096273614,235.73246186722318L341.9930622017712,235.59738289303604L342.2044814629485,235.5856368736062L342.36891860194123,235.64436686997152L342.45407359015485,235.80881082813704L342.52161030660545,235.9996831468752L342.87984843501204,236.1641269140506L343.02373093162987,236.1465079414703L343.079522117534,235.9996831468752L343.4759331600758,235.84698530142046L343.6286248166314,235.703096854944L343.83123491787364,235.52984335926772L343.9956721049755,235.33603424930945L344.2540733921194,234.81627277488246L344.3979558887372,234.74873311170185L344.6093751499145,234.66357432513655L344.697466460628,234.51968530590926L344.7356393747691,234.37579626334187L344.908885721808,234.27889134373618L345.0234044642227,234.14381165466992L345.0733228607978,233.94119209743053L345.187841603215,233.75031844115756L345.34053330787947,233.5565080939642L345.4756066926716,233.31571326493685L345.6312347198357,233.2011888305101L345.76630810462484,233.0367434351898L345.84265393290366,232.90166314657043L346.02470939176874,232.78713853934084L346.1891465788706,232.67261388385887L346.3800111495666,232.65205817504545L346.51508453435576,232.61388327622407L346.6325396473817,232.50816812141983L346.76467666156236,232.41126255043076L346.97903229335134,232.30554736401214L347.19926061824503,232.17927634262645L347.38131607711284,232.0471322019609L347.5751170184151,231.9678456955491L347.8041545513586,231.9678456955491L348.05668304917367,231.95022646332757L348.2005655939031,232.1146725209461L348.30627517638277,232.19983208765896L348.47952152342214,232.17927634262645L348.62340402003997,232.132291742224L348.7966503189673,232.12348215578777L349.0080695801446,232.17927634262645L349.1901249909031,232.08530718162106L349.33400753563,232.06475142772783L349.527808476935,232.12348215578777L349.66288190983323,232.09411676932632L349.80676440645107,231.9972110479024L350.03873831000305,231.9678456955491L350.2296028806966,231.84451104526187L350.5467317243565,231.7387955846957L350.69061422097434,231.66244551935853L350.80806933400004,231.48918952272652L350.9225881245263,231.27482178017172L351.0576615093157,231.04577110670007L351.1839257341701,230.78441814983074L351.354235710598,230.64052706719747L351.5186728495903,230.64052706719747L351.6625553943172,230.70806780142624L351.80937430965537,230.70806780142624L352.00904799217733,230.6493367522175L352.4230773064853,230.8049740052307L352.5581507393865,230.8343394894424L352.73139703831384,230.84314916772166L352.93400713955657,230.8343394894424L353.1072534384839,230.9018801720402L353.32748181148963,230.89013395301617L353.453746036344,230.8049740052307L353.60643769289936,230.72862366302206L353.8002386823109,230.7168774359813L353.944121178931,230.7168774359813L354.146731280171,230.74624297850343L354.36695965317676,230.8049740052307L354.54901511204184,230.76679883700123L354.7721798075472,230.7756084695131L354.8866985499644,230.58473254863344L354.8866985499644,230.4202854669912L354.85733479576106,230.2763942241493L354.8866985499644,230.12075659520735L354.97478990878676,229.99742110083176L355.2126365535589,229.9856748394468L355.368264580723,229.8799586542723L355.42699213723586,229.74487671851304L355.40643749486117,229.50701496829998L355.368264580723,229.30439177510547L355.465165051374,229.11057815213414L355.5121471254497,228.95787639387743L355.6002384361659,228.85215971269378L355.81165769734343,228.85215971269378L355.9643493538988,228.76406244255344L356.0113313798654,228.6025507518631L356.09061362686225,228.48508757795963L356.19632320933897,228.38818045269286L356.34020575406885,228.35000490606453L356.492897410624,228.26484407109206L356.59860704121274,228.10039541300122L356.62797079541315,227.96531251873586L356.7718533401403,227.88015149498074L356.91573583676086,227.84197586508105L357.1183459380004,227.8977710180494L357.25341932278957,227.99467834689602L357.4354747816574,227.98586861327038L357.7555399959231,228.20611243109698L357.9845774807575,228.18849293140966L358.1578238277966,228.26484407109206L358.3134518549605,228.2942098615047L358.44852523974987,228.24428800117664L358.53368022796667,228.13857100037984L358.66875361275584,228.0827759053235L358.8419999116859,228.1297612240965L358.99469156824125,228.09158563527083L359.02405537055097,227.86840517759805L359.0827829270638,227.74506847221758L359.20611078130946,227.68633670058517L359.3529296966449,227.68633670058517L359.7757681708906,227.60117557378524L359.95782358164956,227.6099853702128L360.2074157569648,227.64816103857473L360.3630437841289,227.74506847221758L360.58327215713484,227.74506847221758L360.74770929612737,227.63935124360924L361.0648381397841,227.6187951181931L361.1705477703731,227.44553624604134L361.17935688220155,227.2840235902987L361.37315787161265,226.91694901463404L361.56402244230617,226.8317875991175L361.8517874836534,226.6291621231809L362.01622467075526,226.57043001376888L362.1806618578569,226.49407830607333L362.3245443544747,226.2826426742392L362.4684268992014,226.24446677403049L362.6504823580692,226.2151007183529L362.8442832993712,225.9449325427744L362.72976455695675,225.84802432982613L362.7591283111574,225.49269381374344L362.82372865699926,225.07863024838736L362.8824562135121,224.8671932356549L362.95880204178843,224.68512228021663L363.10268458651535,224.47368487367783L363.38164051603417,223.94509039702407L363.65178728561546,223.3372050364706L363.757496916204,223.13457622830535L363.9219340551963,222.87615072670917L364.0746257117519,222.66471145438905L364.2772358129919,222.4327152835791L364.526827940201,222.24183218831953L364.63253757078974,222.12436558386287L364.94085725450896,221.72204190925268L365.08473979923565,221.5194114028068L365.1933858004329,221.31678068442613L365.30790454285034,221.1347065183354L365.3460774569885,220.97025233400444L365.40480501350135,220.80579796000578L365.68376094301993,220.2390166629939L365.962716872539,219.9218533160679L366.2886548280246,219.49896799615522L366.72323878470706,219.0937020373578L366.8671213294342,218.9791701874468L367.16369553071627,218.71780234741288L367.3075780273341,218.55628269022762L367.56010657326124,218.3037244419235L367.7216073416448,218.1216473141696L367.9242174428848,217.8632149517395L368.0886546299862,217.7075680270838L368.30888300299216,217.51668009286402L368.5320477466066,217.30523475820084L368.9725044445065,216.76487325171811L369.1663053858115,216.55342700272274L369.36891548705125,216.3596010020096L369.6273167741956,216.20688948508894L370.1088827568449,215.9484542764828L370.4348207604394,215.75462763584306L371.36858901964433,215.09972682260963L371.83253673053014,214.888278492499L372.9953424745695,214.40664513046752L373.31247131822647,214.26274224281053L373.69713683022223,214.12764955203525L373.90855609139953,214.07185037914172L374.09354792087584,213.9837464184517L374.4782134328743,213.8486535442339L374.8423243024979,213.69593967240263L375.3238903332565,213.51092084119887L375.5734824604631,213.44631099929921L376.14313985004674,213.27303910530514L376.5160598314965,213.02047296331935L376.64232410445993,213.24367094627436L376.80676129156154,213.37876437548593L377.2384088776357,213.57846740949026L377.34411846011517,213.66657163874834L377.51736480715454,213.87802154483208L377.8344936508115,214.33028849820363L377.94020323329096,214.52411684372925L378.0282945921135,214.70619774448255L378.0752766180801,214.917646306838L378.10464042039257,215.1085371899248L378.1340042227023,215.47563432413017L378.2309046933533,215.91908664270233L378.3160596334608,216.1481542536067L378.4423239064215,216.42714645937846L378.7594527500787,217.01449696339336L379.0560269513637,217.66058022116457L379.44069246335926,218.53572563956914L379.60512965046087,218.94980301263064L379.9222584941176,219.79557515551966L380.1924052636989,220.576736299291L380.43318827907956,221.337337428083L380.644607492148,222.07737889358992L380.75031712273653,222.50025851082748L380.84721759338754,222.94369380396944L380.89419961935437,223.0787798423392L380.9529272239763,223.29021867955126L381.058636806456,223.4429243719944L381.1643464370445,223.63674296330066L381.26124690769575,223.89516749860866L381.2788651794617,224.1271619486434L381.33759273597457,224.3474096334794L381.4139385642511,224.50305116748095L381.5313936772768,224.61757982319466L381.60773950555586,224.77028453636285L381.6928944937697,224.89655947462157L381.7986041243587,224.9934681642803L381.88669543507467,225.0991866100734L381.99240506566343,225.26070086656694L382.0981146481431,225.47507410075616L382.2126334386694,225.66595420811024L382.3095339093204,225.80984835385897L382.37707057765897,225.9948549591245L382.48278020824796,226.1475586936233L382.6354718648033,226.31200876903225L382.89680952255867,226.5116979369579L382.9937099932097,226.59979607041097L383.0201374249109,226.72606999288578L383.0876740932522,226.8699633984566L383.12584700739035,227.01385675984676L383.22274747804136,227.12838404573526L383.35782086283325,227.32219931315097L383.49289429573173,227.48371194182775L383.6661405946618,227.63935124360924Z\" stroke=\"#000\" fill=\"#FFF\" strokeWidth=\"0.5\"></path>\r\n        <path id=\"Wajir\" ref={(item) => countyRefs.current[7] = item} d=\"M392.0553728820337,82.95618226094487L392.0553728820337,86.81361111421933L392.07592752440837,88.71130550282152L392.06711841257993,90.50594926823632L392.06711841257993,93.4360655637951L392.07592752440837,94.1773902075148L392.06711841257993,96.22185438649868L392.07592752440837,99.82812830150951L392.0847366843461,100.08696929545937L392.1229095984843,100.26050960527016L392.4224201703778,100.35757424556789L393.13302368596806,100.66641501445537L396.51279486877934,102.01352546157776L398.280494545932,102.73706699073784L399.79272925843725,103.33412756508275L401.3607551568498,103.97235661542106L402.8436261151544,104.58704855935034L403.0051269316475,104.63704709927458L403.9976227473653,105.03115131524564L404.00643185919375,105.20467379280697L404.48799788995234,105.46642689435222L406.09419670250304,107.2486636952342L407.07494703578345,108.2897426678646L407.83546894795177,109.12788362345043L408.7398734048468,110.0895228675117L408.89550143201086,110.30125752127171L409.67364166405173,111.12172077159067L410.56042784918327,112.09508478256157L411.30920427891465,112.9625688040193L412.18424493349744,113.95354115917962L412.8390572631861,114.73571955766928L413.71409796587795,115.74724117916918L414.7829396098748,117.01749649295564L415.0442772676299,117.41444501539812L415.22633267838614,117.62614971782702L415.3790243349413,117.82903257544226L420.71148702437904,120.2547461017119L423.4922371115149,121.5572358466662L424.9927263415859,122.25110029307572L426.0997408997209,122.8391141278876L426.10855001154937,123.0213971129127L426.2054504822006,123.23307989886587L426.1672775680622,123.42418167785243L426.2994145822429,123.57118261233501L426.2348142845101,123.78286324826834L426.17608672799724,123.9063432263955L426.1672775680622,124.05040290229692L426.2054504822006,124.26502173164789L426.3669512986935,124.39732057894153L426.3669512986935,124.57077858363556L426.2817963585885,124.73541621344049L426.29060547041445,124.94709242626087L426.3669512986935,125.0735098035091L426.272987198651,125.15876783894629L426.2994145822429,125.29400448850333L426.5020246834829,125.43806058741407L426.59011604230795,125.60269567003448L426.44623349757853,125.7673302228001L426.26124166810496,125.8643468494277L426.1672775680622,125.97900259494463L426.2054504822006,126.15245571221973L426.55194312816707,126.34354751718416L426.5401975976208,126.52875897320845L426.4932155716542,126.71102998138346L426.6077343140714,126.85508241712327L426.7927261435477,126.8639019696524L426.9542269119315,126.93151826880029L427.0599365425203,127.12554731761116L427.283101286135,127.15494556849677L427.4357929426901,127.2490199560186L427.3300833121016,127.35485347433922L427.3007195578982,127.5400616346432L427.3682562262395,127.73996814279289L427.3212742002729,127.90459654380561L427.3007195578982,128.2426712174213L427.3682562262395,128.44551507495345L427.35063795447354,128.75418910157254L427.35063795447354,129.01288608782903L427.1656461731088,129.0804998499303L427.0217636283794,129.22454637406943L426.88669024359024,129.5332162823815L426.75455322940957,129.67726163178386L426.56075223999574,129.75369372650027L426.4168697433779,129.8595226368306L426.45504265751583,129.99474815407592L426.59892515413367,130.21816355826576L426.7134439446602,130.36220725873764L426.92486315772817,130.59150054342282L427.05112738258276,130.7649397341089L427.2155645696844,130.84431003395096L427.37706538617726,131.0941788618164L427.4651567449996,131.30583158297875L427.53269341334135,131.54687960945404L427.57967548741726,131.78792660052505L427.62959388399236,131.97899980634136L427.72355798403487,132.1730119110456L427.72355798403487,132.3758420935614L427.7353035145809,132.5492760270302L427.9379136158209,132.76974218659154L428.0524323582381,133.0196028163512L428.15814194071754,133.18421632611688L428.2051240147932,133.3576479017881L428.2344877689966,133.53989751529264L428.3225791278194,133.7045095420922L428.3783703137235,133.88675809874618L428.41654322786167,134.04255075399703L428.5134436985129,134.18658514226541L428.58098041496305,134.52168419079777L428.6573262432423,134.7333247166493L428.69549915738025,134.8685391070143L428.78359051620305,135.0419658179096L428.8423180727159,135.19775553424543L428.80120878796924,135.40939369322479L428.80120878796924,135.62103111389172L428.9098547410574,135.7562435231374L428.94802765519535,135.8914556800117L429.03318264341215,136.0443037934504L429.16825602820154,136.17951526300251L429.3209476847567,136.25593900668306L429.3415023271316,136.41172556531737L429.2357927446519,136.61160211369926L429.2357927446519,136.75856974356998L429.3708661294411,136.90259763867255L429.46776660009505,137.04662524406496L429.51474867417073,137.18183450110965L429.5822853425095,137.33467939466408L429.7555316414396,137.41110169921933L429.81425924606174,137.56688537516794L429.8994141861665,137.67270042436672L430.0814696450343,137.86375496220006L430.2253521416519,138.0959589548341L430.25471594396436,138.30758711169983L430.2459067840266,138.7132057750633L430.2253521416519,138.90425711126372L430.25471594396436,139.0894294014339L430.37217105699006,139.25108726625302L430.68929990064726,139.52149588217935L430.90071911371524,139.7331192533045L431.10332921495524,139.91534985414188L431.1209474867187,140.07112727032626L430.9388920278536,140.22396507568516L430.8419915572024,140.3973767489192L430.95651029961687,140.56197046117575L431.2354662291359,140.7530161758882L431.42926717044065,140.89997404078167L431.44982186092443,141.05280984375705L431.4204580586122,141.24679321063462L431.40871252806596,141.42020208628668L431.47624924451657,141.55246278239437L431.5643406033389,141.67002765282447L431.6906048281933,141.87282644576484L431.9020240893708,142.26666582001275L432.04590658598863,142.43125470344745L432.16923448834314,142.54587884246206L432.28668960136906,142.71046701112067L432.4775541720626,142.83390787363584L432.65080047099286,142.96028750330868L432.7858739038911,143.20128990746673L433.0560206734724,143.34530312164563L433.220457860574,143.509889253141L433.4025132713325,143.65390173340535L433.622741644336,143.6627188411698L433.78717883143736,143.68329202376117L433.9310613761668,143.73913350027482L434.05732560101865,143.82730411948592L434.21882641751154,144.0007060913311L434.3245360481003,144.1623515178073L434.35389980230366,144.88534268445903L434.4214365187513,145.04992488236104L434.3920727164416,145.22332361349135L434.3627089622412,145.58775325965178L434.40381824698807,145.79053987310712L434.54770074360545,145.86695205188383L434.856020475434,146.14614966626908L434.9235571437755,146.51351312321196L435.1614037885447,146.68690797162128L435.40218680392536,146.77213581032703L435.60479690516536,146.87793572451685L435.81621611823334,147.07190175040742L436.03938086184826,147.32170565795812L436.3653188173337,147.6508576627757L436.5679289185732,147.81249417726158L436.6912567728191,147.99764102092672L436.75879348926696,148.2562579850304L436.7881572915792,148.43846480377007L436.8380756881545,148.59422183036205L436.932039788197,148.7470397045813L437.14345904937454,148.95863311271225L437.47233337546845,149.22018518525903L437.88636268977666,149.49936887728234L438.0302452345061,149.53757287014093L438.2798373617127,149.50818516299722L438.46189282057753,149.46998115371125L438.59696620536965,149.4112057167952L438.76140339247127,149.39357307104274L438.9728226055395,149.4494097589497L439.44557947636054,149.46116486306408L439.64525320699136,149.49936887728234L439.84786326012204,149.62279711090525L440.16499210377924,149.96957040095765L440.5907669486362,150.3545454767466L440.7816315193297,150.5014819783775L440.9255140640564,150.57788882776316L441.5803263937455,150.56907267937692L441.7917456068135,150.53968541364839L441.9943557080535,150.54850161394035L442.24394783525986,150.63372455251707L442.4553670483283,150.75127333210747L442.6198042354297,150.91290249942404L442.81066880612616,151.153876245348L442.95748772146135,151.300811048869L443.1307340203914,151.46243893525866L443.3304077510227,151.62700516581668L443.62991832291345,151.9737684530093L443.8883195619485,152.43513721734917L443.92942889480696,152.5703147501043L443.9676018089451,152.85830085342832L443.97641092077356,153.0228637573842L444.11148430556295,153.2726460929569L444.9277974517447,154.19830222890312L445.7000648944593,154.8536007502825L446.6602605372559,155.56472506755566L447.7878297377656,156.08484053182508L448.1225768531888,156.14361039836137L448.8155620970156,156.14361039836137L449.18260933724787,156.08484053182508L449.3734739079414,156.03782462361852L449.7405211962855,156.00843962941929L450.0576500399425,156.01725514818588L450.11637759645555,156.1818107885307L450.0664591517684,164.59717473602376L450.0664591517684,167.34137317132706L450.14280498004723,179.21032254678167L450.09582295408063,189.1332403394381L450.1046320659093,211.68421499147095L449.9225766551506,211.81049920961803L450.0576500399425,226.66733795712452L450.09582295408063,227.51307787952547L450.1339958682188,238.5691071444796L449.9901133234921,238.69537547893827L449.5085472927335,239.05949780266894L449.15324558304724,239.19457534001904L448.83611673939026,239.28266937913725L448.633506638148,239.36782688935966L448.4690694510464,239.4647303079316L448.07559477911286,239.76424967715306L447.8817938378079,239.87877171760942L447.7085475388808,239.94631031405405L447.3150728669448,240.08138751764133L446.78652481021936,240.36916057777543L446.50756888070055,240.56296676177084L445.89973857698124,241.1972409146583L445.5444368672952,241.54374206839177L445.0158887624582,242.03412880255945L444.4374223091577,242.342455518373L443.66809123705434,242.77411249615537L443.11017937801694,242.98553614783722L442.8987601649485,243.04426491870743L442.3408483059136,243.15878600604054L442.176411118812,243.17934106607927L441.7623818045013,243.25568843713896L441.2250246359504,243.411319615841L440.7346494933631,243.525840606599L440.0710280037367,243.69909025045365L439.84786326012204,243.74607317188614L439.5395435764028,243.8429755219666L439.3398698457718,243.92813205417193L438.76140339247127,244.20709308723409L438.57934793360346,244.3333596143816L438.3473740781633,244.52716394871234L438.2211098051996,244.6504939684707L438.1271457051571,244.78556963537687L438.0096905921314,244.9294545208069L437.9333447638553,245.04691160003688L437.836444245092,245.16143218515654L437.7131163908491,245.2289699275987L437.5486792037475,245.26714344471944L437.22274124826185,245.30531695887083L437.02894025884825,245.36404543270143L436.8556939599205,245.4492017386355L436.7323661056748,245.56665864527506L436.63546558691473,245.71054334965132L436.47102844792244,246.08346878701096L436.43285553378405,246.2302897574199L436.3741279772712,246.41234765933515L436.2596091867447,246.72948069362812L435.81621611823334,247.4988211694896L435.60479690516536,247.62508688567505L435.4227414463003,247.70143357323423L435.2964771733368,247.84531771022884L435.26711341913347,248.01856587978963L435.2876680615084,248.2006232021486L435.25830425919867,248.3650620688177L435.1614037885447,248.49132760152457L434.91181166133833,248.71155811040163L434.5565099035432,248.9611525655071L434.40381824698807,249.0492447227785L434.0661347609562,249.29883904769878L433.82535174557825,249.4897052355878L433.6726600890229,249.62477973220464L433.420131543096,249.7304902142807L433.1999032181991,249.70406257122949L433.0472115616467,249.67469858100858L432.8739652146073,249.67469858100858L432.65960963092766,249.66295295570174L432.2191528849187,249.72168098400613L432.016542831788,249.68350776377483L431.8051235706107,249.6923169945347L431.66124107399014,249.80977304114614L431.5643406033389,249.96246588172173L431.3529213421616,250.00063908668184L431.10332921495524,249.9918299079249L430.8919100018868,250.1738866796992L430.7568366170947,250.35594345348943L430.60120854182173,250.49101778454784L430.4485168852666,250.46165382674138L430.14019720154715,250.38530746362014L429.9375871003074,250.48220861176253L429.6498220589601,250.49101778454784L429.46776660009505,250.45284460549485L429.31213857292823,250.3676890673056L429.19761983051376,250.28840630268252L429.01556437164595,250.2502330649639L428.86874545631076,250.19444152093604L428.7248629596929,250.0975402863307L428.5428075008251,250.0094483134359L428.3490065595229,249.93310190240865L428.11115991475094,249.93310190240865L427.9261680852744,249.9918299079249L427.76466726878425,250.07698549042334L427.5503116851046,250.27959707935247L427.4651567449996,250.5203817893021L427.31246504033516,250.68482008874105L427.11866409903314,250.80814875372L427.0335091589284,250.94322300365326L426.93660864016533,251.28090855031772L426.8397081695143,251.47177422258753L426.67527098241294,251.58923003946768L426.52257932585735,251.51288378685825L426.35814218686505,251.39542795906252L426.15553208562505,251.39542795906252L425.97347662675725,251.5305021571726L425.71507533961335,251.74192252368076L425.5506382006208,251.83882350522376L425.41556476772234,251.8769966175943L425.25112762873005,251.89755136600613L425.10724508400017,251.90636057123646L424.5698878673402,251.9151697282686L424.42600537071985,251.9445336806053L424.16466771296723,251.93572447576418L423.9532484998988,251.9151697282686L423.75063839865925,251.8681874601742L423.5392191855908,251.83001434740706L423.31899081258484,251.7624772753515L423.0782077972069,251.72430415783404L422.8667885841387,251.72430415783404L422.6817967546622,251.74192252368076L422.49974129579437,251.79184123293322L422.30887672510084,251.89755136600613L422.09745751203286,251.97389758383719L421.89484741079286,252.03262543542635L421.739219383629,252.02087989429123L421.59533683889936,252.00326153418075L421.46026345410996,251.9533428372472L421.0961525844864,251.74192252368076L420.931715397385,251.6185939549993L420.7790237408294,251.52169294800808L420.5940319113531,251.44534668914122L420.1711934371076,251.3572548246158L419.9803288664141,251.32789089972368L419.7571641227994,251.31027252502963L419.28734362258706,251.28090855031772L418.90267811058857,251.29852692565078L418.4005574374555,251.28090855031772L418.1715199526236,251.19281671593828L417.90137318304255,251.03131491400336L417.2671154957284,250.54974574478527L417.0938691967983,250.4440354322523L416.81491326727974,250.28840630268252L415.9105088103843,249.84794625441853L415.37021522311284,249.64533454141932L414.87984008052854,249.44272281658257L414.67722997928604,249.32820305424633L414.35129202380335,249.16376448533396L414.1281272801889,249.03749908646384L413.73465260825265,248.7702862234528L413.45569667873406,248.55886493311434L413.1003949209389,248.25935141170962L412.7039838783942,247.8952366509933L412.5424830619038,247.73079765525958L412.0403624368796,247.17287935938177L411.79957942149895,246.86455580675633L411.29158600714845,246.27727243229458L411.0977850658462,246.06585026585194L410.7219286656764,245.68998840127458L410.3490086361153,245.34349047006071L410.2021897207769,245.2289699275987L410.0583071760502,245.10270368703934L409.88506087711994,244.98818303994202L409.7118145781926,244.9000902826031L409.33595817802257,244.7679510681237L409.1245389649546,244.6798582220614L408.84558303543554,244.52716394871234L408.6459093048045,244.4008974742996L408.39338080698667,244.22764809892567L407.91475114683954,243.87233982698717L407.2775570889139,243.37020946859823L406.922255331119,243.10299368154463L406.1822880613254,242.5832438276303L406.0090417623953,242.47753189007025L405.7477041046425,242.28372664944374L405.54509400340294,242.16039596370976L405.39240234684735,242.0517474796789L405.18098313377936,241.91960740668787L404.96075476077317,241.8315140327557L404.6994171030208,241.77278504193052L404.4586340876401,241.7346112221452L403.6305754590237,241.72580190080427L403.38979244364305,241.70818320943272L403.0344907339572,241.64945424860514L402.6586343337874,241.56136076704888L402.51475178906026,241.52318692698356L402.35325097256737,241.46739438116737L402.1594500312651,241.41747471302753L401.61034733216525,241.21485962887505L401.38130984733357,241.12089315986125L400.73530662947064,240.80375615195982L400.32127731516266,240.56296676177084L399.8778842466543,240.2840032541598L399.2142627570279,239.781868410551L398.9176885557456,239.54107840237978L398.35977674481705,239.03306960054064L398.2628762741658,238.92735667582545L398.1072481988929,238.78053313205422L397.9075745163707,238.67482017854923L397.78131024340723,238.5691071444796L397.63742769868054,238.56029769945084L397.472990559688,238.60728129140833L397.29974421264865,238.60728129140833L397.13824344426484,238.53974239097712L396.9238878124786,238.5514883023032L396.7917507982984,238.5984718473572L396.6449319310693,238.69537547893827L396.51279486877934,238.74235900433524L396.3395485698493,238.74235900433524L396.154556740373,238.6572013417966L395.8873463414029,238.3958551970378L395.73171831423633,238.34887157597413L395.56728112713495,238.24315848896953L395.4233986305171,238.11688998666367L395.28832519761863,237.90546358547923L395.09746062692216,237.82911512854122L394.8948505256826,237.82911512854122L394.69224047255193,237.80855972734184L394.5571670396507,237.70284646958038L394.32812955481927,237.71459236205214L394.1049648112048,237.77038548991462L393.961082314587,237.70284646958038L393.79664512748536,237.6088790741788L393.54705300027626,237.5795142365586L393.3268246272728,237.5295940739272L393.1623874401714,237.54133997259044L392.98914114124136,237.56776833926338L392.80708568237355,237.55014944442303L392.6632031857557,237.46205495598517L392.5075751104828,237.34753210951328L392.3079014279606,237.318167248384L392.143464240859,237.27118352277918L391.9790270537576,237.21245383212707L391.73824403837693,237.0509470915975L391.5473794676832,236.97166195481938L391.4592881569697,236.78959967515652L391.2566780557272,236.60753733911662L391.0746225968621,236.50182363913322L390.9601038544449,236.2698407284626L390.7574937532054,236.1934918821532L390.57543834244916,236.09658750568693L390.39044651297286,236.03785759635616L390.27592777055565,235.97325469757186L390.15259986820115,235.9233342336664L390.01752648341176,235.7794458232331L389.8530892963099,235.68254136390553L389.67984299737986,235.68254136390553L389.57413336679133,235.60619237122646L389.4684237843119,235.4711133406098L389.4302508701735,235.2978597114189L389.3127957090385,235.14516151098485L389.23644988075966,235.0100822719178L389.18065869485804,234.88381247061125L389.0837582242041,234.73111405611087L388.9692394817898,234.5960346266183L388.8048022946882,234.57547901079047L388.74607473817537,234.469764646403L388.70790182403425,234.33468509514643L388.5346555251069,234.12325605467913L388.3702183380053,233.9500016254836L388.2351449532134,233.8178583391429L388.08245329665783,233.70039759893112L387.9473799118689,233.53888896484085L387.8622249236521,233.32452286075932L387.7565153411754,233.20999842998108L387.6008872658995,233.08666434854828L387.4188318551435,232.960393692026L387.36010425052154,232.80475771652215L387.26614015047903,232.65205817504545L387.1310667656869,232.50816812141983L386.99599338089774,232.38189724376772L386.92845666444737,232.229197462444L386.7933832796555,232.03538603476102L386.7346557231424,231.86213028455225L386.64950078303764,231.7387955846957L386.47625443599827,231.51561844119254L386.33237198748975,231.4010932848113L386.21491682635474,231.2572025011409L386.1591256404531,231.07513656317542L385.9065970945262,230.69925811845272L385.80088746393767,230.55536703543774L385.73628716620465,230.42909515972295L385.70692336389516,230.24702862670804L385.61883205317895,230.00623076041884L385.5512953367311,229.85352956480665L385.5043133107645,229.6685260513694L385.2928940495872,229.1986752465689L385.01393816817745,228.96668609114167L384.8583100929045,228.80223792226747L384.6968093245205,228.73469671065973L384.5705450515568,228.65834572337462L384.4354716667676,228.61136046229257L384.3767441102548,228.4292925654856L384.2446070960714,228.24428800117664L384.0508061066603,228.12095149558985L383.90692361004244,228.00348812829915L383.780659337079,227.88015149498074L383.6749497064902,227.64816103857473L383.5222580499351,227.5042680793661L383.35782086283325,227.32219931315097L383.22274747804136,227.12838404573526L383.12584700739035,227.01385675984676L383.0876740932522,226.8699633984566L383.0201374249109,226.72606999288578L382.9937099932097,226.59979607041097L382.89680952255867,226.5116979369579L382.6354718648033,226.31200876903225L382.48278020824796,226.1475586936233L382.37707057765897,225.9948549591245L382.3095339093204,225.80984835385897L382.2126334386694,225.66595420811024L382.0981146481431,225.47507410075616L381.99240506566343,225.26070086656694L381.88669543507467,225.0991866100734L381.6371033078656,224.82020717747736L381.5313936772768,224.61757982319466L381.4139385642511,224.50305116748095L381.33759273597457,224.3474096334794L381.2788651794617,224.1271619486434L381.2700560195244,223.88635759957538L381.1643464370445,223.63674296330066L381.058636806456,223.4429243719944L380.9529272239763,223.29021867955126L380.89419961935437,223.0787798423392L380.84721759338754,222.94369380396944L380.75031712273653,222.50025851082748L380.644607492148,222.07737889358992L380.43318827907956,221.337337428083L380.1924052636989,220.576736299291L379.9222584941176,219.79557515551966L379.60512965046087,218.94980301263064L379.44069246335926,218.53572563956914L379.0560269513637,217.66058022116457L378.7594527500787,217.01449696339336L378.4423239064215,216.42714645937846L378.3160596334608,216.1481542536067L378.2309046933533,215.91908664270233L378.1340042227023,215.47563432413017L378.10464042039257,215.1085371899248L378.0752766180801,214.917646306838L378.0282945921135,214.70619774448255L377.94020323329096,214.52411684372925L377.8344936508115,214.33028849820363L377.4880010048421,213.8486535442339L377.36467315059895,213.69593967240263L377.2384088776357,213.57846740949026L376.80676129156154,213.37876437548593L376.64232410445993,213.24367094627436L376.5160598314965,213.02047296331935L376.37217733487864,212.50065527841772L376.2371039500895,212.1541091872583L375.98751177477106,211.5784886315354L375.911165946495,211.3670356464357L375.85243838998167,211.2319404849345L375.6498282887421,210.55939998514822L375.5353095463249,210.29801879329946L375.31508122142804,209.88391957991092L375.19762606029303,209.63428471299198L374.2168757751215,206.96757080549605L372.5636948884951,202.76181295406505L372.4844126896078,202.54153567663656L372.1672838459508,201.77203083938454L371.94705547294484,201.20224187465627L371.85896416223136,201.00252140723344L371.6093719869157,200.3387423759401L370.11769191678263,196.4969776931897L370.0413460885036,196.26494060282187L369.63612588602405,195.25454581651138L369.53041630354437,194.94907591532598L367.9535812451943,190.90445918192646L367.6746253156782,190.16425188450768L367.6364524015373,189.93220168910966L368.038736185302,189.75889808556386L368.9725044445065,189.40347792640756L369.43645220350186,189.2389855409524L369.70366260247147,189.15380191598354L370.8694047171223,188.71907050128976L371.76500006218885,188.41358245007683L371.9176916706351,188.3254607754552L372.0997471295002,188.24027636511377L373.5914272477428,187.74973044207877L373.8703831772614,187.67042041536234L374.6309050894299,187.42955251479478L374.939224821258,187.3149932038835L375.1888169484646,187.23862025951513L375.7966472040773,186.98893908956444L375.45015460622017,186.8920038864592L375.26516277674364,186.75688188624127L375.15064403432643,186.63057210080476L374.9568430449151,186.4983872403297L374.75716936239314,186.3427025938156L374.6309050894299,186.17820542365712L374.48702254470277,186.05483232372296L374.293221603398,185.8991470480315L374.11997530446797,185.79339839554513L373.90855609139953,185.83158541363457L373.69713683022223,185.8433352809724L373.3800080346771,185.59365065588224L373.3036621582887,185.42033982363216L373.24493460177587,185.17946662335328L373.08343383339206,185.12952945778693L372.91018753446474,185.13834188358538L372.84265081801414,184.95621782681994L372.8015415332645,184.7535309402852L372.6870227908473,184.60959361751662L372.40806686133146,184.47446861959463L372.196647648263,184.11021770533017L372.09093801767426,184.0044671663191L372.0057830294577,183.86934134532765L371.9265008305729,183.68721491930594L371.8119820881557,183.5315259600943L371.6181811468507,183.36996165186014L371.51247151626217,183.23483496084802L371.48604413267003,183.09089542857154L371.2452611172921,182.8000782322328L371.18653356077925,182.65613805939637L370.9163867430891,182.51219772182117L370.8488500747476,182.27131743408873L370.72552217239263,181.92468375903553L370.5522758734651,181.9716850286095L370.4348207604394,181.92468375903553L370.379029574535,181.79836783276718L370.3026837462562,181.6838020550441L370.205783275605,181.56042334658193L370.0619007308783,181.51929709123965L369.888654431948,181.5486729690846L369.7535810471586,181.4811084029045L369.61850761425785,181.26078872770393L369.56858921768253,181.08747024772657L369.46287958709377,180.97290361962624L369.34836084467656,181.0199053076472L369.22503294232433,181.09628303735985L369.13694163160835,180.97290361962624L369.11638698923366,180.7995845682159L369.06059580333203,180.59688908709364L368.8785403444642,180.5675128679837L368.684739403162,180.57632575392486L368.4733201419847,180.47057135732754L368.26190092891625,180.33544059962338L367.9535812451943,180.18268385409294L367.91540833105614,180.01817629454928L367.7715257863292,179.88304488883347L367.6658161557407,179.7978532223754L367.46320610261,179.6715344221416L367.3281327178179,179.565779058058L366.99044923178917,179.64215796280786L366.8172028847498,179.61571913672248L366.67332038812924,179.51877659825323L366.50007404109283,179.36308087469513L366.34738238453747,179.27788878333925L366.19175435737066,179.1221926098669L366.0684264550184,179.0458132797893L365.9245439584008,179.01643662359558L365.7219338571583,178.96062089831798L365.548687558231,178.90186747467433L365.316713654679,178.85486468012033L365.1728311580612,178.7197315913548L364.9995848591311,178.66097801514422L364.8645114262299,178.62278816821225L364.62372845896107,178.62278816821225L364.44167300009326,178.5258446435257L364.24787205879124,178.40246179807338L364.0570074399884,178.22913803856778L363.9424886975712,178.0352500118206L363.86320649868344,177.84429932273574L363.757496916204,177.63278425271898L363.6429781256777,177.44770814715048L363.61361437147707,177.3125729903798L363.51671390082606,177.18037535312436L363.440368072547,177.0334888534506L363.39338599847133,176.9012908102173L363.24950345374464,176.72796420330295L363.0175295983013,176.42831401017662L362.94118377002496,176.28436403853456L362.8061103852333,175.94652140064244L362.8354741394362,175.7643796582977L362.7855557428584,175.51466852213002L362.70920991458206,175.31196138673414L362.6504823580692,175.10925374135957L362.5858820122271,174.95648826744144L362.54477272748045,174.7919712901263L362.4684268992014,174.64801867790754L362.4126357132998,174.48350117437093L362.35390815678693,174.33954805869175L362.2100256120575,174.22497297922595L362.10431602958056,173.97231967453382L361.9868608684428,173.60802763679908L361.6697320247861,173.30836689937104L361.56402244230617,173.17322545512408L361.45831281171763,172.9616992916718L361.39077614337884,172.7413589625047L361.2850665127903,172.58858935313788L361.12062932568847,172.46226041474614L361.16173861043535,172.22135356992248L361.1499931279982,171.9716323694694L361.12062932568847,171.8276750869873L361.1705477703731,171.68371761021697L360.9679376691331,171.57501483045678L360.8622280385446,171.34585719595293L360.7565184560649,171.21071261611195L360.5744629971971,170.94042290697138L360.49518079830955,170.69951176150124L360.2837615852411,170.5261728462143L360.1780519546526,170.42040652879243L359.98718738395905,170.13248649940513L359.8609231109954,170.04434749783854L359.73759525675246,169.97971220320267L359.5819671814795,169.9385806217253L359.18849250954327,169.72704642029083L359.0534191247541,169.5830853132504L358.8713637139954,169.34217027005317L358.7274811692687,169.27459644428302L358.504316425654,169.245216469415L358.3604338809273,169.13944853158927L358.28408805264826,169.0248664708703L358.18718758199725,168.90147025052192L357.96695920899106,168.80451593458633L357.77315826768904,168.68699535396982L357.6498304134434,168.52540436068887L357.47658406640403,168.38144116693832L357.32976515106884,168.24629184166253L357.1477097403101,168.11114229411837L357.08898218379727,167.9671783746382L357.0713639120338,167.79383375817352L357.0713639120338,167.62930291284167L357.0508092696589,167.4765239910271L356.93629052724464,167.35900155602067L356.64852543778807,167.19740789468355L356.50464294117023,167.04169009483508L356.4253606941736,166.8389626717464L356.3783786682068,166.69499650326213L356.281478197556,166.5804110199118L356.1375956528261,166.44525870597172L356.02307691041165,166.28072512531833L355.9349855515866,166.1279436592552L355.83808508093534,165.91639961480325L355.75293014083036,165.7048550120814L355.62666586786713,165.60789688425672L355.570874681963,165.4933098017031L355.44461040899955,165.384598906703L355.3007279123817,165.31995987645126L355.2331911959311,165.22300128085027L355.0981178111417,165.12604256711745L354.8955077099022,164.9997022241853L354.78098896748475,164.83810386396115L354.47266923565644,164.47964808227624L354.261250022588,164.3738739154686L354.0116578953789,164.29748138950697L353.9353120671026,164.07711789656358L353.92356653655656,163.8068045363787L353.7914295223759,163.37488883248682L353.77968403993873,163.18978136448783L353.81785695407666,162.9694147531514L353.90594826479014,162.76667692101296L353.87658451058974,162.5374944067544L353.77968403993873,162.39058216701443L353.6446107513675,162.28480531438L353.5389010245581,162.17902807611932L353.5212827527946,161.9498438187366L353.5389010245581,161.650140283224L353.559455666933,161.45915213491327L353.5389010245581,161.21821254187734L353.36565472563075,161.02428502268765L353.25994509503903,160.8421102079211L353.1248717102501,160.67756484062895L352.96337089375675,160.5247724119305L352.84591578073105,160.35141140263488L352.70203323600435,160.2162483073145L352.51997782524813,159.98411977172742L352.44363194886023,159.84895601913684L352.1147576227661,159.4934153960794L352.0677755486902,159.34943569029014L351.99142972041136,159.15550332890984L351.94151132383604,158.97332405034726L351.8945292497601,158.73237652719183L351.6625553943172,158.1358811414049L351.539227491965,157.7127485332228L351.41296326711085,157.45122784187635L351.2778898342124,156.98989130692382L351.2309078082458,156.7783220113188L351.2309078082458,156.5755675065435L351.26027161055526,156.11422549510638L351.26027161055526,155.67932714084728L351.222098648308,155.13276193472103L351.26027161055526,154.86241636193256L351.2778898342124,154.57443843218797L351.2778898342124,154.2570736351762L351.24852608000924,154.06312780590358L351.222098648308,153.81334825460698L351.16337109179517,153.43720803186415L351.15456197996673,153.28440050234235L351.1046435352823,152.9640913288889L351.06647062114416,152.8024669099741L351.02829770700305,152.5908852182779L350.9607610386645,152.38811890501313L350.9020334340423,152.25294097315384L350.84624224813797,152.07956026121744L350.8374331363095,151.8679764365263L350.8374331363095,151.57998631000214L350.81687849393506,151.3948491542064L350.70235975152036,151.0480829825725L350.731723505721,150.82767990514347L350.81687849393506,150.63372455251707L350.8550514080757,150.4221363218155L350.9020334340423,150.2223023668817L351.04885234937797,149.8079389716827L351.1839257341701,149.46998115371125L351.1721802517329,149.3171649028615L351.0870252635159,148.94100034984848L351.02829770700305,148.60303823331708L351.01948859517734,148.38262728554696L350.9607610386645,147.9770691798771L350.9813156810367,147.83306606856104L350.9901247928651,147.56269209682546L351.0576615093157,147.38048290976678L351.09583442345365,147.21590649406176L351.11638906582857,146.79270802097392L351.09583442345365,146.61931344786552L350.9989339528024,146.4459184234339L350.93139723635227,146.2637061896503L350.9137789645888,146.1196993885119L350.9225881245263,145.73470014447093L350.8756060504479,145.42611129893928L350.86386051990166,145.28210272189673L350.8374331363095,145.14691068926146L350.8256876057635,144.9735117565897L350.7875146916251,144.75014978719696L350.70235975152036,144.5767498540524L350.58490463849444,144.40334946149216L350.5173679220443,144.25052161216087L350.43221293383,143.91253565899103L350.17087532418645,143.4599256373633L350.12389325010804,143.32472983182888L350.1327024100458,143.17189944667348L350.09452944779855,142.9220797254395L349.89191939466787,142.4400719780959L349.8155735663888,142.21964037475286L349.7392277381123,142.0462336690611L349.6805001334901,141.8610700394829L349.6041543052113,141.65827116108022L349.53661763687,141.3908108099671L349.51899936510654,141.17919303695544L349.4602718085937,140.9763919882654L349.3927350921431,140.62075381571086L349.2664708191794,140.36798495056365L349.15195207676516,139.91534985414188L349.13433380499873,139.49210372295943L349.0550516061114,138.8190188691957L349.0080695801446,138.66323838739117L348.8935508377301,138.44279361070937L349.2282979050415,138.30758711169983L349.4220988944553,138.26055866801175L349.87430112290167,138.13416964834505L350.9813156810367,137.85493709567123L351.3366174388343,137.7491223103474L352.54934157944876,137.45225212425362L352.84591578073105,137.36407262216406L353.0191620796611,137.29646820684195L353.25113593510423,137.23768172145088L353.47136430810747,136.8438107766637L353.577073938696,136.67920723446343L353.75032023762606,136.36175636230877L353.95293033886605,136.03548561754718L354.0791946118295,135.79445567231517L354.23188626838464,135.58281885572183L354.45505101199956,135.23596803495883L354.560760594479,134.95672226293658L354.78098896748475,134.41586362503625L355.0893086512044,133.7045095420922L355.2126365535589,133.38704300883842L355.40643749486117,132.9225982281822L355.79110305496874,132.02897265436965L356.0612498245498,131.297012708742L356.18457772690476,131.17060910050762L356.3989333105817,131.00598998257496L356.5222612129339,130.89134426524583L356.61035252365014,130.74730186972812L356.6573345977258,130.60325911949698L356.6573345977258,130.21816355826576L356.6866983519262,130.06236081884933L356.7336804260019,129.88891949004176L356.8599446508565,129.59201035264732L356.93629052724464,129.47442210430475L357.0331909978954,129.36859253932923L357.185882654451,129.24512441276062L357.282783125102,129.07168068690615L357.29159223693046,128.90705562966673L357.32976515106884,128.5601656237551L357.379683595753,128.16623712115035L357.40904739806547,127.84874053485336L357.4354747816574,127.69293139726855L357.4942023381702,127.21080225633722L357.59110280882146,126.27593046856205L357.6498304134434,125.91138510996373L357.6498304134434,125.63209471198385L357.60872108058743,124.58253839946124L357.5529298946833,123.61822280205189L357.5323752523084,122.9537760921321L357.503011498108,122.37458369524865L357.51475698054514,122.09527553470616L358.0609233090338,122.11585617944482L358.5248710680289,122.09527553470616L358.6863718845191,122.1070359247172L358.8889819376525,122.1070359247172L359.25602922599387,122.07763496904403L359.4292755249239,122.03941373200851L359.67005854030185,122.04823404578181L359.7258497262062,121.8835884202874L359.7464043685811,121.67190048762279L359.78457728271906,121.43081043224865L359.91965066750845,120.6898929038862L360.025360298097,120.36059295050953L360.12226076875095,120.16948047426013L360.2749524253063,119.77549260387624L360.38066205589485,119.6284814598713L360.53629008305893,119.55203551423679L360.6889817396145,119.53439412305454L360.87103719847914,119.46676877679567L361.035474385581,119.32269702610304L361.2850665127903,118.90812110725474L361.428949057517,118.72288401467239L361.57283155413484,118.65525759807466L361.7372687412362,118.63761591222428L363.60480521153954,118.56116855571332L363.76924239864115,118.32888554004583L363.8455882269204,118.18481073007166L363.9601069693347,118.04073557916746L364.13335331637404,117.92312290857683L364.327154257679,117.81727125403995L364.50920971654386,117.70259841474726L364.6619013730992,117.56734295675557L364.8351476720293,117.48207300623801L365.03775777326905,117.46149059383814L365.25798609816593,117.3762204732804L365.53987839829324,117.249785282721L365.70137921478636,117.20273951646803L365.9127984278548,117.15275340125962L366.1242176409228,117.13511121751736L366.2798457161962,117.01749649295564L366.30920947039635,116.75874329401378L366.4149191009851,116.57643910233134L366.50007404109283,116.45882318225338L366.64395658581975,116.28533916562711L367.09615881426566,115.7942881960015L367.48082437437347,115.4384938967446L367.80088958863917,115.12974484123649L367.96239035702274,114.95625647559186L368.2031733724034,114.65926654928549L369.21328745988717,114.19466504865213L369.888654431948,113.82121657674989L370.21459238743364,113.55950695433049L370.3291111298506,113.48305221216006L370.48473915701493,113.39483504279016L370.7431404441586,113.16546974476586L370.88702298888575,113.05960847154472L370.9163867430891,112.27740469213074L370.88702298888575,111.70103633543317L370.898768519432,110.90116741761707L370.878213828948,109.84837957342376L370.8106771606092,108.76027968409863L370.793058888843,108.0868222003013L370.781313358297,106.5545989204578L370.72552217239263,104.56940200643143L370.6961584181922,104.13411842229308L370.61981258991295,103.49000920325076L370.59044878760346,103.29589237951163L370.5522758734651,103.1135395655281L370.50235742877794,102.96059794266776L370.379029574535,102.81353821752808L370.185228633233,102.68118409063803L370.05015520033203,102.51647621042167L370.02079144612867,102.26647213126614L369.9943640144277,101.85175658870276L369.96500026022704,101.71645850309338L369.9356364579148,101.46645024971235L369.9268273460864,101.31056209332971L369.85048151780984,100.66641501445537L369.80056307312566,100.38698775707036L369.7535810471586,99.94284208870826L369.66548968833354,99.3839774324432L369.48343422946846,98.00443562349764L369.4452613153278,97.80147188192598L369.41589756112717,97.52202766053057L369.34836084467656,97.0807964387242L369.3395517328506,96.91606904084443L369.2896332881637,96.7513411067809L369.21328745988717,96.56896301376844L369.10757782929863,96.44247455688586L368.99305908688143,96.32775218607364L368.90496772805614,96.183613445464L368.7317214291286,95.86591823150519L368.7052940455342,95.55704576465533L368.67593024322423,95.40407960593899L368.65537560084977,95.18933780528783L368.684739403162,95.00695353840604L368.8110036280136,94.6892502012866L368.84917654215474,94.54510628041109L368.9636953326808,94.3803698700759L369.1281324716706,94.20680762534104L369.2426512140878,94.03324467296281L369.51279803177795,93.75377756777354L369.61850761425785,93.59198007224157L369.66548968833354,93.37722971403306L369.80937223306296,93.09775862818833L369.86809978957353,92.92419144575342L369.9062727037142,92.73297264303994L369.82992687543515,92.5299856272548L369.70366260247147,92.48291607077928L369.66548968833354,92.36524191698146L369.8387359872636,92.28875354785842L370.02079144612867,92.2505093147222L370.25276530157157,92.30934657934822L370.3026837462562,92.5299856272548L370.3291111298506,92.8565295260781L370.3966478462985,93.07128229837934L370.3966478462985,93.30956846977304L370.28212910388424,93.7361270018931L370.16761036146704,94.00382719149454L370.5229121192622,93.99500190961615L371.4948532444985,93.94793387142661L371.90888255880645,93.93616683019192L372.5813131602588,93.9655844034898L372.9189966462907,93.99500190961615L373.5738089759793,94.12149709999636L373.74705527490937,94.04501168915854L373.87919228909004,94.08325441059813L374.0436294761914,94.03324467296281L374.20806666329304,94.15973975736185L374.39893123398656,94.25681712469668L374.59273217529153,94.18915718655856L374.7454238318471,94.06266218366656L374.9098610189485,94.33330218086098L374.90105185901075,94.62159090274977L375.23873534504264,94.45685471955531L375.4589637180459,94.48627190935389L375.5734824604631,94.33330218086098L376.14313985004674,94.47744676885935L376.3545590631152,94.41861231080352L376.53661452198025,94.43037917954982L376.67168790677215,94.30388489266562L376.8449342056995,94.32447701084877L376.9682620599451,94.22739978727014L377.1620630493567,94.29505966877952L377.3940369047996,94.30388489266562L377.5760923636674,94.28329276520694L377.9313941214623,93.9655844034898L378.0840857780179,93.98617667422829L378.2015408910436,94.0714874042622L378.3924054617373,94.72749238396736L378.9415081608372,96.4718905258515L379.01785403722533,96.73369164370564L379.44069246335926,96.91606904084443L379.64330256460175,97.01314064741263L379.8459126658415,97.08962112923192L380.0191589647716,97.1190366397046L380.1924052636989,97.12786132294949L380.40382447676734,97.1866923250904L380.89419961935437,97.19551694730615L381.0204638923178,96.91606904084443L381.34640184780324,96.10713142029081L381.74281293845684,95.06578724114348L382.4357981341718,93.33016103722963L382.6178535930396,92.9447841880596L383.28147503455443,92.51233458546562L383.5222580499351,92.29757911327638L384.8201371787634,90.96783767165638L384.9552105635553,90.81485605076864L385.20480273887097,90.57361476982422L386.5232365100742,89.22322766795492L387.7946882553133,87.89339452528458L389.1013764959705,86.55175226366097L390.1408543376547,85.47193570933803L390.6723388131004,84.93348851811527L391.0158950403493,84.60688616774246L391.17152306751336,84.66279125394618L391.4798427993419,84.24791495474375Z\" stroke=\"#000\" fill=\"#FFF\" strokeWidth=\"0.5\"></path>\r\n        <path id=\"Mandera\" ref={(item) => countyRefs.current[8] = item} d=\"M485.7463897843154,68.79158290684046L485.6494893136646,68.64440760068842L485.62012551135194,68.5119493673484L485.7845626984538,68.48251417100602L485.87852679849607,68.65618166265656ZM485.7463897843154,68.79158290684046L485.8520993667953,68.90637925478825L486.02534571383444,68.77097840266296L486.2074011245902,68.79158290684046L486.5039753258752,68.91520975529636L486.65079424121063,68.92404020561577L486.7946767859403,68.96524904423731L486.7829312553913,69.10947969070381L486.74475834125315,69.26254018840694L486.8240405401409,69.3979393643811L487.02371427077196,69.3979393643811L487.1881514097645,69.35084407208848L487.39076151100403,69.35084407208848L487.6109898840102,69.4362042663933L487.80479082531247,69.41854354325221L487.9574824818676,69.29197485416898L488.00740092655474,69.13891442163103L488.06319211245636,69.01234484185196L488.207074657186,69.03000574552092L488.2951659678995,69.15657526900961L488.4684123149384,69.22427511926011L488.65927688563215,69.07121447412365L488.70038617038176,69.21544468748681L488.7091952822075,69.38910901941097L488.88244162924684,69.46563880361211L488.91180538344975,69.60103728831211L488.74736819634836,69.64813228451163L488.83252318456243,69.79236045440973L488.9000599010128,70.0837586262557L488.99696037166404,70.20738141223848L489.1320337564532,70.2368153800542L489.3816258836623,70.11024924169612L489.525508428389,70.21915501161132L489.66939097311615,70.18972103078406L489.8426372720462,70.18972103078406L490.00707441103873,70.27507947685598L489.939537742697,70.48700303830535L490.06580201566067,70.64300160439706L490.2390483145907,70.67243525158793L490.31539414286704,70.51643680022642L490.5943500723861,70.69892547697842L490.72942345717524,70.81665967508593L490.7587872113784,70.65183172011561L490.7000596548655,70.49877655531765L490.84394219959245,70.4193053326162L491.0377431408974,70.4193053326162L491.1346436115482,70.5252668956474L491.24035324213696,70.6606617856632L491.39304489869255,70.71952898421765L491.53692744341924,70.6606617856632L491.6132732716983,70.49877655531765L491.5751003575574,70.27507947685598L491.65438255644494,70.0925888172795L491.91278384358907,70.0837586262557L492.1535668589697,70.12202286970751L492.3062585155253,69.82179472837112L492.39434987434765,69.92775782860267L492.5587870133404,69.96602222164944L492.66449664392894,69.84239868792321L492.85536121462246,69.80413417624803L492.9992437593519,69.55099875161443L493.2781996888707,69.35967442555841L493.41327307365987,69.30080522071376L493.70103811500485,69.13891442163103L493.86547530210623,69.15657526900961L493.9917395750697,69.27137056149036L494.0886400457207,69.4362042663933L493.1343171441413,70.82548975251927L491.79826510117186,72.63855262595152L490.9496518301812,73.960035852381L490.2302391546532,75.0489764557399L488.7767319986581,76.98839639564054L488.4096847103167,77.50045868572761L486.609684956464,80.09304540124106L486.13986445625164,80.72866083964769L485.50560676893747,81.66441057805218L485.3029966676952,81.9822076999539L484.7245301662854,82.81200010179376L483.16531337970173,85.0394130986295L482.31082736749363,86.23398885269276L481.44459582473655,87.46972247480826L480.7516105809095,88.48182118719285L479.1747755225624,90.69717753258783L478.49940855049886,91.66213235070353L477.6713499218829,92.87712229912506L476.1708606918121,95.01577857693579L474.67037146174084,97.13668595632899L473.9010403896377,98.26622812472124L473.7747761647836,98.38977016380645L473.1023455633315,99.43103995312651L471.4286100343304,101.8017551647489L470.59174224577646,103.03706881471965L469.7049560606449,104.27823303190797L469.5610735640271,104.49293355261449L466.59826801802615,108.71322615769472L466.23122072968476,109.17493676045402L464.9333416008535,110.46593935237934L464.0465554157247,111.28639998707192L463.63252610141376,111.71868036364225L462.3728198867234,112.98021239791979L460.0736358303461,115.22678045379018L459.0547125829273,116.17948428370556L458.57314660027805,116.64406816411386L456.5910913394482,118.59057142030213L454.66776368324076,120.50760210361338L452.60642622352634,122.48042643185212L450.6243710108058,124.43848014773818L450.2015325365601,124.87947369967634L450.19272342473164,126.23771211353863L450.21034169649784,126.41116448499801L450.1839142647941,130.37984523940239L450.1839142647941,132.46108932420472L450.1339958682188,132.82853301462563L450.1721687823572,134.4276214909141L450.16335962242215,138.53097162473654L450.19272342473164,140.62075381571086L450.1721687823572,142.69871071011482L450.1721687823572,144.847136036912L450.1839142647941,145.63771525064817L450.1545505105935,148.92042879542112L450.1545505105935,152.9464595859787L450.1339958682188,153.84273414667132L450.11637759645555,155.45012286069294L450.0576500399425,156.01725514818588L449.7405211962855,156.00843962941929L449.3734739079414,156.03782462361852L449.18260933724787,156.08484053182508L448.8155620970156,156.14361039836137L448.1225768531888,156.14361039836137L447.7878297377656,156.08484053182508L446.6602605372559,155.56472506755566L445.7000648944593,154.8536007502825L444.9277974517447,154.19830222890312L444.11148430556295,153.2726460929569L443.97641092077356,153.0228637573842L443.9676018089451,152.85830085342832L443.92942889480696,152.5703147501043L443.8883195619485,152.43513721734917L443.62991832291345,151.9737684530093L443.3304077510227,151.62700516581668L443.1307340203914,151.46243893525866L442.95748772146135,151.300811048869L442.81066880612616,151.153876245348L442.6198042354297,150.91290249942404L442.4553670483283,150.75127333210747L442.24394783525986,150.63372455251707L441.9943557080535,150.54850161394035L441.7917456068135,150.53968541364839L441.5803263937455,150.56907267937692L440.9255140640564,150.57788882776316L440.7816315193297,150.5014819783775L440.5907669486362,150.3545454767466L440.16499210377924,149.96957040095765L439.84786326012204,149.62279711090525L439.64525320699136,149.49936887728234L439.44557947636054,149.46116486306408L438.9728226055395,149.4494097589497L438.76140339247127,149.39357307104274L438.59696620536965,149.4112057167952L438.46189282057753,149.46998115371125L438.2798373617127,149.50818516299722L438.0302452345061,149.53757287014093L437.88636268977666,149.49936887728234L437.47233337546845,149.22018518525903L436.932039788197,148.7470397045813L436.8380756881545,148.59422183036205L436.7881572915792,148.43846480377007L436.75879348926696,148.2562579850304L436.6912567728191,147.99764102092672L436.5679289185732,147.81249417726158L436.3653188173337,147.6508576627757L436.03938086184826,147.32170565795812L435.81621611823334,147.07190175040742L435.60479690516536,146.87793572451685L435.40218680392536,146.77213581032703L435.1614037885447,146.68690797162128L434.9235571437755,146.51351312321196L434.856020475434,146.14614966626908L434.54770074360545,145.86695205188383L434.40381824698807,145.79053987310712L434.3627089622412,145.58775325965178L434.3920727164416,145.22332361349135L434.4214365187513,145.04992488236104L434.35389980230366,144.88534268445903L434.3245360481003,144.1623515178073L434.21882641751154,144.0007060913311L434.05732560101865,143.82730411948592L433.9310613761668,143.73913350027482L433.78717883143736,143.68329202376117L433.622741644336,143.6627188411698L433.4025132713325,143.65390173340535L433.220457860574,143.509889253141L433.123557389923,143.30709557133494L432.95912020282117,143.33648597072226L432.7858739038911,143.20128990746673L432.65080047099286,142.96028750330868L432.4775541720626,142.83390787363584L432.28668960136906,142.71046701112067L432.16923448834314,142.54587884246206L432.04590658598863,142.43125470344745L431.9020240893708,142.26666582001275L431.6906048281933,141.87282644576484L431.5643406033389,141.67002765282447L431.47624924451657,141.55246278239437L431.40871252806596,141.42020208628668L431.4204580586122,141.24679321063462L431.44982186092443,141.05280984375705L431.42926717044065,140.89997404078167L431.2354662291359,140.7530161758882L430.95651029961687,140.56197046117575L430.8419915572024,140.3973767489192L430.9388920278536,140.22396507568516L431.1209474867187,140.07112727032626L431.10332921495524,139.91534985414188L430.90071911371524,139.7331192533045L430.68929990064726,139.52149588217935L430.37217105699006,139.25108726625302L430.25471594396436,139.0894294014339L430.2253521416519,138.90425711126372L430.2459067840266,138.7132057750633L430.2664614745104,138.21059096473877L430.18717922751375,138.03717323022227L430.0814696450343,137.86375496220006L429.8994141861665,137.67270042436672L429.81425924606174,137.56688537516794L429.7555316414396,137.41110169921933L429.5822853425095,137.33467939466408L429.51474867417073,137.18183450110965L429.46776660009505,137.04662524406496L429.3708661294411,136.90259763867255L429.2357927446519,136.75856974356998L429.2357927446519,136.61160211369926L429.3415023271316,136.41172556531737L429.3209476847567,136.25593900668306L429.16825602820154,136.17951526300251L429.03318264341215,136.0443037934504L428.94802765519535,135.8914556800117L428.9098547410574,135.7562435231374L428.80120878796924,135.62103111389172L428.80120878796924,135.40939369322479L428.8423180727159,135.19775553424543L428.78359051620305,135.0419658179096L428.69549915738025,134.8685391070143L428.6573262432423,134.7333247166493L428.58098041496305,134.52168419079777L428.5134436985129,134.18658514226541L428.41654322786167,134.04255075399703L428.3783703137235,133.88675809874618L428.3225791278194,133.7045095420922L428.2344877689966,133.53989751529264L428.2051240147932,133.3576479017881L428.15814194071754,133.18421632611688L428.0524323582381,133.0196028163512L427.9379136158209,132.76974218659154L427.7353035145809,132.5492760270302L427.72355798403487,132.3758420935614L427.72355798403487,132.1730119110456L427.62959388399236,131.97899980634136L427.57967548741726,131.78792660052505L427.53269341334135,131.54687960945404L427.4651567449996,131.30583158297875L427.37706538617726,131.0941788618164L427.2155645696844,130.84431003395096L427.05112738258276,130.7649397341089L426.92486315772817,130.59150054342282L426.7134439446602,130.36220725873764L426.59892515413367,130.21816355826576L426.43448801514114,129.88010045008903L426.56075223999574,129.75369372650027L426.75455322940957,129.67726163178386L426.88669024359024,129.5332162823815L427.0217636283794,129.22454637406943L427.1656461731088,129.0804998499303L427.35063795447354,129.01288608782903L427.35063795447354,128.75418910157254L427.3682562262395,128.44551507495345L427.3007195578982,128.2426712174213L427.3212742002729,127.90459654380561L427.3682562262395,127.73996814279289L427.3007195578982,127.5400616346432L427.3300833121016,127.35485347433922L427.4357929426901,127.2490199560186L427.283101286135,127.15494556849677L427.0599365425203,127.12554731761116L426.9542269119315,126.93151826880029L426.7927261435477,126.8639019696524L426.6077343140714,126.85508241712327L426.4932155716542,126.71102998138346L426.5401975976208,126.52875897320845L426.55194312816707,126.34354751718416L426.2054504822006,126.15245571221973L426.1672775680622,125.97900259494463L426.26124166810496,125.8643468494277L426.44623349757853,125.7673302228001L426.59011604230795,125.60269567003448L426.5020246834829,125.43806058741407L426.2994145822429,125.29400448850333L426.272987198651,125.15876783894629L426.3669512986935,125.0735098035091L426.29060547041445,124.94709242626087L426.2817963585885,124.73541621344049L426.3669512986935,124.57077858363556L426.3669512986935,124.39732057894153L426.2054504822006,124.26502173164789L426.1672775680622,124.05040290229692L426.17608672799724,123.9063432263955L426.2348142845101,123.78286324826834L426.2994145822429,123.57118261233501L426.1672775680622,123.42418167785243L426.2054504822006,123.23307989886587L426.10855001154937,123.0213971129127L426.0997408997209,122.8391141278876L424.9927263415859,122.25110029307572L423.4922371115149,121.5572358466662L420.71148702437904,120.2547461017119L415.3790243349413,117.82903257544226L415.22633267838614,117.62614971782702L415.0325317370839,117.3262345216682L414.7829396098748,117.01749649295564L413.71409796587795,115.74724117916918L412.8390572631861,114.73571955766928L412.18424493349744,113.95354115917962L411.30920427891465,112.9625688040193L410.56042784918327,112.09508478256157L408.7398734048468,110.0895228675117L407.83546894795177,109.12788362345043L407.07494703578345,108.2897426678646L406.09419670250304,107.2486636952342L404.48799788995234,105.46642689435222L404.00643185919375,105.20467379280697L403.9976227473653,105.03115131524564L403.0051269316475,104.59881294047358L402.8612443869181,104.5782252595981L399.79272925843725,103.33412756508275L398.280494545932,102.73706699073784L396.51279486877934,102.01352546157776L393.13302368596806,100.66641501445537L392.4224201703778,100.35757424556789L392.143464240859,100.25168555911102L392.0847366843461,100.08696929545937L392.07592752440837,99.82812830150951L392.06711841257993,96.22185438649868L392.11410043854653,95.30700466825695L392.07592752440837,94.1773902075148L392.06711841257993,93.4360655637951L392.06711841257993,90.50594926823632L392.07592752440837,88.71130550282152L392.0553728820337,86.81361111421933L392.0553728820337,82.95618226094487L392.32551969972405,82.38827836122454L393.54705300027626,79.74580701995669L394.6247037561013,77.44160127772969L395.91377377310414,74.63400521989362L397.09713415951796,74.01889824268977L401.95683993002285,71.52894428594391L402.2181775877782,71.32585620000444L408.0468881610202,68.30884586920013L409.4827770933582,67.63182670155177L409.749987492331,67.63182670155177L409.9349793218071,67.49642148333552L410.2021897207769,67.22855325950613L410.45471821859473,67.05487948400602L410.74248330804835,66.91064133284414L411.01263007762964,66.80467015097597L411.24166756246404,66.57212117863548L411.5499872942926,66.05108882577144L411.81132495204815,66.02165173970675L412.2047995758719,66.27186607201858L412.34868212059905,66.23359810077261L412.51311930770044,66.15706204598902L414.84166716638765,65.20329246753656L416.6005576354935,64.48794992811756L418.911487222417,63.56357824858961L419.8746192839344,63.157318777890026L420.90235159507256,62.69511976818464L421.345744711693,62.771662656289806L421.70985558131656,62.43310640501636L422.81687013945157,61.92085040898789L426.56956139993304,60.40759430985378L430.2928888581025,58.89427793763255L433.90169757385456,57.398567021409434L435.566623991027,56.75963295465988L435.92192574882233,56.606522713921805L435.9806533053352,56.46224520697413L436.10691753018955,56.30618924653939L436.2889729890546,56.220799903894516L436.5003922021226,56.15307714258154L436.6824476609904,56.15307714258154L436.84688484809203,56.1913552276217L437.02894025884825,56.21196648416347L437.24035952002555,56.18252184914124L437.37543290481744,56.15307714258154L437.47233337546845,55.99996440854298L437.81001686150034,55.70845958646993L438.0096905921314,55.64073589159577L438.1565094593577,55.573012073143644L438.2798373617127,55.44934223554364L438.43546538887676,55.24616940880077L438.5411750194653,55.05182916567253L438.71442131839535,54.83982045938711L438.8876676173254,54.657256407123015L439.2811422892589,54.64842261487752L439.48375239049847,54.74559397216973L439.6658078493663,54.7632614115943L439.84786326012204,54.72498185234625L440.02991871898985,54.73381562628492L440.16499210377924,54.93699126526485L440.23252882022985,55.10188657078584L440.3118110191174,55.23733580543944L440.4351389214696,55.352172774299845L440.6377489746028,55.41989694776166L440.9636869781948,55.44934223554364L441.3101795760549,55.72023757418975L441.55096259143284,55.805628114643554L441.7447635327378,55.94107473128858L441.9561827939151,56.07652085435021L442.1000652905327,56.13246585342071L442.24394783525986,56.13246585342071L442.34965746585135,56.22963327328986L442.50528549301544,56.32680043949779L442.5992495930577,56.16191057629143L442.7548776202218,56.17368842032167L442.92812391915186,56.21196648416347L443.2070798486677,56.34741166929206L443.3039803193217,56.52996735783199L443.3215985910849,56.721355453388014L443.3215985910849,56.92452022224862L443.41849906173616,57.15712777486374L443.5447633346996,57.29256952939991L444.04394763722416,57.29256952939991L444.2348122079179,57.36912332250333L444.3992493950193,57.50456426151953L444.54313189163713,57.581117621170165L444.6488415222259,57.66650390223225L444.9395429341819,57.928550127237344L445.0246979223957,58.08165500761467L444.9865250082578,58.429082881965286L445.03350703422416,58.614572740007475L445.0246979223957,58.76767477941013L445.04525256477064,58.961995695597096L445.1304075529845,59.08565396990562L445.3418267660527,59.25053102277445L445.60316442380554,59.41540730780491L445.708874006285,59.60678070008305L445.7764107227356,59.974803772330716L445.81458363687375,60.12790030239745L445.81458363687375,60.29277281633159L445.89973857698124,60.560689094810925L446.01719373811625,60.72555973089507L446.5839147089798,60.8315475818207L446.7571610079099,60.99641704473092L446.92159819501126,61.07296332995671L447.0948444939386,61.093571915235884L447.2563453104317,61.140677245639296L447.40316417766076,61.16128579431927L447.81425712136047,61.123012759587795L447.919966751949,61.2172232412415L448.1225768531888,61.27610466808943L448.2488410780429,61.39092319637368L448.4984332533586,61.4026994547107L448.59533372400983,61.56462236128647L448.62469747821297,61.72948865700229L448.7773891828774,61.83547376783315L448.921271679495,61.894354242032506L449.0475359524587,61.97973075186522L449.15324558304724,62.06805112055662L449.2971280796651,62.15342729145121L449.5085472927335,62.377170784020876L449.5085472927335,62.60680089138873L449.57608400918366,62.801102210317254L449.74933030811144,62.85703726229286L450.222087178935,62.809934043191674L450.38358799542516,62.86881307011339L450.52747054015504,62.945355612496115L450.75063528376927,63.33984170558085L450.941499854463,63.54297099029603L451.08831876980094,63.657782738520154L451.2410104263538,63.70782879689972L451.3379108970073,63.8226400550725L451.355529168771,63.98749666846484L451.355529168771,64.14057716314878L451.4729842817967,64.2848255591482L451.74019468076926,64.32309544568895L451.94280478200926,64.36430911996905L452.01034149845964,64.53799486486108L452.1248602408766,64.67046652690831L452.35683409631724,64.54682634878952L452.5095257528724,64.5762645015005L452.5682533093852,64.69990463406063L452.75030876825303,65.24156144900658L452.95291886949303,65.52121821939937L453.1173560565944,65.65663030925549L453.358139023866,65.80970422934098L453.5490035945595,65.96277754928931L453.7721683381742,66.19533009209613L453.8954962405264,66.40727551231288L453.94541468521356,66.64865642226317L453.9542237970393,66.86943034898886L454.0981063417687,67.06371035039493L454.29190728307094,67.10197751159839L454.465153582001,67.12258288695207L454.63839988093105,67.27565112727777L454.66776368324076,67.45815470582318L454.8292644997339,67.61416517354624L455.1757570975915,67.79666723196061L455.4077309530344,67.85553867265148L455.54280438593537,67.97033773660954L455.38717631065947,68.11457200709947L455.3401942846931,68.29707175214347L455.4077309530344,68.58848084294985L455.5222496954516,68.74154335056454L455.6866868825532,68.86811384238905L455.8511240696546,68.86811384238905L456.0243703685851,68.76214787003778L456.2240440992159,68.90637925478825L456.36792659583375,69.08004488973219L456.55291842531005,69.19484040335294L456.53236378293536,69.37733517483949L456.6968009700372,69.45680842544203L456.8406835147639,69.45680842544203L456.9933751713195,69.5245077645028L456.80251060062574,69.63047170363103L456.8230652430004,69.77469988924199L457.01392981369395,69.8129644291767L457.27526747144657,70.01606023725836L457.504304956281,70.03372069553532L457.68636041514605,70.0925888172795L457.8214337999382,70.15145685220864L457.9946800988655,70.2574191253288L458.2178448424802,70.41047521380233L458.39109114141024,70.48700303830535L458.55259195790313,70.63122817804069L458.708219985067,70.80488629977964L458.8990845557605,70.89318677138056L459.11050376882895,70.88435670886506L459.45699641479814,71.01975038524157L459.6507973561004,71.04624042929589L459.92094417379326,71.24932992893915L460.48766514465683,71.28759305858404L460.49647425648254,70.87258330522377L460.6021838870713,70.72835908305868L460.93105821316544,70.60473785963231L461.0543861155204,70.4193053326162L461.40087871337755,70.41047521380233L461.52714298634123,70.4693427803985L461.63285261692977,70.56647407828746L461.6915801734426,70.43107886955733L461.88244474413636,70.22798517269655L462.0380727713032,70.11024924169612L462.1614006736552,70.3045133465703L462.22012823016826,70.50760665463628L462.3640107748977,70.5547006294203L462.5078932715153,70.38104137389416L462.65177581624243,70.4193053326162L462.7868492010316,70.4693427803985L462.9131134739948,70.39281492210336L463.04818685878695,70.33394724283136L463.1803238729676,70.3045133465703L463.3535701718977,70.39281492210336L463.55618027313744,70.47817293443822L463.7793450167519,70.545870492272L463.9232275614788,70.51643680022642L463.99957338975764,70.40164504481731L464.10528297223755,70.49877655531765L464.1258376146095,70.6900954198691L464.33725687578954,70.64300160439706L464.73954065955127,70.67243525158793L464.6837494736469,70.4575692547225L464.80707737600187,70.33394724283136L465.1153970597213,70.68126531258827L465.32681627278953,70.77839609624547L465.52061726220063,70.71952898421765L465.6733089187562,70.81665967508593L465.7878276611734,70.80488629977964L466.1754295437804,71.00797706957806L466.3369303602733,71.00797706957806L466.5013675473749,70.854923265611L466.8184963910319,70.83431977978108L466.9447606158835,70.74896257515624L467.10626143237687,70.60473785963231L467.2795077313069,70.61356798379222L467.48211783254646,70.57530421088737L467.5790183513093,70.31334353701502L467.59957294557216,70.0925888172795L467.9431291728213,70.0925888172795L468.0106658892719,70.24564553723275L468.36890401767823,70.29568320240185L468.5304048341684,70.39281492210336L468.70365113309845,70.4693427803985L468.86808832020006,70.32511705694012L468.95617963091627,70.0925888172795L469.2145809180606,70.10141905457678L469.30267227688296,69.96602222164944L469.4553639334383,69.8600592230969L469.6579740346783,69.87183287671536L469.8018565312984,69.99545636742405L469.9751028783378,70.0925888172795L470.19533120323194,70.29568320240185L470.3215954761954,70.35160756053719L470.486032663297,70.38104137389416L470.67689723399053,70.56647407828746L470.90887108943343,70.59296442202171L471.3610733178798,70.56647407828746L471.6400292473986,70.49877655531765L471.5901108027142,70.3045133465703L471.7075659638492,70.19855124659799L471.91017606508876,70.26624927795663L472.1215952781572,70.29568320240185L472.3036506889157,70.2574191253288L472.51506995009345,70.12202286970751L472.7176800032239,70.10141905457678L473.1405184774694,70.29568320240185L473.38130149284734,70.16911725058634L473.50462934709344,70.22798517269655L473.65144826242863,70.32511705694012L473.7366032506452,70.02489044326344L473.90984954957275,69.97779589221048L474.1506325649534,69.97779589221048L474.3826064203963,69.94836173340255L474.4883160509851,69.8129644291767L474.57347099109006,69.66873638208588L474.729099066363,69.74526562872245L474.9111544771215,70.02489044326344L474.90234536529306,70.29568320240185L475.1137645783615,70.36338106919038L475.32518379142994,70.2839096255808L475.4866846079228,70.12202286970751L475.6129488808863,70.03372069553532L475.70104019159953,69.70700102378314L475.82436809395153,69.50390364050773L475.99761439288204,69.3979393643811L476.16205157998365,69.35084407208848L476.29712496477555,69.32140944991363L476.41164370719,69.14774487041447L476.60544464849477,69.00351436295668L476.75813630505013,68.94464463027617L476.93138265208927,68.90637925478825L477.1251835933915,68.96524904423731L477.48048535118664,69.24487938812874L477.59500409360385,69.3979393643811L477.70952283602105,69.58043320393085L477.93268757963574,69.59220694018248L478.1529159526415,69.54216844061332L478.4142536103943,69.45680842544203L478.7490006777052,69.48624294741919L478.91343786480707,69.54216844061332L479.15422088018795,69.54216844061332L479.327467179118,69.3979393643811L479.50952263798285,69.35084407208848L479.8472061240145,69.40676975561883L480.252426278385,69.40676975561883L480.4051179830524,69.28314443744017L480.5578096396048,69.05061011516838L480.73105593853506,68.98290996886217L480.81914729736013,69.15657526900961L480.9424751516033,69.10947969070381L480.99239359628746,68.92404020561577L481.15683078339225,68.88577481025493L481.21262196929365,69.11831009780585L481.42404118236186,69.20367083970521L481.51213254118716,69.40676975561883L481.6853788401145,69.47446913159695L481.87624341081096,69.53333807942533L481.9643347696333,69.70700102378314L482.06123524028453,69.8129644291767L482.19337225446793,69.78353019691667L482.31963647931934,69.71583129823279L482.463519024049,69.74526562872245L482.6191470512131,69.79236045440973L482.78064786770597,69.73643531256846L482.96563969717954,70.02489044326344L483.11833135373513,70.07198498695888L483.21523182438887,69.76586962783804L483.3003868126025,69.58043320393085L483.31213229503965,69.3390702161876L483.4560148397668,69.36850482529124L483.56172447035533,69.50390364050773L483.70560696697316,69.3979393643811L483.7819527952522,69.17717957298873L484.1959821095602,68.98290996886217L484.378037568428,68.84750937798131L484.58064766966754,68.81807438269607L484.7744486109698,68.83867886239887L484.8684127110123,68.71210832482961L484.9858678240382,68.5119493673484L485.1767323947345,68.47074005740342L485.2149053088724,68.66501217066744L485.3705333841456,68.7238823184563L485.5144158807634,68.76214787003778Z\" stroke=\"#000\" fill=\"#FFF\" strokeWidth=\"0.5\"></path>\r\n        <path id=\"Marsabit\" ref={(item) => countyRefs.current[9] = item} d=\"M222.22994398047854,46.34962552442957L222.65278240661496,46.52339567395984L227.1571864674338,46.61764354096513L228.46387470809054,46.65887689517129L229.21558750843042,46.65887689517129L232.2077568567438,46.744288732454834L232.8243962241852,46.726617336332765L234.7770876827026,46.75312440309702L236.25702227039847,46.83264558140854L240.0390772850808,46.34962552442957L240.97284554428552,46.36729710797806L241.75098572822003,46.91805695335481L242.68475398742498,46.97696124006853L245.08083856256235,46.850316924876495L247.52684153427526,46.706000704476054L249.11248570445105,46.64709596927926L250.5571837486175,46.5705196628241L252.26909219175673,47.43052103011806L253.7225993477523,47.786885399446305L255.24364322019528,48.43481154181683L255.96305589572557,48.75288008021138L256.1069383923434,48.80000108045641L256.08932012057744,49.079780897586005L256.86746035262104,49.050330472738636L257.09062509623527,49.176967051318115L257.3989447799547,49.19463723727202L257.4547359658591,49.35072346291662L257.94511110844337,49.78363836292033L258.23581256850844,50.01629119394195L258.53238672168163,49.93972208670198L258.67626926641105,50.01629119394195L258.8230881817467,50.113474823417135L259.0609347784068,50.32551093072672L259.38099999267524,50.0074562792542L259.5336916973397,49.842537941491884L259.5718646114776,49.659948949454616L259.92716636927275,50.033960968581766L260.1591402247161,50.19004356248601L260.3411956835812,50.13114455053838L260.3705594377841,50.39324444874438L260.69649739326974,50.60527891673033L260.6876882814413,50.74957941869877L260.8991074945095,51.02934413105115L261.13989050988744,51.288492682847306L261.1780634240283,51.46223895387138L261.51574691005726,51.43573535705815L261.80351195140474,51.45340443983048L261.93858538430277,51.50346675419911L262.36142381043965,51.686046506494904L262.57284302350786,52.033534472825096L262.72847109878353,52.14838144888833L262.77545312475036,52.283841516524404L263.50661128271554,53.47940216038367L263.92944970885196,53.79742652010009L264.22896028074274,54.03888762785667L264.4022066277821,54.12722667364892L264.6136258408503,54.021219793275066L265.6912765966756,54.74559397216973L268.88605599811945,56.80968810794363L270.01068882802065,57.513397327199954L270.60970997180493,57.919717159368304L272.4185188855952,59.10626363485545L273.23483203177443,59.62739012911689L273.54315171549365,59.83937171488711L274.43874706056295,60.40759430985378L277.68931764790864,62.530257674860906L278.15326535879467,62.801102210317254L278.3441299775975,62.87764488743869L278.5555491906655,62.945355612496115L278.6524496613167,63.09844024056173L279.1516339157324,63.41638331195634L279.94151967831954,63.93745097220361L282.15554874648296,65.41524327313314L284.76305253468877,67.38162103921968L286.28409640713176,68.41481305435747L287.89910437961976,69.48624294741919L288.4863799928578,69.8600592230969L289.2469019531327,70.40164504481731L289.26452022489866,70.5547006294203L289.7754500098579,70.88435670886506L290.7004091091278,71.51128448682033L292.0746340662354,72.47373208446041L292.70008259361157,72.83280456393541L293.74836959523645,73.55388302549824L294.3650090107842,73.960035852381L295.0110121805351,74.41327410949924L295.8566890809177,74.96362813070769L296.6348293129586,75.43451336871777L297.4335241392648,75.9760246819819L298.3203103243966,76.55284417606464L298.81949462691864,76.89128042577383L299.88833627091526,77.57697319623475L300.59893978650825,78.04782864126352L301.4563621693278,78.59813423523534L301.84102772943515,78.86004182346622L302.2638661555716,79.18668829368804L302.9568513993986,79.6016139429884L303.75554627381393,80.05479046493224L304.5454319882922,80.49913416015582L305.2178625897441,80.85519421563387L305.68181030063033,81.14357130559964L305.8433111171205,81.19359566557739L306.142821689014,81.12591562085666L306.3248770997702,81.3377833041217L306.55685100332244,81.3377833041217L306.77707932821886,81.99397793599084L306.920961872946,81.96455236390216L306.9973077012248,82.27351966397467L307.0648444176727,82.44712885173195L307.34380034719175,82.676645003972L307.4495099296712,82.90910245518674L307.663865561457,83.00620453999787L307.7108475874238,83.18863814542283L307.8635392439792,83.30339438654534L307.9809944051169,83.43874755149315L308.18066808763615,83.43874755149315L308.2775685582899,83.70062521804093L308.450814905329,83.91248012437197L308.79730750318663,84.0566585378387L309.0468996303932,84.23026055256193L309.63417529174035,84.69221492656487L310.2126417450411,85.17476076455759L311.6162305044609,86.29283409626152L311.9920869046307,86.75476657237377L312.385561576564,87.15196573065026L312.69388126028616,86.88128221779297L313.10791057459414,86.84303333135253L313.2635386498671,86.8724555769073L314.5526086187606,86.56352125231388L315.0136200071447,86.4752538806224L315.3395579626299,86.4752538806224L316.3232446184129,86.53409879883651L317.4772412506236,86.61942382075574L318.70758366300424,86.68709522484451L319.74706155279773,86.76653545815435L321.6234071349295,86.88128221779297L323.4322160968288,87.0166242074499L324.3072567514116,87.14019690027834L324.5480397667923,87.09312164359622L325.97218316858425,87.17844552717509L327.71345541403593,87.34320848014772L329.29322684299177,86.79301553598893L330.44722342709315,86.3605060547244L330.9375985696804,86.29283409626152L331.3046458580218,86.186912619937L331.2547274133374,85.98389566908023L331.24591830150894,85.71320491237165L331.322264129788,85.58962817796208L331.3046458580218,85.42485860363186L331.1313995109824,85.31010800776912L331.02568992850297,85.2041840890941L330.9875170143648,85.06883651509094L331.24591830150894,84.91289204983582L332.08278604195334,84.81873662075537L332.2560323408836,85.14533737183442L332.6406979009912,85.41603166774249L332.67887081512913,85.74262792013252L333.00774514122327,86.33991026287299L333.0752818576739,86.74593985775505L333.3630468990184,86.80478441147639L333.5451023578862,87.03427747751246L333.67136663084966,86.94895326492252L333.9121495981185,87.12254367289617L334.03547750047323,87.24611611526095L334.15293261349916,87.14019690027834L334.4788706170939,87.1902143472768L335.27756544339763,87.15196573065026L335.4508117423277,86.97837543927443L335.5858851271196,86.86068667141876L335.7503223142212,86.84303333135253L335.76794058598466,86.99602872475228L335.8736502165734,87.2196363114015L336.01753271319103,87.32555533449599L336.22895197436833,87.228462930533L336.9219372181981,87.43147410187657L337.88506923160344,87.63154212330252L338.1552160011847,87.75805528758409L338.3666352142527,87.40205223162363L338.74249161442276,87.03427747751246L338.5486906731205,86.43700463884312L338.95391087560006,86.26341150850479L339.2211212745726,86.29283409626152L339.3004034734604,86.41935112762414L339.52063184646636,86.94895326492252L340.4720183293282,88.33765740979229L340.4338454151871,88.49064755316274L340.5219367740126,88.77014742709218L340.84787472949824,88.89665727760101L342.686047445598,89.47330242946413L343.2439593046356,89.6174625588813L344.697466460628,90.05288209796896L347.005459676943,90.69717753258783L347.96859169035133,91.0560960800309L349.0462424942857,91.39147639993004L349.7392277381123,91.66213235070353L350.5173679220443,91.7003770830201L350.84624224813797,91.61506188854773L352.3379223663808,91.50915309628783L352.27919480986793,91.22967040291923L352.2880039216964,91.07374774085613L352.58751449358715,90.7854364743286L352.73139703831384,90.75601683035592L352.8752795349344,90.91194064601535L353.11606255031234,90.82368195367201L353.29811800918014,90.96783767165638L353.3774002080652,91.11199297410175L353.5300918646203,91.13258654401895L353.81785695407666,91.21790270284606L353.9646758213032,91.20907687756497L354.22307710844734,91.3238121334455L354.40513256731515,91.14141238434564L354.63710642275805,91.57681708370478L354.85733479576106,91.51797886260402L354.9835990687245,91.72097038325265L355.1069269229704,91.79745976360343L355.2713641100718,91.77686645016323L355.29191875244396,91.19142526999897L355.7999121667974,91.1796575598961L355.9731584657245,90.99725717649082L356.34020575406885,91.0560960800309L356.4547244964831,91.17083172709295L356.695507511864,91.23849622415023L356.889308453166,91.31498637718778L357.0508092696589,91.15023817473408L357.19762813688817,91.06492193541237L357.4853932263418,90.93841819570571L357.65863952527184,90.95901184535921L357.80252206999876,90.86192740034238L358.01394128306697,90.7854364743286L358.04330503727033,90.37061800585553L358.46614351151607,90.36179206172525L358.56304398216685,90.49712330264086L358.71573563872244,90.65893194513507L358.90072746819874,90.83250780663099L359.02405537055097,90.96783767165638L359.25602922599387,91.19142526999897L359.40872088254946,91.2973348112697L359.71704061437777,91.42089562700835L359.91965066750845,91.57681708370478L360.08408785460983,91.59446853984173L360.31312533944447,91.7003770830201L360.5920812689633,91.78863405211263L360.8035004820317,91.73862178283676L360.9473830267584,91.78863405211263L361.09420194209406,91.82687867695734L361.2674482410241,91.77686645016323L361.4788674540923,91.83570433275676L361.4671219716554,92.08576453687189L361.55521328237114,92.27110236365155L361.842978371825,92.37700931723006L362.10431602958056,92.57705518294102L362.2393894143697,92.62706652315853L362.535963615652,92.77121646815328L362.77674658292335,92.84770402151076L362.9499929299627,92.83005305541221L363.2876764159919,92.74179816996354L363.440368072547,93.33016103722963L363.65178728561546,93.38899689971711L364.0070890434106,93.35075359535162L364.23025378702505,93.35957900209112L364.50920971654386,93.28309226347531L365.0465668850977,93.2448488699759L365.2491769863375,93.29191768335295L365.5105146440899,93.49490128922997L365.7982796854376,93.44489090577196L366.04787181264396,93.51255199683823L366.2974639879594,93.5331444723605L366.50888320102763,93.47430879639512L366.6351474739913,93.57138762334552L366.7790299706089,93.6008053839748L367.04036762836427,93.69788394110114L367.17544101315343,93.66846624320237L367.3075780273341,93.59198007224157L367.4720152144357,93.51255199683823L367.61589775916536,93.4272401719048L367.877235416918,93.35957900209112L368.1356366559528,93.32133562477782L368.3294376453641,93.35075359535162L368.62601184664913,93.45665807394357L368.866794813918,93.39782229902787L369.13694163160835,92.98302788260992L369.2896332881637,92.88594774976744L369.47462511764,92.58882257625942L369.6566805283958,92.4446720019867L369.82992687543515,92.5299856272548L369.9062727037142,92.73297264303994L369.86809978957353,92.92419144575342L369.80937223306296,93.09775862818833L369.66548968833354,93.36840435891884L369.61850761425785,93.59198007224157L369.51279803177795,93.75377756777354L369.2426512140878,94.03324467296281L369.1281324716706,94.20680762534104L368.9636953326808,94.3803698700759L368.84917654215474,94.54510628041109L368.8110036280136,94.6892502012866L368.684739403162,95.00695353840604L368.65537560084977,95.18933780528783L368.67593024322423,95.40407960593899L368.7052940455342,95.55704576465533L368.7317214291286,95.86591823150519L368.90496772805614,96.183613445464L368.99305908688143,96.32775218607364L369.10757782929863,96.44247455688586L369.21328745988717,96.56896301376844L369.2896332881637,96.7513411067809L369.3395517328506,96.91606904084443L369.34836084467656,97.0807964387242L369.41589756112717,97.52202766053057L369.4452613153278,97.80147188192598L369.48343422946846,98.00443562349764L369.66548968833354,99.3839774324432L369.7535810471586,99.94284208870826L369.80056307312566,100.38698775707036L369.85048151780984,100.66641501445537L369.9268273460864,101.31056209332971L369.9356364579148,101.46645024971235L369.96500026022704,101.71645850309338L369.9943640144277,101.85175658870276L370.02079144612867,102.26647213126614L369.97380937205276,102.44000451142594L370.0619007308783,102.55471201430188L370.185228633233,102.68118409063803L370.379029574535,102.81353821752808L370.50235742877794,102.96059794266776L370.5522758734651,103.1135395655281L370.59044878760346,103.29589237951163L370.61981258991295,103.49000920325076L370.6961584181922,104.13411842229308L370.72552217239263,104.56940200643143L370.781313358297,106.5545989204578L370.793058888843,108.0868222003013L370.8106771606092,108.76027968409863L370.878213828948,109.84837957342376L370.898768519432,110.90116741761707L370.88702298888575,111.70103633543317L370.9163867430891,112.27740469213074L370.88702298888575,113.05960847154472L370.7431404441586,113.16546974476586L370.48473915701493,113.39483504279016L370.3291111298506,113.48305221216006L370.21459238743364,113.55950695433049L369.888654431948,113.82121657674989L369.21328745988717,114.19466504865213L369.0312320010198,114.28288085514708L368.65537560084977,114.4475499436507L368.21198253234115,114.65926654928549L367.96239035702274,114.95625647559186L367.80088958863917,115.12974484123649L367.48082437437347,115.4384938967446L367.09615881426566,115.7942881960015L366.64395658581975,116.28533916562711L366.50007404109283,116.45882318225338L366.4149191009851,116.57643910233134L366.30920947039635,116.75874329401378L366.2798457161962,117.01749649295564L366.1242176409228,117.13511121751736L365.9127984278548,117.15275340125962L365.70137921478636,117.20273951646803L365.53987839829324,117.249785282721L365.25798609816593,117.3762204732804L365.03775777326905,117.46149059383814L364.8351476720293,117.48207300623801L364.6912651273026,117.54970091092096L364.50920971654386,117.70259841474726L364.327154257679,117.81727125403995L364.13335331637404,117.92312290857683L363.9601069693347,118.04073557916746L363.8455882269204,118.18481073007166L363.76924239864115,118.32888554004583L363.60480521153954,118.56116855571332L361.7372687412362,118.63761591222428L361.57283155413484,118.65525759807466L361.428949057517,118.72288401467239L361.2850665127903,118.90812110725474L361.1499931279982,119.12864062583421L361.07364729972187,119.27271284835118L360.95912855730467,119.40796399179823L360.82405512440346,119.49617109703303L360.6889817396145,119.53439412305454L360.53629008305893,119.55203551423679L360.3718528959573,119.6020194325699L360.2749524253063,119.77549260387624L360.12226076875095,120.16948047426013L360.0165511381624,120.38117425017035L359.91965066750845,120.6898929038862L359.78457728271906,121.43081043224865L359.7464043685811,121.67190048762279L359.7258497262062,121.8835884202874L359.67005854030185,122.04823404578181L359.4292755249239,122.03941373200851L359.25602922599387,122.07763496904403L358.8889819376525,122.1070359247172L358.6863718845191,122.1070359247172L358.5248710680289,122.09527553470616L358.0609233090338,122.11585617944482L357.51475698054514,122.09527553470616L357.503011498108,122.37458369524865L357.5323752523084,122.9537760921321L357.5529298946833,123.61822280205189L357.60872108058743,124.58253839946124L357.6498304134434,125.63209471198385L357.6498304134434,125.91138510996373L357.59110280882146,126.27593046856205L357.4942023381702,127.21080225633722L357.4354747816574,127.69293139726855L357.40904739806547,127.84874053485336L357.379683595753,128.16623712115035L357.32976515106884,128.5601656237551L357.29159223693046,128.90705562966673L357.282783125102,129.07168068690615L357.185882654451,129.24512441276062L357.0331909978954,129.36859253932923L356.93629052724464,129.47442210430475L356.8599446508565,129.59201035264732L356.7336804260019,129.88891949004176L356.6866983519262,130.06236081884933L356.6573345977258,130.21816355826576L356.6573345977258,130.60325911949698L356.61035252365014,130.74730186972812L356.48408825068645,130.92955952928443L356.18457772690476,131.17060910050762L356.0612498245498,131.297012708742L355.79110305496874,132.02897265436965L355.40643749486117,132.9225982281822L355.2126365535589,133.38704300883842L355.0893086512044,133.7045095420922L354.78098896748475,134.41586362503625L354.560760594479,134.95672226293658L354.45505101199956,135.23596803495883L354.23188626838464,135.58281885572183L354.0791946118295,135.79445567231517L353.95293033886605,136.03548561754718L353.75032023762606,136.36175636230877L353.577073938696,136.67920723446343L353.47136430810747,136.8438107766637L353.25994509503903,137.22004576007075L353.0191620796611,137.29646820684195L352.84591578073105,137.36407262216406L352.54934157944876,137.45225212425362L351.3366174388343,137.7491223103474L350.9813156810367,137.85493709567123L349.87430112290167,138.13416964834505L349.4220988944553,138.26055866801175L349.2282979050415,138.30758711169983L348.8935508377301,138.44279361070937L349.0080695801446,138.66323838739117L349.0550516061114,138.8190188691957L349.13433380499873,139.49210372295943L349.08441540842364,139.72430160300195L349.15195207676516,139.91534985414188L349.2664708191794,140.36798495056365L349.3927350921431,140.62075381571086L349.4602718085937,140.9763919882654L349.51899936510654,141.17919303695544L349.53661763687,141.3908108099671L349.6041543052113,141.65827116108022L349.6805001334901,141.8610700394829L349.7392277381123,142.0462336690611L349.8155735663888,142.21964037475286L349.89191939466787,142.4400719780959L350.09452944779855,142.9220797254395L350.1327024100458,143.17189944667348L350.12389325010804,143.32472983182888L350.17087532418645,143.4599256373633L350.43221293383,143.91253565899103L350.5173679220443,144.25052161216087L350.58490463849444,144.40334946149216L350.70235975152036,144.5767498540524L350.7875146916251,144.75014978719696L350.8256876057635,144.9735117565897L350.8374331363095,145.14691068926146L350.86386051990166,145.28210272189673L350.88441521038544,145.47313447401797L350.9225881245263,145.67592143939436L350.9137789645888,146.1196993885119L350.93139723635227,146.2637061896503L350.9989339528024,146.4459184234339L351.09583442345365,146.61931344786552L351.11638906582857,146.79270802097392L351.09583442345365,147.2541117763293L351.0371068669408,147.40987154042773L350.9901247928651,147.56269209682546L350.9695701504902,147.94768079712046L350.9901247928651,148.17103203087356L351.01948859517734,148.38262728554696L351.02829770700305,148.60303823331708L351.0870252635159,148.94100034984848L351.1721802517329,149.3171649028615L351.1839257341701,149.46998115371125L351.04885234937797,149.8079389716827L350.9020334340423,150.2223023668817L350.8550514080757,150.4221363218155L350.81687849393506,150.63372455251707L350.731723505721,150.82767990514347L350.70235975152036,151.0480829825725L350.81687849393506,151.3948491542064L350.8374331363095,151.57998631000214L350.8374331363095,151.8679764365263L350.84624224813797,152.07956026121744L350.9020334340423,152.25294097315384L350.9607610386645,152.38811890501313L351.02829770700305,152.5908852182779L351.06647062114416,152.8024669099741L351.1046435352823,152.9640913288889L351.15456197996673,153.28440050234235L351.16337109179517,153.43720803186415L351.222098648308,153.81334825460698L351.24852608000924,154.06312780590358L351.2778898342124,154.2570736351762L351.2778898342124,154.57443843218797L351.26027161055526,154.86241636193256L351.222098648308,155.13276193472103L351.26027161055526,155.67932714084728L351.26027161055526,156.11422549510638L351.24852608000924,156.34636610456624L351.222098648308,156.59613682420252L351.2309078082458,156.7783220113188L351.19273489410466,157.01927590570057L351.4217723789393,157.50118127163043L351.539227491965,157.7127485332228L351.6625553943172,158.1358811414049L351.8945292497601,158.73237652719183L351.94151132383604,158.97332405034726L352.0883302391742,159.46403182572163L352.41426819465687,159.81075752233994L351.9708750780394,160.11046829996235L347.65146284669413,162.63151808805077L346.36239287780063,163.36313597285871L344.6681027064276,164.52078242616093L344.11019084738996,164.86748538661L343.85178956024583,164.9997022241853L343.52291523415147,165.1848054365758L342.86810290446556,165.5697011762507L342.5333557890426,165.75186495071225L341.23254028960287,166.50402060732893L340.7333559870806,166.7831390907211L340.4074180315954,166.98292858418478L339.7408602194721,167.37075377827074L339.40611310404915,167.55291348770655L339.2328668051191,167.66749759860014L339.0684296180175,167.76445325546345L338.357826102427,168.16696496551737L337.4416761149855,168.69874743399572L337.30660273019384,168.76632172932204L336.98947388653687,168.95729238673064L336.4227529156733,169.27459644428302L335.6328672011955,169.73879830500005L334.9898004020529,170.10310687460168L333.9679407840231,170.69951176150124L331.74510255592463,171.9716323694694L331.2547274133374,172.25954616059292L331.0814811144073,172.3476828620136L329.24330839830736,173.4346946031564L328.99371627109826,173.56983564123004L328.5796869567903,173.8195522290672L327.6371095376478,174.3483614979446L326.7238959689239,174.8977322495267L326.48311295354597,175.0240576182132L324.6743040397557,176.08165864682323L324.6155764832429,176.20798233923654L324.44233013620374,176.9571077874416L324.36598430792446,177.16862442455738L324.3072567514116,177.51527567453178L324.23972008307305,177.82373538237385L324.02830082189575,178.69916784632602L323.9725096359914,178.97824692298133L323.87560916534017,179.3542679232477L323.79926333706135,179.73028740945568L323.66418995227195,180.26787512428643L323.3353156261778,181.71317788257892L323.029932264958,182.99395645929621L322.78914929768644,184.08965506925108L322.7304216930643,184.28353080484158L322.6716941365514,184.52440616003253L322.6452667529595,184.66834355745388L322.565984554072,184.91803047723926L322.42210200934505,185.06196730848643L321.6234071349295,185.67883725496367L321.47071547837413,185.81396063414036L320.93042193921156,186.21639229724377L320.18164550948063,186.815630580792L319.4886602656536,187.34436742046188L318.85146620773116,187.85547708249328L318.4668006957329,188.14334232991257L318.34347279338067,188.2490885719363L318.19959024865125,188.3548346591715L317.37153162003483,189.00987074835206L316.898774749214,189.39466586397583L316.4465725207649,189.75008605246347L316.34086289017637,189.8470186173479L316.14999831948285,189.9909486073737L315.5421680638699,190.4814841689643L314.74347318945433,191.136507245007L314.56141777869834,191.27162366014232L314.1561975762163,191.59766464702383L314.02406056203563,191.71515665118136L313.4162303064227,192.2056844622365L313.0403739062526,192.49353813028046L312.79078173093694,192.70502194714024L312.6645175060828,192.7931400578484L312.5030166895899,192.93706622665718L312.3591341929721,193.04280778980035L311.4635388479055,193.77418409598732L310.61786194752335,194.45562282097282L310.46223377602905,194.5731119320895L309.7898033189042,195.12237143524467L309.15260926098176,195.6305076831958L309.0468996303932,195.72743519591802L308.7415163172825,195.95947334695632L308.0103581593173,196.55572123439993L307.7020384755981,196.79656923719787L307.2674545189152,197.15196607109453L307.12357197418555,197.2782638765987L305.85505659955766,198.27689290536003L304.6217778165683,199.26082823293413L303.582299926775,200.0685304058453L303.7761009161861,195.81261379162174L303.8436375845274,194.1090294622713L299.11900519881215,190.64597465044804L299.0132955682236,190.78990362302744L298.95456801171053,191.01020268992866L298.9751226540852,191.2422505280711L298.8694130716058,191.35680561194016L298.78132171278025,191.4919217070304L298.8106855150929,191.72396857290502L298.7137849963299,191.92664195247409L298.68442124212925,192.09994215319588L298.6462483279911,192.25268104908628L298.5111749431992,192.28205386364908L298.21460074191714,192.28205386364908L298.02079980061217,192.34079951758795L297.89747189825994,192.48472626980228L297.74184387109585,192.49353813028046L297.5392337698536,192.41716882609063L297.3571783109885,192.42598069191482L297.0606041097062,192.63746463694343L296.91378524247716,192.64627648534713L296.70236598129986,192.62865283597057L296.4997559281692,192.67564919604678L296.28833666699165,192.7931400578484L296.12683589860785,192.77257916835396L295.9330349091965,192.7138337420887L295.7421703385003,192.59046826078418L295.61590611364863,192.70502194714024L295.4720235689192,192.89888175681307L295.2606043558508,192.88713266804123L295.13434008289005,192.81957551601687L294.9816484263349,192.83132456375478L294.8172112392331,192.83132456375478L294.3650090107842,192.92531714188897L294.15358979771577,192.87832088674546L293.9979617224428,192.89888175681307L293.836460954059,192.9928742782731L293.6925784093321,193.06043137396892L293.5281412222305,193.1573610134169L293.31672200916205,193.18673359013707L293.0671298819557,193.18673359013707L292.70008259361157,193.11917661851936L292.4504904664052,193.11917661851936L292.2008983391986,193.16617277279914L291.99828823795906,193.2249179620964L291.86321485316716,193.28366316885786L291.4579946506876,193.36003183410978L291.12324758337354,193.49514549613605L290.9500012363342,193.53332976368404L290.7650094068606,193.43640044764965L290.62112691024004,193.33947104841013L290.4302623395465,193.407027887886L290.31280717841173,193.54214149368846L289.9868692229263,193.59207476180012L289.7754500098579,193.68606670499832L289.64918573689715,193.59207476180012L289.57283990861833,193.4745847350487L289.3819753379248,193.5039572291198L289.1793652366848,193.6185099841593L288.997309777817,193.8035565123604L288.86223639302784,193.92692071292493L288.70660836586126,193.99447720213283L288.53336206693393,194.091406089548L288.410034164579,194.2558911807689L288.0723506785471,194.34107090833774L288.0253686525805,194.5437396174623L287.7258580806897,194.6024840948337L287.52324797944993,194.69647520579537L287.2942104946155,194.64947963585655L287.1385824193426,194.49674398505033L287.0534274792376,194.3322591920932L286.9359723662119,193.98566550725377L286.8008989814198,194.01503786898854L286.792089821482,194.21770715597853L286.4837701377628,194.5231789975648L286.44559722362465,194.70822405918778L286.2929055189602,195.07243888298268L286.01394963755047,195.13999469799552L286.0902954658295,194.95788758430126L286.0227587493789,194.74640792067765L285.87006709282355,194.50555568864542L285.68507526334747,194.4379994535526L285.5999203232425,194.2735145762268L285.45603777851557,194.02384960971568L285.1858910089343,193.96510483509343L285.0889904901712,193.78299580726076L284.94510799355385,193.67725493807046L284.166967761513,192.3290504181602L282.93368897852383,190.1172543993495L282.1056303499047,188.66326025546843L281.961747805178,188.3842085827934L281.90595661927387,188.2490885719363L281.80905614862263,188.0669699936243L281.72096478980006,187.87310151213313L281.4801817744194,187.41192800996862L281.2599534495225,186.95956477189344L281.1248800166243,186.71869521436201L280.93401544593075,186.31332813921392L280.6726777881754,185.910896859422L280.1911118055259,185.2059039815556L279.827000887793,184.63896861587068L279.5656632781495,184.27471825555466L279.45995364756095,184.08965506925108L279.1252065321403,183.56090122973302L278.58491294486885,182.75307736418915L277.8831185892136,181.654426170406L277.7480452044217,181.36654224661515L277.60416265969457,181.21378715829678L277.325206730176,180.77902127894896L277.18132423355814,180.5381366879026L276.67039440049007,179.75966384118203L276.60285773214855,179.63334498952412L276.3914385190801,179.3160783611072L275.9979638471441,178.66979103229363L275.77479910352963,178.32608187477356L275.6514712011774,178.15275797163562L275.51639781638573,177.9206796460418L275.33434235752065,177.659223645152L274.8909492890093,177.4095177960121L274.62080247131894,177.29494664662826L274.1480456004979,177.1128075773584L273.7369526567986,176.9394813747581L273.4374420849051,176.83372287483473L273.3111778600535,176.77496804048394L272.9764307446303,176.648645142595L272.80318444570025,176.59282797516124L272.68572928456524,176.4371272427009L272.406773403158,175.32077472911618L272.07202628773507,174.0692681519073L272.0132987312222,173.81073873667435L271.71378815933144,172.68260145614613L271.5405418122921,171.9804460491973L271.2909496850857,171.04618857309384L271.23515849918135,170.8934159339272L271.088339583843,170.86403652640792L270.3101993999114,170.8258433102588L270.098780186843,170.8258433102588L269.92553388791293,170.79646387926374L269.39698578307866,170.78765007685286L269.2119940017142,170.68188408739198L269.10628437112564,170.54673849559808L268.81851932977816,170.10310687460168L268.6658276732228,169.8827591436367L268.4808358437465,169.72704642029083L267.73205941401784,169.21877452165495L267.50008551046585,169.07481253531603L267.22112962905635,168.8720901434459L267.047883282017,168.76632172932204L266.9128098972278,168.66055322796672L266.76892740061,168.5635986292858L266.56631729936726,168.39906932761852L266.39307100043993,168.22572562365178L266.30791601222336,168.11995637985177L266.1053059109836,167.8026478780469L265.9907871685664,167.5911082092129L265.93205961205354,167.45595757954607L265.90269580974405,167.29142605259608L265.86452289560566,166.64798711607597L265.81754086963906,166.33948714668276L265.68246748484717,166.36886816535173L265.2772472823676,166.31010616543296L264.78687213978037,166.29247755227811L264.5167253701993,166.2719108400777L263.9411952393982,166.19552013496192L263.81493096643476,166.1279436592552L263.5947027377588,166.06918153142715L263.2775737978807,166.01041926431236L263.1131366107793,165.9722237964969L262.9486994236777,165.94578074004L262.6022068258203,165.84882290405716L262.39078761275186,165.76067934121784L261.85343039608915,165.4933098017031L261.6801840971591,165.4639285102553L261.51574691005726,165.4639285102553L261.26615478285066,165.44336158536066L259.610037525616,165.4139802273773L258.60873254996045,165.36697008984737L258.46485005334284,165.2905785211108L258.26223995210034,165.06727965422354L258.0508207390319,164.79990783453314L257.94511110844337,164.6353708632712L256.9261879091339,164.2005215420788L256.6560410914433,164.02716873888517L256.30073938175474,163.82737188684294L256.174475108794,163.74804064130655L255.9454376239596,163.54824302979938L255.75163663454828,163.40133270000663L255.53140830965162,163.32493922701977L255.19372482361973,163.35432136308035L255.04984227889304,163.40133270000663L254.8854050917912,163.48947894064906L254.59764005044394,163.68340027213546L254.42439375151662,163.74804064130655L254.259956564415,163.75979339496257L254.08671026548473,163.72159684286106L254.03972819140904,163.53649019624618L254.14543782199758,163.1339552172068L254.18361073613596,162.94884717668793L254.1748015761982,162.66971517447365L254.21297449033932,162.47872955397074L254.22178365027412,162.2289784192592L254.1924198479644,162.04386821565288L254.28932036672472,161.78530083556254L254.28051120678697,161.4973498026593L254.23059276210256,161.24465714790796L254.22178365027412,160.97727218878634L254.15424693382624,160.5424023269501L254.1659924643725,160.25444659890783L254.1659924643725,160.0135031871722L254.0984557479219,159.73436047061412L253.94282772075803,159.70497699445906L253.8194998665124,159.5698126925941L253.8194998665124,159.4258331333606L253.91346396655467,158.52962739515658L253.32618830520732,157.04866044455576L253.2703971193032,156.71955265662672L253.0002503497219,155.34433607267442L252.87398607676118,155.20034819324107L251.54674319372953,152.36754832929628L250.98002217475437,151.8297737325493L250.58654750282085,151.38603306165703L250.12259979193504,150.01952913983558L248.2462541616967,144.81774627066216L247.8997615638366,143.83612120372283L247.7646881309381,143.48049888425226L247.24788560475918,142.01684263263286L247.0159117012072,141.3908108099671L246.7751287339354,140.85000839145033L246.43744524790645,139.80072097312333L246.1702348008248,139.79190338046078L245.96762474769434,139.87714025034683L245.57121370514938,139.85950503706505L245.19829367558805,139.95355943473731L245.00449268617695,139.96531624262133L244.86941930138505,139.99470822864464L244.7049821623923,140.04173531996395L244.5434813458994,140.10051915881962L244.37023504697208,140.14754621931834L244.2057978598707,140.1387286270786L244.0237424010029,140.0887624243295L243.8886690162135,139.94474186349944L243.6566951607706,139.94474186349944L243.7066135573457,140.29156626860384L243.71542271728345,140.48555201380458L243.7535956314216,140.66778044076824L243.7535956314216,140.87058247578943L243.7242318291121,141.1292276073204L243.74478647148408,141.3232107410981L243.79176854555976,141.4966194086983L243.78295938562496,141.69941880048486L243.686058914971,141.91985219374357L243.58915844432,142.05505094846552L243.5216217759787,142.21964037475286L243.6097130866949,142.61347762013838L243.56273106072808,142.7486749143775L243.38948476179803,142.71928419935227L243.19568377238647,142.6046603692643L242.9842645593185,142.5546961013914L242.8403820145886,142.66050277722013L242.70530862979945,142.78688279498073L242.59959899921068,142.90150630092035L242.44397097204705,143.01612960322075L242.3000884754265,143.1630822721257L242.2031879566664,143.29827841520878L242.0974783741865,143.48931596742477L242.01232338597265,143.62451147790225L241.90661380349297,143.76852370391543L241.78034953052975,143.97131594443414L241.65702162817774,144.2593385909684L241.492584489185,144.44155636796083L241.27235611617925,144.49151923048208L241.15490100315333,144.6737363122783L240.99340018666044,144.59732274821948L240.91411798777267,144.80011241422397L240.93467263014736,144.94412209508653L240.91411798777267,145.14691068926146L240.85832680187127,145.35851548919902L240.7614263312173,145.511340758017L240.70269877470446,145.24095735633819L240.67333497239474,145.04110800999217L240.48247040170122,145.09694832613422L240.33858785697157,144.9059154817594L240.3004149428334,144.77072267505153L240.1154231133571,144.68255328216898L239.97154061673928,144.65610241709155L239.84821271438705,144.7883564912453L239.86583098615074,145.02053525505L239.83646718384102,145.22332361349135L239.72194844142405,145.42611129893928L239.59568421656945,145.4937070875261L239.40481959776685,145.54073016626606L239.2110186564621,145.57011960957516L239.08769080221896,145.48195128852828L239.03777235753478,145.27034688515403L238.91444445517982,145.09694832613422L238.79698934215412,144.9735117565897L238.47105138666848,144.75014978719696L238.20090456897833,144.98232868617993L238.0188491582221,145.04110800999217L237.79862078521637,145.04992488236104L237.6429927580523,145.15572754744113L237.46974645912223,145.13515482836706L237.26713635788246,145.18511716247184L237.19079052960342,145.36733231903796L236.9118346000871,145.511340758017L236.75033378359421,145.4937070875261L236.57708748466416,145.4349281678879L236.4508232117007,145.34675966609362L236.33630446928623,145.2321404614308L236.2012310844941,145.2027509155559L236.02798478556406,145.13515482836706L235.88410224083736,145.00290145308998L235.7960108820148,144.62671261332548L235.6814921395976,144.32693558153252L235.63157374302205,144.17410755332418L235.58459166894636,143.9624989266722L235.53760964297976,143.79791394242176L235.4495182841547,143.65390173340535L235.36436329594062,143.48931596742477L235.2469081829147,143.30709557133494L235.1793715145734,143.08372788783214L235.17056235463565,142.85448131971225L235.1793715145734,142.69871071011482L235.1999261569481,142.53706163047775L235.2469081829147,142.3136912789663L235.30563573942754,142.13146751177106L235.37317245587815,142.00508625280747L235.42015448184475,141.8522526851991L235.4113453700163,141.67884498409546L235.32619038180246,141.3114542335548L235.3438086535657,140.9264263991101L235.4113453700163,140.74419866811934L235.48769119829262,140.57960547808733L235.48769119829262,140.40619430502144L235.4495182841547,140.2621744691502L235.4495182841547,140.0799448238659L235.47007292652916,139.6655174125954L235.47007292652916,139.52149588217935L235.39372709825034,139.39510941790985L235.2204807993228,139.27166187275202L235.17056235463565,139.06885468682816L235.1529440828724,138.89543934423898L235.08540741453066,138.76905156636158L234.9679522533961,138.4222187308028L234.92097022742928,138.26055866801175L234.84462439915274,138.05774823776926L234.7858968426399,137.7785153404862L234.65082345784822,137.56688537516794L234.48638627074638,137.44049489027856L234.3425037260197,137.355254636125L234.09291159881332,137.17007716736435L233.94902905408344,137.08483658702218L233.7963373975283,136.9790204799549L233.45865391149914,136.55575432384L233.12977958540523,136.10309142363616L232.8038415818105,135.6974555581582L232.69813199933105,135.2829987497559L232.54544029466638,135.23596803495883L232.38100315567385,135.26536222394634L232.2253750804009,135.24478627870468L232.07268342384532,135.19775553424543L231.92880092722498,135.1859978183444L231.76436374012337,135.109572729737L231.6586541095346,135.0037531947146L231.50596245297925,134.74508252059312L231.3503344258154,134.58929163701407L231.24462479522663,134.45407662054288L231.215261041026,134.31004287323043L231.02439647032975,134.04255075399703L231.04201469398686,133.81914981392777L231.01558731039472,133.59868758375228L230.9186868397412,133.38704300883842L230.85995928322814,133.1548210709519L230.88051392560305,132.875565615923L230.9098776798062,132.68155581137728L230.92749595156965,132.44345196789985L230.89813219736902,132.19064934791277L230.84234101146467,131.94960395396913L230.88051392560305,131.71149716414908L230.9363051115074,131.5263023345915L231.02439647032975,131.33522770849513L231.13891521274695,131.16179020595953L231.38850733995332,130.84431003395096L231.45604405640393,130.7179054493794L231.36207995636164,130.54446607096935L231.0801876562341,130.3504485859426L230.9363051115074,130.29459494206813L230.76305881257713,130.2064048564111L230.61917626785043,130.0241449870669L230.5222757971992,129.833065403246L230.39013878301603,129.43620588545443L230.25506539822663,129.21572723302904L230.20514695354245,129.07168068690615L230.24331986768038,128.71303266675142L230.15816487946654,128.4072981745429L230.13761023709162,128.0486460123083L230.0994373229537,127.89577720040944L230.01428238284598,127.76936612521646L229.88801810988525,127.64589456486686L229.80286316977754,127.49008487418521L229.7646902556396,127.34603399790277L229.68540800864275,127.23138101718698L229.59144390860024,127.11378798410487L229.48573432612056,126.952097130672L229.41819760967292,126.7492480170514L229.29193333670946,126.5757966808741L229.17741459429226,126.40234486204503L229.08932328357878,126.22007286034113L229.01297745529973,126.09365810749031L228.96599538122405,125.94960368582667L228.76338527998405,125.49685887621823L228.6576756975046,125.28518473893283L228.590138981054,125.11172894884069L228.56958433867953,124.94709242626087L228.56958433867953,124.79421523910273L228.34054685384763,124.30324142982744L228.13793675260808,124.05040290229692L227.95588129374028,123.86812325561502L227.66517988178407,123.62704286328739L227.5506611393696,123.47416205282397L227.4361423969524,123.25072009443556L227.28051432167945,123.13605874670853L227.1072680227494,123.09783824460996L226.63744752253683,123.03903737605256L226.46420122360678,122.96259621112662L225.9327167962731,122.69211124600787L225.5686058785402,122.54804803345147L225.4335324937481,122.48042643185212L225.2896499490214,122.38634402543539L225.1633857241668,122.289321382672L225.01069406761167,122.23051965088516L224.84625688051005,122.1070359247172L224.70237433578313,122.04823404578181L224.58785559336593,121.97179150406615L224.40286376389236,121.86594778648666L224.03875289426878,121.83654670146913L223.90367950947666,121.80714564882936L223.7010694082369,121.73070277061379L223.53663222113528,121.6248585868014L223.43092259054652,121.48079261901839L223.29878557636584,121.33378609635693L223.03744796671958,121.00743018789058L222.93173833613105,120.83396096308988L222.8730107796182,120.61344841044527L222.83483786548004,120.38999483230177L222.78785579140435,120.18712165789069L222.7291282348915,120.01364980908917L222.63222776424027,119.86957951998946L222.57643657833592,119.74609038786798L222.5265181336515,119.57261712194827L222.5000907500596,119.40796399179823L222.5000907500596,119.20508717312282L222.48834521951358,118.94634455155906L222.37382647709592,118.5023628262185L222.35327183472145,118.35828853241259L222.26811689461647,118.25243774192128L222.23875309230425,118.44355703204425L222.1800255357914,118.6287950912037L222.0273338792358,118.76404785766704L221.8071055062328,118.8199130363221L221.63385920730252,118.73464513654503L221.48997666257583,118.61703394607599L221.31673036364577,118.51118371626097L220.92912843292947,118.46413906495636L220.7764367763741,118.48178080802685L220.62374511981875,118.53176572313714L220.35359835023746,118.37593031043033L220.12162444668547,118.32888554004583L219.89258696185357,118.2994825796612L219.66942221823933,118.25243774192128L219.32292962037877,118.02897430452293L219.17023796382364,117.95252607648402L218.75620864951566,118.00251148729842L218.61232610478874,118.02897430452293L218.4684435600591,118.02015338296562L218.13956923396495,117.95252607648402L217.99568668923803,118.00251148729842L217.8518041926202,118.02015338296562L217.69617611734725,117.97310829881027L217.53467534896345,117.94370514226807L216.96501795937934,117.91430192131637L216.78296254862357,117.89665999058914L216.39829698851622,117.92312290857683L216.4658337049666,117.77022599060598L216.51281573093343,117.60556736126418L216.52456126147945,117.42326608560953L216.19568688727645,117.56734295675557L216.13989574948118,117.39386257676952L215.9167310058665,117.3262345216682L215.97545856237934,116.8440143608095L216.0224405883464,116.71169709106502L216.05180439065862,116.56467750285756L216.06061350248433,116.3911938828864L216.11934105899718,116.23829258843122L216.31314204841124,115.9501312524344L216.4863883473413,115.80604996770475L216.54217953324292,115.32381588618512L216.51281573093343,115.18855432344435L216.57154328744627,114.98566129860242L216.69780756040973,114.76512455324863L216.7359804745479,114.49459813129417L216.77415338868582,114.30052399845869L216.791771660452,113.8976708190298L216.78296254862357,113.71241609937107L216.71542583217297,113.53892300011978L216.64788916383168,113.4154190544293L216.6860620779728,113.24192495745174L216.69780756040973,113.07725203218808L216.76534427685738,112.94198461152382L216.91803593341297,112.9243410045166L217.07072758996833,112.84788532029705L217.17937359116831,112.68321113421743L217.26452857938216,112.4714864324331L217.30270144541123,112.2597608567327L217.26452853127307,112.04803435768395L217.15000978885587,111.83336637424958L217.20580097476,111.5157736948853L217.2557194194444,111.15112783239226L217.26452853127307,111.00703315860127L217.2557194194444,110.7658942371383L217.21754650530647,110.56298376565988L217.18818270299425,110.27479071398253L217.12945514648118,109.93660287527817L217.05310931820486,109.75427456396832L216.96501795937934,109.61017595911727L216.83288094519912,109.4249056698051L216.63027089206844,109.2219898051562L216.60971624969352,109.03083644619889L216.70661672034453,108.71322615769472L216.82113546276173,108.38385042569905L216.8798630192748,108.25151134205123L217.07072758996833,107.70156511910506L217.12945514648118,107.4986423012187L217.19699186293155,107.21925439578024L217.23516477706994,106.83399057875314L217.23516477706994,106.5545989204578L217.26452853127307,106.30461558946621L217.24397388889838,106.11933299029963L217.19699186293155,105.97522385709456L217.12064603465546,105.82229122602786L216.9268450452414,105.71641448786951L216.77415338868582,105.86052442843712L216.69780756040973,106.00463389793651L216.72717136271922,106.13991997485476L216.77415338868582,106.30461558946621L216.60971624969352,106.41049106117688L216.42766079082844,106.36049433096912L216.24560533196063,106.32226151722068L216.11053194717147,106.28402867379575L215.95490392000488,106.22520886042076L215.8198304871064,106.19873993833548L215.62896591641288,106.07227700701134L215.48508341979232,105.92816768768321L215.32945534451937,105.85170135842367L215.10922701962272,105.81052713922645L214.87725311607323,105.83111425314104L214.49258760407474,105.74582468370303L214.34870505934782,105.68700422622493L214.15784048865157,105.65759399513021L213.95523038741203,105.59877343184726L213.7731749766558,105.61053752123794L213.54120107310405,105.5811272442856L213.3767638860022,105.53112967032797L213.25343603175634,105.47524998548681L213.11836264696717,105.35760835055541L212.94511634803712,105.23408429586402L212.72195160442266,105.1076189252885L212.51053234324536,105.0017406418907L212.42537740314037,101.995877968586L212.40482276076568,95.73942785060561L212.38720448900222,85.15416441103204L212.3754589584562,83.83303466283135L212.3754589584562,80.92287474132738L212.33728604431508,68.97407953164355L212.32847693248914,54.82215300831581L212.36664984662752,46.48510740811204L221.18165697885365,46.49394319141501L221.8071055062328,46.193526194643624Z\" stroke=\"#000\" fill=\"#FFF\" strokeWidth=\"0.5\"></path>\r\n        <path id=\"Isiolo\" ref={(item) => countyRefs.current[10] = item} d=\"M276.63222148634895,247.55754940071031L276.67920356042464,247.316763580708L276.71737647456575,247.0466135424549L276.96990497238085,246.8351916796742L277.01688704645653,246.68249805863084L276.9493503300059,246.47988528398835L277.06386907242313,246.3066366380364L276.99633240408184,246.09521443537747L277.0345053182225,245.9219656618934L276.96990497238085,245.78689030721154L276.92879568763396,245.64300562461477L277.01688704645653,245.50793019541297L276.96990497238085,245.36404543270143L276.9405412181802,245.20841495931333L276.9199865758053,245.03516587896618L276.9581594899437,244.7004132129196L276.92879568763396,244.55359178875742L276.9199865758053,243.90170417819897L276.83483158759145,243.67853521475746L276.6410306462867,243.61099719927745L276.49714810155956,243.54345922162184L276.45897518742163,243.38195523221987L276.3239018026295,243.32322650717643L276.26517424611666,243.19695969506347L276.2475559743532,243.0530742601058L276.2857288884916,242.57149804207546L276.0831187872516,242.4393581362659L275.89225421655533,242.36007418223255L275.8511449318087,242.2161884133544L275.89225421655533,242.07230259400038L275.77479910352963,241.6200897408863L275.6984532752533,241.4262840893301L275.59274364466455,241.29414380892433L275.5340160881517,241.16787637315605L275.4194973457345,241.09152861257425L275.20807813266606,241.00343500543661L275.06419558793937,240.8977226983612L275.0524500573931,240.753836398227L275.01427714325496,240.50423762714044L275.01427714325496,240.2840032541598L274.97610422911384,239.95511972456075L274.9291222031475,239.7525038063013L274.8527763748709,239.54107840237978L274.8410308443249,239.35020808752358L274.8410308443249,239.10941778804317L274.89975840083775,238.9156107772864L274.8703946466344,238.72474017103468L275.0730046997678,238.44577523017296L275.1875234902916,238.34887157597413L275.2550601586329,238.21379370731034L275.29323307277105,237.98181202489647L275.3725152716588,237.85847989584352L275.38132443159657,237.6852275819769L275.3725152716588,237.50316570417317L275.47822490224735,237.36808749148057L275.390133543425,237.18308895873997L275.3431515174582,237.00102679941915L275.390133543425,236.78079023064657L275.4400519881094,236.60753733911662L275.5633798904614,236.5106330914368L275.6896441153158,236.44309380645163L275.7865445859668,236.3285705937589L275.79535374590455,236.18468237276966L274.09225441459375,236.01142915034058L270.47463658701304,235.62674786744924L269.10628437112564,235.46230385847227L268.4338537696706,235.37420878232658L267.57643138685125,235.28024068858315L267.40318503981484,235.250875632178L266.4312439145783,235.14516151098485L265.31542019650556,235.0100822719178L264.7017171996756,234.90436801663714L264.0380957100492,234.85444737487023L263.51835681326156,234.7986537233565L262.5082427257778,234.66357432513655L261.4775739959191,234.54905043533648L260.2736590152422,234.38460577800234L258.3033492368497,234.16436730129078L256.782305364404,233.9617477105712L255.75163663454828,233.84428703021678L255.19372482361973,233.76793750888893L254.673985878723,233.72095322960155L253.6168897652724,233.6034924488976L252.33662890820756,233.44198375884287L251.69062569034736,233.37444377016507L251.53793403379177,233.2687289095267L251.64364366438053,233.08666434854828L251.71118033272205,232.60507370563073L251.634834504443,232.41126255043076L251.63783284024203,232.38027788449944L251.6524527762092,232.229197462444L251.74054413503177,232.08530718162106L251.9020449034158,231.9972110479024L251.99013626223814,231.86213028455225L252.06648209051718,231.7270494518546L252.2309192776188,231.709430203492L252.345438020036,231.52736458354843L252.48051140482517,231.37172776929688L252.63613948009834,231.47744337864427L252.72129442020582,231.27482178017172L252.75946733434398,231.05458072956378L252.8093857790284,230.87251464751847L252.97088654741242,230.8049740052307L253.02961410392527,230.6493367522175L253.1147690921391,230.50544559259933L253.31737919337888,230.46727037906595L253.52879840644732,230.45846068767304L253.67268095117674,230.34393500817302L253.69323559354893,230.15012220755588L253.65506267941055,229.9474995462253L253.663871791239,229.75662299138972L253.77839053365642,229.59217536038517L253.8371180901695,229.4101082574032L253.84592725010407,229.1869289948352L253.91346396655467,228.9960518425667L254.0984557479219,229.01367123395957L254.28932036672472,229.00486153842522L254.356857035066,228.82279394356732L254.3862208373755,228.5819947114731L254.50073957979293,228.37056096670398L254.5124850622301,228.20611243109698L254.47137577748322,227.86840517759805L254.47137577748322,227.65697078508586L254.49193041985518,227.33100912034453L254.50073957979293,226.53225416320328L254.5124850622301,226.32081856784077L254.50073957979293,226.13874888788226L254.52129422216763,225.9273128665203L254.57708540807175,225.7041302093692L254.74152259517382,225.47507410075616L254.74152259517382,225.0610105013464L254.770886349374,224.84957347107348L254.9127390049391,224.61075965083745L255.0466359171014,224.63808792343582L255.17610655185626,224.79965078877808L255.30824356603694,224.88774961779487L255.5108536672767,225.00227801672003L255.68409996620676,225.03164428511735L256.0805110087517,225.04045413597893L256.4446218783753,225.0991866100734L256.6266773372404,225.0110879169107L256.79111452434176,224.87600309333908L256.9349970209596,224.96410189060973L257.10824336799897,224.98172164567688L257.4253721635466,224.89655947462157L257.6485369071611,224.82020717747736L257.8511470084011,224.70274205851314L258.08018449323527,224.72329845664456L258.46485005334284,224.6351996071396L258.6204780805069,224.5794036275977L258.7731697370623,224.50305116748095L258.9669706783643,224.42376210221923L259.1960082113078,224.3385997536497L259.79209293637473,224.1271619486434L260.1209673105777,224.03906284783034L260.31183188127125,223.95390029354988L260.5056328225735,223.84818126985869L260.82276166623046,223.6925391962206L260.9284712968192,223.79825834796839L261.02537176747273,223.91572397633416L261.2074272263378,223.98326670881383L261.4012281676428,223.9245339222265L261.43940108178117,223.73071555483256L261.41884643940625,223.56920016507524L261.4951922676853,223.3841914306351L261.68899320898754,223.3195851899839L262.24690506802494,223.18449926450882L262.42896052689,223.18449926450882L262.61395230825747,223.05822328026215L262.96044495422393,222.96131368323006L263.12194577071705,223.01123681042375L263.30693755208404,223.26085216486575L263.50661128271554,223.21386579025813L263.70041222401755,223.2314856940432L263.8354856088097,223.36657154010868L264.0087319558486,223.49284738048644L264.10269605589133,223.74246214378937L264.1614236124042,223.95390029354988L264.32586079950556,224.0684292028921L264.4227612701568,224.19470461217418L264.634180483225,224.2916135772748L264.84559969629345,224.26224725376034L265.2097106140261,224.27986706761112L265.32716572705203,224.50305116748095L265.47985738360717,224.59702336663074L265.65310368253745,224.59702336663074L265.81754086963906,224.67631241457582L265.8938866979154,224.89655947462157L265.99959632850414,225.06982039910565L266.2022063816348,225.06982039910565L266.39307100043993,224.97291174426942L266.5575081394327,224.9934681642803L266.67202688184693,225.07863024838736L266.88344614302446,225.06982039910565L267.11541999846736,225.00227801672003L267.3356483714733,224.96410189060973L267.52944931277557,224.9171159020276L267.7115047716434,224.9171159020276L267.86713279880723,224.955292036584L267.9522877870213,225.1168063539558L268.1343431977798,225.15498245269058L268.2811621131152,225.2225247867147L268.463217571983,225.2430811345505L268.6364638709131,225.2137148952586L268.9829564687707,224.9435455158696L269.0681114569845,224.80846069738743L269.194375729948,224.73210836843646L269.3764311407065,224.64694609687493L269.4733316113577,224.49130466969962L269.62602331602216,224.39733242316242L269.866806283291,224.1447817739371L270.0517981127673,224.0889856633927L270.2632173739448,224.0684292028921L270.42471814232863,224.09779560190285L270.559791527118,224.21232443173955L270.6948649119099,224.35621956104774L270.80938370243643,224.45312845113506L270.92683881546213,224.6087699066119L271.088339583843,224.73210836843646L271.18524010260603,224.93473561288135L271.46419598401303,225.14617260656598L271.6579969734271,225.23427124394073L271.8694161864953,225.31062339265526L271.97512581708384,225.42515161288708L272.0132987312222,225.59841206145805L272.16599038777736,225.7540526809202L272.406773403158,226.02128444074592L272.48605560204305,226.13874888788226L272.5330376280099,226.30026232196198L272.5917651845227,226.46471228356776L272.6299380986636,226.617415692916L272.68572928456524,226.75249938709902L272.71509308687746,226.91694901463404L272.8325481999036,227.0314763497753L272.91770318811723,227.2047355374173L272.98523985645875,227.36037507770507L273.1584862034979,227.82141975776017L273.3023687001157,228.02404421945553L273.4286329730792,228.17674658150796L273.4756149990458,228.31182935322653L273.58132462963454,228.44691204707135L273.72520717436146,228.7758087631614L273.72520717436146,228.9197008909801L273.7839347308743,229.13994383782807L273.927817275601,229.31320145966893L274.0159085863172,229.49526868341812L274.22732779938565,229.59217536038517L274.4093832582507,229.639160429721L274.5356475312142,229.7654326595938L274.5356475312142,229.9474995462253L274.59143871711854,230.09139102749828L274.7470667442824,230.25583832554938L274.8234125725587,230.41147582205974L274.814603460733,230.57298631489908L274.87920375846306,230.69925811845272L275.0054680314265,230.8137836364175L275.03483178562715,230.9488649464958L274.9878497596603,231.09275585469072L274.99665887148876,231.23664668209847L275.0524500573931,231.38347396628086L275.09355939024886,231.5655396387686L275.09355939024886,231.82395527261465L275.2168872444947,231.94141682271834L275.36076978922165,231.95022646332757L275.52520697632326,231.98840145697233L275.5721890022901,232.19102250345836L275.5545707305266,232.40245297320214L275.6221074469745,232.5551526558205L275.81297201767075,232.5551526558205L276.00677295897253,232.516977743294L276.1594646155281,232.64324860569334L276.30334716025504,232.74015409335087L276.4384205450467,232.78713853934084L276.81427694521676,233.0455529918152L276.97871413231815,233.08666434854828L277.0932328747358,232.99856859032408L277.26647917366313,232.960393692026L277.4690892749054,232.96920329921778L277.621780931461,232.91340927591642L277.7774089586246,232.91340927591642L278.15326535879467,232.88404397565836L278.3265117058338,232.9222188365111L278.5085671165898,232.87229789315938L278.6436405013817,232.74896365955257L278.8256959602468,232.78713853934084L279.0371151733152,232.89285358531242L279.1721886062162,232.85467872035244L279.2984528310676,232.78713853934084L279.48931740176386,232.845869109465L279.7095457747673,232.79594815212997L279.9033467160723,232.69904268441118L280.1441297314502,232.6226928946444L280.3261851903176,232.52578731676812L280.43189482090656,232.37308761746175L280.55815904576093,232.27618199763583L280.7225962328623,232.27618199763583L280.8283058634511,232.36427803897863L280.98099752000667,232.46999320222972L281.16305297887175,232.50816812141983L281.35685392017626,232.44943747796603L281.55946402141603,232.43181827761666L281.70334651803387,232.46999320222972L281.77969234631314,232.6226928946444L281.66517360389594,232.93102844493006L281.77969234631314,233.0367434351898L282.1056303499047,233.10428350642093L282.27887664883474,233.17182360917147L282.4256955641731,233.35388806588196L282.66354216083323,233.47134899966449L282.85734315024456,233.52714291021638L282.9924165350367,233.42142810766768L283.1157443892796,233.36563417592822L283.28899073631896,233.3832533160106L283.42406412111063,233.49777767527206L283.6266742223504,233.5770637351819L283.82047516365265,233.45960289408524L283.9261847942412,233.24817324550992L284.12585847676337,233.08666434854828L284.31965941806834,233.0191242729814L284.4459236910318,233.13364878307465L284.6191699899591,233.24817324550992L284.8305892511364,233.34507851910698L285.04200846420486,233.31571326493685L285.25342767727307,233.30690371694618L285.4854015808253,233.27753845873247L285.6469023492091,233.17182360917147L285.8113395363107,233.19237927887195L285.9552220810376,233.2863480557686L286.0697408234548,233.08666434854828L286.0521225516886,232.6226928946444L286.17545040593427,232.516977743294L286.3692513953456,232.52578731676812L286.54249769427565,232.46118362692835L286.69518935083124,232.36427803897863L286.8684356497613,232.35253188577187L287.04168194869135,232.40245297320214L287.18850086402676,232.36427803897863L287.41753834886117,232.19102250345836L287.5614208935883,232.132291742224L287.7258580806897,232.00895721679663L287.89910437961976,231.9678456955491L288.06354156672137,232.01776680704194L288.2544061374149,231.95022646332757L288.3982886821418,232.07356101611424L288.6214533776472,231.9972110479024L288.69779920592623,231.85332068911205L288.6772445635513,231.6506993830891L288.7829541941403,231.45982411341123L288.91802757892924,231.29537759617057L288.77414508231186,231.18966191233184L288.77414508231186,231.00759597456357L288.84168175065315,230.88132432447566L289.0149280495832,230.87251464751847L289.1969835084483,230.56417667532298L289.3614206955499,230.4202854669912L289.56403079678967,230.4202854669912L289.70791329341,230.3997295802244L289.84298667819917,230.32337911513258L289.9956783828636,230.31456946679077L290.16011552185637,230.285203873841L290.32455270895775,230.15893186171323L290.4478806113127,230.02385012676766L290.5829539961021,229.99742110083176L290.7004091091278,229.91813395794588L290.8531007656834,229.8799586542723L290.92063748213354,229.70670138791746L290.91182832219624,229.4864590054668L291.02634706461345,229.2280409696233L291.19078425171483,229.063592980201L291.3434759082704,228.8903351782817L291.5255313671355,228.86977916281222L291.77805986495287,228.80223792226747L292.00709739789386,228.69652122009018L292.1891528086526,228.70826749592786L292.324226193442,228.80223792226747L292.3535899957542,228.95787639387743L292.44168135457653,229.063592980201L292.5855638511971,229.13994383782807L292.7969831123744,229.21629467120783L292.9320564971638,229.31320145966893L293.0671298819557,229.26621637538074L293.15228482206066,229.063592980201L293.2785490950241,228.96668609114167L293.45179539395144,228.97549578808096L293.54575949399396,228.82279394356732L293.70138756926985,228.71707725053673L293.79828803992086,228.55262890889543L293.8834429800256,228.37937073391984L294.0948622412029,228.28246356502711L294.2974722943336,228.34119518586138L294.4413548390635,228.4292925654856L294.62341029792833,228.47627786281691L295.0286304523015,228.3999267919876L295.26941346767944,228.32063912264869L295.4632144089842,228.2354782288842L295.6746336701615,228.25603429957076L295.8361344385428,228.27365379416955L295.96239871150624,228.38818045269286L296.1532632822,228.48508757795963L296.3764280258142,228.41754627577126L296.5496743247443,228.35000490606453L296.70236598129986,228.30301963158595L296.9049760825394,228.2942098615047L297.1252044555456,228.30301963158595L297.36598747092603,228.27365379416955L297.5010608557152,228.17674658150796L297.6860526851917,228.13857100037984L297.91509017002363,228.15031735220424L298.097145628891,228.15031735220424L298.27039192782127,228.0622198193621L298.3966562007822,227.9183271185808L298.47300202906104,227.79205385949228L298.59045714208673,227.68633670058517L298.70497588450417,227.551253564028L298.61688452567864,227.33100912034453L298.6080754138502,227.16655979479728L298.6462483279911,227.0314763497753L298.66680297036305,226.8699633984566L298.7725126009518,226.67614774182425L298.8694130716058,226.47352207629504L299.0132955682236,226.36780429988582L299.1747963847165,226.29145252233323L299.4948615989822,226.11819257688708L299.6093803413992,226.02128444074592L299.7738175285008,225.85977080112804L300.090946372158,225.76286255029135L300.20546511457223,225.5690458706922L300.1291192862959,225.40753189437237L300.3111746970517,225.06982039910565L300.5137847982944,225.13736271196174L300.82210453012294,225.27244732169802L300.93662327254015,225.369355840654L301.01296910081646,225.51325013572574L301.0511420149546,225.7041302093692L301.2243883138847,225.79222866668434L301.3976346128147,225.73349638181838L301.51508972584065,225.84802432982613L301.4563621693278,226.05065057046198L301.63841762819266,226.13874888788226L301.82340945766896,226.13874888788226L301.90856439777394,226.2826426742392L301.9291190882575,226.4353462090566L302.102365387188,226.47352207629504L302.2168841296052,226.29145252233323L302.3813213167066,226.19454441449943L302.5428220850879,226.2151007183529L302.6602771981138,226.12700243156627L302.78360510046855,226.05065057046198L302.85995092874464,225.89794676834828L302.99502431353676,225.7540526809202L303.2739802430558,225.483883981485L303.40905362784474,225.2137148952586L303.49714498667026,225.1079965062521L303.62047288902227,225.00227801672003L304.03450220333025,224.93473561288135L304.19893934232255,224.7438548527708L304.43091324587476,224.58821349729885L304.60415954480504,224.58821349729885L304.76566031318885,224.54122742506817L304.86256083194894,224.39733242316242L304.96827041442884,224.1447817739371L305.103343799218,223.98326670881383L305.1884987874346,223.82762478539576L305.4292818028125,223.5780100777169L305.5555460276669,223.4253044865526L305.8345019571857,223.36657154010868L306.0077483042221,223.25204223849857L306.2103583573555,222.91432723887988L306.4393958902963,222.83797420727842L306.58621475752534,222.64415484988348L306.5656601151509,222.4327152835791L306.58621475752534,222.25064220729632L306.7300973022525,222.14492224229383L306.8827889588076,222.094998897745L306.9503256752582,222.25064220729632L306.9503256752582,222.4327152835791L307.12357197418555,222.40334869142492L307.2674545189152,222.41509530956267L307.37316410139465,222.5208151301902L307.50823748618404,222.60597828615795L307.6139471167726,222.69407800796478L307.7783843038742,222.7792410899631L307.96043971463314,222.83797420727842L308.22177737238553,222.90551724926942L308.36565991711245,222.97306031665843L308.39502371942467,223.10520969103936L308.48017865952966,223.21386579025813L308.6064429324931,223.29021867955126L308.7679437008742,223.36657154010868L308.96174469028824,223.3577616183295L309.1349909892183,223.3283951134182L309.3376010904583,223.26085216486575L309.5578294153547,223.17275269150608L309.81916707310756,223.0963997578944L309.5960023294931,222.88496066949438L309.11443634684383,222.55899171024026L308.8560350596997,222.3945386792502L308.4214511030168,222.094998897745L308.4038328312506,221.58695489637492L308.36565991711245,221.08478296221227L308.34510527473776,220.5473693774805L308.3274870029745,220.35354773293693L308.21003188994837,218.32428151913865L308.17185897581044,217.46675550355934L308.08670398759386,215.93670724282734L308.05734023339323,215.551990429289L308.05734023339323,215.36991045478055L308.0367855910183,215.17608309931387L308.0367855910183,214.94701416408884L307.9692488745677,213.64601399758112L307.95163060280447,213.4551214556832L307.9310759604298,212.96467340672822L307.9310759604298,212.45366600233422L307.922266800492,212.22165638106873L307.85473013215324,210.91476020654392L307.88409388635387,210.74148545625889L307.84592097221594,210.5858317459031L307.825366329841,210.33619809457795L307.7783843038742,209.18200406846597L307.7578296614997,208.92062046027468L307.7490205015647,208.66217332903025L307.65212003091096,208.49770669958932L306.2103583573555,206.54465123496183L304.89192458614957,204.95575449129393L303.7261824715017,203.39914642866208L303.63221837145943,201.43426963488383L303.59110908671255,200.45328856200467L303.582299926775,200.0685304058453L304.6217778165683,199.26082823293413L305.85505659955766,198.27689290536003L307.12357197418555,197.2782638765987L307.2674545189152,197.15196607109453L307.7020384755981,196.79656923719787L308.0103581593173,196.55572123439993L308.7415163172825,195.95947334695632L309.0468996303932,195.72743519591802L309.15260926098176,195.6305076831958L309.7898033189042,195.12237143524467L310.46223377602905,194.5731119320895L310.61786194752335,194.45562282097282L311.4635388479055,193.77418409598732L312.3591341929721,193.04280778980035L312.5030166895899,192.93706622665718L312.6645175060828,192.7931400578484L312.79078173093694,192.70502194714024L313.0403739062526,192.49353813028046L313.4162303064227,192.2056844622365L314.02406056203563,191.71515665118136L314.1561975762163,191.59766464702383L314.56141777869834,191.27162366014232L314.74347318945433,191.136507245007L315.5421680638699,190.4814841689643L316.14999831948285,189.9909486073737L316.34086289017637,189.8470186173479L316.4465725207649,189.75008605246347L316.67854637620803,189.66490278776135L316.898774749214,189.39466586397583L317.37153162003483,189.00987074835206L318.19959024865125,188.3548346591715L318.34347279338067,188.2490885719363L318.4668006957329,188.14334232991257L318.85146620773116,187.85547708249328L319.4886602656536,187.34436742046188L320.18164550948063,186.815630580792L320.93042193921156,186.21639229724377L321.47071547837413,185.81396063414036L321.6234071349295,185.67883725496367L321.77903521020266,185.56427598475864L322.11378232562583,185.29402837853223L322.5278116399338,184.9767802360961L322.60415746821013,184.85928063582028L322.6716941365514,184.52440616003253L322.7304216930643,184.28353080484158L322.78914929768644,184.08965506925108L322.83613132365303,183.86052875921646L322.9623955966165,183.34058632518145L323.029932264958,182.99395645929621L323.3353156261778,181.71317788257892L323.66418995227195,180.26787512428643L323.79926333706135,179.73028740945568L323.87560916534017,179.3542679232477L323.9725096359914,178.97824692298133L324.02830082189575,178.69916784632602L324.23972008307305,177.82373538237385L324.5597852973385,176.4371272427009L324.6155764832429,176.20798233923654L324.6743040397557,176.08165864682323L326.48311295354597,175.0240576182132L326.7238959689239,174.8977322495267L327.6371095376478,174.3483614979446L328.5796869567903,173.8195522290672L328.99371627109826,173.56983564123004L329.24330839830736,173.4346946031564L331.0814811144073,172.3476828620136L331.2547274133374,172.25954616059292L331.50431954054375,172.10677569595302L332.0915952018911,171.77773070438332L333.9679407840231,170.69951176150124L336.51965338632453,169.21877452165495L336.98947388653687,168.95729238673064L337.30660273019384,168.76632172932204L337.4416761149855,168.69874743399572L338.357826102427,168.16696496551737L339.0684296180175,167.76445325546345L339.2328668051191,167.66749759860014L339.40611310404915,167.55291348770655L339.7408602194721,167.37075377827074L340.4074180315954,166.98292858418478L340.7333559870806,166.7831390907211L341.23254028960287,166.50402060732893L342.5333557890426,165.75186495071225L342.86810290446556,165.5697011762507L343.52291523415147,165.1848054365758L343.85178956024583,164.9997022241853L344.11019084738996,164.86748538661L344.6681027064276,164.52078242616093L346.36239287780063,163.36313597285871L347.65146284669413,162.63151808805077L351.9708750780394,160.11046829996235L352.4906140229359,159.92829128936205L352.70203323600435,160.2162483073145L352.84591578073105,160.35141140263488L352.96337089375675,160.5247724119305L353.1248717102501,160.67756484062895L353.25994509503903,160.8421102079211L353.36565472563075,161.02428502268765L353.5389010245581,161.21821254187734L353.559455666933,161.45915213491327L353.5389010245581,161.650140283224L353.5212827527946,161.9498438187366L353.5389010245581,162.17902807611932L353.69452905172193,162.32300247572286L353.8472207082773,162.47872955397074L353.90594826479014,162.76667692101296L353.81785695407666,162.9694147531514L353.77968403993873,163.18978136448783L353.7914295223759,163.37488883248682L353.92356653655656,163.8068045363787L353.9353120671026,164.07711789656358L354.0116578953789,164.29748138950697L354.261250022588,164.3738739154686L354.47266923565644,164.47964808227624L354.7897980793132,164.84691830745635L354.9072532404482,165.02026926373298L355.1862091218552,165.1848054365758L355.3007279123817,165.31995987645126L355.44461040899955,165.384598906703L355.5591291514165,165.48155730567737L355.62666586786713,165.60789688425672L355.75293014083036,165.7048550120814L355.90562179738595,166.0897482473603L355.9937131080994,166.21314876936384L356.07005893637825,166.36886816535173L356.17576856696724,166.4922682593649L356.281478197556,166.5804110199118L356.3783786682068,166.69499650326213L356.4253606941736,166.8507150174226L356.50464294117023,167.04169009483508L356.64852543778807,167.19740789468355L356.9274813673069,167.35900155602067L357.0508092696589,167.4765239910271L357.0713639120338,167.62930291284167L357.0713639120338,167.79383375817352L357.08898218379727,167.9671783746382L357.1565188521388,168.11995637985177L357.32976515106884,168.24629184166253L357.47658406640403,168.38144116693832L357.6498304134434,168.52540436068887L357.77315826768904,168.68699535396982L357.96695920899106,168.80451593458633L358.18718758199725,168.90147025052192L358.28408805264826,169.0248664708703L358.3604338809273,169.13944853158927L358.504316425654,169.245216469415L358.71573563872244,169.27459644428302L358.8713637139954,169.34217027005317L359.0534191247541,169.5830853132504L359.18849250954327,169.72704642029083L359.5819671814795,169.9385806217253L359.7640226403446,169.98852609026233L359.9783782240213,170.12367262748435L360.10170612637626,170.29701237191597L360.1780519546526,170.42040652879243L360.2837615852411,170.5261728462143L360.49518079830955,170.69951176150124L360.5744629971971,170.94042290697138L360.7565184560649,171.21071261611195L360.8622280385446,171.34585719595293L360.9679376691331,171.57501483045678L361.1705477703731,171.68371761021697L361.12062932568847,171.8276750869873L361.1499931279982,171.9716323694694L361.16173861043535,172.22135356992248L361.12062932568847,172.46226041474614L361.2850665127903,172.58858935313788L361.39077614337884,172.7413589625047L361.45831281171763,172.9616992916718L361.56402244230617,173.17322545512408L361.6697320247861,173.30836689937104L361.9868608684428,173.60802763679908L362.10431602958056,173.97231967453382L362.2100256120575,174.22497297922595L362.35390815678693,174.33954805869175L362.4684268992014,174.63920526862552L362.54477272748045,174.7919712901263L362.5858820122271,174.95648826744144L362.6504823580692,175.10925374135957L362.70920991458206,175.31196138673414L362.7855557428584,175.51466852213002L362.8354741394362,175.7643796582977L362.8061103852333,175.94652140064244L362.94118377002496,176.28436403853456L363.0175295983013,176.42831401017662L363.24950345374464,176.72796420330295L363.39338599847133,176.9012908102173L363.440368072547,177.0334888534506L363.51671390082606,177.18037535312436L363.61361437147707,177.3125729903798L363.6429781256777,177.44770814715048L363.757496916204,177.63278425271898L363.86320649868344,177.84429932273574L363.9424886975712,178.0352500118206L364.0570074399884,178.22913803856778L364.24787205879124,178.40246179807338L364.44167300009326,178.5258446435257L364.62372845896107,178.62278816821225L364.8645114262299,178.62278816821225L364.9995848591311,178.66097801514422L365.1728311580612,178.7197315913548L365.2990954310246,178.85486468012033L365.70137921478636,178.95180786067078L365.9245439584008,179.01643662359558L366.0684264550184,179.0458132797893L366.19175435737066,179.1221926098669L366.34738238453747,179.27788878333925L366.50007404109283,179.36308087469513L366.6645113244126,179.50996370961457L366.8172028847498,179.61571913672248L366.99044923178917,179.64215796280786L367.3281327178179,179.565779058058L367.4720152144357,179.6715344221416L367.6658161557407,179.7978532223754L367.91540833105614,180.00936335654438L367.9535812451943,180.18268385409294L368.26190092891625,180.33544059962338L368.4733201419847,180.47057135732754L368.684739403162,180.57632575392486L368.8785403444642,180.5675128679837L369.06059580333203,180.59688908709364L369.11638698923366,180.7995845682159L369.13694163160835,180.96115316993436L369.22503294232433,181.09628303735985L369.4070884011894,180.99052926738165L369.56858921768253,181.08747024772657L369.61850761425785,181.26078872770393L369.7418355166126,181.47229560059702L369.888654431948,181.5486729690846L370.0619007308783,181.51929709123965L370.21459238743364,181.56923609266204L370.3026837462562,181.6838020550441L370.48473915701493,181.95405956121766L370.72552217239263,181.92468375903553L370.9163867430891,182.51219772182117L371.18653356077925,182.65613805939637L371.2452611172921,182.8000782322328L371.48604413267003,183.09089542857154L371.51247151626217,183.23483496084802L371.6181811468507,183.36996165186014L371.8119820881557,183.5315259600943L371.9265008305729,183.68721491930594L372.0057830294577,183.86934134532765L372.09093801767426,184.0044671663191L372.196647648263,184.11021770533017L372.40806686133146,184.47446861959463L372.6870227908473,184.60959361751662L372.8015415332645,184.7535309402852L372.84265081801414,184.95621782681994L372.91018753446474,185.13834188358538L373.08343383339206,185.12952945778693L373.24493460177587,185.17946662335328L373.3036621582887,185.42033982363216L373.3800080346771,185.59365065588224L373.69713683022223,185.8433352809724L373.90855609139953,185.83158541363457L374.11997530446797,185.79339839554513L374.293221603398,185.8991470480315L374.48702254470277,186.05483232372296L374.6309050894299,186.17820542365712L374.75716936239314,186.3427025938156L374.9568430449151,186.4983872403297L375.15064403432643,186.63057210080476L375.26516277674364,186.75688188624127L375.45015460622017,186.8920038864592L375.84362927815323,186.96837708732517L375.1888169484646,187.23862025951513L374.939224821258,187.3149932038835L373.8703831772614,187.67042041536234L373.5914272477428,187.74973044207877L372.0997471295002,188.24027636511377L371.9176916706351,188.3254607754552L371.76500006218885,188.41358245007683L370.8694047171223,188.71907050128976L369.70366260247147,189.15380191598354L369.43645220350186,189.2389855409524L368.8110036280136,189.4622251350322L368.02992707347335,189.75889808556386L367.6364524015373,189.93220168910966L367.6746253156782,190.16425188450768L367.9535812451943,190.90445918192646L369.53041630354437,194.94907591532598L369.63612588602405,195.25454581651138L370.0413460885036,196.26494060282187L370.11769191678263,196.4969776931897L371.6093719869157,200.3387423759401L371.85896416223136,201.00252140723344L371.94705547294484,201.20224187465627L372.1672838459508,201.77203083938454L372.5137764438109,202.61789850045804L372.5636948884951,202.76181295406505L374.2168757751215,206.96757080549605L375.19762606029303,209.63428471299198L375.31508122142804,209.88391957991092L375.5353095463249,210.29801879329946L375.61165537460124,210.47129400243185L375.6615738192884,210.6063897895521L375.85243838998167,211.2319404849345L375.911165946495,211.3670356464357L375.98751177477106,211.5784886315354L376.2371039500895,212.1541091872583L376.37217733487864,212.50065527841772L376.4485231631577,212.91474745588152L376.33400442074026,213.1467560601963L376.14313985004674,213.27303910530514L375.5734824604631,213.44631099929921L375.3238903332565,213.51092084119887L374.8423243024979,213.69593967240263L374.4782134328743,213.8486535442339L374.09354792087584,213.9837464184517L373.90855609139953,214.07185037914172L373.69713683022223,214.12764955203525L373.31247131822647,214.26274224281053L372.9953424745695,214.40664513046752L372.0997471295002,214.77374386578552L371.6592904316001,214.96463486632246L371.36858901964433,215.09972682260963L370.4348207604394,215.75462763584306L370.2615744615093,215.86035131176448L369.6273167741956,216.20688948508894L369.36891548705125,216.3596010020096L369.1663053858115,216.55342700272274L368.9725044445065,216.76487325171811L368.5320477466066,217.30523475820084L368.30888300299216,217.51668009286402L368.0886546299862,217.7075680270838L367.9242174428848,217.8632149517395L367.7216073416448,218.1216473141696L367.56010657326124,218.3037244419235L367.3075780273341,218.55628269022762L367.16369553071627,218.71780234741288L366.8671213294342,218.9791701874468L366.72323878470706,219.0937020373578L366.2886548280246,219.49896799615522L365.962716872539,219.9218533160679L365.68376094301993,220.2390166629939L365.40480501350135,220.80579796000578L365.3460774569885,220.97025233400444L365.30790454285034,221.1347065183354L365.1933858004329,221.31678068442613L365.08473979923565,221.5194114028068L364.94085725450896,221.72204190925268L364.63253757078974,222.12436558386287L364.526827940201,222.24183218831953L364.2772358129919,222.4327152835791L364.0746257117519,222.66471145438905L363.9219340551963,222.87615072670917L363.757496916204,223.13457622830535L363.65178728561546,223.3372050364706L363.38164051603417,223.94509039702407L363.10268458651535,224.47368487367783L362.95880204178843,224.68512228021663L362.8824562135121,224.8671932356549L362.82372865699926,225.07863024838736L362.70040075464453,225.87739048283868L362.81491949706174,225.95374240442246L362.72976455695675,226.10057291458455L362.6504823580692,226.2151007183529L362.4684268992014,226.24446677403049L362.3245443544747,226.2826426742392L362.1806618578569,226.49407830607333L362.01622467075526,226.57043001376888L361.8517874836534,226.6291621231809L361.56402244230617,226.8317875991175L361.37315787161265,226.91694901463404L361.25570271047764,227.11957427878383L361.17935688220155,227.2840235902987L361.1705477703731,227.44553624604134L361.0648381397841,227.6187951181931L360.74770929612737,227.63935124360924L360.58327215713484,227.74506847221758L360.3630437841289,227.74506847221758L360.2074157569648,227.64816103857473L359.95782358164956,227.6099853702128L359.7757681708906,227.60117557378524L359.3529296966449,227.68633670058517L359.20611078130946,227.68633670058517L359.0534191247541,227.8038002288706L358.99469156824125,228.09158563527083L358.8419999116859,228.1297612240965L358.66875361275584,228.0827759053235L358.53368022796667,228.13857100037984L358.44852523974987,228.24428800117664L358.3134518549605,228.2942098615047L358.1578238277966,228.26484407109206L357.9845774807575,228.18849293140966L357.7555399959231,228.20611243109698L357.4354747816574,227.98586861327038L357.25341932278957,227.99467834689602L357.10953682617196,227.8889612807393L356.91573583676086,227.84197586508105L356.7718533401403,227.88015149498074L356.62797079541315,227.96531251873586L356.59860704121274,228.10039541300122L356.492897410624,228.26484407109206L356.34020575406885,228.35000490606453L356.19632320933897,228.38818045269286L356.09061362686225,228.48508757795963L356.0113313798654,228.6025507518631L355.9643493538988,228.76406244255344L355.81165769734343,228.85215971269378L355.6002384361659,228.85215971269378L355.5121471254497,228.95787639387743L355.465165051374,229.11057815213414L355.368264580723,229.30439177510547L355.40643749486117,229.50701496829998L355.42699213723586,229.74487671851304L355.368264580723,229.8799586542723L355.2126365535589,229.9856748394468L354.97478990878676,229.99742110083176L354.8866985499644,230.12075659520735L354.85733479576106,230.2763942241493L354.8955077099022,230.47608002203503L354.86908032631027,230.64052706719747L354.7721798075472,230.7756084695131L354.54901511204184,230.76679883700123L354.36695965317676,230.8049740052307L354.15554044010855,230.74624297850343L353.944121178931,230.7168774359813L353.8002386823109,230.7168774359813L353.60643769289936,230.72862366302206L353.453746036344,230.8049740052307L353.32748181148963,230.89013395301617L353.1072534384839,230.9018801720402L352.93400713955657,230.8343394894424L352.73139703831384,230.84314916772166L352.5581507393865,230.8343394894424L352.4230773064853,230.8049740052307L352.00904799217733,230.6493367522175L351.80937430965537,230.70806780142624L351.6625553943172,230.70806780142624L351.46288166368595,230.60235187415026L351.2984445246964,230.6610829342846L351.1839257341701,230.78441814983074L351.0576615093157,231.04577110670007L350.9225881245263,231.27482178017172L350.80806933400004,231.48918952272652L350.69061422097434,231.66244551935853L350.5467317243565,231.7387955846957L350.2296028806966,231.84451104526187L350.03873831000305,231.9678456955491L349.82438267821726,231.98840145697233L349.66288190983323,232.09411676932632L349.527808476935,232.12348215578777L349.33400753563,232.06475142772783L349.1901249909031,232.08530718162106L349.0080695801446,232.17927634262645L348.7966503189673,232.12348215578777L348.62340402003997,232.132291742224L348.47952152342214,232.17927634262645L348.30627517638277,232.19983208765896L348.2005655939031,232.1146725209461L348.05668304917367,231.95022646332757L347.8041545513586,231.9678456955491L347.5751170184151,231.9678456955491L347.38131607711284,232.0471322019609L347.19926061824503,232.17927634262645L346.97903229335134,232.30554736401214L346.76467666156236,232.41126255043076L346.6325396473817,232.50816812141983L346.51508453435576,232.61388327622407L346.3800111495666,232.65205817504545L346.1891465788706,232.67261388385887L346.02470939176874,232.78713853934084L345.84265393290366,232.90166314657043L345.76630810462484,233.0367434351898L345.6312347198357,233.2011888305101L345.4756066926716,233.31571326493685L345.34053330787947,233.5565080939642L345.1966507631528,233.73857234728058L345.0733228607978,233.94119209743053L345.0234044642227,234.14381165466992L344.8795219194958,234.27889134373618L344.7356393747691,234.37579626334187L344.697466460628,234.51968530590926L344.6093751499145,234.66357432513655L344.3979558887372,234.74873311170185L344.2540733921194,234.81627277488246L343.9956721049755,235.33603424930945L343.83123491787364,235.52984335926772L343.6286248166314,235.703096854944L343.4759331600758,235.84698530142046L343.09126764808,235.9908736800639L342.9738125350543,236.1641269140506L342.8299299903249,236.1465079414703L342.6772383337693,236.06722257647579L342.52161030660545,235.9996831468752L342.45407359015485,235.80881082813704L342.36891860194123,235.64436686997152L342.2044814629485,235.5856368736062L341.9930622017712,235.59738289303604L341.73466096273614,235.73246186722318L341.5320508614964,235.82642982010202L341.3588045625663,235.77063635007505L341.22373112966784,235.67373188793718L341.01231191659963,235.56801786766087L340.8185109752949,235.71190637817048L340.8302565058409,235.97325469757186L340.868429419982,236.1553174038301L340.62764640460136,236.1934918821532L340.4074180315954,236.1465079414703L340.2341717326651,236.1641269140506L340.1548895337803,236.30801514457147L340.01100698905066,236.42547484968793L339.82014241835714,236.37555445877163L339.66451434308397,236.2698407284626L339.4619042899535,236.24047576759347L339.2798488310857,236.2698407284626L339.07723872984593,236.29039618017106L338.90399243091565,236.3285705937589L338.7307461319856,236.3285705937589L338.5574998330583,236.29920563844104L338.38425348601913,236.33738005094483L338.164025161122,236.29920563844104L337.97022417171115,236.30801514457147L337.8087234033271,236.3667450026624L338.06712464236193,236.60753733911662L338.2110071870891,236.73086989613643L338.3959990165654,236.73086989613643L338.57805447543046,236.83658351941057L338.7043187002846,236.97166195481938L338.7689190461265,237.318167248384L338.81002833087337,237.72340182923978L338.8482012450113,237.91427299948566L338.89518331908994,238.09927112098893L338.9920837897412,238.30188799651648L339.1154116439841,238.61902720041996L339.3473855475363,239.27092349248633L339.4237313758126,239.51171373039244L339.4442860181871,239.6673463394696L339.47364977239044,239.81123306052925L339.52944095829207,239.99329372205594L339.6938781453937,240.61875943840283L339.9258520008368,241.53493274282317L340.0609254337378,242.1016670687203L340.26059911625975,242.8710150142196L340.31051756094416,243.0354556252411L340.4338454151871,243.53464989014358L340.4720183293282,243.7372638925344L340.62764640460136,244.30399529092483L340.69518307294265,244.5066089502867L340.72454687525214,244.67104896060846L340.8185109752949,245.08508513140907L341.0211210765344,245.9014107220587L341.0886577448762,246.10402371958884L341.147385301389,246.3829835075833L341.22373112966784,246.69130728496313L341.3118224884904,247.01724937697517L341.36761367439476,247.19049784431238L341.4057865885329,247.38430109407798L341.561414615697,247.95102844012496L341.82862506277866,249.05805391379027L341.89616173111995,249.2694749917405L341.9548892876328,249.53081486156398L342.1369447464979,250.20325069719314L342.16630854881055,250.37649824146237L342.3219365759742,250.88743146327863L342.4159006760169,251.29852692565078L342.600892505493,252.00326153418075L342.600892505493,252.47308427034505L342.56271959135483,252.63752218258486L342.44526443022005,252.77259614142537L342.01361684414564,253.21599096154657L341.7141063203642,253.5507392697666L341.5232417015586,253.70636781506522L341.4733233049835,253.87961471254147L341.4057865885329,254.16738060860217L341.4057865885329,254.72529392343102L341.2912678461157,255.1569424655456L341.32063164842793,255.3977259059385L341.32063164842793,255.67668233272914L341.3764228343325,256.1024578375401L341.3588045625663,256.29332266754164L341.23254028960287,256.6867978077753L341.23254028960287,256.901153611295L341.28245873429,257.09201840626235L341.30007700605347,257.29462862727826L341.24428582015184,257.56477564003376L341.2707132037435,257.7938132662453L341.32063164842793,258.43981673028645L341.36761367439476,258.80392775591525L341.39697747670425,258.9507466567291L341.4557050332171,259.0946292294385L341.5232417015586,259.3236667497179L341.7229154321899,259.8933241884211L341.73466096273614,260.03720669075744L341.7728338768743,260.17228007916464L341.7434700745648,260.32497178628756L341.68474251805196,260.498218086483L341.66712424628554,260.6714643857212L341.7434700745648,260.79772865869586L341.9255255334299,261.01795698405294L341.89616173111995,261.23524898862644L341.89616173111995,261.41730445162693L341.9754439300077,261.58467801571925L342.089962720534,261.6874512330103L342.175117660639,261.8372065292458L342.1574993888728,261.99577094145326L342.21622694538564,262.21599934150294L342.23384521715184,262.47146430129357L342.2925727736647,262.6153468286787L342.37772776187853,262.7651021520716L342.3101910454279,262.96771231357104L342.36891860194123,263.1409586735205L342.58914697494697,263.19674988106107L342.782947916249,263.30245955542154L342.9356396209164,263.47276956225426L342.87984843501204,263.6489523239916L342.7447750021108,263.7898985803859L342.762393273877,263.97195415737514L342.90627581860394,264.05417278478944L343.0149218198012,264.18337352535883L342.6273198890849,264.38598379404334L342.1956723030107,264.34193805254023L341.9754439300077,264.25678304148937L341.80219763107766,264.2597194144902L341.6083966897727,264.23622838249867L341.3588045625663,264.0864729812665L341.10921238725064,263.96608136402256L340.8977931741824,263.9425903350811L340.7333559870806,263.8809263671677L340.53955504577584,263.8662444565338L340.34869047508255,263.7898985803859L340.2136170902934,263.6606978610984L340.04917990319154,263.51975165979536L339.84656980194904,263.41404197752325L339.68506903356774,263.28484127610545L339.5411864888383,263.11453128002455L339.4619042899535,263.0000124971786L339.3268309051614,262.8561299071595L339.135966286359,262.970648685139L339.08898426039195,263.1409586735205L339.10660253215565,263.31420509106135L338.9920837897412,263.49626058686977L338.71312786022213,263.5050697512188L338.53107240135455,263.43459662963215L338.38425348601913,263.3318233705551L338.1552160011847,263.2613502532133L337.9437967881163,263.21730453165935L337.8263416750906,263.1438950933552L337.68245913036344,263.09691300178L337.55913122801167,263.15564058027593L337.453421645532,263.29952318354725L337.3271573725683,263.44340579378854L337.1157381595003,263.4757059343056L336.9131280582603,263.49038784272324L336.7692455135309,263.42872388561756L336.6253630169133,263.2701593687337L336.4697349416399,263.0763583519647L336.36402535916045,262.970648685139L336.2671248885092,262.8561299071595L336.0380874036748,262.659392542564L335.91182313071135,262.5683647921239L335.5946942870546,262.31289982695245L335.39208418581484,262.31289982695245L335.2393925292595,262.4509096549204L335.07495534215764,262.50376448069665L334.86353612908965,262.4362277509635L334.6227531137117,262.2835360680655L334.4876797289196,262.13378076088446L334.02666834053593,262.0368802787074L333.82405828740525,261.92823426648783L333.6126390262275,261.78728808079325L333.333683144818,261.75792432453795L333.16043679777886,261.8019699830203L333.016554301161,261.7931608705481L332.8609262258881,261.69626039346866L332.67887081512913,261.7256241494893L332.526179158574,261.86069754412586L332.4586424421234,262.042753020579L332.2472232290552,262.4362277509635L332.2090503149168,262.58598306779527L332.1973047843708,262.7651021520716L332.17087740077886,262.9471576645537L331.8420030265754,262.95596682732315L331.65994761581965,263.02937626136907L331.6981205299576,263.29365043980357L331.66875672764536,263.5344335203388L331.4867012687803,263.60197027230646L331.38099168630083,263.7135527065744L331.2752820557123,263.84275342856824L331.1313995109824,263.8897354847264L330.9757714838188,263.8339442630702L330.8406980990294,263.7546620155546L330.6586426401616,263.7517256431903L330.49420550116906,263.8809263671677L330.3209591541297,263.91029014059626L330.09192166929824,263.86037171155L329.8805024562298,263.7223618235392L329.70725615729975,263.7898985803859L329.65733771261534,264.03068175496026L329.6279739103031,264.2332920095291L329.54281897019814,264.37130188010616L329.39893642547145,264.51518455460456L329.22569012654117,264.60327594982283L328.87038836874603,264.67081273372486L328.67658742744106,264.7794588483973L328.48572285674754,264.9292143010735L328.32128566964593,264.987941926321L328.1274847283439,265.00556021907886L327.90725635533795,264.91159600905934L327.6194913139932,264.6737491073188L327.4344994845171,264.48582072498897L327.2054619996825,264.34781084688524L327.0322156526431,264.5210573013372L326.8677785136538,264.5357392163489L326.6769138948482,264.46820243704303L326.4919221134837,264.3125742734899L326.35684868058274,264.15988249418564L326.23352082633687,264.0835366084973L326.06027452740955,264.05417278478944L325.92520109450857,263.9249720514986L325.9839286991303,263.7898985803859L325.94281936627453,263.56379733788236L326.0309107250973,263.37586904569315L325.90464645213365,263.3083322991825L325.9340102544461,263.15857695201197L325.8576644261673,263.04405816761465L325.7225910413779,262.95596682732315L325.7049727696117,262.7592294092761L325.6638634367557,262.5830466965297L325.6550543249273,262.4274185893722L325.6550543249273,262.21599934150294L325.5023626683717,262.1396535028542L325.41427130954935,261.99577094145326L325.4729988660622,261.63459641477175L325.2909434553037,261.59935986946397L325.11769710826434,261.5053957653495L325.067778711689,261.3321494611585L324.9062778951959,261.21175797528406L324.8005683127194,261.11485750349243L324.65374939738103,261.03851167464586L324.45407566675,261.00914787218164L324.36598430792446,260.9034382412652L324.35717519609875,260.73019194224105L324.2690838372737,260.6244823597268L324.12520134065585,260.60392766922115L323.9519549936165,260.5363910007507L323.8961638077121,260.3337808982123L323.7698995828607,260.2016438820684L323.5878441239929,260.0929978783418L323.443961579266,259.9784791321645L323.2795244402737,259.8257874685139L323.20317861199715,259.5850044360555L323.1738148096849,259.3912034746819L323.347061108615,259.0447107755738L323.0769143390337,258.88320997359466L322.9418409542418,258.7863094797598L322.76859460720266,258.77750031759746L322.72161258123583,258.6218722477247L322.83613132365303,258.4310076153757L322.7979584095151,258.26657036630917L322.8831133977287,258.14030603982144L322.9623955966165,257.9964234755376L322.7979584095151,257.91126844377976L322.5953483082751,257.9200776083463L322.4309111211735,257.8525408556685L322.5483662823085,257.71746739318206L322.48963872579566,257.5823939234317L322.27821946461813,257.4678750549462L322.0080726950371,257.40914745627543L321.82601723616926,257.29462862727826L321.71149849375206,257.0626545780128L321.80546259379435,256.82187133387055L321.8465718785442,256.6486248519523L321.9522815091327,256.4489508903194L321.9229177068203,256.25514970327697L321.555870466588,256.0642848689001L321.47071547837413,255.71779168630394L321.26810542524345,255.63850935367006L321.0067677674881,255.56216339260743L320.92161277927426,255.31257080326387L320.824712308623,255.0923419855942L320.83352142045146,254.8603676227505L320.87463075330743,254.64013872952282L320.80709403685705,254.2642813507873L320.7483664803442,254.1086528835786L320.71900267803426,253.97357909974468L320.65146600969297,253.8502508188613L320.58392929324236,253.6564492547625L320.53694726727576,253.38923793945463L320.4224285248613,253.17488152276377L320.22862753544723,253.0691714883335L319.9496716059284,252.8959245030801L319.83515286351417,252.66688606322526L319.70007947872205,252.53181208918323L319.53564229162043,252.45546591915377L319.3447777209269,252.3380102679218L319.17153142199663,252.27047323510712L319.0159033948328,252.12658999937986L318.85146620773116,251.9533428372472L318.7751203794521,251.6185939549993L318.62242872289653,251.5510569140454L318.4668006957329,251.37780958584125L318.32291815100575,251.24273541044698L318.1496718520757,251.12821597988676L317.97642550503656,250.96377777561005L317.80317920610923,250.88743146327863L317.6592967094914,250.89624067945306L317.5741417212748,250.769975590776L317.43906833648543,250.60847374850678L317.30399495169354,250.54093657269638L317.16892151879506,250.4440354322523L316.9663114656619,250.4440354322523L316.7637013644221,250.38530746362014L316.39959049479853,250.14452270911866L315.79176019107626,249.9712751089547L315.5803409780078,249.8362006320545L315.43645843328113,249.62477973220464L315.3894764073143,249.10503640818058L315.41884016151766,248.8172686907364L315.4951859897942,247.02899505297663L315.57153181807325,246.34481007418952L315.5803409780078,245.36404543270143L315.18686630607476,245.1907964075052L314.65831824934935,244.94120024445104L314.5702268905243,244.78556963537687L314.0035059196607,243.11180302174049L313.91541456083837,242.89157008804682L313.83025962073066,242.6214175682707L313.069737660456,240.4455084833239L312.7320541744241,239.45592088546252L312.5705534060405,238.92735667582545L312.4061162189389,238.53974239097712L312.1858878459327,237.91427299948566L311.9744686328647,237.27999295380846L311.6455943067733,236.38436396274003L311.3284654631134,235.46230385847227L310.71182604756564,233.72095322960155L310.5767526627735,233.24817324550992L310.5884981452109,233.07491827474473L310.4240610062211,232.75777327357915L310.0100316919104,231.35410849687497L309.8455945048088,230.8343394894424L309.65472993411527,230.15012220755588L309.3757740045962,229.2280409696233L309.2025277056689,228.51445338894496L308.22177737238553,229.00486153842522L306.55685100332244,229.75662299138972L305.73760148653173,230.15012220755588L302.71606838401794,231.51561844119254L301.3712072292228,232.14110137648206L300.8397228018862,232.38189724376772L300.2348288687756,232.64324860569334L298.52292042563636,233.44198375884287L298.0296089124406,233.65341326024318L297.80938053943464,233.76793750888893L295.06680336643944,234.70174894505618L294.1066077236401,235.01889176742614L293.9803434987857,235.07762187509888L291.6811593943021,235.8851597699269L288.9297731094757,236.81896458464217L288.57153498107186,236.93348761913225L286.792089821482,237.55895886790464L286.3398875930361,237.6940370018408L286.26354176475684,237.86728935920522L286.2429871223849,238.09927112098893L286.17545040593427,238.34887157597413L286.081486305892,238.50156823652236L286.0433133917538,238.69537547893827L286.03156790931666,239.10060835673687L286.0433133917538,239.29147875778756L286.01394963755047,239.81123306052925L286.0227587493789,240.0520229856103L286.0433133917538,240.2252740756572L286.0227587493789,240.57177610952598L286.03156790931666,240.7362176628835L286.081486305892,240.8977226983612L286.081486305892,241.06216411116992L286.1108501082015,241.22660540583473L286.1871959364805,241.3616822003417L286.21655969068115,241.53493274282317L286.81264446385694,241.47620375635327L287.15913710982636,243.83416619641258L286.8977994520708,244.07495367686815L286.792089821482,244.21883882893155L286.571861448479,244.47724463776532L286.0433133917538,245.03516587896618L285.89649447641546,245.04691160003688L285.59111116330473,245.0263566240583L285.3297735055521,245.03516587896618L284.780670806452,245.0263566240583L284.7336887804854,245.1907964075052L284.6279791498969,245.2965077088411L284.53107867924564,245.4492017386355L284.46354196279526,245.64300562461477L284.3783870226903,245.8162545408024L284.4459236910318,246.05704098099264L284.4723511227328,246.2684631991162L284.4723511227328,246.42115693822132L284.4840966051697,246.5650413570206L284.4459236910318,246.72948069362812L284.366641492144,246.90272920328397L284.3578323803156,247.11415108830425L284.38719613451894,247.316763580708L284.34902322037783,247.48120269413965L284.24331358978907,247.60453201024177L284.1464131191383,247.77778025078644L283.97316682020823,247.92166436909116L283.876266349557,248.09491251641683L283.16566283396673,247.98039255781893L281.7885015062477,247.5663586613344L281.5770822931797,247.5193760486915L281.154243818934,247.39311030926024L280.46125857510697,247.21105273468268L280.1353206196243,247.06716843812347L279.42178073342257,246.78820900570665L279.0576698156897,246.6325789623756L278.74935013197046,246.51805870766935L278.54674003072796,246.5356772136883L278.19143827293306,246.5474228519713L277.5953535478661,246.58559627083042L277.3428250019422,246.66194314852197L277.29584297597535,247.1523244676113L276.96990497238085,247.39311030926024L276.7761040310786,247.5193760486915ZM276.63222148634895,247.55754940071031L276.27691977666314,247.82769924538988L276.0449458731109,247.73960691325746L276.1800192579028,247.6338960971636L276.3708838767054,247.5751678737175Z\" stroke=\"#000\" fill=\"#FFF\" strokeWidth=\"0.5\"></path>\r\n        <path id=\"Meru\" ref={(item) => countyRefs.current[11] = item} d=\"M313.069737660456,240.4455084833239L313.83025962073066,242.6214175682707L313.91541456083837,242.89157008804682L313.9741421173512,243.11180302174049L314.1385793044526,243.5816328770738L314.2061160209005,243.7167088585992L314.62895444703713,244.9500095009145L315.5803409780078,245.36404543270143L315.4951859897942,247.02899505297663L315.41884016151766,248.8172686907364L315.3894764073143,249.10503640818058L315.43645843328113,249.62477973220464L315.5803409780078,249.8362006320545L315.79176019107626,249.9712751089547L316.39959049479853,250.14452270911866L316.7637013644221,250.38530746362014L316.97512057749054,250.4440354322523L317.20709443293345,250.4440354322523L317.5242232765904,250.69362925914416L317.6416784377252,250.86687668929292L317.80317920610923,250.88743146327863L317.97642550503656,250.96377777561005L318.1496718520757,251.12821597988676L318.32291815100575,251.24273541044698L318.4668006957329,251.37780958584125L318.62242872289653,251.5510569140454L318.7663112195171,251.60684840815424L318.85146620773116,251.9533428372472L318.98653959252056,252.10897164139598L319.15097677962194,252.25285487997613L319.4769147351076,252.39673809543152L319.6413519222092,252.51125735541999L319.83515286351417,252.66688606322526L319.99665368000433,252.92528842388114L320.18164550948063,253.04274400202405L320.4224285248613,253.17488152276377L320.52813810734074,253.34812845955483L320.5956748237886,253.72398614406626L320.65146600969297,253.8502508188613L320.71900267803426,253.97357909974468L320.7483664803442,254.1086528835786L320.80709403685705,254.2642813507873L320.87463075330743,254.64013872952282L320.83352142045146,254.8603676227505L320.824712308623,255.0923419855942L320.92161277927426,255.29201612087508L321.0067677674881,255.56216339260743L321.26810542524345,255.63850935367006L321.47071547837413,255.71779168630394L321.555870466588,256.0642848689001L321.9229177068203,256.25514970327697L321.9522815091327,256.4489508903194L321.7672896796564,256.55466064594265L321.834826396107,256.72790713654433L321.78784432203133,256.88059894886584L321.71149849375206,257.0626545780128L321.82601723616926,257.29462862727826L322.0080726950371,257.40914745627543L322.27821946461813,257.4678750549462L322.48963872579566,257.5823939234317L322.5483662823085,257.71746739318206L322.4309111211735,257.8525408556685L322.5953483082751,257.9200776083463L322.7979584095151,257.91126844377976L322.9623955966165,258.00523259171973L322.8831133977287,258.14030603982144L322.7979584095151,258.26657036630917L322.83613132365303,258.4310076153757L322.72161258123583,258.6218722477247L322.76859460720266,258.77750031759746L322.9418409542418,258.7863094797598L323.0769143390337,258.88320997359466L323.347061108615,259.0447107755738L323.1738148096849,259.3912034746819L323.20317861199715,259.5850044360555L323.2795244402737,259.8257874685139L323.443961579266,259.9784791321645L323.5878441239929,260.0929978783418L323.7698995828607,260.2016438820684L323.8961638077121,260.3337808982123L323.9519549936165,260.5363910007507L324.12520134065585,260.60392766922115L324.2690838372737,260.6244823597268L324.35717519609875,260.73019194224105L324.36598430792446,260.9034382412652L324.45407566675,261.00914787218164L324.65374939738103,261.03851167464586L324.8005683127194,261.11485750349243L324.9062778951959,261.21175797528406L325.11769710826434,261.33508583183755L325.11769710826434,261.5053957653495L325.2909434553037,261.60523265907943L325.46418975423376,261.6786421206678L325.43482595192154,261.8254609977815L325.41427130954935,261.99577094145326L325.5023626683717,262.1396535028542L325.6550543249273,262.21599934150294L325.6638634367557,262.57717390589426L325.7049727696117,262.7592294092761L325.7225910413779,262.95596682732315L325.8576644261673,263.04405816761465L325.9340102544461,263.15857695201197L325.90464645213365,263.3083322991825L326.0309107250973,263.37586904569315L325.94281936627453,263.56379733788236L325.9839286991303,263.7898985803859L325.92520109450857,263.9249720514986L326.06027452740955,264.05417278478944L326.23352082633687,264.0835366084973L326.33923040881655,264.17456435857065L326.2129661839649,264.33312893321477L326.0514653674718,264.4241567419032L325.8371097837951,264.49169347163325L325.6256905226178,264.5210573013372L325.4260168400956,264.48288435167285L325.2116612083066,264.4006656599771L325.0384149093795,264.4300294883702L324.98262372347517,264.56510299858803L324.96206908110025,264.7177948080023L324.8651686104495,264.86755025571534L324.7594589798607,264.97326000779964L324.6067673233051,265.05547867608794L324.45407566675,264.9673872596708L324.3483660361612,264.80882263433654L324.20154716893217,264.74715864109254L324.0400463524418,264.72660397712434L323.8844183252752,264.6590671912791L323.74053578054804,264.55923025172655L323.62601703813107,264.4300294883702L323.28833355210213,264.20392818385466L323.13564189554654,264.09234572681584L322.98001386837996,263.9631449914043L322.8273222118273,263.8809263671677L322.6452667529595,263.8515625459884L322.42210200934505,263.8867991122039L322.248855710415,264.03949087307797L322.0961640538594,264.1452005817879L321.931726866758,264.1129003844724L321.79665348196863,264.0071907253704L321.6733255796137,263.828071518164L321.4589699959372,263.6254612980444L321.3062783393816,263.49626058686977L321.13303199234224,263.40816923354896L320.8922490250736,263.48157867841877L320.66321149213013,263.3905509535944L320.71900267803426,263.2084954162895L320.6896389238309,263.0352490527238L320.53694726727576,262.9324757587288L320.431237636687,262.7445475042164L320.29616425189784,262.7122473710115L320.1904546213091,262.6094740861061L320.0847450388294,262.2835360680655L319.91149869179003,262.1396535028542L319.73825239286,262.03394390777555L319.5561969339951,262.0045801023099L319.3036684361773,261.9135523639886L319.13042213725,261.9076796222408L318.9982851230666,261.8107791436153L318.87202085010586,261.7403060515944L318.7193291935505,261.76379706615694L318.419818621657,261.68157849144677L318.2172085204172,261.69626039346866L318.11149893793777,261.8019699830203L318.005789307349,261.892997719788L317.8707159225571,261.7931608705481L317.7473880202049,261.6786421206678L317.61231463541276,261.58467801571925L317.58295083310327,261.411431662123L317.4478774483114,261.36444963486286L317.2658220375554,261.3262767198077L317.2276491234172,261.1912033326224L317.1982853211048,260.86526532707524L317.09257569051624,260.70963729986585L316.86941099501064,260.63329147156236L316.8606018350729,260.4688542840455L316.81361980910924,260.3161626262472L316.6491826220049,260.21926215416164L316.50530007727775,260.21926215416164L316.3232446184129,260.1810892392842L316.205789505387,260.0665704939881L316.0237340946285,260.01665204769245L315.8504877475891,260.0929978783418L315.5627227062448,260.15172543633616L315.3894764073143,260.17228007916464L315.28376677672577,260.07537960607465L315.1398842319991,260.0460158509792L314.92846501893064,259.94911537679565L314.7933916341385,259.7964236645315L314.62895444703713,259.6995231875808L314.3676167892843,259.6525411581049L314.176752218591,259.6026227093454L314.01231503148915,259.5761953234464L313.8508142631056,259.4969131169834L313.7715320642178,259.3530305558335L313.5219398889021,259.20033887770495L313.27234776169576,258.98891957875094L313.18425640287046,258.8714644403634L313.0785468203908,258.77750031759746L312.9346642756641,258.6600451729446L312.74379970497057,258.53671723331155L312.53238049190213,258.46918054270424L312.3385795024883,258.4192620806828L312.165333203561,258.4486258932829L311.9744686328647,258.4574350081465L311.80122233393695,258.36347087450656L311.68376722091125,258.22839743654816L311.52226640441836,258.2577612509206L311.4429842055306,258.38989831593136L311.2609287466655,258.5249717470977L311.0289548912226,258.5249717470977L310.7911082464534,258.56314467336705L310.6354802192868,258.74813655582955L310.4240610062211,258.9096373631062L310.23026001680705,259.25613007201537L310.13629591676454,259.44112192513495L309.9630496178345,259.3823943136805L309.76924867653247,259.344221394772L309.65472993411527,259.5350860348928L309.4609289447012,259.6525411581049L309.1731639033567,259.5850044360555L309.02928135862976,259.69071407512104L308.8853988620092,259.6525411581049L308.6915978725981,259.51746776141846L308.52716073360557,259.5850044360555L308.39502371942467,259.4969131169834L308.28931408883614,259.5938135967598L308.13368606166955,259.42937639327033L308.02797643108056,259.2972393625654L307.9134576886661,259.17097507071634L307.80774805807755,258.99772874045993L307.7783843038742,258.77750031759746L307.663865561457,258.680599821121L307.5845833144631,258.54552639605555L307.46125546021744,258.3722800377063L307.29681827311583,258.3722800377063L307.14412661656024,258.22839743654816L307.04722614590946,258.02578724414457L306.8534252046045,257.94944137776673L306.61264218922656,257.82317703706866L306.3630500139109,257.7938132662453L306.1809946031524,257.785004101256L306.10464877487607,257.67048529039516L305.9314024278367,257.5941394135524L305.728792374706,257.632312352271L305.56435518760463,257.6998491107527L305.29420841802335,257.632312352271L305.5555460276669,258.70996363152005L305.2677809863196,258.72758190802824L305.1327076015302,258.6424268961143L304.96827041442884,258.4985443067515L304.8331970296367,258.41045296572025L304.71867828722225,258.22839743654816L304.51606823409156,258.1990336218935L304.3134580847402,258.26657036630917L304.1402117858097,258.3429162244179L303.91117430097825,258.3135524589622L303.51476325843373,258.53671723331155L303.226998217089,258.82448240331325L302.5428220850879,259.3354122818044L302.41949423084475,259.5350860348928L302.2638661555716,259.6231773534433L302.0906198566415,259.7582507480563L301.9672920023959,259.94030621649034L301.84102772943515,260.05482496308446L301.65897227056735,260.12236168142675L301.3212887845359,260.210452994063L301.10986957146747,260.23981679688774L300.8514682843231,260.4130630978085L300.79274072781027,260.63329147156236L300.8514682843231,260.80653777052646L301.0247145832536,260.9269293024041L301.1685971279803,261.0473207865271L301.3418434269104,261.0326388852859L301.5327079976039,260.994465970961L302.02308318830023,260.8740744389107L302.2932299578815,260.8270924129064L302.5046491709495,260.77717401631844L302.7278139145644,260.70963729986585L302.92748764519524,260.7859831281478L303.0243881158465,260.9562930566823L302.8716964592911,261.03851167464586L302.7278139145644,261.16771227123377L302.6602771981138,261.3321494611585L302.71606838401794,261.4613501083951L302.6309134439132,261.6287236732481L302.49584005912106,261.93117063736975L302.45766714498313,262.1925083252112L302.5633767274626,262.4039275720548L302.67789546987956,262.48908257656575L302.81296890277804,262.54781014528487L302.9774060417708,262.55661925901444L303.1007339441253,262.674074447303L303.1506523888097,262.8649390697006L303.1300976983259,263.0146944032978L303.091924784188,263.1644497436019L303.1212885865002,263.29952318354725L303.1212885865002,263.49626058686977L303.006769844083,263.66363423335514L302.9098693734318,263.87505357403904L302.5809949992288,264.21861009664264L302.33140287201945,264.5210573013372L302.06125610243816,264.8176318038855L301.8792006435733,265.05547867608794L300.6958402571595,266.2564592526634L300.1291192862959,266.8496089747313L299.973491211023,267.00230101563704L299.7532628861261,267.1050744969943L299.67691705784705,267.2577665703064L298.9457588998821,267.8832170666401L298.59045714208673,268.1709831133169L298.3203103243966,268.4117670319796L297.96500861471054,268.696596846947L297.7242255993299,268.8786530814853L297.4041603850644,269.1488010677116L296.81982114243465,269.62156026353534L296.6935568694714,269.67735174078103L296.47332849646796,269.80361668664943L296.30889130936635,269.84766258119936L296.3470642235045,269.69790649141345L296.3764280258142,269.5422776568881L296.385237185752,269.3543485192263L296.2325454810873,269.2075288993087L296.1150903680616,268.96968121201513L295.865498240855,268.7964341092291L295.7685977702042,268.69072408129045L295.5190055948858,268.56152290912974L295.2018767993379,268.4704948176141L295.0110121805351,268.37946673452745L294.8260203991681,268.4851767765967L294.74086541095426,268.6877876984759L294.643964940303,268.82286165414007L294.5588099520892,269.0225362162054L294.4413548390635,269.1781650070849L294.3855636531591,269.37490326218267L294.2974722943336,269.5334685002068L294.1712080694822,269.73020683545855L294.03907105529856,269.87409015753457L293.90399762240054,269.9328180384606L293.7601151257827,269.9798003269607L293.55750502454,270.10019254372924L293.3754495656751,270.2793126361678L293.1904577843079,270.43787804717323L292.9790385231306,270.49660596925276L292.8439651383412,270.57295227938965L292.69127348178586,270.60231622092914L292.48866338054336,270.5788250579875L292.21851661096207,270.5788250579875L292.045270312035,270.5876342740729L291.8044872966541,270.6199346056312L291.57544981182264,270.6316802116939L291.4403763789214,270.67866258963426L291.25832096816544,270.6551713762491L291.0850746211263,270.6933445382286L290.9000828397591,270.81373686416384L290.61231775030546,270.7902456466057L290.4302623395465,270.80492764546597L290.2570159925076,270.79905486512945L290.11313349588977,270.7403269199601L289.96925095116285,270.86659203418077L289.7960046522328,270.91357437858255L289.5933945509928,270.95174755362467L289.43776652382894,271.09269470809943L289.0442918518929,271.1073766648186L288.9004093071662,271.03103030065427L288.803508836515,270.8519100341186L288.63026253758494,270.80786403564935L288.42765243634494,270.7902456466057L288.092905320922,270.6845353690395L287.89910437961976,270.49660596925276L287.678876006614,270.33804054642457L287.57316642413434,270.1442384541543L287.43809299123336,270.18241159129167L287.2942104946155,270.18828436697686L287.1385824193426,270.21177556637167L286.92716320627414,270.1295564677075L286.792089821482,270.0444010381685L286.62765263438064,269.9915459235591L286.4749609778253,269.87409015753457L286.4162334213122,269.7360796079244L286.26354176475684,269.6303694692315L286.01394963755047,269.55695963300536L281.67398276383324,269.1282463299606L277.20775161715005,268.6349326650064L272.87072111404154,268.0564639612943L266.7101997959878,264.01599984339833L266.39307100043993,263.7987076976151L265.8057953390928,263.422851093504L264.7956812997179,262.7562930378822L264.6048166809128,262.6065377148238L264.44037954192004,262.4362277509635L264.4227612701568,262.23949035790207L264.3170516395678,262.13378076088446L263.95000439933574,261.84014290008975L263.66223930987917,261.55825058281965L263.4889930109491,261.411431662123L263.3832833803606,261.2675491621007L263.3157467120218,261.1060483434757L263.1982915989961,260.7859831281478L263.07496369664113,260.68027349755215L262.91933566947705,260.36314470082306L262.7960077671221,260.23981679688774L262.69029818464287,260.10474340920695L262.5346701093697,259.94030621649034L262.39078761275186,259.7582507480563L262.55522475174416,259.6026227093454L262.64037973995846,259.46754931161047L263.0925819684071,259.1416113116606L263.28638290970935,259.015347015712L264.0557139818154,258.99772874045993L264.2113420089793,259.0270925485453L264.3552245537062,258.9771740939242L264.57545292671216,258.9213828962287L264.77806302795193,258.8538461645053L264.9013908821976,258.7363910221948L265.153919428122,258.70996363152005L265.2772472823676,258.58369932209604L265.35359311064394,258.4486258932829L265.53858494012,258.3810891527765L265.68246748484717,258.36347087450656L266.0289600827073,258.29593418031595L266.269743098085,258.1696698550567L266.51052611346586,258.13149692405796L266.6925815723307,258.1226877601594L267.08605619615787,258.0845148285434L267.28866629739764,258.00523259171973L267.4442943726706,257.9288867247744L267.6263497834293,257.8143679202892L267.7702323281562,257.8525408556685L267.77904143998467,257.64112151779574L267.89649660111945,257.56477564003376L268.05799736950075,257.5148571616776L268.17545248252645,257.4297021616857L268.35750794139426,257.3533562289233L268.58654542622594,257.3328015709285L268.77153725570224,257.24764656408155L269.1268390134974,257.0538454583208L269.2413577559148,256.9393265621092L269.2531032864608,256.669179516867L269.3088944723652,256.02317552445413L269.36762202887803,255.8323106627034L269.7053055149099,255.70604618431653L269.84918801152776,255.63850935367006L269.984261444426,255.69723700965787L270.0782255444685,255.9292112840057L270.2044897693229,256.20816761443535L270.33075404228634,255.9967480538222L270.44527278470355,255.8323106627034L270.559791527118,255.63850935367006L270.66550115770656,255.53279958628139L270.7712107882953,255.38010760096125L271.56990561460157,254.61077490304444L271.56109650277585,254.14682590759185L271.6198240592887,253.97357909974468L271.6579969734271,253.75335004112927L271.64625144288084,253.5507392697666L271.7343428017034,253.4274109886689L271.8488615441206,253.29233707145858L272.2452725866651,252.8959245030801L272.5418467879474,252.6845044104111L272.6769201727393,252.6580769135619L272.7356477292524,252.50244815617904L272.8501664716666,252.3497558048623L273.1672953153238,252.1559539446032L273.3904600589383,252.07079853924267L273.6018792720065,252.0414346392817L274.0834453027651,252.14714474189415L274.1979640451823,252.05905299862096L274.3624012322839,252.0414346392817L274.45636533232664,251.93572447576418L274.4093832582507,251.78009564040002L274.30367367577105,251.55986607478476L274.5532658029774,251.5305021571726L274.80285793018675,251.4071735570347L274.83222173249646,251.15464357185692L274.814603460733,250.91385906338832L274.8909492890093,250.68482008874105L275.01427714325496,250.43522621079788L275.13173230438997,250.26197868048473L275.16990521852813,250.08873110877542L275.13173230438997,249.9536567024911L275.2374418868694,249.7892182368353L275.2756148010078,249.62477973220464L275.24625104680445,249.4339135825852L275.4400519881094,249.35756710761106L275.54576161869795,249.24011098259297L275.6015528046023,249.01107146411545L275.66908947294087,248.84663276710924L275.4870340140758,248.7585405820342L275.38132443159657,248.6733848315863L275.41068818579674,248.53831008965696L275.5340160881517,248.47077275583408L275.6015528046023,248.3356980179422L275.7278170294537,248.22117810500706L275.9186816001502,248.09491251641683L276.0449458731109,247.82769924538988L276.2270013319787,247.8365084538185L276.3620747167679,247.80714432898364L276.6615852886614,247.59572275019718L276.96990497238085,247.39311030926024L277.29584297597535,247.1523244676113L277.3428250019422,246.66194314852197L277.5953535478661,246.58559627083042L278.2208020752453,246.57678704276967L278.54674003072796,246.5356772136883L278.74935013197046,246.51805870766935L279.0576698156897,246.6325789623756L279.42178073342257,246.78820900570665L280.1353206196243,247.06716843812347L280.46125857510697,247.21105273468268L281.154243818934,247.39311030926024L281.5770822931797,247.5193760486915L281.7885015062477,247.5663586613344L283.16566283396673,247.98039255781893L283.83809343541884,248.2387965101448L283.90563010376036,248.0097566259533L284.0201488942839,247.88349104089187L284.1464131191383,247.77778025078644L284.24331358978907,247.60453201024177L284.34902322037783,247.48120269413965L284.38719613451894,247.32557284504813L284.366641492144,247.1347059814788L284.3783870226903,246.91153847416487L284.4459236910318,246.72948069362812L284.4840966051697,246.5650413570206L284.4723511227328,246.42115693822132L284.46354196279526,246.10402371958884L284.3783870226903,245.91022000957878L284.38719613451894,245.75752607192118L284.46354196279526,245.63125996584665L284.53107867924564,245.4492017386355L284.6279791498969,245.28476199378014L284.7336887804854,245.1907964075052L284.77186169462357,245.05572085457015L285.3297735055521,245.03516587896618L285.5999203232425,245.03516587896618L285.89649447641546,245.04691160003688L286.0433133917538,245.03516587896618L286.3398875930361,244.7268410913671L286.6393981649269,244.51541821481842L286.792089821482,244.21883882893155L287.15913710982636,243.83416619641258L286.8684356497613,241.47620375635327L286.6863801908935,241.47620375635327L286.19600504830896,241.40866538463825L286.1108501082015,241.22660540583473L286.0697408234548,241.06216411116992L286.081486305892,240.8977226983612L286.03156790931666,240.7362176628835L286.0227587493789,240.57177610952598L286.0433133917538,240.2252740756572L286.0227587493789,240.0520229856103L286.01394963755047,239.86996230525665L286.0227587493789,239.5616336520961L286.0521225516886,239.35020808752358L286.03156790931666,239.10060835673687L286.0433133917538,238.69537547893827L286.1108501082015,238.454584678157L286.204814208244,238.30188799651648L286.2429871223849,238.09927112098893L286.2723508765855,237.80855972734184L286.39861514954896,237.6940370018408L288.57153498107186,236.93348761913225L288.9297731094757,236.81896458464217L289.22634731076073,236.71325095549327L289.5816490204468,236.60753733911662L290.421453179609,236.30801514457147L291.6811593943021,235.8851597699269L291.9689244837557,235.7794458232331L292.5943730111321,235.56801786766087L292.9995931655051,235.4711133406098L294.04788016712723,235.05706634114426L295.08735800881436,234.73992355998246L296.279527555163,234.28770086136356L297.80938053943464,233.76793750888893L298.0296089124406,233.65341326024318L298.52292042563636,233.44198375884287L300.8397228018862,232.38189724376772L301.4358075269529,232.15284753899948L302.7278139145644,231.52736458354843L303.7937191879523,231.0252152707264L303.9493472151162,230.99584976040862L306.55685100332244,229.75662299138972L306.8827889588076,229.62154103579482L309.1731639033567,228.5731849518375L309.65472993411527,230.15012220755588L309.8455945048088,230.8343394894424L310.0100316919104,231.35410849687497L310.4240610062211,232.75777327357915L310.5767526627735,233.24817324550992L310.71182604756564,233.72095322960155L311.3284654631134,235.46230385847227L311.6455943067733,236.38436396274003L311.9744686328647,237.27999295380846L312.1858878459327,237.91427299948566L312.4061162189389,238.53974239097712L312.5030166895899,238.84807198529745L312.7320541744241,239.45592088546252Z\" stroke=\"#000\" fill=\"#FFF\" strokeWidth=\"0.5\"></path>\r\n        <path id=\"TharakaNithi\" ref={(item) => countyRefs.current[12] = item} d=\"M306.08409413250115,257.64112151779574L306.1809946031524,257.77619498434956L306.61264218922656,257.82317703706866L306.8534252046045,257.94944137776673L307.04722614590946,258.02578724414457L307.14412661656024,258.22839743654816L307.29681827311583,258.3722800377063L307.46125546021744,258.3722800377063L307.5845833144631,258.54552639605555L307.663865561457,258.680599821121L307.7783843038742,258.77750031759746L307.80774805807755,258.99772874045993L307.9134576886661,259.17097507071634L308.02797643108056,259.2972393625654L308.13368606166955,259.42937639327033L308.33629611480296,259.51746776141846L308.52716073360557,259.5850044360555L308.7004070325356,259.52627687410853L308.8853988620092,259.6525411581049L309.02928135862976,259.69071407512104L309.1731639033567,259.5644497918402L309.51965650121406,259.68190491453805L309.65472993411527,259.546831518444L309.6929028482534,259.3618396687722L309.8279762330453,259.3236667497179L309.9630496178345,259.3823943136805L310.13629591676454,259.44112192513495L310.23026001680705,259.25613007201537L310.4240610062211,258.9096373631062L310.6354802192868,258.74813655582955L310.749998961704,258.58369932209604L310.90562698886765,258.516162584304L311.08768244773546,258.54552639605555L311.2609287466655,258.5249717470977L311.4429842055306,258.38989831593136L311.52226640441836,258.2577612509206L311.67495806097395,258.22839743654816L311.80122233393695,258.36347087450656L311.9744686328647,258.4574350081465L312.165333203561,258.4486258932829L312.3385795024883,258.4192620806828L312.53238049190213,258.46918054270424L312.74379970497057,258.53671723331155L312.9346642756641,258.6600451729446L313.0785468203908,258.77750031759746L313.18425640287046,258.8714644403634L313.27234776169576,258.98891957875094L313.3780573922843,259.08288369678166L313.5219398889021,259.20033887770495L313.68637707600396,259.2854938303941L313.83025962073066,259.4499310379369L314.01231503148915,259.5761953234464L314.176752218591,259.6026227093454L314.3676167892843,259.6525411581049L314.62895444703713,259.6995231875808L314.7933916341385,259.7964236645315L314.92846501893064,259.94911537679565L315.1398842319991,260.0460158509792L315.28376677672577,260.07537960607465L315.3894764073143,260.17228007916464L315.5627227062448,260.15172543633616L315.7066052509715,260.12236168142675L315.9092153041022,260.0665704939881L316.1382528370457,260.0283975786378L316.3320537783477,260.1810892392842L316.50530007727775,260.21926215416164L316.6491826220049,260.21926215416164L316.81361980910924,260.3161626262472L316.8606018350729,260.4688542840455L316.86941099501064,260.63329147156236L317.12193949282846,260.71844645980406L317.1982853211048,260.86526532707524L317.2276491234172,261.1912033326224L317.2658220375554,261.3262767198077L317.4478774483114,261.36444963486286L317.58295083310327,261.411431662123L317.61231463541276,261.58467801571925L317.7473880202049,261.6786421206678L317.8707159225571,261.7931608705481L318.005789307349,261.892997719788L318.11149893793777,261.8019699830203L318.2172085204172,261.69626039346866L318.419818621657,261.68157849144677L318.7193291935505,261.76379706615694L318.87202085010586,261.7403060515944L318.9982851230666,261.8107791436153L319.13042213725,261.9076796222408L319.3036684361773,261.9135523639886L319.5561969339951,262.0045801023099L319.73825239286,262.03394390777555L319.91149869179003,262.1396535028542L320.0847450388294,262.2835360680655L320.1317270647962,262.4362277509635L320.22862753544723,262.659392542564L320.44885590845297,262.7885932195694L320.52813810734074,262.9471576645537L320.7101935662058,263.0734219803044L320.71900267803426,263.23492281058145L320.66321149213013,263.3905509535944L320.824712308623,263.4874514706555L321.0067677674881,263.54030631268654L320.88343986513587,263.6783161428025L320.78653939448486,263.8221987732692L320.70138440626806,263.9925088139575L320.65146600969297,264.1980554380095L320.52813810734074,264.34781084688524L320.3548918084107,264.51224813313706L320.1698999789344,264.6267669860026L320.04657212469147,264.75596776224353L320.0083992105531,264.9057232130215L319.9408624941027,265.0407968051214L319.717697750488,265.0114329673354L319.4886602656536,265.10246080833514L319.3917597950028,265.21404332340273L319.33303223848975,265.4166537036345L319.18914969376283,265.50180876847264L319.0364580372077,265.4430811254554L318.79567502182704,265.3960989837142L318.6312378347252,265.2522162882236L318.3816457075186,265.1259518508777L318.2377631627919,265.0936516373967L318.0351531096612,265.13182459953754L317.8619067626221,265.2610254118706L317.6592967094914,265.3432441420221L317.4772412506236,265.40490815623593L317.2951857917558,265.5693455870765L317.1307486046542,265.74259216140183L316.9193293915862,265.8571110966625L316.7637013644221,265.99805747216067L316.67854637620803,266.12725835649604L316.5728367937286,266.2535228761778L316.4671271631398,266.39740571616943L316.42895424900144,266.53541576925255L316.4172087184554,266.68517139466206L316.3702266924886,266.9024639209266L316.188171233621,267.00230101563704L316.1118254053447,267.2107844139989L316.09127076297,267.41633147014454L316.1206345652795,267.657115217277L315.9767520205528,267.87440787717065L315.75358727693833,267.8978990171766L315.57153181807325,267.98011786697174L315.48637687796554,268.14749201527286L315.2455938625876,268.1621739695277L315.0606020331113,268.3031206160662L315.0899658354235,268.44994009464915L315.0606020331113,268.62318708637144L315.04298376134784,268.8404800017918L315.05179292128287,269.02840903205595L315.07234756365756,269.2398292251627L315.04298376134784,269.4042672090165L315.02242911897315,269.6156874918622L314.9930653647698,269.8182986672783L314.95489245063186,269.99448231070716L314.8991012647273,270.1442384541543L314.7728369917668,270.34097698294363L314.4557081481098,270.94293838141647L314.26190720680484,271.20721426696855L314.1385793044526,271.42450782024L314.02406056203563,271.7034659000115L314.0504879937364,271.87084080158485L314.0504879937364,272.05583416414294L313.94477836314786,272.2143999165203L313.7920867065925,272.3201104712368L313.5806674935243,272.37296575496924L313.3780573922843,272.4551850616573L313.1754473391536,272.3876477388978L313.01101010394314,272.4962947189064L312.89649136152593,272.6372421900716L312.83776380501286,272.80168088162094L312.8201455332469,272.954374066365L312.72324506259565,273.1892866428024L312.4061162189389,273.40070804846687L312.30921574828767,273.5269736663382L312.2240607600738,273.71490391790485L312.068432732907,273.83529674740527L311.8951864339797,273.94100758031766L311.75130388925004,274.046718432642L311.6661489491453,274.16711133154047L311.24331047489954,274.1465564457283L311.09649155956413,274.3021863346874L310.9144361488054,274.24345807056005L310.7235715300026,274.1583021152906L310.5092159463261,274.07608252967947L310.2889875733199,274.07608252967947L310.1245504343276,274.08489179276364L309.97185872966315,274.07608252967947L309.8074215906704,274.04084557492666L309.6165570199769,274.046718432642L309.44331067293774,274.08489179276364L309.2700643740077,274.07608252967947L308.932380887976,274.11425589177145L308.7209616749076,274.12893796589805L308.5007333019046,274.1318743711462L308.28931408883614,274.11425589177145L307.922266800492,274.0261635511802L307.7020384755981,273.9879901949812L307.5581559308682,273.82942393995563L307.29681827311583,273.7090311116686L307.09420817187606,273.6943490482282L306.93270740349203,273.6943490482282L306.718351771706,273.6767305822048L306.2955133455696,273.5886382600082L306.12226704663954,273.60919312599344L305.98719361374106,273.7295859818602L305.8433111171205,274.11425589177145L305.82569284535725,274.50773533183684L305.7963290430448,274.6663017780552L305.67006481819317,274.8160589955045L305.52618227346375,275.01279890809366L305.42047264287476,275.17723832462934L305.3529359745362,275.4092154126599L305.29420841802335,275.66174759575745L305.20024431798083,275.861424242734L305.3059539004603,276.0082453883775L305.45864555701587,276.1403844468522L305.5085640017003,276.29895139262845L305.47920019938806,276.44283620220415L305.34412681459867,276.4898190407783L305.20024431798083,276.60140324662865L305.0827891568458,276.90385529157487L304.99763421673833,277.0712317563715L304.8420061895745,277.3120190115357L304.8331970296367,277.5058235439349L304.99763421673833,277.7172467166268L305.0827891568458,277.943352175994L304.93009750029046,278.0490638776905L304.81557875787325,278.1459662692149L304.63058692839695,278.2692965993288L304.65114157077164,278.42492784902583L304.85375167201164,278.5541311707699L304.90954285791577,278.77142771765295L304.9212883884618,279.0210252584885L304.7568512013604,279.2001483240787L304.69812364484756,279.36165279348785L304.69812364484756,279.51141152379137L304.68050537308113,279.8432300501178L304.6893144849098,280.0017983350412L304.5248773459175,280.0928282490205L304.4778952718416,280.26314245943354L304.5248773459175,280.41583797531536L304.4778952718416,280.6243261848242L304.2958398129765,280.77702184426727L304.23711225646366,280.9649550554336L303.9963292891923,281.185189420493L303.82308294215295,281.3261394498146L303.6116637290845,281.3408217606536L303.4472265419831,281.3936780556509L303.31215315719373,281.3261394498146L303.18001614301306,281.41129682233856L302.9862152017081,281.4406614032841L302.83352354515296,281.36431343034707L302.6602771981138,281.44947081170443L302.49584005912106,281.36431343034707L302.39013042853253,281.2586008563326L302.3813213167066,281.05011229708L302.39893958847006,280.8357509566977L302.1287927707797,280.7535302114652L301.93792820008616,280.7858311889026L301.77349101298455,280.66543654124985L301.67659054233354,280.51274092643865L301.54445352815014,280.4510754180155L301.409380143361,280.3541724342688L301.3976346128147,280.19854049886175L301.4563621693278,280.069336657852L301.3300979444732,279.9254506504127L301.14804248560813,279.86672162784623L301.0247145832536,279.81092910293995L300.8778957160273,279.78156464713777L300.86908655608954,279.60831425263905L300.9571779149121,279.4644283631896L300.94543238436586,279.276495871258L301.19796093029254,279.0415804014533L301.1186786832959,278.9153133650003L301.1685971279803,278.7215082080475L300.89845035839903,278.51595746129L300.8514682843231,278.37500838001165L300.9571779149121,278.24286868224834L301.06288749739156,278.0167630692375L301.0716966573293,277.7789118173975L300.93662327254015,277.6497087245029L300.8514682843231,277.4852685218798L300.68703109722173,277.37074768109704L300.55195771243234,277.5058235439349L300.4168843276407,277.5968529660437L300.22601975694715,277.6174079931762L300.07039172978307,277.7701025373845L300.0615825698453,277.9815258351052L299.973491211023,278.1400934109673L299.8971453827437,278.4954023439619L299.7062808120502,278.6657158870252L299.6857261696757,278.94761424122044L299.6857261696757,279.1414194549715L299.66810789791225,279.2999874159923L299.4948615989822,279.38220790535377L299.3685973260185,279.48791991875487L299.204160187026,279.5466488376834L299.0602776422993,279.6523609421501L298.95456801171053,279.79918333960387L298.81949462691864,280.119256332861L298.73433968681366,280.224968541732L298.4641928691235,280.3453630995548L298.2909465701932,280.3541724342688L298.05897271475305,280.392346316562L297.91509017002363,280.52155026497417L297.89747189825994,280.70948334975316L297.7712076252965,280.78289474066634L297.6743071546457,280.8915436291723L297.5509793003996,280.9502727594141L297.39535122512666,281.09415919860123L297.3101962850217,281.2909019254254L297.2044866544329,281.4641530793551L297.07822238146946,281.5375646188832L296.9255307249143,281.57573862141334L296.76990269775024,281.7108159376799L296.6348293129586,281.8693849584655L296.482137656403,281.96041537340625L296.2619092834,282.07493752724247L296.10628125623293,282.1777138319916L295.94184406913155,282.245252597123L295.8185161667793,282.3744571959148L295.60709695371133,282.32747367809253L295.40448685247134,282.38326657914405L295.06680336643944,282.43612302749233L294.9141117098843,282.48017004982154L294.7496745227827,282.4860430218309L294.5588099520892,282.4713606641555L294.3650090107842,282.3685842738839L294.11541688357784,282.33041018686146L293.8834429800256,282.31572783569993L293.68083292689494,282.32747367809253L293.536950382168,282.3597748429143L293.3930678374386,282.3744571959148L293.31672200916205,282.5036618422358L293.10530279609407,282.56239123396807L292.8821380524794,282.527153588119L292.70008259361157,282.527153588119L292.57675473936865,282.4038218556463L292.4504904664052,282.254061977121L292.29779880984984,282.2012056042082L292.00709739789386,282.16303153528617L291.6811593943021,281.96628828867523L291.47854929305936,281.95160595257033L291.2465754376192,281.7489899584058L291.1614204975115,281.60510326366693L290.9793650386466,281.5316917105732L290.8531007656834,281.4465343101342L290.6710453068183,281.4024874148341L290.4977990078878,281.3819321956256L290.29518890664826,281.3290759023126L290.0544059393769,281.2057446287601L289.813622923999,281.1382060572087L289.7284679357822,281.0178112969929L289.6609312674434,280.8974165273499L289.55522163685487,280.7975770301776L289.39078444975326,280.6948010636505L289.2469019531327,280.580279338036L289.09127387785975,280.49805864788686L288.9297731094757,280.31012566648286L288.7946997246863,280.195604055108L288.7183538964073,280.0164805467684L288.6772445635513,279.8432300501178L288.53336206693393,279.7522001453882L288.3424974962377,279.60831425263905L288.092905320922,279.6523609421501L287.890295219682,279.5995048864514L287.62014845010117,279.51728440121036L287.4674567935456,279.38220790535377L287.32063787820744,279.3998265803657L287.18850086402676,279.3733985440781L287.04168194869135,279.358716307784L286.8684356497613,279.2853051823349L286.3222693212699,278.89475827637415L286.19600504830896,278.70388960994586L285.99339499517555,278.6833344835378L285.84951245044886,278.6304785999783L285.57936568086757,278.46310155038594L285.4061193338284,278.37207194932853L285.1858910089343,278.4484193460513L285.02145382183267,278.4102456459945L284.91574419124413,278.3221524864393L284.7336887804854,278.24286868224834L284.569251593384,278.1459662692149L283.83809343541884,277.52344214188594L282.7222697173461,276.55735681610395L282.15554874648296,276.0522917212536L282.058648275829,275.89372490262724L272.87072111404154,268.0564639612943L277.20775161715005,268.6349326650064L281.67398276383324,269.1282463299606L286.01394963755047,269.55695963300536L286.26354176475684,269.6303694692315L286.4162334213122,269.73020683545855L286.5219430519012,269.92400882959606L286.7362986355806,270.0238462789878L286.92716320627414,270.1295564677075L287.1385824193426,270.21177556637167L287.33238340875346,270.18241159129167L287.53205709127565,270.18828436697686L287.678876006614,270.33804054642457L287.89910437961976,270.49660596925276L288.0429869243469,270.6551713762491L288.2074240633392,270.7461996998412L288.42765243634494,270.7902456466057L288.63026253758494,270.80786403564935L288.803508836515,270.8519100341186L288.9004093071662,271.03103030065427L289.0442918518929,271.1073766648186L289.2469019531327,271.1015038820952L289.48768492040426,271.0398395220212L289.64918573689715,270.91944715981384L289.7960046522328,270.91357437858255L289.96925095116285,270.86659203418077L290.1013879653435,270.77556369613717L290.2570159925076,270.79905486512945L290.4302623395465,270.80492764546597L290.61231775030546,270.7902456466057L290.8912736798213,270.8284188153714L291.0850746211263,270.6933445382286L291.25832096816544,270.6551713762491L291.4403763789214,270.67866258963426L291.57544981182264,270.6316802116939L291.71933230844,270.7080265352172L291.8544056932294,270.62580743269604L292.045270312035,270.5876342740729L292.21851661096207,270.5788250579875L292.48866338054336,270.5788250579875L292.69127348178586,270.60231622092914L292.9408656089922,270.51422435154825L293.1904577843079,270.43787804717323L293.3754495656751,270.2793126361678L293.56631418447773,270.09725615620107L293.74836959523645,269.9915459235591L294.03907105529856,269.87409015753457L294.1712080694822,269.73020683545855L294.2886631825079,269.57751438074115L294.37381812261265,269.3895852354755L294.4413548390635,269.1781650070849L294.5588099520892,269.0225362162054L294.643964940303,268.82286165414007L294.74086541095426,268.6877876984759L294.8172112392331,268.5321589890893L294.9317299816478,268.4264489900875L295.06680336643944,268.3589120134545L295.2018767993379,268.4704948176141L295.41329601240636,268.51747707751184L295.56892403957295,268.5996959776407L295.7685977702042,268.69072408129045L295.865498240855,268.7964341092291L296.1150903680616,268.96968121201513L296.1826270845122,269.1693558059302L296.32650958113004,269.26919311940526L296.385237185752,269.4042672090165L296.3764280258142,269.5422776568881L296.30889130936635,269.87115377081153L296.47332849646796,269.80361668664943L296.7317297836121,269.765443567079L296.81982114243465,269.62156026353534L297.0194948249566,269.45712228692776L297.4247150274391,269.1722921902691L297.5685975240567,269.00491786510275L298.3203103243966,268.4117670319796L298.59045714208673,268.1709831133169L298.81949462691864,267.98011786697174L299.1747963847165,267.7099702001973L299.2922514977422,267.5807691513533L299.67691705784705,267.2577665703064L299.7826266403265,267.17261139534384L299.8971453827437,267.0992017401381L300.00285501333246,266.9729371379366L301.35946169867657,265.57815471244214L301.63841762819266,265.2962620031381L301.88800975540175,265.07896976610857L302.06125610243816,264.8176318038855L302.5545676156339,264.2744013276551L302.6984501122545,264.16575523992935L302.88050557111956,263.9279084240673L302.9862152017081,263.7223618235392L303.1212885865002,263.51094249539665L303.1212885865002,263.29952318354725L303.091924784188,263.1644497436019L303.1300976983259,263.0146944032978L303.1506523888097,262.8649390697006L303.1007339441253,262.674074447303L302.9774060417708,262.5624920496182L302.81296890277804,262.54781014528487L302.67789546987956,262.48908257656575L302.5633767274626,262.4039275720548L302.45766714498313,262.1925083252112L302.4870308991865,261.975216296985L302.5545676156339,261.8166518852803L302.61035880153827,261.6580874771305L302.71606838401794,261.4613501083951L302.6602771981138,261.3321494611585L302.7278139145644,261.16771227123377L302.8716964592911,261.03851167464586L303.0243881158465,260.9562930566823L302.92748764519524,260.7859831281478L302.7454321863304,260.70963729986585L302.5545676156339,260.7683648563802L302.02308318830023,260.8740744389107L301.5327079976039,260.994465970961L301.3418434269104,261.0326388852859L301.1685971279803,261.0473207865271L301.0247145832536,260.9269293024041L300.8103589995767,260.7859831281478L300.801549887748,260.5363910007507L300.8602774442609,260.36314470082306L301.10986957146747,260.23981679688774L301.3212887845359,260.210452994063L301.65897227056735,260.12236168142675L301.84102772943515,260.05482496308446L301.984910226053,259.9109424610013L302.11998365895124,259.72888699193226L302.2638661555716,259.6231773534433L302.41949423084475,259.5350860348928L302.5428220850879,259.3354122818044L303.3708807137066,258.680599821121L303.51476325843373,258.53671723331155L303.91117430097825,258.3135524589622L304.15195731635595,258.3429162244179L304.3134580847402,258.26657036630917L304.51606823409156,258.1990336218935L304.69812364484756,258.1696698550567L304.7568512013604,258.30474329559826L304.88311547432386,258.4310076153757L305.1327076015302,258.6424268961143L305.2853992580858,258.72758190802824L305.5467369158382,258.70996363152005L305.3059539004603,257.64993063518006L305.56435518760463,257.6998491107527L305.728792374706,257.632312352271L305.91965694539954,257.6029485792156Z\" stroke=\"#000\" fill=\"#FFF\" strokeWidth=\"0.5\"></path>\r\n        <path id=\"Embu\" ref={(item) => countyRefs.current[13] = item} d=\"M281.3186810060354,289.1959468577871L281.3862176743769,288.83475335834777L281.26876256135097,288.6585615476167L281.1248800166243,288.5557830841673L280.9721883600689,288.2004634679258L280.96044287763175,288.05070079188505L280.80775122107616,287.6190323544307L280.31737607848913,287.54561941648143L280.2792031162419,287.4105396776115L280.22047555972904,287.27252344803037L280.01786550659835,287.29014253643265L279.84461915955944,287.2637139282904L279.7007366629416,287.11688825421925L279.5950270323526,286.95831664104935L279.5950270323526,286.7674435001783L279.5186812040738,286.60887202939085L279.5186812040738,286.3680785100836L279.3836078192844,286.1948247745253L279.23972527455476,286.11847570105033L279.16337944627867,286.0010156334052L279.0077514191146,285.89530158287965L278.855059762559,285.742603607245L278.74935013197046,285.57815970076564L278.6906225754576,285.4430808626364L278.5937221048039,285.3050655966115L278.54674003072796,285.1464948953693L278.54674003072796,285.00554327685785L278.5761038330404,284.79998890872906L278.7199863777673,284.6414184629025L278.6524496613167,284.5151495169065L278.60546758724104,284.3653886961132L278.526185388356,284.1921360810973L278.47039420245164,284.0482483612488L278.49975800476113,283.8221392428541L278.53793091890225,283.6342045081996L278.58491294486885,283.4756346315809L278.60546758724104,283.30825547114165L278.63189501894453,283.16730460298515L278.6142767471788,282.9940526145978L278.63189501894453,282.84135601650655L278.6142767471788,282.68278651079805L278.62308585900723,282.46548774050365L278.5937221048039,282.2834266749191L278.4116666459388,282.1923961774159L278.42047580587655,282.00446233650104L278.5555491906655,281.65208663846795L278.54674003072796,281.4758989420098L278.5085671165898,281.3349488554902L278.4880124742151,281.1382060572087L276.42080227328074,276.28720567514597L274.4769199747011,271.765130317507L272.87072111404154,268.0564639612943L282.058648275829,275.89372490262724L282.15554874648296,276.0522917212536L282.7222697173461,276.55735681610395L283.83809343541884,277.52344214188594L284.569251593384,278.1459662692149L284.7336887804854,278.24286868224834L284.91574419124413,278.3221524864393L285.02145382183267,278.4102456459945L285.1858910089343,278.4484193460513L285.4061193338284,278.37207194932853L285.57936568086757,278.46310155038594L285.84951245044886,278.6304785999783L285.99339499517555,278.6833344835378L286.19600504830896,278.70388960994586L286.2723508765855,278.87126670651276L286.5894797202425,279.0826905942168L286.7362986355806,279.2030847605364L286.888990292136,279.3058603384704L287.04168194869135,279.358716307784L287.18850086402676,279.3733985440781L287.32063787820744,279.3998265803657L287.4674567935456,279.38220790535377L287.62014845010117,279.51728440121036L287.890295219682,279.5995048864514L288.1105235926882,279.6934711964659L288.31313369392774,279.61712357091176L288.6889900940978,279.8579123040785L288.7183538964073,280.0311628071529L288.7946997246863,280.195604055108L288.9297731094757,280.31012566648286L289.09127387785975,280.49805864788686L289.2469019531327,280.580279338036L289.39078444975326,280.6948010636505L289.55522163685487,280.7975770301776L289.6609312674434,280.8974165273499L289.7284679357822,281.0178112969929L289.813622923999,281.1382060572087L290.0544059393769,281.2057446287601L290.29518890664826,281.3290759023126L290.4977990078878,281.3819321956256L290.6710453068183,281.4024874148341L290.8531007656834,281.4465343101342L290.9793650386466,281.5316917105732L291.1614204975115,281.6139126279392L291.4198217365465,281.9809706253814L291.6811593943021,281.96628828867523L292.00709739789386,282.16303153528617L292.29779880984984,282.2012056042082L292.4504904664052,282.254061977121L292.57675473936865,282.4038218556463L292.70008259361157,282.527153588119L292.8821380524794,282.527153588119L293.10530279609407,282.56239123396807L293.31672200916205,282.5036618422358L293.3930678374386,282.38326657914405L293.68083292689494,282.32747367809253L293.8834429800256,282.31572783569993L294.11541688357784,282.33041018686146L294.3650090107842,282.3685842738839L294.56761911202375,282.47429712601837L294.7966565968584,282.48017004982154L294.95228462402224,282.4948524078669L295.0961671687494,282.4419959506542L295.2488588253045,282.39794893312654L295.40448685247134,282.38326657914405L295.60709695371133,282.32747367809253L295.8185161667793,282.3744571959148L295.94184406913155,282.245252597123L296.10628125623293,282.1777138319916L296.2619092834,282.07493752724247L296.482137656403,281.96041537340625L296.6348293129586,281.8693849584655L296.76990269775024,281.7108159376799L296.9255307249143,281.57573862141334L297.07822238146946,281.5375646188832L297.2044866544329,281.4641530793551L297.3101962850217,281.2909019254254L297.4041603850644,281.09415919860123L297.5509793003996,280.9502727594141L297.6743071546457,280.8915436291723L297.7712076252965,280.78289474066634L297.9062810100886,280.70948334975316L297.91509017002363,280.52155026497417L298.05897271475305,280.392346316562L298.2234098537456,280.3453630995548L298.40546531261066,280.3541724342688L298.73433968681366,280.224968541732L298.81949462691864,280.119256332861L298.95456801171053,279.79918333960387L299.05146848236154,279.6905347564604L299.19535102708846,279.57307688525543L299.3685973260185,279.48791991875487L299.4948615989822,279.38220790535377L299.66810789791225,279.2999874159923L299.6857261696757,279.1414194549715L299.6857261696757,278.94761424122044L299.7062808120502,278.6657158870252L299.8971453827437,278.4954023439619L299.95587298736586,278.2604873094946L300.0322188156449,278.06961892572906L300.0527734580169,277.87581414959004L300.0792008416115,277.73192889645225L300.22601975694715,277.62034441882633L300.4168843276407,277.5968529660437L300.57251235480726,277.482332097104L300.6958402571595,277.36193836093753L300.8514682843231,277.4852685218798L300.9278141126024,277.64089944703153L301.06288749739156,277.7847847189446L301.06288749739156,278.0167630692375L300.9571779149121,278.24286868224834L300.8514682843231,278.37500838001165L300.89845035839903,278.51595746129L301.1685971279803,278.7215082080475L301.1186786832959,278.9153133650003L301.19796093029254,279.04451683678496L300.94543238436586,279.276495871258L300.9571779149121,279.4644283631896L300.86908655608954,279.60831425263905L300.94543238436586,279.80505622122706L301.3300979444732,279.9254506504127L301.4563621693278,280.069336657852L301.3976346128147,280.19854049886175L301.409380143361,280.3541724342688L301.54445352815014,280.4510754180155L301.67659054233354,280.51274092643865L301.77349101298455,280.66543654124985L301.93792820008616,280.7858311889026L302.1287927707797,280.7535302114652L302.39893958847006,280.8357509566977L302.36957578616034,281.06185814660057L302.39013042853253,281.24979150058334L302.49584005912106,281.36431343034707L302.6602771981138,281.44947081170443L302.7747959886401,281.3789957427059L303.0831156723593,281.45534371869553L303.0537518700496,281.6139126279392L303.06256102998736,281.75779932616916L303.006769844083,281.9369236651781L302.83352354515296,282.2746172941877L302.7278139145644,282.45961476883684L302.61035880153827,282.58588298381136L302.4077487002987,282.84135601650655L302.313784600256,282.9793702353328L302.16696568491807,283.12619396020636L302.0142740283625,283.2935730782775L301.9467373119146,283.537300709797L301.7823001729223,283.8661864452391L301.69714518470573,283.9718998128052L301.67659054233354,284.12166045132665L301.6002447140545,284.25967520058384L301.3418434269104,284.84697272772223L301.215579202056,285.0965745462542L301.14804248560813,285.2522086871921L301.01296910081646,285.4107793944562L300.94543238436586,285.61633416686L300.8514682843231,285.81014310918107L300.75456781367234,285.94815860350684L300.70464936898793,286.11260271100724L300.6283035407089,286.26236437800515L300.5813215147423,286.4444276476146L300.5137847982944,286.6235545773987L300.52259395822944,286.7997450665291L300.5607668723701,286.9553801376427L300.6488581830836,287.0992691764416L300.6958402571595,287.28133301615264L300.75456781367234,287.4545873978967L300.77218608543853,287.79228694250315L300.7457587018439,287.9802242550536L300.68703109722173,288.2914957289573L300.57251235480726,288.7202286924173L300.5607668723701,288.893483971358L300.91900500077395,289.17832764788665L301.06288749739156,289.3251544165792L301.26256122802283,289.45142546015865L301.4358075269529,289.5865062542204L301.42699851134535,289.77444490743994L301.56207179991657,289.941827706648L301.72650898701795,290.1062741243883L301.9291190882575,290.33238816765476L302.2256932414309,290.69652032533895L302.3402119838481,290.80223617187954L302.4283033426732,290.94906386068646L302.2932299578815,291.1076378781921L302.16696568491807,291.22216359591494L301.84102772943515,291.4570882951591L301.7441272587814,291.5628045113691L301.6002447140545,291.6655841693847L301.3976346128147,291.7801101452999L301.2243883138847,291.84765115276065L301.0511420149546,291.96805033193516L301.0247145832536,292.19416605993376L300.98360529850675,292.414408870589L301.06288749739156,292.59353985050467L301.0893149290953,292.7814806716916L301.13042421384216,292.9488655954386L301.215579202056,293.08982138493144L301.14804248560813,293.24252360572495L301.13042421384216,293.4598308139223L301.13042421384216,293.627216222769L301.2361338444309,293.7564260493716L301.47691681170227,293.8210310379691L301.49453508346596,293.97373374060663L301.4563621693278,294.1381829375546L301.3976346128147,294.29088585252543L301.3300979444732,294.5992285839091L301.3036705127722,294.7724880671945L301.38001634104876,294.9751136536582L301.58262644229103,294.9897966875921L301.7441272587814,295.05733862734667L301.84983684126087,294.9281280093278L301.95554647184963,295.0720216186148L301.97610111422455,295.2482180710635L302.00546491653677,295.39798514241005L302.04363783067515,295.744505401368L302.11998365895124,295.9265756153569L302.0348286707374,296.12039243241384L301.99665575659924,296.31127280926376L301.9291190882575,296.5520760081369L301.82340945766896,296.7987527238799L301.70595434464326,296.9573307958522L301.5532626880879,297.1364653726263L301.47691681170227,297.3420298628227L301.3300979444732,297.48592514143303L301.13923332567083,297.59751745741085L300.9571779149121,297.7883991779898L301.0041599408787,298.13198672330765L301.0041599408787,298.3287422788436L300.86908655608954,298.3874753039197L300.66647645484954,298.4491449914252L300.5607668723701,298.645900856137L300.5431486006039,298.8191636101061L300.4168843276407,298.924883306802L300.38752052533096,299.1803728982063L300.5314030700579,299.377129485667L300.59893978650825,299.5503928791696L300.52259395822944,299.70016306530766L300.31998385698944,299.6649230055202L300.13792839812436,299.7677064909419L299.95587298736586,299.8528700326284L299.7532628861261,299.8352499881182L299.5212889825739,299.9027935087687L299.28050601530504,299.8528700326284L299.09845055643723,299.8352499881182L298.9457588998821,299.86461669777884L298.763703441017,299.86461669777884L298.6286300562251,299.8910467931935L298.4935566714357,299.85874336511364L298.3496741267061,299.873426745223L298.20285521137066,299.99676711464184L298.05897271475305,299.9262868939375L297.9738177265365,299.7471497895209L297.82993518180933,299.6267462892819L297.59796132636643,299.5797595459329L297.4247150274391,299.5797595459329L297.28083248270946,299.70016306530766L297.14575909792006,299.9027935087687L296.9813219108187,300.03200718650055L296.91378524247716,299.8910467931935L296.9255307249143,299.69135302570703L296.84624852602656,299.4828494805323L296.7141115118459,299.57094955987515L296.58784723888266,299.79119990789195L296.4527738540935,299.97033700481666L296.3676189139885,300.1436009261018L296.165008812746,300.23757464910074L295.98295335388093,300.39615543786584L295.7304248560631,300.48425588463067L295.4896418406852,300.51655941760276L295.3281410241923,300.4167122083591L295.1167218111241,300.39615543786584L294.8935570675094,300.4930659604047L294.7115016086443,300.4930659604047L294.5000824436852,300.4313956309512L294.4119910848601,300.1993978201037L294.3444543684095,299.993830398173L294.14478063777847,299.50340615415064L294.1242259954063,299.33307946048126L294.07724396943945,299.1451329316643L294.0273255247523,298.9982998212675L294.0185164129266,298.8044803086308L293.9891526106144,298.6693940915195L293.93336142471003,298.5313713189112L293.8452700658877,298.3463621893864L293.6250417409906,298.21714956375445L293.48115919626366,298.1613532292517L293.33434028092574,298.1261134418752L293.2022032667451,298.1613532292517L293.05538435140943,298.29350246236777L292.92031096661776,298.39628523750395L292.7676193100622,298.3727920340218L292.52683629468424,298.3610454092492L292.25668952510296,298.41096850911134L292.0364611520972,298.4667649124813L291.825041939029,298.54605455225584L291.6811593943021,298.6400275116374L291.6429864801612,298.81329030863293L291.46974018123365,298.9102000456521L291.3728397105799,299.08933633882475L291.2172116834158,299.12751295074554L290.9969833104101,299.068779708383L290.8325461233085,299.1803728982063L290.8325461233085,299.37125611953564L290.8824645679956,299.72952975458384L290.80611873971657,299.993830398173L290.7650094068606,300.1817777440368L290.82373701148276,300.378535343755L290.7004091091278,300.5136227413103L290.5535901937926,300.5517996328751L290.421453179609,300.689823831962L290.3421709807242,300.87483517928996L290.3421709807242,301.0657200769433L290.2570159925076,301.19199790318686L290.13075176765574,301.35057948973923L290.033851297002,301.5473382556522L289.8224320358247,301.6148823847957L289.61101282275627,301.5913887425906L289.4289573638912,301.48566758182085L289.27626570733605,301.4797941510081L289.14119232254416,301.39462993021783L289.0149280495832,301.465110695076L288.87104555296287,301.52384467008756L288.7359721200646,301.39462993021783L288.6390716494134,301.23017493152605L288.50399826462126,301.1949345899957L288.31313369392774,301.24485841713505L288.2749607797898,301.42693361882937L288.2544061374149,301.6090089499079L288.21623322327696,301.79695789993514L288.06354156672137,301.84100849424965L287.90791349144547,301.8175148233981L287.7464127230646,301.8498185855036L287.678876006614,301.9760969431219L287.53205709127565,301.9995905860437L287.3881745946578,302.00840073298434L287.20611913579273,301.99078048763903L287.09160039337553,302.1141221923622L286.99469992272475,302.3255653419605L286.6863801908935,302.2697678157612L286.4837701377628,302.3226286372281L286.31052379072344,302.5105783165626L286.4749609778253,302.6691610365691L286.34869670486455,302.977516650997L286.28409640713176,303.1067325081623L286.0902954658295,303.1008590734001L285.7232481774854,303.03918782755596L285.57055652093004,303.1008590734001L285.2152547631349,303.2124546554658L285.10954518065546,303.0979223560922L285.04200846420486,302.9716432204593L284.88638043704077,303.0098206186063L284.76305253468877,303.15959357401357L284.6367882617253,303.29468300336293L284.51346040747967,303.3857216030573L284.3108503062397,303.3416706339814L284.1376040073096,303.54430504725474L283.91443926369516,303.6294703225409L283.79992052128046,303.8086111347224L283.6942108906919,304.0053726179186L283.7323838048303,304.23737520035894L283.79111136134316,304.3812757178102L283.7823022495145,304.53986006001617L283.65603797655103,304.74249585682776L283.1362990797634,304.9098908206024L282.963052732724,304.8952070352132L282.87789779261925,304.7336856228701L282.89551606438545,304.5251763060718L282.86615226207323,304.2902366040862L282.6929059631432,304.2138812643211L282.5108505042781,304.2138812643211L282.3581588477225,304.1316524889876L282.1937216606211,304.1257789721467L282.058648275829,304.20213427342907L281.8942110887274,304.2667426609369L281.7121556779716,304.1404626924479L281.47137266259097,304.0494237041481L281.23058964721304,303.81742137010286L281.02797954597327,303.7410662359367L280.91346080355606,303.52081120365375L280.7871965787017,303.46207658418507L280.79894206113886,303.30349316511945L280.84592413521455,303.15078337123373L280.866478777589,302.9804533663367L280.69323247865896,302.9275923532023L280.54934993393226,302.8218704215657L280.3261851903176,302.8806048310709L280.21166644790037,302.80425009762763L280.1441297314502,302.6720977468938L279.962074320694,302.7073383707363L279.7770824912177,302.6867813473462L279.57740876058665,302.639793839705L279.3366257452087,302.28445138376605L279.1516339157324,302.29913495294954L278.97838761680237,302.2638944081338L278.79633220604615,302.30794506615786L278.6994316872833,302.4136667464812L278.54674003072796,302.4371604455006L278.40285753411035,302.34024891444926L278.23842034700874,302.2492108417785L278.03581024576897,302.2257171669273L277.8625639468387,302.09062853481424L277.9800190598646,301.87037551484315L277.89192770104205,301.6824264903649L277.70987229028333,301.6824264903649L277.5454351031817,301.7264770574442L277.3545705324882,301.8556919799041L277.1607695911832,301.95260330319513L276.9875232441468,301.8938691443L276.7849131910134,301.9026792861861L276.62341237452324,301.7881478112017L276.45897518742163,301.90855268227017L276.31509269080107,301.9995905860437L276.1712101460744,301.8556919799041L276.1800192579028,301.7000467063172L275.98621831659807,301.6442493695544L275.81297201767075,301.5796419707156L275.6778986328786,301.50035108748597L275.54576161869795,301.4034400003144L275.28442396094533,301.3652629366696L275.13173230438997,301.3740730534943L274.96729511728813,301.44161707175823L274.8527763748709,301.26835196763204L274.7265121019075,301.3887565503859L274.60024782894425,301.30065563444487L274.4475561723889,301.3447060631738L274.3124827875995,301.4739207684976L274.13923648866944,301.39462993021783L273.9953539439425,301.38288312262193L273.7633800884996,301.31533912557376L273.6488613460824,301.1773144217119L273.72520717436146,301.02166971362124L273.49616968952705,301.0040495615512L273.3699054165663,300.86308845226125L273.2935595882873,300.70157059637955L273.2436411436029,300.5018759884739L273.1203132893572,300.35797857735616L273.12912240118567,300.2140812260805L273.01460365876846,300.06431064346987L272.77382064339054,299.9174768440936L272.77382064339054,299.7677064909419L272.75326600101585,299.60325294025307L272.80318444570025,299.42117947260147L272.71509308687746,299.29196615102296L272.55359227038457,299.21267621440546L272.4185188855952,299.03941311778607L272.2070996725272,298.94837662312386L272.0984536713272,298.789797008233L271.97512581708384,298.65177415269727L271.898779988805,298.51962468489535L271.69616988756525,298.4667649124813L271.50236889815415,298.5108146978071L271.32912259922364,298.5313713189112L271.16762183084006,298.6135976319086L270.91509328491566,298.62240757539325L270.92683881546213,298.4197784918346L270.91509328491566,298.22302284782074L271.07072131207997,297.83244881620647L271.1764309426685,297.59751745741085L271.2527767709448,297.3948893442615L271.35163982540394,297.1653741741465L271.5046300983663,297.1420634148212L271.68668555723116,297.171429779552L271.8018794700449,297.16876836356727L272.1953541419807,297.1247188666962L272.36860048901735,297.08654263075545L272.5800197020858,296.9720139647397L272.75326600101585,296.88978826107603L272.89714854574254,296.86629522941706L273.05277657290935,296.86629522941706L273.23483203177443,296.89859817869365L273.34935077419163,297.25099412879155L273.4844241589808,297.4242557446974L273.61068843194425,297.53584802737424L273.77512557093655,297.65037700417145L273.93662638742967,297.7179197380264L274.6677845453946,297.98221771479206L274.8410308443249,297.9969009564304L275.0054680314265,297.96753452232156L275.22569640443226,297.9146748938369L275.41068818579674,297.52410145074043L275.6514712011774,297.5211648187127L275.8247175001079,297.5681510323616L276.02439123073873,297.52410145074043L276.19763752966605,297.4683053050468L276.3444564450044,297.3420298628227L276.6615852886614,297.10709906092495L276.83483158759145,297.057176277958L277.0932328747358,297.033683227554L277.2576700618372,296.9367743803856L277.5953535478661,296.8310556627917L278.1121560740453,296.8281190405225L278.31476617528756,296.8134358816896L278.4586487200145,296.73708352998L278.6142767471788,296.6254916735831L279.430589845251,296.00880089872123L279.67137286062894,296.03816710644435L280.1353206196243,296.11158259517475L280.3085669185516,296.16444176836796L280.36435810445596,296.0058642877895L280.4994314892481,295.88839959470886L280.6726777881754,295.7885546605914L280.8752878894179,295.744505401368L281.1836076212462,295.8707798914468L281.3362992778018,295.8942728134129L281.50954557673185,295.9471319332581L281.72096478980006,296.0293572244605L281.8942110887274,295.9412587131196L281.8002469886849,295.76506170198076L281.741519432172,295.60648456243536L281.47137266259097,295.3744922739835L281.0867071024861,295.139563583455L281.05734334828276,295.0044797224979L281.0397250765195,294.8488397269648L281.05734334828276,294.66677040532187L281.1336891765618,294.25271011415015L281.1248800166243,294.079451078197L281.02797954597327,293.89150921057876L280.89290616118114,293.71825040031365L280.8840970493527,293.550864973705L280.9898066318324,293.4157820118091L280.9898066318324,293.26307967781497L281.0397250765195,293.0604555624313L280.93401544593075,292.6463981523676L280.854733247043,292.46726718095135L280.79894206113886,292.22646833777844L280.80775122107616,292.0502742392512L280.89290616118114,291.8564608256613L281.0397250765195,291.6509013447228L281.07789799065745,291.462961401059L281.1336891765618,291.3278796638306L281.1336891765618,291.1751786538199L281.1747984613087,291.0195411894276L281.2981263636634,290.8903327845253L281.46256350265594,290.8169189465394L281.50954557673185,290.59080447474497L281.5301002191038,290.3705632842257L281.4537543908275,290.15913194430647L281.3186810060354,289.941827706648L281.1747984613087,289.7891274790658L281.0397250765195,289.70103129186606L281.07789799065745,289.5424581427786ZM281.3186810060354,289.1959468577871L281.0955162624209,289.3662659147791L281.1336891765618,289.2165025961184Z\" stroke=\"#000\" fill=\"#FFF\" strokeWidth=\"0.5\"></path>\r\n        <path id=\"Kitui\" ref={(item) => countyRefs.current[14] = item} d=\"M321.931726866758,264.1129003844724L322.0961640538594,264.1452005817879L322.248855710415,264.03949087307797L322.42210200934505,263.8867991122039L322.6452667529595,263.8515625459884L322.8273222118273,263.8809263671677L322.98001386837996,263.9631449914043L323.13564189554654,264.09234572681584L323.28833355210213,264.20392818385466L323.62601703813107,264.4300294883702L323.74053578054804,264.55923025172655L323.8844183252752,264.6590671912791L324.0400463524418,264.72660397712434L324.20154716893217,264.74715864109254L324.3483660361612,264.80882263433654L324.45407566675,264.9673872596708L324.6067673233051,265.05547867608794L324.7594589798607,264.97326000779964L324.8651686104495,264.86755025571534L324.9738146116465,264.7412858936829L324.98262372347517,264.56510299858803L325.0384149093795,264.4300294883702L325.2116612083066,264.4006656599771L325.4260168400956,264.48288435167285L325.6256905226178,264.5210573013372L325.8371097837951,264.49169347163325L326.0514653674718,264.4241567419032L326.2129661839649,264.33312893321477L326.31867576644436,264.2421011284442L327.67528249989505,266.48256083825476L328.6589691556778,268.1709831133169L329.2550539288536,269.16348303727887L329.82177489971696,270.18241159129167L330.015575841019,270.4760511984269L330.379686710643,271.0780127035683L330.6674518000991,271.55958223236604L330.73498846844086,271.6887838829119L332.0739769301276,273.92632551101593L333.1898006000911,275.8320600476337L334.0560321428454,277.27971830421683L334.77838114087535,278.51008454990676L335.113128256296,279.10324569212526L335.4038297163611,279.57894976356994L335.6328672011955,279.9841796335774L336.1437969861547,280.83868740534126L336.43156202750174,281.34375821326864L336.6547267711162,281.7049429784656L336.9043189464319,282.1542221094427L337.1715293454047,282.5946924204807L337.7969778727811,283.6635692763917L337.8087234033271,283.8133297742183L338.0495064187078,284.08348616626813L338.53107240135455,284.9203850010229L338.7806645285634,285.4137159307891L339.250485028776,286.1889517829855L339.3268309051614,286.3328404458401L340.57772795991696,288.4324489309477L341.7141063203642,290.3118323417113L342.9650033751168,292.44377461316617L343.8018711636705,293.84452374372967L343.9663083026628,294.320251783596L344.9558677477721,295.8032377008734L345.28474212197807,296.4169912673648L345.91019064935426,297.69736324727677L346.8234042180752,299.63261961495044L347.1904515064193,300.39321876342103L348.919978221322,304.07879113318916L349.40154425208084,305.0596653973852L350.3646762654887,307.10072427676363L350.69061422097434,307.82611388536395L351.2778898342124,309.0243354440996L352.43482283703156,311.4795436018787L352.4818049111075,312.1520896377582L352.44363194886023,312.71597337822993L352.8077428665931,317.5619413957553L353.0191620796611,321.45940112722377L353.34803645386455,326.3967503493247L353.559455666933,330.04776239133633L354.1261766377961,339.4240631361033L354.21426799662163,341.6566458015213L354.10855836603287,341.7712139573805L354.0028487354439,341.9415976312276L353.8002386823109,341.9974130425627L353.67397440934997,342.15310882202687L353.5212827527946,342.1766100843111L353.34803645386455,342.1325452163676L353.2423268232758,342.2500516092156L353.03090761020735,342.2970542366824L352.79893370665536,342.4116231773045L352.6051327653531,342.52325459585705L352.3085585640681,342.74945550559687L354.6282973109296,351.63931014150177L354.92487151221167,352.9437811657048L354.261250022588,354.4891947574996L350.8932243222139,361.0266846973708L344.6299297922892,373.21586268773603L344.4654926051878,373.5156232935506L344.31280094863223,373.5391339733523L344.1689184039028,373.60672727764256L344.11900000732726,373.77424136717593L344.0720179332516,373.9975941356576L343.8899624743867,374.16510919964844L343.696161533082,374.15629258155843L343.50529696238846,374.1033930418222L343.29387774932,374.0975153338089L343.12063140228065,374.12690392716996L342.9855580174915,374.1856812488351L342.8299299903249,374.2150698808464L342.52161030660545,374.49426279323035L342.36891860194123,374.5207126882485L342.23384521715184,374.5794903558283L342.08115356059625,374.6323902238361L341.9079072616662,374.63826802698463L341.7141063203642,374.60300140845015L341.61720580160113,374.7528846418614L341.5232417015586,374.9409738801813L341.4439595026711,375.29658155372704L341.2031764872934,375.4934890762638L341.05929399067554,375.5904735970489L340.9242206058834,375.74623695938976L340.7128013447061,375.86967228284055L340.589473490463,376.0665815596093L340.46320921749975,376.2076512113815L340.27234464680623,376.30757573290555L340.0873528173297,376.36047702861833L340.0315616314256,376.53975395045813L339.8876790866984,376.6690687450588L339.73205105953457,376.7131533737902L339.62634142894603,376.81013969025815L339.47364977239044,376.8483464618691L339.1829483604347,376.96884492096643L338.74249161442276,377.02468573381395L338.5574998330583,377.08346558073L338.4048081283938,377.1510624483835L338.23156182946354,377.1951474500076L337.9437967881163,377.21865943415366L337.51802194326206,377.21865943415366L337.2977936183679,377.2333544466023L337.0658197148159,377.18045244615985L336.8544005017475,377.1069775246698L336.6811542028174,377.14518446967804L336.6136174863668,377.0070517852276L336.4902896321239,376.9394550183408L336.34640708739425,376.9012481935571L336.1907790602304,376.9041871718782L357.9082316524782,407.2156984343908L357.73498535354815,407.20099580200224L357.57054816644677,407.2156984343908L357.4178565098912,407.23922262596665L357.185882654451,407.1715905978882L357.01263635552095,407.0186836698958L356.87756292261975,406.87753918278423L356.492897410624,406.75403811876606L356.4253606941736,406.60701338304455L356.4371062247196,406.3188461360459L356.2344961234801,406.3864770566873L356.02307691041165,406.43940569579763L355.6002384361659,406.2570961807427L355.45341956893685,406.2659176191088L355.3300916665851,406.34825085872797L355.16565447948324,406.43058427630666L354.9072532404482,406.4776319604995L354.7604343251103,406.4923343885735L354.3757687650025,406.44528664295046L354.0791946118295,406.45410811310194L353.8677753506522,406.50703682079217L353.73270196586304,406.62759681529656L353.63580149520885,406.81578861415545L353.49191895048216,406.9275278195335L353.2041539091374,407.1245422384859L353.039716722036,407.15688797798714L352.79893370665536,407.1627690061761L352.1822943392167,407.10983968007747L352.02960263455225,407.10983968007747L351.8563563356222,407.0716129513296L351.5568457637287,406.9657544423476L351.3953449953474,406.92164681795754L351.2397169200715,406.9157657688671L350.9607610386645,407.17747162774447L350.76989641985915,407.1715905978882L350.57609547855714,407.2098174002053L350.27658490666363,407.3127358355084L350.0181836195193,407.30685479033116L349.80676440645107,407.2774495262564L349.6129634651488,407.2833305681038L349.4984447227316,407.1715905978882L349.3839259803144,407.08631549892254L349.1725067191371,407.0745534605146L348.9493420236345,407.1804121429215L348.45896683293836,407.5038706967839L348.30627517638277,407.6244330035165L348.15064714921596,407.70088730408844L347.88343675024635,407.8861424388391L347.6896358089414,408.00082451244396L347.1229147899687,408.1654966718104L346.9291138486642,408.1684372431169L346.8615771322163,408.0096461987206L346.7940404638748,407.889082994237L346.6501579191479,407.8361528781269L346.5356391767307,407.91260749162467L346.40937490376723,408.0684576718098L346.0540731459721,408.1449126291775L345.88082684704204,408.20372420822895L345.64885299159914,408.4330900220195L345.5049704468722,408.4919019299373L345.2935512338038,408.49778310997186L345.1114957749387,408.5154267022812L344.93824947600865,408.55365449834505L344.7650031770786,408.5154267022812L344.6093751499145,408.4301494356141L344.5623930758386,408.28900110011875L344.62112063235145,408.1008039527487L344.82373073359145,408.03905192689143L344.96761327831837,408.1125662724121L345.10268666311026,408.0155273719233L345.1114957749387,407.8361528781269L344.97642239014704,407.7744011685665L344.6504844346614,407.7508767340579L344.5154110498722,407.7214711698331L344.3304192203957,407.6303140847268L344.11900000732726,407.5568004248777L343.9281353885249,407.5568004248777L343.78425289190704,407.5803248193644L343.6286248166314,407.5479788158317L343.53172434598014,407.42741663882043L343.3790326894248,407.336260119244L343.1969772305599,407.3303790232228L343.0149218198012,407.3656654166488L342.7917570761865,407.44211933536974L342.58033786311853,407.49504904857247L342.37772776187853,407.4597625670997L342.16630854881055,407.38918967620964L342.01361684414564,407.35096274177306L341.878543459354,407.3274384995484L341.5320508614964,407.298033223812L341.39697747670425,407.2627468763796L341.0504848307378,407.0510292953316L340.8977931741824,407.0039810932549L340.74216514701834,406.97457595244134L340.589473490463,406.90106326949456L340.24298084449356,406.79226461416033L340.04917990319154,406.79226461416033L339.5881685148049,406.9657544423476L339.21231211463487,406.9657544423476L339.0684296180175,406.9363493231468L338.87462862860616,406.95987343644754L338.6632094155377,407.01280260983526L338.3284623001148,407.0745534605146L338.164025161122,407.1245422384859L338.0495064187078,406.9128252686602L338.0113335045669,406.7099306255866L337.86451458923125,406.5658465429184L337.6149224139133,406.44822711677875L337.53857658563675,406.3276675366578L337.43286700315707,406.18946542755816L337.30660273019384,406.0777278027841L337.2214477419798,405.97187131051015L337.0658197148159,405.8571937094366L336.86614603229395,405.8042656593956L336.7017088451921,405.7836825512833L336.5666354604002,405.8130870214469L336.4227529156733,405.81896789818643L336.2583157285717,405.7454567936312L335.85603194480973,405.7219332754254L335.7004039176461,405.62195840458594L335.48898465646585,405.57785186620265L335.3627204316142,405.3896645201198L335.442002630499,405.1867757816227L335.43025709995277,405.0132918477975L335.2687563315717,405.0809211336701L335.113128256296,405.1867757816227L334.9222636856025,405.2014778476117L334.71084447253406,405.17795457290885L334.4406977029528,404.8780335844771L334.3643518265674,404.7427756678941L334.208723799401,404.63692186273477L333.9796863145691,404.6192795824895L333.82405828740525,404.63692186273477L333.6596211003034,404.60457767875687L333.4981202838105,404.60457767875687L333.333683144818,404.62221995409186L333.1809914401533,404.5986969376762L332.96957222708534,404.53106831776046L332.7963259281553,404.4310956582548L332.6406979009912,404.3164214120903L332.33237816916267,404.2576142063847L332.08278604195334,403.9959229006915L331.9300943853982,403.9929825638541L331.8038301124375,404.0547298161872L331.6511384558819,404.078252639171L331.4485283546396,404.007684297848L331.2840912156496,404.0312070518049L331.1020357567818,404.0223860359172L330.9375985696804,403.8959512986559L330.8406980990294,403.71659090510207L330.7467339989869,403.607798881306L330.6204697260232,403.5431117879645L330.44722342709315,403.5489924120475L330.2651679682283,403.31670767613366L330.15945838574885,403.157931359935L330.00383031047295,403.1255880763182L329.85113865391736,403.02855839113977L329.8981207279933,402.86096205950435L329.82177489971696,402.72570927503216L329.67789235499026,402.5316514824981L329.6690832431616,402.3434749317887L329.58980099616474,402.1817612639356L329.44591849954713,402.17588074193117L329.27267220061685,402.21410392967516L329.0818075818145,402.1817612639356L329.0230800253016,402.04651019128437L329.01427091347296,401.87303643769695L328.96435246878855,401.6701611430735L328.85864283819956,401.42906390482256L328.7235694534079,401.18502755908787L328.6472236251316,400.9586333813593L328.53270488271437,400.7851631668484L328.41818614029717,400.68813764880997L328.3506494238493,400.5617108061448L328.3506494238493,400.3588403739884L328.1950213966825,400.1912523302756L327.9454292694761,400.16185095193464L327.8485287988251,400.0560062270868L327.88670171296326,399.89723945233163L327.99241129544293,399.7678742892787L328.0599480118933,399.63850948034894L327.9836021836145,399.47386373624863L327.8103558846867,399.4268221652932L327.6194913139932,399.4591632379763L327.49322704102997,399.31509865018074L327.5989366235094,399.13575351347083L327.590127511681,398.92406818545965L327.38751741044143,398.80058542546044L327.2524440256493,398.62124196602025L327.2994260997252,398.40367849997796L327.1849073091987,398.29489708836593L327.00285189844294,398.27431685189924L326.8384147113411,398.14789552603025L326.7708779948907,397.9509140792758L326.82960559951266,397.81567348491666L326.9147605396174,397.6480931900531L326.88833315602574,397.3776137576417L326.70334132654943,396.9601372685519L326.71508680898637,396.7572800873206L326.6945321666144,396.5485437715L326.58882258413473,396.4162465081482L326.4155762370956,396.3486280553209L326.30105749467816,396.17517233408205L326.36859421112877,396.0340561777924L326.4625583111715,395.8694211259443L326.47430384171753,395.6783274947827L326.50366759591816,395.4989940796355L326.61818633833536,395.33142071937493L326.7914326372654,395.26380352159697L326.9441243419301,395.10505048553495L326.88833315602574,394.8845608535084L326.78262352543675,394.71992915232016L326.70334132654943,394.5464784355248L326.6475501406478,394.2671944707273L326.55064966999385,394.08492566446444L326.4155762370956,393.71157048303917L326.271693740478,393.48226687054716L326.1454294675143,393.32351880169415L326.06027452740955,393.18240973323645L325.9340102544461,392.6679526265059L325.8664735379957,392.4856889045792L325.7225910413779,392.28284775154805L325.6080722989607,392.0711881014005L325.5023626683717,391.8389513760989L325.44363511185884,391.6860871988481L325.39665303778315,391.5214646702203L325.2791979247572,391.2274970796409L325.2234067388531,391.0452378847172L325.0883333540637,390.8218241766357L324.9532599692718,390.4896448391572L324.8945324127617,390.2779917529615L324.84755033868305,390.04870176672523L324.7212860657223,389.68713090834365L324.6449402374435,389.5607285940272L324.5685944091672,389.41080993551645L324.5304214950261,389.27264995787243L324.5480397667923,389.05512208910665L324.4129663820004,388.8728696273022L324.260274725445,388.7670459129731L323.8844183252752,388.4525153270678L323.8168816088273,388.3231761287974L323.8374362511993,388.1438654657446L323.8374362511993,387.99688988422304L323.69355375458167,387.89400717302954L323.59665323582135,387.69118186305974L323.57609859344666,387.44720445480584L323.4997527651701,387.2208648575339L323.29714271203966,386.68000483702815L323.2207968356515,386.5183356477917L323.1738148096849,386.315514926688L323.03874142489303,386.08036135413295L322.95065006607024,385.89223913322274L322.8948588801659,385.52481457704215L322.739230853002,385.3866635424563L322.51900247999606,385.31905780339446L322.4514658116573,385.16327100922456L322.3663108234407,384.8164263557919L322.30758326692785,384.6577014547819L322.27821946461813,384.5136737153901L322.1813189939644,384.31673830450757L322.14314607982624,384.13743949766797L322.27821946461813,384.0668958257711L322.42210200934505,383.8640832426087L322.2987741069901,383.7288752400018L322.1343369679978,383.6024853960401L321.9904544232709,383.5642745694109L321.80546259379435,383.54076023739884L321.68213473955143,383.449642231009L321.71149849375206,383.27034594030124L321.6527709372392,383.07929301800016L321.5470613066507,382.8999977965602L321.59404338072636,382.73246007722025L321.6234071349295,382.57667981263353L321.45016083599944,382.26512040141586L321.43254256423575,381.97707632291844L321.3062783393816,381.8212979393364L321.20056870879284,381.7243039976327L321.2093778206215,381.30693801765733L321.05668616406615,381.201127391248L320.7483664803442,381.09531689406793L320.58392929324236,380.93660152870547L320.5075834649663,380.72498159673626L320.39306472254884,380.5221798491961L320.22862753544723,380.4633968642145L320.0847450388294,380.4016747957684L320.017208322379,380.24296116695973L319.99665368000433,380.0166479449832L319.95848076586594,379.8138484558133L319.89094404941557,379.6345624740942L319.8733257776521,379.45821613745784L319.79697994937305,379.09670763814535L319.7764253070011,378.9233018019118L319.6912703668936,378.7263839419522L319.62373365044573,378.5382838400002L319.6031790080708,378.3883919622733L319.5561969339951,378.22380519247895L319.4886602656536,378.02688946554593L319.4504873515157,377.87405974996193L319.4123144373773,377.6712670104589L319.324223078552,377.4890479813834L319.17153142199663,377.4214507635012L319.0159033948328,377.41557271228027L318.8044841336555,377.3832436567193L318.6312378347252,377.3185854973945L318.49616444993626,377.34797557062166L318.34347279338067,377.35385356759406L318.2172085204172,377.27743945565226L318.0733260237994,377.1598794655888L318.01459841917745,377.03644167007513L317.92063431913493,376.933577058662L317.76500629196835,376.8630413910767L317.5917599930408,376.8189566615035L317.46843209068606,376.70433646493274L317.409704534173,376.5632656992093L317.27463114938405,376.42513424166975L316.9281385515235,376.33108744673655L316.82242892093495,376.1694448125159L316.6961646479715,375.6786414884066L316.66973726437936,375.4552830904528L316.581645905557,375.226047637853L316.50530007727775,374.9262793787798L316.3907813348608,374.54716264189045L316.36141753255106,374.3825854884805L316.285071704272,374.1798034854577L315.85929690752687,374.1180873622539L315.677241448662,374.079882164717L315.60089562038274,373.915306159323L315.2632121343511,373.4921126219476L315.1398842319991,373.41570295973247L314.9460832906941,373.36574282424795L314.7816461035925,373.3716204683341L314.62895444703713,373.38925345180786L314.4351535057349,373.29521094254414L314.2237342926669,373.2070462421328L314.0504879937364,373.14533096248664L313.68637707600396,372.9366750792278L313.5043216171389,372.86908249327865L313.4074211464849,372.74565265429646L313.3105206758339,372.6016514671775L313.069737660456,372.53405921482374L312.8113364214212,372.51936523906534L312.5999171602434,372.54287557291445L312.46484377545175,372.57226353776935L312.27985194597545,372.5869575249594L312.1066056470479,372.43120149931434L311.9157410763519,372.27838465297197L311.77185853162473,372.09618042523914L311.75130388925004,371.84932377302255L311.70432186328344,371.667120689114L311.5604393185563,371.6230393310419L311.4341750455933,371.52312177765515L311.49290260210614,371.33504204340045L311.481157119669,371.12639169479763L311.5310755162468,370.93831304500554L311.42536593376735,370.8090092647436L311.24331047489954,370.76198979458013L311.08768244773546,370.6885218943658L310.9819728171469,370.55334113108563L310.9144361488054,370.3535092697467L310.7323806899403,370.2418387547241L310.45342476042174,370.23302264374723L310.3183513756296,370.0919654535826L310.2889875733199,369.8891961989009L310.20383263321537,369.71581428049086L310.01884080373884,369.6599795122747L309.83678534487103,369.66879550253316L309.81916707310756,369.49541413178156L309.8279762330453,369.35435843412915L309.70171196008187,369.23975087407206L309.6459207741775,369.0722478431136L309.63417529174035,368.8841747460168L309.63417529174035,368.7431202293765L309.6165570199769,368.58149566604504L309.5490203035263,368.18184368342355L309.51084738938835,368.0231589993494L309.4521198328755,367.8821062023839L309.2583188915705,367.7998255657683L309.2583188915705,367.632325951627L309.4139469187346,367.53535268129565L309.54021119169784,367.4060551769481L309.3170464480834,367.28557364783376L309.1349909892183,367.15627659637875L309.03809051856456,366.991717046755L308.8560350596997,366.5009792467015L308.8178621455613,366.30409738009274L308.7884983913582,366.0954618920558L308.63580668669374,365.94559736623137L308.5007333019046,365.73990151143397L308.56827001835245,365.5665296692203L308.6064429324931,365.3990352640803L308.4889878194674,365.21097183592656L308.2599502865239,365.10812487686735L307.99861262877107,365.1198788283258L307.5581559308682,364.9024313461166L307.37316410139465,364.69379993613444L307.27626363074114,364.3294310233038L307.2204724448395,364.2001392512073L307.0853990600474,364.1707547695947L306.7858884881566,364.3353079121262L306.64200594342697,364.3911385238588L306.46875964449964,364.4499076271537L306.17218544321463,364.5204306325649L305.64070101588095,364.6761691366585L305.48800935932536,364.7584462051615L305.37349061690816,364.8407234144369L305.238417232119,364.88186202976027L305.0651708850796,364.9171237322467L304.9007337460873,364.98470866952647L304.7568512013604,365.10812487686735L304.5072590741538,365.06698613391086L304.46908616001315,364.86716965072833L304.4867044317791,364.68498451179465L304.46908616001315,364.54099984723837L304.43091324587476,364.3735077972389L304.4015494435653,363.9885713612191L304.0638659575336,363.6447749082838L303.9581563269446,363.52429962186466L303.9669654868824,363.3509330730094L304.00513840102076,363.14524445790573L303.9963292891923,362.96600196671034L304.0256930433952,362.7985134885636L304.1108480316095,362.48998309475985L304.0844205999083,362.3548178004828L304.12259351404646,362.1785155678307L304.21655761408897,361.9845836390908L304.1607664281846,361.7377618955288L304.15195731635595,361.55558444175875L304.19013023049683,361.41748249972L304.2077485022603,361.18535421304625L304.23711225646366,360.9737949166017L304.25766689883585,360.75342125093596L304.2459214163987,360.5301099773573L304.21655761408897,360.3097375966846L304.10203887167177,360.0541064280883L303.97871101742885,359.81904408013634L304.0168839315668,359.4488222888937L303.9493472151162,359.30190937026344L303.8318921020905,358.93756657922216L303.70856419973825,358.7583340302508L303.54412701263664,358.8758635450659L303.42960827021943,358.7407046208047L303.26517113122713,358.68193996762864L303.3532624419404,358.56147257490966L303.4002445160161,358.4086849120122L303.4472265419831,358.2059478807027L303.2857257736018,358.0707901687314L303.2563619712894,357.9062506381094L303.33270779956865,357.7005767234521L303.2358073289147,357.5507289261593L303.11247942656246,357.4508305695771L303.1506523888097,357.2392815077291L303.0243881158465,357.107063578505L302.78360510046855,356.91608259124496L302.81296890277804,356.71334946240415L302.5633767274626,356.3666475410272L302.51345833088726,356.23736924990936L302.41949423084475,355.89360757150985L302.3607666262228,355.7496394229247L302.20807496966745,355.31773657814733L302.1287927707797,355.0826884117541L302.06125610243816,354.8447028009688L302.1493474131546,354.66254144690544L302.1493474131546,354.51269940914705L302.0142740283625,354.1366263771261L301.84102772943515,353.9162718792568L301.84983684126087,353.7194223510863L301.93792820008616,353.5402015999738L301.88800975540175,353.3668572979383L301.90856439777394,353.21407952122377L301.97610111422455,353.09362037335126L302.00546491653677,352.92027701326185L302.18752032729253,352.7616240511178L302.25505704374314,352.58828138833684L302.2168841296052,352.39437308040755L302.00546491653677,352.3855590509347L301.7823001729223,352.44725713251086L301.63841762819266,352.3796830638977L301.65897227056735,352.2180931501721L301.69714518470573,352.0447516235721L301.6677814305051,351.8420306121934L301.54445352815014,351.51003934340076L301.49453508346596,351.34551315729493L301.5238988857782,351.1633595401641L301.3300979444732,350.8313709568639L301.3506525868481,350.6668460979697L301.42699841512444,350.5287630081036L301.3418434269104,350.408307687669L301.0247145832536,350.29079050675364L300.8309136419514,350.29666634749157L300.7163948995342,350.0939495955305L300.6576673430211,349.9705569826314L300.66647645484954,349.7854684224093L300.7633769255008,349.5798149426161L300.9571779149121,349.50636738768196L301.0247145832536,349.37122406849846L300.88964119846423,349.18907468711774L300.7163948995342,349.06568342737165L300.48442104409105,349.01573936885137L300.34053849936436,348.88059682127476L300.0997554839837,348.59856086322395L299.9470638274281,348.44285391904026L299.8207995544674,348.25483079574224L299.7062808120502,348.16963292949436L299.4948615989822,347.9727968737291L299.2423331011644,347.6878260330809L299.0132955682236,347.4469235575301L298.8782221834315,347.34703733014226L298.6756120821917,346.9709962054562L298.6080754138502,346.7888518959389L298.52292042563636,346.5890810952586L298.4436382267486,346.46569351125424L298.4935566714357,346.32174149878597L298.45538375729507,346.11903397115606L298.56990249971227,345.89282467962835L298.7725126009518,345.86932246035076L298.93401336933584,345.95451805272637L299.06908675412774,345.8193802228078L299.14836900112164,345.6313626999177L299.1571781129503,345.4198434705968L299.21590566946315,345.22888903560556L299.14836900112164,345.02030849682535L299.1571781129503,344.83816812027726L299.1072596682659,344.6942187229145L299.0896413964997,344.5208922316452L298.9927409258487,344.2946869576176L298.98393181402025,344.10667261128333L298.9163950975724,343.9774129671268L298.7431487986423,343.80702554483526L298.7225941562674,343.6160745044621L298.73433968681366,343.40749766479667L298.6961667245664,343.2165474552373L298.50236578326167,343.1342920690113L298.29975568202167,343.1049152009542L298.2909465701932,342.8992771937129L298.35848328664383,342.6818889223309L298.3203103243966,342.4556881772049L298.32911948433434,342.2236126747649L298.13825491363787,342.0855427198943L297.9738177265365,341.7624009914324L297.76239851346804,341.8005904042165L297.5685975240567,341.7300869183855L297.5128063862617,341.512701371287L297.62732512867865,341.2101250603809L297.5891522145407,341.0368050940991L297.41590586750135,340.8869863853497L297.18393201205845,340.760668822179L297.0400494673315,340.6226010115065L296.96370363905226,340.46690770996383L296.8286302542631,340.38171718769394L296.81982114243465,340.19958591156944L296.6348293129586,340.14083397189864L296.7317297836121,339.8764506651811L296.6935568694714,339.72075862585575L296.5790381270567,339.50044009991353L296.42341009989013,339.30362267681903L296.3470642235045,339.1538066791678L296.21199083871284,339.086242658712L296.17381792457445,338.86592557761855L296.0299354279566,338.65735921794186L295.9330349091965,338.4752312414527L295.8097070549509,338.398855035264L295.7685977702042,338.25491554065036L295.7421703385003,338.11097620921333L295.6364607560208,337.9082865005463L295.4426597666095,337.6527218519671L295.3839322100964,337.5234709966652L295.3457592959585,337.35897014778163L295.22243144171284,337.09459437712314L295.0491850946735,337.02703182073265L294.9141117098843,336.9506567347365L294.78784748502994,336.85959430304445L294.69094696626985,336.75678190856377L294.60579202616486,336.636344716129L294.53825530971426,336.4777202893752L294.4619094814352,336.3396585325318L294.3444543684095,336.24272166354035L294.2886631825079,336.1134726340373L294.19176271185415,335.9401617139474L294.1712080694822,335.7903508085333L294.1242259954063,335.6258528043355L293.93336142471003,335.60822803227506L293.7395604834078,335.5406664263711L293.46941366571764,335.2498583939199L293.240376180883,334.93848905115897L292.9408656089922,334.40975086575054L292.8821380524794,334.2011937744273L292.7500010382987,334.13363314386015L292.44168135457653,333.6195860594693L292.3829537980637,333.4903403366627L292.20970754724567,333.41690533704775L291.99828823795906,333.35815738411236L291.825041939029,333.3934061615396L291.58425892364835,333.0908545973898L291.50791309537203,332.93223569785823L291.61362272596057,332.8353020382601L291.7369505802035,332.6913703773618L291.8544056932294,332.57387531493094L292.0834432261729,332.49750358952434L292.29779880984984,332.47987934931876L292.7206372840956,332.67962084599117L292.94967476893,332.7148693959L293.143475710232,332.7824291574744L293.35489492330044,332.8353020382601L293.6044870986159,332.7824291574744L293.7601151257827,332.7295563031879L293.9216158941638,332.6854956355772L294.250490268367,332.57093789913716L294.5969828662271,332.5033783208677L294.74086541095426,332.453442970448L295.1167218111241,332.4064450547079L295.29877726999166,332.3476976652594L295.4720235689192,332.13620727454935L295.56892403957295,331.9629030022224L295.56892403957295,331.8101604838463L295.61590611364863,331.6662302112873L295.7304248560631,331.5311121967278L295.96239871150624,331.39011968183326L296.07691745392344,331.2902500454841L296.2707183952257,331.0728871382625L296.4615830140308,330.8966472122362L296.60840188125735,330.77915411963784L296.740538895438,330.6939717239124L296.8756123283388,330.5823534768485L297.01068571312817,330.50598316832077L297.3571783109885,330.4677980341396L297.36598747092603,330.2798098687481L297.28083248270946,330.1593800917046L297.166313740295,330.06832353306027L297.2044866544329,329.9126463923955L297.15456820974873,329.759906763391L297.1369499860916,329.56310790499424L297.0400494673315,329.3604348843164L296.99306744136493,329.13426393977284L296.9343398848521,328.92277979921175L296.79045734012516,328.33532606698856L296.8080756118886,328.17671410446235L296.7610935859218,327.950545552393L296.62602015302355,327.92704751072824L296.4997559281692,327.9828552834384L296.482137656403,327.8066203282956L296.3764280258142,327.5951387342285L296.2707183952257,327.44533949985856L296.12683589860785,327.2661681044651L296.05929918215725,327.05468751337605L295.8743073526837,327.0311897047283L295.5190055948858,326.61704140572516L295.4426597666095,326.4349340985103L295.36631393833045,326.3056968332952L295.14314919471576,326.24695267823563L295.0286304523015,326.1588364773474L294.8935570675094,326.1030295927138L294.74086541095426,326.05897156255224L294.3943728130964,326.1030295927138L294.2211264660573,326.13533885111025L294.056689327065,326.1558992798237L293.93336142471003,326.0354739564954L293.8922521399634,325.8328071866889L293.77773339754594,325.759377283814L293.65440549519394,325.6389523698865L293.54575949399396,325.4421606462991L293.3842587256129,325.38929128209895L293.2873582549587,325.2159974616931L293.2022032667451,324.9810232065615L293.10530279609407,324.78423258136183L292.9408656089922,324.40827532733215L292.8938835830256,324.22029714480743L292.9115018547891,324.0763765799391L292.7969831123744,323.9853248556796L292.7206372840956,323.80322161404587L292.61492765350704,323.58587298888074L292.54739093705643,323.4037703498268L292.41231755226704,323.3068448786928L292.4035084404386,323.1423654434526L292.3829537980637,322.96907487340025L292.1891528086526,322.8633383507528L292.1039978685478,322.6518656276013L292.0364611520972,322.4257076904356L291.92194240968,322.2582923364884L291.83385105085745,322.0497577492973L291.6899685542371,321.9880785846815L291.6048135660228,321.8206638225133L291.5372768976815,321.52695424721776L291.46974018123365,321.3477917337829L291.43156726709276,321.14513286889814L291.31411215406706,320.91897766894857L291.19078425171483,320.72219357689687L291.2084025234783,320.5430322555287L291.0057924222385,320.2610739257307L290.8442916538547,320.2170179614416L290.6328723926772,320.1435914361662L290.52716281019775,319.97617912181295L290.2364613501354,319.66778861570316L290.11313349588977,319.4475101069982L289.9780601111006,319.3065320909568L289.90171428282133,319.14793195183864L289.80481376406124,319.04219868131815L289.67854953920687,318.94527657197307L289.61101282275627,318.821921233501L289.5933945509928,318.66332173157724L289.4495120062661,318.5370296424478L289.30269313903705,318.3931155480886L289.1705561248564,317.9936813906602L289.0619101236591,317.81158678600775L289.0149280495832,317.65298849644483L288.93858222130416,317.48851636126057L288.84168175065315,317.2418085611167L288.7271630082357,316.99803819563516L288.60970789521,316.79538604880076L288.51574379516774,316.6955286009052L288.42765243634494,316.5751123657325L288.3307519656912,316.4693810899238L288.2367878656489,316.2960994941045L288.06354156672137,316.04939386287447L287.90791349144547,315.9142933055036L287.75522183489034,315.8467431246515L287.57316642413434,315.8085625876434L287.3617471629568,315.74101241044565L287.1973100239643,315.8056256310996L287.1092186651392,315.6881470836949L287.1209641956855,315.55010997693745L287.0622365910633,315.42382080077726L286.95652700858386,315.29459479366443L286.8214536237947,315.27109918201916L286.71574399320593,313.14769833721573L290.1219426077182,312.99497916427174L290.5535901937926,312.95973629359776L291.38164882240835,312.91274584471944L293.35489492330044,312.82463873377407L293.9421705846478,313.2534271118113L294.25929938019567,313.5089385641224L294.69094696626985,313.8173151218386L294.96990289578844,314.0375844911891L295.27822262761697,314.2607910767715L295.4338506547808,314.38414227935624L295.9330349091965,314.73657483130035L296.1356450104363,314.9010436155194L296.2325454810873,315.01558455854723L296.3676189139885,314.859926401412L296.4997559281692,314.6690251734109L296.6348293129586,314.57210619116483L296.65538395533304,314.38414227935624L296.75228442598427,314.21673712589245L296.83743941420084,314.02877368486884L296.9255307249143,313.6910274972345L296.9343398848521,313.5383077499164L296.9813219108187,313.38852507081606L297.11639529560784,313.2211210811429L297.2514687285088,313.08602327837L297.3190053968501,312.9656101368606L297.4247150274391,312.8451970468795L297.4716970534057,312.67779368309846L297.5891522145407,312.37235648008357L297.80938053943464,312.3635457750495L297.99143599830245,312.2871865780489L298.079527357125,312.18145855031827L298.18523693960447,312.0228665783798L298.26158276788374,311.8525272740822L298.3966562007822,311.6557562707483L298.5317295855739,311.467796130078L298.6961667245664,311.3297630204342L298.8018763551552,311.12711898162695L298.8576675410593,310.9685281282299L298.8018763551552,310.3576613329441L298.89584045519746,310.17557648871406L298.9163950975724,309.9905550208431L298.93401336933584,309.5588391398829L298.96337717164806,309.3473869137628L298.9457588998821,309.1065666484509L298.81949462691864,308.9479779219267L298.7901308246087,308.74533696605994L298.9457588998821,308.61905359612064L299.0309138399866,308.44284444750275L299.1747963847165,308.32243493386034L299.3480426836438,308.26369863865L299.66810789791225,308.0757426195847L299.5888256990245,307.9553334301178L299.76207199795454,307.89366046905326L299.7532628861261,307.67633682067446L299.58001658719604,307.6440319685562L299.5888256990245,307.47076068194605L299.4449431542978,307.432582286894L299.3216153000517,307.35035194276304L299.0602776422993,307.3415415237146L298.8576675410593,307.2974895799648L298.7137849963299,307.2446272342846L298.8782221834315,307.13890264232697L299.06908675412774,307.08016672859804L299.0896413964997,306.915706435965L298.93401336933584,306.72481514844395L298.9751226540852,306.5427345053305L298.81949462691864,306.38708506702403L298.82830378685594,306.1844473088811L298.9751226540852,306.1374588567205L299.06908675412774,305.9847465624242L298.9163950975724,305.65582825680843L298.8018763551552,305.54129435043455L298.63743931238105,305.4972428352762L298.6080754138502,305.30928996693797L298.54934785733735,305.14189461353027L298.3761015103007,305.11840055461954L298.3966562007822,304.8100411912539L298.33792859616005,304.6602668315416L298.16468229723273,304.68963431546314L298.14706402546653,304.48699858049474L298.0031815288487,304.33428776203L297.8563626135103,304.2138812643211L297.69486179702017,304.16395661862333L297.4716970534057,304.15514641398073L297.4335241392648,303.9877521769L297.57740668399447,303.90846023822064L297.6566888828793,303.7087621358423L297.5891522145407,303.5149377552692L297.5509793003996,303.34754412476383L297.5891522145407,303.20364445008175L297.73303471115855,302.9510861669784L297.8181896993724,302.82774384722023L297.80938053943464,302.63098371044157L297.89747189825994,302.5105783165626L298.0501635548153,302.42835032605564L297.94445392422654,302.2697678157612L297.9826268864738,302.11999559519154L298.2439644961173,301.84100849424965L298.35848328664383,301.70592009597L298.3203103243966,301.56202176617717L298.4818111408895,301.50035108748597L298.66680297036305,301.359389557758L298.5610933397745,301.2477951047738L298.5317295855739,301.0804035497091L298.63743916805356,300.99523951018944L298.82830378685594,300.9306322869753L298.8018763551552,300.7485576131959L298.81949462691864,300.35797857735616L298.66680297036305,300.2493213857431L298.7137849963299,300.06137397408867L298.73433968681366,299.8910467931935L298.9252042575072,299.85874336511364L299.16598722477875,299.8293766563431L299.39796112833096,299.89692012683673L299.5888256990245,299.8910467931935L299.7532628861261,299.8352499881182L299.9470638274281,299.86461669777884L300.31998385698944,299.6649230055202L300.52259395822944,299.70016306530766L300.59893978650825,299.5503928791696L300.5314030700579,299.377129485667L300.38752052533096,299.1803728982063L300.4168843276407,298.924883306802L300.5431486006039,298.8191636101061L300.5607668723701,298.645900856137L300.59893978650825,298.4785115434119L300.77218608543853,298.41096850911134L300.9747961866781,298.3874753039197L301.0041599408787,298.13198672330765L300.98360529850675,297.9734077991833L300.94543238436586,297.7883991779898L301.13042421384216,297.61220067150293L301.3300979444732,297.48592514143303L301.47691681170227,297.3420298628227L301.5532626880879,297.13940199921166L301.70595434464326,296.9573307958522L301.82340945766896,296.7987527238799L301.93792820008616,296.58144229050856L302.0142740283625,296.3993715207097L301.97610111422455,296.2496037569322L302.11998365895124,295.9265756153569L302.04363783067515,295.744505401368L302.00546491653677,295.39798514241005L301.97610111422455,295.2482180710635L301.95554647184963,295.0720216186148L301.86158237180734,294.9163815757414L301.7441272587814,295.05733862734667L301.58262644229103,294.9897966875921L301.38001634104876,294.98098689598197L301.31247967270997,294.76367823607495L301.3976346128147,294.2820760402708L301.5238988857782,294.05008513014025L301.47691681170227,293.8210310379691L301.2243883138847,293.7564260493716L301.13923332567083,293.5831673888481L301.1568515974343,293.3922893496289L301.14804248560813,293.24252360572495L301.215579202056,293.08982138493144L301.13042421384216,292.9488655954386L301.08050581726684,292.7139395467718L301.0335237431909,292.43496487076936L301.0247145832536,292.19416605993376L301.06288749739156,291.96805033193516L301.2361338444309,291.841778037672L301.3976346128147,291.7801101452999L301.6002447140545,291.6655841693847L301.7441272587814,291.5628045113691L301.84102772943515,291.4570882951591L302.16696568491807,291.22216359591494L302.2932299578815,291.1076378781921L302.4283033426732,290.9431907668856L302.35195751439437,290.80223617187954L302.18752032729253,290.6495354813851L301.9291190882575,290.33238816765476L301.5532626880879,289.9242084469071L301.4358075269529,289.70103129186606L301.3712072292228,289.51896584855126L301.20677004212143,289.42206011484217L301.06288749739156,289.3251544165792L300.91900500077395,289.17832764788665L300.5607668723701,288.893483971358L300.57251235480726,288.7202286924173L300.68703109722173,288.2914957289573L300.77218608543853,287.77760433474333L300.75456781367234,287.4633969716392L300.6958402571595,287.2960155982168L300.6488581830836,287.0992691764416L300.5607668723701,286.9553801376427L300.52259395822944,286.7997450665291L300.5137847982944,286.6235545773987L300.5813215147423,286.4444276476146L300.6283035407089,286.26236437800515L300.7163948995342,286.10379317804905L300.8778957160273,285.7602226042087L300.98360529850675,285.60752469646553L301.01296910081646,285.4107793944562L301.14804248560813,285.2522086871921L301.215579202056,285.0965745462542L301.3418434269104,284.84697272772223L301.6002447140545,284.25967520058384L301.67659054233354,284.12166045132665L301.7646819011561,283.91904312475947L301.9467373119146,283.537300709797L302.0142740283625,283.2935730782775L302.16696568491807,283.12619396020636L302.313784600256,282.9793702353328L302.4077487002987,282.84135601650655L302.61035880153827,282.58588298381136L302.7278139145644,282.45961476883684L302.83352354515296,282.2746172941877L303.006769844083,281.9369236651781L303.0743065124245,281.69613361198617L303.04494275822117,281.5287552564545L303.1594615006384,281.4230426351917L303.31215315719373,281.3261394498146L303.4472265419831,281.3936780556509L303.59110908671255,281.4406614032841L303.64102753139696,281.2967748779959L303.82308294215295,281.3261394498146L303.9963292891923,281.185189420493L304.23711225646366,280.9649550554336L304.2958398129765,280.77702184426727L304.4778952718416,280.6243261848242L304.5248773459175,280.41583797531536L304.4778952718416,280.26314245943354L304.5248773459175,280.0928282490205L304.6893144849098,280.0017983350412L304.69812364484756,279.36165279348785L304.7568512013604,279.2001483240787L304.9212883884618,279.0210252584885L304.90954285791577,278.77142771765295L304.85375167201164,278.5541311707699L304.6599507307094,278.3573897481019L304.81557875787325,278.1459662692149L304.93009750029046,278.0490638776905L305.0563617732512,277.98739869122664L305.1620714038397,277.88168705241713L304.99763421673833,277.7172467166268L304.8331970296367,277.5058235439349L304.8420061895745,277.3120190115357L304.9594613026002,277.1358331922073L305.0827891568458,276.90385529157487L305.1620714038397,276.72179673825633L305.2178625897441,276.5485475593489L305.47920019938806,276.41934480868343L305.4968184711538,276.2167314723892L305.4292818028125,276.0963381061459L305.3059539004603,276.0082453883775L305.20024431798083,275.861424242734L305.2853992580858,275.6764296641006L305.34412681459867,275.48849874009244L305.3911088886746,275.2888222384906L305.4968184711538,275.06565443442656L305.67006481819317,274.8160589955045L305.7963290430448,274.6663017780552L305.82569284535725,274.50773533183684L305.8433111171205,274.11425589177145L305.9314024278367,273.88815216144326L305.9989391442873,273.74720444947116L306.1340125290767,273.6121295767143L306.39241381622037,273.6121295767143L306.718351771706,273.6767305822048L306.93270740349203,273.6943490482282L307.09420817187606,273.6943490482282L307.29681827311583,273.7090311116686L307.50823748618404,273.78244138628907L307.7108475874238,274.00267221774874L307.922266800492,274.0261635511802L308.28931408883614,274.11425589177145L308.5007333019046,274.1318743711462L308.7209616749076,274.12893796589805L308.932380887976,274.11425589177145L309.0880089151426,274.1524292564257L309.2700643740077,274.07608252967947L309.44331067293774,274.08489179276364L309.5960023294931,274.05552764716265L309.8074215906704,274.04084557492666L310.06875924842325,274.07901893465765L310.5092159463261,274.07608252967947L310.7235715300026,274.1583021152906L310.9144361488054,274.24345807056005L311.09649155956413,274.3021863346874L311.24331047489954,274.16711133154047L311.4635388479055,274.1583021152906L311.6661489491453,274.16711133154047L311.75130388925004,274.046718432642L311.8951864339797,273.94100758031766L312.068432732907,273.83529674740527L312.2240607600738,273.71490391790485L312.2915974765215,273.57982905256563L312.39730710711274,273.435944964636L312.53238049190213,273.30967941405123L312.7056267908324,273.2039686938407L312.8201455332469,272.954374066365L312.83776380501286,272.80168088162094L312.89649136152593,272.6372421900716L313.0022009921147,272.5109767537302L313.15782901927855,272.3964569775196L313.3780573922843,272.4551850616573L313.5806674935243,272.37296575496924L313.7920867065925,272.3201104712368L313.94477836314786,272.2143999165203L314.0504879937364,272.05583416414294L314.0710426361113,271.83854036614576L314.03286972197316,271.6652926850617L314.1855613785285,271.33347941295915L314.273652689242,271.17785025359785L314.4557081481098,270.94293838141647L314.7728369917668,270.34097698294363L314.8991012647273,270.1442384541543L314.95489245063186,269.99448231070716L315.02242911897315,269.6832245609876L315.0341746495192,269.5011681635813L315.1017113178607,269.3014934474901L315.05179292128287,269.02840903205595L315.04298376134784,268.8404800017918L315.0606020331113,268.62318708637144L315.0899658354235,268.44994009464915L315.1486933919364,268.21502892961655L315.3131305790382,268.15336477770484L315.48637687796554,268.15336477770484L315.57153181807325,267.98011786697174L315.75358727693833,267.8978990171766L315.9767520205528,267.87440787717065L316.1206345652795,267.657115217277L316.09127076297,267.41633147014454L316.1118254053447,267.2107844139989L316.188171233621,267.00230101563704L316.3702266924886,266.9024639209266L316.4671271631398,266.4062148465685L316.5728367937286,266.2535228761778L316.67854637620803,266.12725835649604L316.7637013644221,265.99805747216067L316.9193293915862,265.8571110966625L317.1307486046542,265.74259216140183L317.2951857917558,265.5693455870765L317.4772412506236,265.40490815623593L317.6592967094914,265.3432441420221L317.8619067626221,265.2610254118706L318.0351531096612,265.13182459953754L318.2377631627919,265.0936516373967L318.3816457075186,265.1259518508777L318.6312378347252,265.2522162882236L318.79567502182704,265.3960989837142L319.0247125066612,265.4430811254554L319.18914969376283,265.50180876847264L319.33303223848975,265.4166537036345L319.3917597950028,265.21404332340273L319.4886602656536,265.10246080833514L319.717697750488,265.0114329673354L319.9408624941027,265.0407968051214L320.0083992105531,264.9057232130215L320.0553812365172,264.75596776224353L320.1698999789344,264.6267669860026L320.3548918084107,264.51224813313706L320.52813810734074,264.34781084688524L320.65146600969297,264.1980554380095L320.70138440626806,263.9925088139575L320.7777302345471,263.84275342856824L320.8922490250736,263.6783161428025L321.05668616406615,263.4668968181569L321.2592962653057,263.46102402596574L321.4589699959372,263.6254612980444L321.6733255796137,263.828071518164L321.77903521020266,264.03361812766195Z\" stroke=\"#000\" fill=\"#FFF\" strokeWidth=\"0.5\"></path>\r\n        <path id=\"Machakos\" ref={(item) => countyRefs.current[15] = item} d=\"M293.85060893466175,298.3575748430334L293.93336142471003,298.5313713189112L293.9891526106144,298.6693940915195L294.0185164129266,298.8044803086308L294.0273255247523,298.9982998212675L294.07724396943945,299.1451329316643L294.1242259954063,299.33307946048126L294.14478063777847,299.50340615415064L294.3444543684095,299.993830398173L294.4119910848601,300.1993978201037L294.5000824436852,300.4313956309512L294.7115016086443,300.4930659604047L295.06680336643944,300.48425588463067L295.1637038852,300.35797857735616L295.3281410241923,300.4167122083591L295.48083268074765,300.5136227413103L295.7304248560631,300.48425588463067L295.98295335388093,300.39615543786584L296.165008812746,300.23757464910074L296.3676189139885,300.1436009261018L296.4527738540935,299.97033700481666L296.5790381270567,299.80588323478287L296.6935568694714,299.63261961495044L296.84624852602656,299.4828494805323L296.9255307249143,299.69135302570703L296.91378524247716,299.8910467931935L296.9813219108187,300.03200718650055L297.14575909792006,299.9027935087687L297.28083248270946,299.70016306530766L297.4247150274391,299.5797595459329L297.59796132636643,299.5885695804984L297.75065298292157,299.63261961495044L297.89747189825994,299.6267462892819L297.9738177265365,299.7471497895209L298.05897271475305,299.9262868939375L298.20285521137066,299.99676711464184L298.35848328664383,299.873426745223L298.5610933397745,299.8822367449506L298.70497588450417,299.90573017574377L298.7137849963299,300.06137397408867L298.66680297036305,300.2493213857431L298.81949462691864,300.35797857735616L298.8018763551552,300.7485576131959L298.82830378685594,300.9306322869753L298.63743916805356,300.99523951018944L298.5317295855739,301.0804035497091L298.5610933397745,301.2477951047738L298.66680297036305,301.359389557758L298.4818111408895,301.50035108748597L298.3203103243966,301.56202176617717L298.35848328664383,301.70592009597L298.26158276788374,301.84100849424965L298.097145628891,301.99371718705993L297.9826268864738,302.11999559519154L297.94445392422654,302.2697678157612L298.0031815288487,302.46652760961774L297.8181896993724,302.5663759164601L297.8181896993724,302.76019931936366L297.7242255993299,302.98632684527666L297.5891522145407,303.20364445008175L297.5509793003996,303.34754412476383L297.5891522145407,303.5149377552692L297.6566888828793,303.7087621358423L297.57740668399447,303.90846023822064L297.4335241392648,303.9877521769L297.48344258395196,304.1610198836939L297.69486179702017,304.16395661862333L297.8563626135103,304.2138812643211L298.0031815288487,304.33428776203L298.14706402546653,304.48699858049474L298.16468229723273,304.68963431546314L298.33792859616005,304.6602668315416L298.3966562007822,304.8100411912539L298.3761015103007,305.11840055461954L298.52292042563636,305.1330843591035L298.6080754138502,305.30928996693797L298.61688452567864,305.4972428352762L298.8018763551552,305.54129435043455L298.9163950975724,305.65582825680843L298.9751226540852,305.8202873053334L299.06908675412774,305.9847465624242L298.9751226540852,306.1374588567205L298.82830378685594,306.1815105392571L298.81949462691864,306.38708506702403L298.9751226540852,306.5427345053305L298.93401336933584,306.72481514844395L299.0896413964997,306.915706435965L299.06908675412774,307.08016672859804L298.8576675410593,307.14183942894255L298.7137849963299,307.2446272342846L298.8576675410593,307.2974895799648L299.0602776422993,307.3415415237146L299.3216153000517,307.35035194276304L299.4449431542978,307.432582286894L299.5888256990245,307.47076068194605L299.58001658719604,307.6440319685562L299.7532628861261,307.67633682067446L299.76207199795454,307.89366046905326L299.5888256990245,307.9553334301178L299.66810789791225,308.0816162749235L299.50367071081064,308.13447884584764L299.3480426836438,308.26369863865L299.1747963847165,308.32243493386034L299.0309138399866,308.44284444750275L298.9457588998821,308.61905359612064L298.7901308246087,308.74533696605994L298.81949462691864,308.9479779219267L298.9457588998821,309.1065666484509L298.96337717164806,309.3473869137628L298.93401336933584,309.5588391398829L298.9163950975724,309.9905550208431L298.89584045519746,310.17557648871406L298.8018763551552,310.3576613329441L298.82830378685594,310.6748418814601L298.8576675410593,310.886295931435L298.73433968681366,311.2622149932156L298.66680297036305,311.3973111261455L298.5317295855739,311.467796130078L298.26158276788374,311.8525272740822L298.18523693960447,312.0228665783798L298.079527357125,312.18145855031827L297.99143599830245,312.2871865780489L297.80938053943464,312.3635457750495L297.5891522145407,312.37235648008357L297.4716970534057,312.67779368309846L297.4247150274391,312.8451970468795L297.3190053968501,312.9656101368606L297.2514687285088,313.08602327837L297.10758618378213,313.23580564401715L296.9519581566153,313.41789423207433L296.9343398848521,313.6234783841214L296.88735781077617,313.8554951176911L296.83743941420084,314.02877368486884L296.75228442598427,314.21673712589245L296.65538395533304,314.38414227935624L296.6348293129586,314.57210619116483L296.4909467682314,314.68370988516733L296.35587338344226,314.8658003227755L296.1356450104363,314.9010436155194L295.9330349091965,314.73657483130035L295.4338506547808,314.38414227935624L295.27822262761697,314.2607910767715L294.96990289578844,314.0375844911891L294.70269249681587,313.78794587897835L294.25929938019567,313.5089385641224L293.9421705846478,313.2534271118113L293.35489492330044,312.82463873377407L291.38164882240835,312.91274584471944L290.54478108196395,312.95973629359776L290.1219426077182,312.99497916427174L287.09160039337553,313.1330137832676L286.67757107906755,313.13007688228083L286.7362986355806,313.5089385641224L286.7744715497188,314.2490433808632L286.76272601917253,314.6102863897998L286.8008989814198,314.9010436155194L286.8214536237947,315.27109918201916L286.95652700858386,315.29459479366443L287.0622365910633,315.42382080077726L287.1209641956855,315.55010997693745L287.1092186651392,315.6881470836949L287.1973100239643,315.8056256310996L287.3617471629568,315.74101241044565L287.57316642413434,315.8085625876434L287.8139493914032,315.86730187602535L287.9754502078963,315.9789066073661L288.1105235926882,316.093448391865L288.19861495151054,316.26085579843044L288.51574379516774,316.6955286009052L288.60970789521,316.79538604880076L288.7271630082357,316.99803819563516L288.84168175065315,317.2418085611167L288.93858222130416,317.48851636126057L289.0149280495832,317.65298849644483L289.0619101236591,317.81158678600775L289.1793652366848,318.0083664596102L289.30269313903705,318.3931155480886L289.4084027215165,318.5047223732595L289.53466699447995,318.5957701216041L289.61101282275627,318.75436954180395L289.6609312674434,318.9423394986522L289.813622923999,319.0480727362858L289.90171428282133,319.1538060596963L289.9780601111006,319.3124061578614L290.11313349588977,319.43869899755333L290.227652238307,319.66778861570316L290.400898537237,319.8322634827336L290.52716281019775,319.97617912181295L290.61231775030546,320.12596907444976L290.8442916538547,320.2170179614416L291.03515622455075,320.3080669133167L291.17022960934014,320.4901650121051L291.19078425171483,320.72219357689687L291.31411215406706,320.91897766894857L291.43156726709276,321.14513286889814L291.46974018123365,321.3477917337829L291.5372768976815,321.52695424721776L291.6048135660228,321.75604763347627L291.6429864801612,321.9293364966529L291.825041939029,322.0468206523993L291.92194240968,322.2582923364884L292.0364611520972,322.4198334307186L292.09518870861007,322.6283686915685L292.1715345368864,322.81634440211315L292.3829537980637,323.0278174094899L292.4035084404386,323.2921591963334L292.54739093705643,323.4067074792327L292.5943730111321,323.58587298888074L292.69127348178586,323.7356672417443L292.7676193100622,323.92364466508764L292.9115018547891,324.0705022404637L292.8938835830256,324.22029714480743L292.9408656089922,324.40240101969147L293.10530279609407,324.78423258136183L293.29616736678736,325.16019102652916L293.2785490950241,325.33348476481234L293.4136224798133,325.39516568680443L293.54575949399396,325.4421606462991L293.65440549519394,325.6389523698865L293.77773339754594,325.759377283814L293.8922521399634,325.8328071866889L293.93336142471003,325.9679183113621L293.8922521399634,326.1030295927138L294.056689327065,326.14121324519425L294.23874473782075,326.1265272605416L294.74086541095426,326.05897156255224L294.8935570675094,326.09715520056153L295.0286304523015,326.1588364773474L295.14314919471576,326.24695267823563L295.36631393833045,326.3056968332952L295.451468926547,326.4525573753146L295.50138732312234,326.59354368649997L295.5865423113364,326.7433417586829L295.7304248560631,326.86670508270726L295.8743073526837,327.0311897047283L296.05929918215725,327.05468751337605L296.12683589860785,327.2632308787083L296.2707183952257,327.44533949985856L296.3764280258142,327.5951387342285L296.482137656403,327.8066203282956L296.4997559281692,327.9828552834384L296.62602015302355,327.92704751072824L296.7610935859218,327.950545552393L296.8080756118886,328.17671410446235L296.79045734012516,328.3265143068172L296.8286302542631,328.50862459063717L296.99306744136493,329.13426393977284L297.0400494673315,329.3604348843164L297.1369499860916,329.5660452390305L297.15456820974873,329.759906763391L297.2044866544329,329.9126463923955L297.166313740295,330.06832353306027L297.28083248270946,330.1593800917046L297.46288794157726,330.42961291333665L297.3101962850217,330.49129656556204L297.01068571312817,330.50598316832077L296.8756123283388,330.5823534768485L296.740538895438,330.6939717239124L296.5966563988202,330.77915411963784L296.4615830140308,330.8966472122362L296.2707183952257,331.0728871382625L296.07691745392344,331.2902500454841L295.96239871150624,331.39011968183326L295.7304248560631,331.5311121967278L295.61590611364863,331.6662302112873L295.56892403957295,331.8101604838463L295.56892403957295,331.9629030022224L295.4720235689192,332.13620727454935L295.29877726999166,332.3476976652594L295.1167218111241,332.4064450547079L294.8465750415428,332.43581873757114L294.6146011379906,332.4740045711533L294.40318192492236,332.5415641788019L294.23874473782075,332.52100256498295L294.07724396943945,332.62674804317834L293.9216158941638,332.6854956355772L293.7601151257827,332.7295563031879L293.6044870986159,332.7824291574744L293.35489492330044,332.8353020382601L293.143475710232,332.7824291574744L292.9408656089922,332.7148693959L292.7088917535493,332.6766834753841L292.48866338054336,332.56506316404153L292.29779880984984,332.47987934931876L292.0834432261729,332.49750358952434L291.8544056932294,332.57387531493094L291.7369505802035,332.6913703773618L291.61362272596057,332.8353020382601L291.47854929305936,332.88817489743707L291.58425892364835,333.0908545973898L291.825041939029,333.3934061615396L291.99828823795906,333.35815738411236L292.20970754724567,333.41690533704775L292.3829537980637,333.4903403366627L292.44168135457653,333.62839829882984L292.65310056764497,333.97501261196317L292.7206372840956,334.118946039354L292.8439651383412,334.2100060631327L292.9320564971638,334.40975086575054L293.15228482206066,334.7651801325365L293.240376180883,334.93848905115897L293.46941366571764,335.2498583939199L293.7395604834078,335.5406664263711L293.93336142471003,335.60822803227506L294.1242259954063,335.6258528043355L294.1712080694822,335.7903508085333L294.19176271185415,335.9401617139474L294.25929938019567,336.0694105213655L294.27985402257013,336.2221593123158L294.14478063777847,336.319096161492L293.9803434987857,336.3396585325318L293.82765179412127,336.424845536205L293.536950382168,336.6040323045182L293.43124075157925,336.7420944253971L293.3255311690998,336.93009423823787L293.4606045538892,337.0740318509229L293.45179539395144,337.2620322899388L293.43124075157925,337.44122056215343L293.3079128973336,337.5645962395494L293.13466659840356,337.66740946969844L293.10530279609407,337.9170991130048L292.9115018547891,338.0522255350926L292.7676193100622,338.1814770837939L292.60318212296056,338.2255401320583L292.2860532793036,338.0463504840518L292.239071253337,337.9082865005463L292.0159065097223,337.5234709966652L291.96011532381794,337.33547006254594L291.88376949554186,337.19153207162105L291.77805986495287,337.0740318509229L291.6517956400987,337.14159448733835L291.4873584529971,337.16509452670795L291.2084025234783,337.22384467349616L290.9969833104101,337.13278194392524L291.04690170698814,337.36778271126065L291.1614204975115,337.57047126188985L291.2172116834158,337.69678466357925L291.2465754376192,337.84366090850153L291.17022960934014,338.0287252849022L291.1115020528273,338.269603248245L291.14086580703065,338.49873159867036L291.14086580703065,338.69260984571054L290.95881039627193,338.79836180550893L290.8912736798213,338.95698991248616L290.814927851545,339.1068056060139L290.47724436551334,339.34181110357815L290.36272562309614,339.5092528563119L290.32455270895775,339.6443814875128L290.20709759593205,339.80888613888936L290.06321505120536,339.9293272778482L289.8517958381369,339.9205144829823L289.70791329341,339.7560096406305L289.6403766250685,339.58269226758125L289.5816490204468,339.3271232342421L289.35261153561214,339.230183429548L289.32324778141174,339.0039909130826L289.22634731076073,338.81598714330346L289.14119232254416,338.6779220745708L289.0619101236591,338.4957940597253L288.997309777817,338.2578530723672L288.98556429537985,338.06103816044225L288.98556429537985,337.7525976089711L288.95620049307036,337.61453408496345L288.98556429537985,337.47059568886857L288.8798546647913,337.36778271126065L288.8798546647913,337.2003446202402L288.7359721200646,337.27671984973983L288.6008987352725,337.33547006254594L288.4570162386549,337.3295950541401L288.2837698916155,337.170969525385L288.05179603617535,336.9154067777121L287.96664109606763,336.76559441875156L287.87854973724507,336.5746573851673L287.8609314654791,336.4013456708865L287.8139493914032,336.2339091992871L287.6113393382725,336.1222850396319L287.3705563228946,336.1898470339581L287.26484669230604,336.0106610035627L287.0152545650967,335.9930362126397L286.9183540944455,335.88728724291417L286.8008989814198,335.52891661993255L286.67757107906755,335.61116548605344L286.571861448479,335.7169141673935L286.37806050717404,335.82853787911847L286.1871959364805,335.8960996287699L286.06093166351707,335.9930362126397L285.9170491187904,336.1399099012594L285.6968207938935,336.13697243212687L285.7643574622348,335.8373502598569L285.5617474091041,335.8050381527751L285.3767555796278,335.80797561225296L285.17708184899675,335.88728724291417L284.91574419124413,335.80797561225296L284.86876216527753,335.6640398129415L285.0889904901712,335.5817909039879L284.9656626359283,335.44373032323085L284.8012254488269,335.4143557895567L284.59861534758693,335.3614815925489L284.55163332162033,335.18817195702866L284.71313409000163,335.0824238249513L284.72487962054765,334.93848905115897L284.569251593384,334.83274122522926L284.41655993682843,334.7974919581112L284.2814865039302,334.85624072732827L284.1845860332762,334.9708009313551L283.9261847942412,334.96198862563165L283.75293844720477,334.93848905115897L283.58850130821247,334.8650530720838L283.38589120696975,334.82686631445205L283.2126449080424,334.8474284314595L283.09812611751613,334.77399246946766L283.1069352774539,334.62124585214326L282.9924165350367,334.5301854655693L282.9248798185861,334.3128158326967L282.73107887728384,334.22469313243687L282.53140514665256,334.3304403817684L282.32879509351915,334.3304403817684L282.18491254879245,334.2070686495226L281.99992071931615,334.1483202023233L281.8002469886849,333.97501261196317L281.6534281214588,333.8751405817151L281.47137266259097,333.7782060488356L281.28050809189745,333.84576644796414L281.11607090479583,333.81639237064155L280.9046516917274,333.883952794584L280.6726777881754,333.8604535138037L280.45244946328125,333.8751405817151L280.1617480032162,333.97501261196317L279.950328790148,334.07194732855106L279.84461915955944,334.1630073109963L279.7095457747673,334.3451275163111L279.48931740176386,334.4773117250126L279.2778981886959,334.4949363021845L279.16337944627867,334.39800118909284L279.01949690155175,334.5389977342351L278.8462506026217,334.50962346014967L278.67300430369164,334.51549830467025L278.4322212883137,334.4949363021845L278.229611187071,334.43618773937743L278.0270011339403,334.3451275163111L277.85375478690116,334.2452551292178L277.68050848797384,334.1776944217556L277.48964391727736,334.1160086283255L277.2870338160376,334.01907387054473L277.0550599605947,334.04844800520556L276.911177415868,334.03376091277084L276.74674027687524,334.0043867822725L276.63222148634895,333.90745212880563L276.4384205450467,333.93095142021724L276.27691977666314,333.97501261196317L276.1594646155281,334.1160086283255L275.9979638471441,334.26875449723747L275.8335266600425,334.4655619925314L275.6514712011774,334.5683720648281L275.5839345328361,334.7034939876803L275.4400519881094,334.62124585214326L275.36076978922165,334.7974919581112L275.29323307277105,335.00605025808534L275.1493505761532,335.05304939532095L275.08181385970283,335.2557332808649L274.92031304321245,335.3556066995088L274.7353212137359,335.4966045629758L274.54445664304285,335.5817909039879L274.41819241818826,335.66110235763585L274.1686002428728,335.9137244509092L274.3124827875995,336.13109749412405L274.4681108147636,336.3102836905467L274.52390200066793,336.4777202893752L274.64135711369363,336.5834698793175L274.7852396584208,336.69509455150916L274.87920375846306,336.8302193086445L275.03483178562715,336.93009423823787L275.16990521852813,337.0564068249714L275.49584317401354,337.30021992106447L275.59274364466455,337.4940958061395L275.6778986328786,337.70559725713764L275.77479910352963,337.8700986346406L275.8716995741836,337.969974659929L275.9480454024597,338.2167275400728L276.07430967542314,338.49873159867036L276.14184634376466,338.7542984509116L276.23874681441566,338.9863655412115L276.3327109144582,339.1214934419345L276.46778434735666,339.35649892701707L276.4765934591851,339.5738795526017L276.5734939298361,339.72663377804605L276.62341237452324,339.8617627143615L276.6615852886614,340.02039261549857L276.7966586734508,340.0967700528432L276.96990497238085,340.3758419953416L277.1020419865615,340.7077917492486L277.325206730176,340.8869863853497L277.36337964431664,341.12787149050195L277.4602801149679,341.33350559766217L277.56598974555664,341.512701371287L277.67169937614517,341.806465733194L277.75685431625016,341.9562859042748L277.89192770104205,342.0796673733993L277.68931764790864,342.16779712831226L277.52781683141825,342.2059867065881L277.31639761835004,342.3293685538097L277.0550599605947,342.4263115243314L276.8730045017296,342.52325459585705L276.69975820279956,342.58200802028955L276.5265119038695,342.72595409857956L276.29453800032,342.7788322607187L276.0919279471866,342.8757757486742L275.93042713069644,342.89340184392756L275.6221074469745,342.84933658802674L275.28442396094533,342.95509317969305L275.1023685020775,342.88458877181586L274.7940488183581,342.85521198314495L274.5150928888395,342.65838753243736L274.32129189942793,342.7112657041708L274.1774094028076,342.7112657041708L274.02471774625224,342.60844705656314L273.88964431335376,342.64957453081274L273.4844241589808,342.7024526493892L273.08214037521884,342.65838753243736L272.6093834562887,342.9227786447218L271.9163982124621,343.2106720371304L271.97512581708384,342.58200802028955L271.4759415145593,342.05029083899234L270.80938370243643,341.70364808274394L271.14706718846514,341.12199620387287L270.6772466882528,340.3376531576149L270.4364636728749,339.9910166720488L270.2720264857735,339.6796324743167L270.2044897693229,339.521003135253L270.2044897693229,339.0950553773818L270.183935126948,338.65735921794186L270.183935126948,338.0962885253587L270.14576221281004,337.4559081003584L269.97251591388,337.45003308481375L269.8198242573244,337.4559081003584L269.452776968983,337.29728241786086L269.2119940017142,337.3119699828764L269.0798569875308,337.4559081003584L268.17545248252645,337.8583485546485L266.4811623111534,338.65735921794186L267.20351135729265,340.1467091498049L267.28866629739764,340.38171718769394L267.356203013848,341.0779318304906L267.4149305703611,341.7859022037133L267.4707217562627,342.5673196486661L267.52064020094986,343.6160745044621L267.38556676804865,343.6777663244169L267.01851952781635,344.33875285967304L266.86582787126076,344.6354639454156L266.633853967709,345.0584992629109L266.548699027604,345.2377022860777L266.0289600827073,345.59023392847286L265.526839409574,346.38343516919235L265.38295691295616,346.27179900758097L265.53858494012,345.94570473172763L265.66191284247225,345.7723758290886L265.526839409574,345.6284249367788L265.32716572705203,345.57848283375716L265.2097106140261,345.46978548524373L265.1627285399504,345.26707989014744L265.153919428122,345.0643747520102L265.2097106140261,344.82935490885626L265.1920923422599,344.5355809159142L265.05701890936143,344.3945697220687L264.8837726104314,344.37106789375844L264.5167253701993,344.5796469348653L264.4227612701568,344.7030319692975L264.25832408305496,344.6736545488592L264.02635022761206,344.5649582434594L263.8531038805727,344.46801301684184L263.69160311219184,344.41513383284376L263.46843836857715,344.2799983122966L263.28638290970935,344.0684822460919L263.1131366107793,343.84227809554955L262.5346701093697,343.06672525277133L262.32325089630126,342.7641439060573L262.1206407950617,342.5849456852666L261.94739449613144,342.3293685538097L261.71835701129976,341.97097413149544L260.41754151186,340.22308673604414L259.9389118517099,339.60031774808374L258.92879776422615,338.2255401320583L258.6498418828164,337.8730362029845L258.4090588674385,337.5381585952001L258.0332024672689,337.6439092631276L257.77186480951605,337.3207824940532L257.61917315296046,337.11809440539207L257.73369189537516,337.0182192874605L257.86876528016705,336.93009423823787L257.73369189537516,336.7127195136602L257.29323514936596,336.0870353737496L257.09062509623527,335.76097612643764L256.9261879091339,335.5641661395792L256.75294161020383,335.6640398129415L256.48279479251323,335.61704044198564L256.2801846912737,335.4613550667594L256.06876547820525,335.14117275765983L255.98361053809754,334.98548815737115L255.97480137816297,334.7593052737506L256.05114720643905,334.50962346014967L256.2155843935409,334.4567497301434L256.27137557944525,334.3128158326967L256.30073938175474,333.9221391552353L256.2919302218197,333.7782060488356L256.3095484935832,333.5461509689668L256.43581276654663,333.3992809910173L256.55033150896384,333.28765991299235L256.67659578192456,333.0908545973898L256.79111452434176,333.0027329302663L256.8204782785451,332.864675840291L256.72357780789116,332.70605728138196L256.66778662198976,332.52687729763L256.7441324502661,332.32126131933717L256.9467425515056,331.8953438103794L256.1363021946531,331.39011968183326L255.53140830965162,331.0699498118296L255.59013586616447,330.84671265879297L255.36697112254978,330.7615301619145L255.19372482361973,330.7615301619145L254.9911147223802,330.7850287568084L254.8384230658246,330.8525872996228L254.71215879286115,330.9436445138192L254.55065797636826,330.9054592257847L254.36566619500377,330.9495191599065L254.25114740447748,331.0787617913693L254.07790110554743,331.2285659385593L253.9340186089296,331.3137488034226L253.7402176195153,331.410681077735L253.54935304882179,331.5634230265063L253.2028604509644,331.78078692543625L253.04723237568874,331.93940415012827L252.87398607676118,332.05102380383664L252.71248530837738,332.21845350364663L252.55685723310444,332.2772008215913L252.20155547530658,331.85422078846796L252.36599266240796,330.8907725690201L252.48051140482517,330.3121202770492L252.69193066600246,329.1636367367978L252.81819489085683,328.83172430737477L253.67268095117674,329.2018214182264L254.75033170699953,329.6864743174851L255.19372482361973,329.6864743174851L255.37578023437823,329.7217218892602L255.54902658141486,329.8274646722724L255.675290806269,329.92733291747214L255.88671006744676,329.9126463923955L256.02178345223865,330.1065085276514L256.195029751166,330.24162481369746L256.2155843935409,329.9478940366301L256.0805110087517,329.8597749472426L255.90726470982122,329.5102366756827L255.78980954868666,329.4074314783793L255.6077541379277,329.301689145719L255.50204450733895,329.1577621863951L255.48148986496722,328.9697762562132L255.37578023437823,328.47044014637845L255.27007065189878,328.2971416816451L255.14674274954405,328.2207729498339L255.02928763651812,328.10328270170146L254.89715062233745,328.0416003776446L254.76207723754555,328.01810231704536L254.59764005044394,327.8448045477005L254.36566619500377,327.8095575680834L254.27170209496103,327.4982098038506L254.03091907958037,327.0311897047283L253.91346396655467,326.8373328346602L253.5669713205882,326.3380061481071L253.9810006348962,325.9767299380428L254.87659597996276,325.15431668166696L256.1568568370276,325.6213292162745L256.2801846912737,325.759377283814L256.43581276654663,325.87980236993957L256.782305364404,325.07207569178837L257.27268050699126,324.00294776621826L256.79992363617043,322.7869731572826L257.810037723654,322.39633653900995L258.06256622146907,323.03662877068575L258.1565303215118,323.3244676902457L258.503022967481,323.1864223934653L259.3017177937875,322.90152096535905L261.2074272263378,323.3538390164328L261.68899320898754,323.4948216351238L261.6801840971591,323.33034194528904L261.55391982419815,323.1805481453763L261.6126473807112,322.96907487340025L261.71835701129976,322.8192815173588L261.72716612312547,322.6283686915685L261.815257481951,322.5079468746996L261.98850378088105,322.5549407533269L262.0736587690949,322.44920458774595L262.1206407950617,322.2994118659343L262.25571417985066,322.20542436954736L262.42896052689,322.14080802828437L262.5640339116819,322.1084998462445L262.719661938846,322.04094641069264L262.91052650953975,322.0468206523993L263.02504525195695,321.92639940260534L263.02504525195695,321.59744448993376L262.98687233781857,321.42121895765183L263.32455582384773,321.324295044702L263.3333649837855,321.10695079492126L263.32455582384773,320.81324289055857L263.50661128271554,320.7809350512195L263.65049382744223,320.81324289055857L263.7973126946713,320.75156433471426L263.7767580522964,320.59589947282876L263.7767580522964,320.37561941743746L263.95000439933574,320.1582767474718L264.11444153832826,320.07310205197234L264.2876878853649,320.0965985090571L264.4697432961234,320.10540966353136L264.634180483225,320.0437314505877L264.7486992256422,319.8998156876549L264.84559969629345,319.75002599890104L264.9982913528486,319.7206555194988L265.3066110846771,319.7059702582498L265.4622391118412,319.56205487310694L265.51803029774555,319.4269508044402L265.51803029774555,319.2683505663081L265.5473941000578,319.0715690069187L265.45049358129495,318.921780275968L265.5473941000578,318.8131101664079L265.7118312390503,318.75436954180395L265.63254904016276,318.57227393641483L265.56794874242996,318.3989896220862L265.5943761260244,318.2286425447607L265.77936795549795,318.18165026133727L265.91444134029007,318.067106703549L266.04657835447074,317.9261301232773L266.1258605533583,317.75872070060234L266.42243475464056,317.2329975989793L266.5575081394327,317.10964385274053L266.7307544864691,316.9833532374928L266.82765495712283,316.8394408668139L266.8071003147479,316.6367889571469L266.76892740061,316.3812717560519L266.86582787126076,316.22267514637497L266.962728341912,316.0258980749432L266.8951916254614,315.81443650092217L266.962728341912,315.6499665905182L267.03907417019127,315.52955127272355L266.90400078539915,315.33277518908795L266.7777365124357,315.12718860496193L266.67202688184693,315.01558455854723L266.5956810535706,314.789439797291L266.49878058291984,314.6249710954378L266.51052611346586,314.4340701856095L266.645599498255,314.30778201447896L266.7101997959878,314.1638723739896L266.83646406894854,314.09632303746866L267.00090125605016,314.034647523608L267.11541999846736,313.9377289747227L267.1917658267464,313.6146676032889L267.3092209397721,313.42670495274484L267.45310348449925,313.3356606244828L267.655713585739,313.2534271118113L267.8172143541228,313.13007688228083L267.9434786270863,312.9656101368606L268.2606074707435,312.7100995931341L268.5982909567722,312.67779368309846L268.81851932977816,312.6484247195313L269.0211293829086,312.5309487797976L269.2912762005992,312.513327399362L269.62602331602216,312.63374021589954L269.7522875408765,312.7012888678193L269.89617008560344,312.6719198995357L270.1163984586094,312.64255088903224L270.33075404228634,312.47808469295205L270.47463658701304,312.3547351186596L270.58915532943024,312.27250215863796L270.7535925165321,312.1990798910351L270.92683881546213,312.17264785669215L271.07953047201727,312.17264785669215L271.4084047981114,312.1139100890235L271.5904602569765,312.1080363279735L271.7049789993937,312.19614300879005L271.8488615441206,312.278375926228L272.0426624854256,312.33417687434996L272.2834455008035,312.3635457750495L272.4273280455302,312.43109435069556L272.61819261622645,312.62492949517906L272.7444568891872,312.78352211625395L272.9088940281795,312.8833767857802L273.1203132893572,313.07721253032395L273.2436411436029,313.25049020838134L273.3405416142539,313.3503451989866L273.4286329730792,313.46488484478255L273.57251551780587,313.53243393152417L273.7839347308743,313.72039672023544L273.8808352015253,313.8554951176911L274.23613695932045,314.17855703334305L274.37121034411234,314.31659278996585L274.4475561723889,314.4428809689497L274.57382044535234,314.6249710954378L274.697148299598,314.407637742646L275.31378771514574,313.6910274972345L275.52520697632326,313.49425402159085L275.6015528046023,313.3297868143441L275.8511449318087,312.95973629359776L276.42961143321827,312.1432789939976L276.6909490909711,311.7614839237686L277.0080778865188,311.5206599047877L278.17088363055814,310.6983367506773L278.2971479035216,310.56324124203957L277.5953535478661,309.55002864678784L276.31509269080107,308.82756802493446L275.47822490224735,308.375297632452L274.3330374299744,308.2607618316738L274.2155823169487,308.05224814472126L274.07169977221884,307.8349243307324L274.3888286158758,307.8466715278132L274.70889383014423,307.8466715278132L275.2168872444947,307.54124391117307L275.5633798904614,307.32098394527793L275.66028036111516,307.1829545433304L275.5340160881517,307.04198842482816L275.4400519881094,306.92158000126494L275.2168872444947,306.59559662553L275.1493505761532,306.40176893375906L274.7734941759834,306.8775281703998L274.54445664304285,307.1242186619216L274.1979640451823,306.9509479271352L274.1010635745315,306.8070452270259L273.9659901897394,306.7101312531089L273.8690896709793,306.5838494702132L273.88964431335376,306.3929586135645L273.59013378956956,306.3782746994882L273.2935595882873,306.41645284990875L273.2054682294645,306.12277496511956L273.36109625662857,305.9935569092256L273.59013378956956,305.86727566872486L273.6870342602231,305.7439312848508L273.6488613460824,305.59415610674364L273.53434260366794,305.50311635072546L273.4080783307045,305.3768355246489L273.3699054165663,305.2329341764173L273.3699054165663,305.0508550990715L272.48605560204305,304.4546943910284L271.7725157158443,304.07291761811763L271.59926941691424,303.9525113001596L271.0119937555669,303.3416706339814L270.7242287142194,303.0098206186063L270.5979644412587,302.87473140369343L270.35718147398734,302.56343920784724L270.2044897693229,302.29326154438144L269.684750872535,302.30794506615786L269.6465779583971,302.17285637344014L269.41460405484486,302.04364118061324L268.92422891225783,301.8556919799041L269.0504931852213,301.56202176617717L269.2531032864608,301.18612452970297L269.6641962301603,301.1391374041103L270.0694163845335,301.1420740900965L270.49225485877923,301.124453974878L270.5979644412587,300.123044184814L270.66550115770656,299.9262868939375L270.63613735539707,299.7853265293306L270.6478828859431,299.59737956734983L270.7154196023937,298.9190100022102L270.81194390393125,298.8130968895162L270.9164633025425,298.6246274185102L271.16762183084006,298.6135976319086L271.32912259922364,298.5313713189112L271.50236889815415,298.5108146978071L271.69616988756525,298.4667649124813L271.898779988805,298.51962468489535L271.97512581708384,298.65177415269727L272.0984536713272,298.789797008233L272.2070996725272,298.94837662312386L272.4185188855952,299.03941311778607L272.55359227038457,299.21267621440546L272.71509308687746,299.29196615102296L272.80318444570025,299.42117947260147L272.75326600101585,299.60325294025307L272.77382064339054,299.7677064909419L272.77382064339054,299.9174768440936L273.01460365876846,300.06431064346987L273.12912240118567,300.2140812260805L273.1203132893572,300.35797857735616L273.2436411436029,300.5018759884739L273.2935595882873,300.70157059637955L273.3699054165663,300.86308845226125L273.49616968952705,301.0040495615512L273.72520717436146,301.02166971362124L273.6488613460824,301.1773144217119L273.7633800884996,301.31533912557376L273.9953539439425,301.38288312262193L274.13923648866944,301.39462993021783L274.3124827875995,301.4739207684976L274.4475561723889,301.3447060631738L274.60024782894425,301.30065563444487L274.7265121019075,301.3887565503859L274.87920375846306,301.3212125031032L274.96729511728813,301.44161707175823L275.13173230438997,301.3740730534943L275.28442396094533,301.3652629366696L275.49584317401354,301.41812349951056L275.6778986328786,301.50035108748597L275.81297201767075,301.5796419707156L275.98621831659807,301.6442493695544L276.1800192579028,301.7000467063172L276.1712101460744,301.8556919799041L276.31509269080107,301.9995905860437L276.45897518742163,301.90855268227017L276.62341237452324,301.7881478112017L276.7379311169375,301.9555400020073L276.9875232441468,301.8938691443L277.1607695911832,301.95260330319513L277.3545705324882,301.8556919799041L277.5454351031817,301.7264770574442L277.70987229028333,301.6824264903649L277.89192770104205,301.6824264903649L277.9800190598646,301.87037551484315L277.85375478690116,302.0965019368927L278.03581024576897,302.2257171669273L278.23842034700874,302.2492108417785L278.40285753411035,302.34024891444926L278.54674003072796,302.4371604455006L278.6994316872833,302.4136667464812L278.79633220604615,302.30794506615786L278.97838761680237,302.2638944081338L279.1516339157324,302.29913495294954L279.3366257452087,302.28445138376605L279.57740876058665,302.639793839705L279.7770824912177,302.6867813473462L279.962074320694,302.7073383707363L280.1353206196243,302.6779711676852L280.21166644790037,302.80425009762763L280.3761036350022,302.85123759987L280.55815904576093,302.8130602353245L280.69323247865896,302.9275923532023L280.866478777589,302.9804533663367L280.84592413521455,303.15078337123373L280.79894206113886,303.30349316511945L280.7871965787017,303.46207658418507L280.91346080355606,303.52081120365375L280.98099752000667,303.697015178694L281.05734334828276,303.8321050646429L281.23058964721304,303.81742137010286L281.47137266259097,304.0494237041481L281.7121556779716,304.1404626924479L281.8942110887274,304.2667426609369L282.058648275829,304.20213427342907L282.1937216606211,304.1257789721467L282.3581588477225,304.1316524889876L282.5108505042781,304.2138812643211L282.71346060551764,304.21681800013755L282.86615226207323,304.2902366040862L282.89551606438545,304.5251763060718L282.84853403841885,304.7366223193572L282.963052732724,304.8952070352132L283.1157443892796,304.91576431586475L283.26256330461774,304.86290272138785L283.40644584934466,304.82766171553743L283.6090559505842,304.78067363874544L283.75293844720477,304.76598986436676L283.7823022495145,304.53986006001617L283.79111136134316,304.3812757178102L283.7323838048303,304.23737520035894L283.6942108906919,304.0053726179186L283.79992052128046,303.8086111347224L283.91443926369516,303.6294703225409L284.1376040073096,303.54430504725474L284.2521227497268,303.37691138912464L284.4077507768909,303.3416706339814L284.60742450752196,303.3416706339814L284.88638043704077,303.0098206186063L285.04200846420486,302.9716432204593L285.10954518065546,303.0979223560922L285.2152547631349,303.2124546554658L285.57055652093004,303.1008590734001L285.7232481774854,303.03918782755596L286.0902954658295,303.1008590734001L286.28409640713176,303.1067325081623L286.34869670486455,302.977516650997L286.4749609778253,302.6691610365691L286.31052379072344,302.5105783165626L286.4837701377628,302.3226286372281L286.6863801908935,302.2697678157612L286.99469992272475,302.3255653419605L287.1297733075139,302.12586904632036L287.20611913579273,301.99078048763903L287.3881745946578,302.00840073298434L287.53205709127565,301.9995905860437L287.678876006614,301.9760969431219L287.7464127230646,301.8498185855036L287.90791349144547,301.8175148233981L288.06354156672137,301.84100849424965L288.21623322327696,301.79695789993514L288.2544061374149,301.6090089499079L288.2749607797898,301.42693361882937L288.31313369392774,301.24485841713505L288.50399826462126,301.1949345899957L288.6390716494134,301.23017493152605L288.7359721200646,301.39462993021783L288.87104555296287,301.52384467008756L289.0149280495832,301.465110695076L289.14119232254416,301.39462993021783L289.27626570733605,301.4797941510081L289.4289573638912,301.48566758182085L289.5933945509928,301.5855153565592L289.8341775663707,301.6090089499079L290.033851297002,301.5473382556522L290.13075176765574,301.3447060631738L290.2570159925076,301.19199790318686L290.3421709807242,301.0657200769433L290.3421709807242,300.87483517928996L290.421453179609,300.689823831962L290.5535901937926,300.5517996328751L290.7004091091278,300.5136227413103L290.82373701148276,300.378535343755L290.7650094068606,300.1817777440368L290.80611873971657,299.993830398173L290.8824645679956,299.72952975458384L290.8325461233085,299.37125611953564L290.8325461233085,299.1803728982063L290.98817415047506,299.068779708383L291.2084025234783,299.1187029849315L291.3728397105799,299.08933633882475L291.46974018123365,298.9102000456521L291.6429864801612,298.81329030863293L291.6811593943021,298.6400275116374L291.81623277909125,298.54899119905303L292.0364611520972,298.4667649124813L292.25668952510296,298.41096850911134L292.5180271828558,298.37572867829226L292.7676193100622,298.3727920340218L292.92031096661776,298.39628523750395L293.05538435140943,298.29350246236777L293.2022032667451,298.1613532292517L293.33434028092574,298.1261134418752L293.48115919626366,298.1613532292517L293.6250417409906,298.21714956375445L293.8452700658877,298.3463621893864Z\" stroke=\"#000\" fill=\"#FFF\" strokeWidth=\"0.5\"></path>\r\n        <path id=\"Makueni\" ref={(item) => countyRefs.current[16] = item} d=\"M281.47137266259097,333.7782060488356L281.6534281214588,333.8751405817151L281.8002469886849,333.97501261196317L281.99111160749044,334.1483202023233L282.15554874648296,334.2070686495226L282.32879509351915,334.3304403817684L282.53140514665256,334.3304403817684L282.7986155937317,334.2511299586896L282.963052732724,334.35981465294344L282.9924165350367,334.5301854655693L283.1069352774539,334.62124585214326L283.09812611751613,334.77399246946766L283.2126449080424,334.8474284314595L283.38589120696975,334.82686631445205L283.58850130821247,334.8650530720838L283.75293844720477,334.93848905115897L283.9261847942412,334.96198862563165L284.1845860332762,334.9708009313551L284.2814865039302,334.85624072732827L284.41655993682843,334.7974919581112L284.58099707582096,334.8474284314595L284.72487962054765,335.02367492600354L284.55163332162033,335.18817195702866L284.59861534758693,335.3614815925489L284.94510799355385,335.44373032323085L285.10954518065546,335.4966045629758L285.04200846420486,335.6317277129908L284.86876216527753,335.6640398129415L284.8100346087647,335.8138505314678L284.983280907692,335.8138505314678L285.17708184899675,335.88728724291417L285.4061193338284,335.8050381527751L285.57055652093004,335.80797561225296L285.7643574622348,335.8373502598569L285.70562990572193,336.1457848879028L285.89649447641546,336.2515340804414L285.96403119286606,336.1134726340373L286.06093166351707,335.9930362126397L286.1871959364805,335.8960996287699L286.37806050717404,335.82853787911847L286.571861448479,335.7169141673935L286.67757107906755,335.61116548605344L286.81264446385694,335.52891661993255L286.8508173779949,335.6875395065848L286.92716320627414,335.8902247047795L287.0622365910633,335.98716123489083L287.26484669230604,336.0106610035627L287.3705563228946,336.1898470339581L287.6113393382725,336.1222850396319L287.8227585513407,336.24272166354035L287.8609314654791,336.4101581498169L287.86974057730754,336.5746573851673L287.96664109606763,336.76559441875156L288.05179603617535,336.9065942543067L288.3219428057564,337.2179696716918L288.4570162386549,337.3295950541401L288.6008987352725,337.33547006254594L288.7359721200646,337.27671984973983L288.8798546647913,337.2003446202402L288.8798546647913,337.36778271126065L288.98556429537985,337.47059568886857L288.95620049307036,337.61453408496345L288.98556429537985,337.7525976089711L288.997309777817,337.89359889508336L288.98556429537985,338.06103816044225L288.997309777817,338.2578530723672L289.0619101236591,338.4957940597253L289.1588105943099,338.7307980321541L289.3144386214742,338.933489444778L289.30269313903705,339.1626193558496L289.3995936096878,339.2654342651342L289.5816490204468,339.3271232342421L289.6403766250685,339.58269226758125L289.7548953674857,339.8030109816743L289.88115959233755,339.9733911199266L290.06321505120536,339.9293272778482L290.1894793241686,339.84119960624326L290.31280717841173,339.6414439138838L290.4008985853461,339.43287583740084L290.52716281019775,339.29774750225727L290.6504906644434,339.230183429548L290.7855640973419,339.13030611567837L290.8912736798213,338.95698991248616L290.93825575389724,338.80717444994434L291.0850746211263,338.7542984509116L291.17022960934014,338.63973390883325L291.14086580703065,338.49873159867036L291.1115020528273,338.269603248245L291.17022960934014,338.0287252849022L291.2465754376192,337.84366090850153L291.2172116834158,337.69678466357925L291.1614204975115,337.57047126188985L291.04690170698814,337.36778271126065L291.0057924222385,337.1474694846264L291.2084025234783,337.22384467349616L291.4873584529971,337.16509452670795L291.6517956400987,337.14159448733835L291.77805986495287,337.0740318509229L291.88376949554186,337.19153207162105L292.0364611520972,337.57634633271005L292.14217078268575,337.737909978572L292.34478088392575,338.08160089182775L292.56500920882263,338.2108524310627L292.7676193100622,338.1814770837939L292.9115018547891,338.0522255350926L293.1229210678573,337.94647438125946L293.0935572655478,337.69678466357925L293.2022032667451,337.60865901187714L293.35489492330044,337.54697112648705L293.43124075157925,337.37365772193033L293.46941366571764,337.14159448733835L293.31672200916205,336.9447817490538L293.4136224798133,336.8302193086445L293.4899683080921,336.6422196836759L293.82765179412127,336.424845536205L293.9803434987857,336.3425960075758L294.14478063777847,336.319096161492L294.2974722943336,336.24272166354035L294.4619094814352,336.3396585325318L294.53825530971426,336.4777202893752L294.60579202616486,336.636344716129L294.69094696626985,336.75678190856377L294.78784748502994,336.85959430304445L294.9141117098843,336.9506567347365L295.2312405535413,337.09459437712314L295.3281410241923,337.3442825758098L295.3956777406429,337.47940826227205L295.4426597666095,337.6527218519671L295.54836939719803,337.8348483026117L295.71280658429987,338.0463504840518L295.8097070549509,338.398855035264L295.94184406913155,338.4899189339731L296.0299354279566,338.66910944182507L296.17381792457445,338.8688631277137L296.19437256694937,339.1097431633941L296.3764280258142,339.19787016684495L296.4997559281692,339.4093752542672L296.60840188125735,339.55919164796484L296.65538395533304,339.69432034918566L296.7141115118459,339.82357408162324L296.7141115118459,339.9675159526464L296.67300222709923,340.13495879435527L296.8286302542631,340.2025235022803L296.7787118095787,340.35821637233005L296.8961669707137,340.4287188357864L297.00187655319337,340.5256598983857L297.0488586272693,340.66960277845175L297.2044866544329,340.7724193028699L297.4041603850644,340.8811111617929L297.55978841222804,340.98686548214664L297.62732512867865,341.19543690390026L297.5128063862617,341.52151431381117L297.5685975240567,341.7300869183855L297.75065298292157,341.8005904042165L298.0031815288487,341.81527865515375L298.07071819719,342.0238519129732L298.18523693960447,342.14723351941416L298.33792859616005,342.2001114006434L298.3115012125679,342.42337386436765L298.3672923984723,342.6055093908426L298.2439644961173,343.07260061357886L298.4348291149229,343.1431051649446L298.6961667245664,343.2106720371304L298.7431487986423,343.40749766479667L298.7225941562674,343.6160745044621L298.7431487986423,343.80702554483526L298.9163950975724,343.9774129671268L298.98393181402025,344.10667261128333L298.9927409258487,344.2946869576176L299.0896413964997,344.5208922316452L299.1072596682659,344.6942187229145L299.1571781129503,344.83816812027726L299.14836900112164,345.02030849682535L299.21590566946315,345.22888903560556L299.1571781129503,345.4198434705968L299.14836900112164,345.6313626999177L299.06908675412774,345.8193802228078L298.93401336933584,345.95451805272637L298.7725126009518,345.86932246035076L298.59045714208673,345.8869491362602L298.45538375729507,346.11903397115606L298.4818111408895,346.3393682642623L298.3761015103007,346.48332025719264L298.5317295855739,346.6184591442895L298.6080754138502,346.7888518959389L298.6756120821917,346.9709962054562L298.8782221834315,347.3499751983771L299.0132955682236,347.4469235575301L299.1366234705754,347.5673746883691L299.23352394122935,347.6790124909483L299.33042441188036,347.83178023117597L299.8501633567771,348.29889866216456L299.95587298736586,348.46635682608326L300.108564643921,348.61618808664093L300.34053849936436,348.88059682127476L300.48442104409105,349.01573936885137L300.7163948995342,349.06568342737165L300.88964119846423,349.18907468711774L301.0247145832536,349.3917893393133L300.91900500077395,349.5269326909356L300.7633769255008,349.5798149426161L300.6958402571595,349.73258604350474L300.63711270064664,349.90298490520627L300.70464936898793,350.08513580746546L300.8309136419514,350.29666634749157L301.0247145832536,350.29079050675364L301.3418434269104,350.408307687669L301.409380143361,350.5757699736806L301.3212887845359,350.75792232039515L301.3976346128147,350.9459509459018L301.4563621693278,351.1427938402206L301.49453508346596,351.3513890714798L301.70595434464326,351.98599186844024L301.63841762819266,352.32679905487913L301.7823001729223,352.44725713251086L302.00546491653677,352.3855590509347L302.24624788380584,352.4590091165804L302.2256932414309,352.708739846284L302.0524469425036,352.8673926586555L301.984910226053,353.0583640590105L301.90856439777394,353.21407952122377L301.88800975540175,353.3668572979383L301.93792820008616,353.5108211611545L301.8703914836358,353.6959179765969L301.84102772943515,353.92214797606727L301.9672920023959,354.089617346386L302.0730015848753,354.254149000595L302.11998365895124,354.4509997732754L302.1493474131546,354.63903679991625L302.0524469425036,354.8593932599575L302.20807496966745,355.31773657814733L302.3813213167066,355.79371130413693L302.4752854167491,356.11102934511746L302.5633767274626,356.34608053158036L302.6602771981138,356.5488127692772L302.78360510046855,356.69278231496116L302.78360510046855,356.91608259124496L302.9656605593336,357.0659291803831L303.1594615006384,357.20989971581446L303.1212885865002,357.3714996107457L303.03319722767515,357.48315058248534L303.2181890571512,357.54485256288314L303.33270779956865,357.6418128538706L303.3033440453653,357.7975372069829L303.24461648885244,357.9356326906642L303.33270779956865,358.0796047730119L303.4677811843578,358.2059478807027L303.3532624419404,358.56147257490966L303.29453488542754,358.72013698953674L303.54412701263664,358.8758635450659L303.78491002801456,358.8552958297981L303.87006501622886,359.0580345564674L303.93760168457015,359.2930946271554L304.0256930433952,359.4488222888937L303.9963292891923,359.62217987221396L303.97871101742885,359.81904408013634L304.07267511747114,360.04529159868514L304.1989393904346,360.2421570379521L304.2459214163987,360.4830971281846L304.25766689883585,360.6946550576909L304.23711225646366,360.9737949166017L304.15195731635595,361.61435130332814L304.1607664281846,361.75833033920594L304.2077485022603,361.89349455819473L304.1783846999508,362.06685771777535L304.0932297598431,362.29311194775755L304.1108480316095,362.48998309475985L304.0256930433952,362.7896983387446L303.9963292891923,362.9571867970569L303.98752012925456,363.14524445790573L303.9581563269446,363.3186105254915L303.9493472151162,363.4714080770956L304.05505684570517,363.6359596578992L304.2459214163987,363.8328343153036L304.41916771532874,364.132554989946L304.43091324587476,364.3735077972389L304.46908616001315,364.54099984723837L304.4867044317791,364.68498451179465L304.46908616001315,364.86716965072833L304.49551354360756,365.06110913814064L304.68050537308113,365.1375097349978L304.85375167201164,365.02290889382334L305.0651708850796,364.9171237322467L305.3059539004603,364.86423118490643L305.5467369158382,364.72906154784107L305.73760148653173,364.6526614266815L306.02536652787944,364.56156906769206L306.64200594342697,364.3911385238588L306.7858884881566,364.3353079121262L307.0853990600474,364.1707547695947L307.2204724448395,364.2001392512073L307.27626363074114,364.3294310233038L307.37316410139465,364.69379993613444L307.5581559308682,364.9024313461166L307.99861262877107,365.1198788283258L308.2599502865239,365.10812487686735L308.4889878194674,365.21097183592656L308.59469740194686,365.41666623843093L308.556524487806,365.58122218948097L308.5007333019046,365.73990151143397L308.63580668669374,365.94559736623137L308.7679437008742,366.0425685341274L308.8061166150153,366.1836176550121L308.8266713054991,366.3716836109466L308.8560350596997,366.5156719571406L308.9235717761503,366.6772918258854L308.9705538021167,366.8271578756186L309.03809051856456,366.991717046755L309.1349909892183,367.15627659637875L309.3170464480834,367.28557364783376L309.5284656611518,367.4060551769481L309.4139469187346,367.53535268129565L309.2583188915705,367.632325951627L309.2583188915705,367.7998255657683L309.4521198328755,367.8821062023839L309.51084738938835,368.0231589993494L309.5490203035263,368.18184368342355L309.6165570199769,368.58149566604504L309.63417529174035,368.75487477767706L309.63417529174035,369.07518648172925L309.6929028482534,369.2309348897553L309.8279762330453,369.4219475700416L309.8279762330453,369.66879550253316L310.0100316919104,369.654102186054L310.1920871026689,369.7128756149658L310.2889875733199,369.8891961989009L310.347715129833,370.1360457857169L310.45342476042174,370.2418387547241L310.59730730514843,370.2653483092306L310.749998961704,370.23596137937966L310.89681787704194,370.28004180289753L310.94379990300877,370.47693475461017L311.04950953359753,370.6503186209619L311.20220119015266,370.7472961986582L311.3754474890802,370.79431565882237L311.5310755162468,370.9353743276943L311.481157119669,371.12639169479763L311.50171176204344,371.31447085821907L311.4341750455933,371.52312177765515L311.5604393185563,371.6230393310419L311.70432186328344,371.667120689114L311.76011304918757,371.8258136781981L311.76011304918757,371.9786295112197L311.77185853162473,372.14320080898904L311.9157410763519,372.3018949036012L312.1066056470479,372.43120149931434L312.27985194597545,372.5869575249594L312.46484377545175,372.57226353776935L312.62634459194464,372.57226353776935L312.8201455332469,372.51936523906534L313.12846521696906,372.53405921482374L313.3017115640055,372.589896313148L313.4250394182511,372.77797950320775L313.5424945312768,372.8984705511882L313.68637707600396,372.9337362760196L314.0504879937364,373.14533096248664L314.2237342926669,373.19822974952706L314.408726122143,373.280516801771L314.60839980466494,373.38043698356864L314.9930653647698,373.3628040023978L315.1398842319991,373.41570295973247L315.28376677672577,373.5097456369169L315.3894764073143,373.66844293113326L315.4951859897942,373.77424136717593L315.6097047322112,373.9300004385747L315.697796091034,374.0975153338089L316.0325433507844,374.1415982527535L316.285071704272,374.20037553915506L316.36141753255106,374.37376888990786L316.3907813348608,374.5354071002964L316.56402763379083,375.12318580345993L316.61100975597583,375.3112761851467L316.67854637620803,375.4699777088845L316.6961646479715,375.66394682366365L316.8429835633099,376.23116284136L316.97512057749054,376.3575380746554L317.2159035928712,376.3957445827356L317.37153162003483,376.51036424024727L317.48605036245203,376.73666518469145L317.6592967094914,376.82483461088987L317.8707159225571,376.9041871718782L318.20839940858855,377.2715614655637L318.37283659569016,377.35385356759406L318.5548920064491,377.33328053235334L318.72813830537643,377.33915852800135L318.8426570959027,377.4096947097395L319.17153142199663,377.4214507635012L319.31541396672355,377.48316997221264L319.3917597950028,377.61836465446265L319.53564229162043,378.185597613678L319.59436989624237,378.3354890211383L319.6325428103835,378.5382838400002L319.6912703668936,378.7146276514459L319.7764253070011,378.88509380896124L319.79697994937305,379.0996467159852L319.84396202344874,379.28774845918304L319.8733257776521,379.45821613745784L319.89094404941557,379.61692781374467L319.9496716059284,379.7991528559255L319.99665368000433,380.0019522983861L320.017208322379,380.23708285813336L320.0847450388294,380.4016747957684L320.29616425189784,380.47809261739565L320.4694105508279,380.59859786403393L320.52813810734074,380.8043389642616L320.6132930955548,380.9836282442511L320.76892112271867,381.11001279387756L321.115413720579,381.2246408430981L321.2299325111053,381.3745393829245L321.20056870879284,381.5244382792679L321.1917595969644,381.68609432164357L321.28572369700714,381.81248028019377L321.40317881003284,381.90359589421473L321.45016083599944,382.0476176231748L321.4413517241708,382.25630272799435L321.6234071349295,382.57667981263353L321.59404338072636,382.73246007722025L321.5470613066507,382.8970585420458L321.6527709372392,383.07929301800016L321.71149849375206,383.27622448477945L321.6733255796137,383.429067222069L321.79665348196863,383.5319423350977L321.9904544232709,383.5642745694109L322.12552780806277,383.5995461082556L322.2987741069901,383.7288752400018L322.42210200934505,383.8787797939783L322.28702862455293,384.0610172061442L322.14314607982624,384.13743949766797L322.1813189939644,384.31673830450757L322.27821946461813,384.4901589732276L322.30758326692785,384.6577014547819L322.44265665172,385.1074230035732L322.5278116399338,385.31905780339446L322.7597854953767,385.3896029157387L322.8948588801659,385.5600872420463L322.92422268247856,385.73645087354987L322.97120470844516,385.9157543669228L323.05635969665923,386.11269493312267L323.1738148096849,386.3184543930549L323.2413515261353,386.53597226647105L323.38523402275314,386.93573692468476L323.46157985102946,387.11504402079504L323.5379256793085,387.32080689782504L323.59665323582135,387.54420739371716L323.59665323582135,387.7558507187581L323.7023628664101,387.89400717302954L323.8374362511993,387.9910108838952L323.8168816088273,388.35257139617715L323.934336721853,388.48778970699965L324.10758306888965,388.62594785626993L324.21329265136933,388.7376504408102L324.3483660361612,388.8199577706402L324.5010577408257,388.9581166923437L324.5685944091672,389.1227320297997L324.5304214950261,389.27264995787243L324.5979582114767,389.46372236827216L324.7124769538939,389.68125169244814L324.7888227821702,389.907600651581L324.8651686104495,390.10455437695816L324.9327053269001,390.4337918625356L325.0971424658924,390.8277034585866L325.2234067388531,391.0452378847172L325.2791979247572,391.2363160640891L325.4054621977209,391.5508615350535L325.4818080259972,391.7801574178246L325.7225910413779,392.28284775154805L325.8576644261673,392.4739300056237L325.9839286991303,392.8413976464127L326.06027452740955,393.18240973323645L326.1454294675143,393.32351880169415L326.271693740478,393.48226687054716L326.4155762370956,393.71157048303917L326.47430384171753,393.90559728661214L326.6475501406478,394.26131483824963L326.6769138948482,394.4406443354594L326.7415142406901,394.6376135049238L326.8384147113411,394.8110645001508L326.93531518199234,394.96099715438015L326.95586982436726,395.11974978633043L326.80024179720294,395.26380352159697L326.6475501406478,395.31672131538886L326.5124767558559,395.46665530958154L326.47430384171753,395.6695078266099L326.4625583111715,395.8664812264253L326.30105749467816,396.1604727098995L326.35684868058274,396.3221686431442L326.5124767558559,396.3868471854694L326.63580461010156,396.4544656844007L326.70334132654943,396.5838231009286L326.71508680898637,396.77491981506773L326.71508680898637,396.9748371026964L326.7620688830623,397.11889559554567L326.84722382316954,397.2717743796004L326.9059514277917,397.45111346956367L326.9147605396174,397.6480931900531L326.7708779948907,397.9420940042779L326.8384147113411,398.13907546783133L327.00285189844294,398.28019690491607L327.1849073091987,398.29489708836593L327.2994260997252,398.3713380475262L327.261253137478,398.5301004109514L327.2524440256493,398.6888631829188L327.37870829861276,398.7947053169968L327.58131839985253,398.90054760627845L327.60774578344444,399.06519163086057L327.56076370936876,399.1945551354721L327.49322704102997,399.31509865018074L327.54020906699657,399.4444627436485L327.71345541403593,399.4444627436485L327.8984471954002,399.4297622532626L328.04232974012734,399.57088704665705L327.99241129544293,399.7678742892787L327.87789255302573,399.9266406881558L327.90725635533795,400.13832988957597L328.07169354243956,400.17655163912207L328.2155760390574,400.1912523302756L328.3506494238493,400.27357619689485L328.3506494238493,400.4264637352501L328.36826769561276,400.59993285281377L328.51215024033945,400.7704623152628L328.6472236251316,400.9527529925471L328.7353149839539,401.1938481080939L328.97609799933457,401.6701611430735L329.01427091347296,401.84363419542376L329.0230800253016,402.03180899670025L329.0906167417518,402.1905819758882L329.22569012654117,402.219984455858L329.3695726712681,402.196462499498L329.5222643278232,402.1611795601684L329.6397194408494,402.2376259419269L329.6690832431616,402.3846385350249L329.67789235499026,402.5434125568943L329.85113865391736,402.7580522686415L329.88931156805825,402.9315288821105L329.84232954209165,403.0873642384498L330.15945838574885,403.1549910212011L330.3884958705803,403.4901860559014L330.56174216951035,403.56369402327266L330.7467339989869,403.607798881306L330.8406980990294,403.71659090510207L330.9375985696804,403.8959512986559L331.0932265968445,404.04590879638664L330.91998029791444,404.3017195925016L330.89942565554225,404.4399167903431L330.48539634123154,404.41639380682625L329.99502119864724,404.4604993733666L329.82177489971696,404.4252149364643L329.69551062675373,404.2370317022178L329.4664731419218,404.33406359135074L329.284417683054,404.4399167903431L329.1199804959524,404.55165093624436L328.9555433569601,404.55165093624436L328.8116608122332,404.5281279030503L328.53270488271437,404.68102761319835L328.38882233798745,404.72807372979605L328.29192186733644,404.8398084849139L328.1656576424823,404.75747761008233L328.00415682598896,404.45461864830605L327.86027428126226,404.1311789085828L327.76337381061103,403.94005638408305L327.64591869758533,403.8048008630403L327.176098197373,403.3666929337034L326.982297256068,403.24025975408506L326.858969353716,403.1167671622881L326.40676712526715,402.56693466525206L326.18360238165246,402.21410392967516L326.0309107250973,401.9935859384814L325.8371097837951,401.75248725477326L325.6256905226178,401.67604156169267L325.39665303778315,401.7289655026342L325.2410250106193,401.73778614042044L325.0971424658924,401.69368286956984L324.8651686104495,401.5407917582909L324.7124769538939,401.42906390482256L324.0018734383009,400.74106062402655L323.6818082240352,400.4529251131817L323.38523402275314,400.0854075002187L322.47202045402946,398.7947053169968L322.0579911397215,398.1243753257895L321.6234071349295,397.3776137576417L321.47071547837413,397.1512352700089L321.3738150077229,397.0218765883444L321.24755073475944,396.89545811172627L320.78653939448486,396.4691653856311L320.6132930955548,396.26924995256815L320.24918217782215,395.74594518930076L319.6795248363471,394.8933803991947L319.5650060939329,394.73462840139393L318.68996539123805,393.71157048303917L318.5548920064491,393.5645808982176L318.20839940858855,393.2588438010191L318.0821351356251,393.1294939701595L317.76500629196835,392.8943131924699L317.45668660824913,392.6855910833352L316.98686610803657,392.34458193802175L316.81361980910924,392.20935473773L316.5229183490442,392.01239390756183L316.1382528370457,391.7272428918638L315.3513034931764,391.16576403319937L315.0341746495192,390.9276516312483L314.8991012647273,390.8747378799817L314.5026902221855,390.67778156816127L314.35880767745584,390.6013509521133L314.24428893504137,390.51022225994177L313.98295127728625,390.466127802557L313.8684325348713,389.95169473779725L313.7920867065925,390.15746743268426L313.7421682619083,390.34560309589176L313.73335915007965,390.5190411842991L313.5806674935243,390.6307473533214L313.4162303064227,390.7365744139554L313.22536573572916,390.74539337240833L313.09029230282795,390.71305727818077L312.7731635072828,390.71305727818077L312.44428913307684,390.69835905505875L312.2915974765215,390.75421228403104L312.1359694493576,390.8894361474439L312.03025981876885,390.99526367638157L311.848204359904,391.07757416280856L311.7894768033909,391.28041110269044L311.67495806097395,391.40975679644635L311.42536593376735,391.5538012127206L311.2609287466655,391.62141398461586L311.07887328779816,391.68020783027544L310.95260906294357,391.7948559138508L309.7134574906281,392.45923133713484L308.239395644149,393.2206267303227L304.9389066602255,395.0139146649651L304.1108480316095,394.64349317630564L303.6880095573638,394.4406443354594L303.1506523888097,394.20545821550695L302.8217780146067,393.86150024108144L302.7542412981561,393.6645337536178L302.6397225557416,393.22650630393775L302.61035880153827,393.0589396310028L302.62210428397543,392.77378344848205L302.7542412981561,392.60033863212266L302.80415974284324,391.91538361577483L302.7278139145644,391.6655093632817L302.5809949992288,391.34214427060834L302.4870308991865,391.15400540179473L302.3813213167066,391.0246602756697L301.86158237180734,390.98644472837856L301.6501631587389,390.9570481483315L301.3976346128147,390.8130052548157L301.0893149290953,389.86350664655436L301.0511420149546,389.72534560924066L300.9659870267408,389.5430910822013L300.6106852689452,389.15212764466327L300.38752052533096,388.9581166923437L300.2142742264009,388.68473865646246L300.00285501333246,388.3143575803092L299.85897246860577,388.03510349676924L299.76207199795454,387.74997174212626L299.64755325553733,387.45602287542636L299.4948615989822,387.1385597301497L299.09845055643723,386.43015267971515L298.89584045519746,386.1332708428678L298.4641928691235,385.6453296081681L298.18523693960447,385.3043609553869L298.0501635548153,385.16327100922456L297.0400494673315,383.98459500934683L296.52031057054387,383.3908565024261L296.39404629758064,383.22919600006344L296.24135464102505,383.0704752294538L296.14445417037405,382.9440867272593L294.65277405213146,381.23345837173997L294.07724396943945,380.55157138617597L293.4136224798133,379.7462487532292L293.08474815371915,379.37592135621725L292.8733289406507,379.12022031279014L290.3920894254086,376.2987588785015L289.15000148248146,374.864562566082L288.2367878656489,373.83301833193974L287.9372772937579,373.47741843830363L287.3705563228946,372.83675560095475L286.94771784864884,372.34009909622796L286.76272601917253,372.0903028434378L286.9359723662119,372.01389475937117L287.1297733075139,372.0432824961198L287.26484669230604,371.94042552094965L287.2824649640693,371.76409969965107L287.40872923703273,371.63773311391554L287.5438026218219,371.47022429130544L287.7728401066563,371.41732684570957L287.89910437961976,371.54663176862636L288.0253686525805,371.7200183273358L288.16925114920105,371.61716183803173L288.3718612504406,371.59952931388216L288.4658253504833,371.4349593230487L288.4951891527928,371.29683841179485L288.70660836586126,371.40557189543114L288.93858222130416,371.41732684570957L289.12063768017197,371.4790405602747L289.1793652366848,371.3056546103675L289.3144386214742,371.1028818475393L289.53466699447995,370.9823939159601L289.69910418158156,370.91480326188935L289.813622923999,370.9882714028597L289.9956783828636,371.0411684704531L290.1894793241686,370.99708756192535L290.29518890664826,370.85896752899447L290.1982884359943,370.6738283140636L290.3803438948621,370.5004444369683L290.43907145137496,370.1507392520273L290.50660816782556,369.9714793293013L290.6798544667529,369.8333612918418L290.61231775030546,369.60120612790394L290.68866357858155,369.2926466106803L290.6710453068183,369.08987972480304L290.6798544667529,368.83127926912687L290.59469947853904,368.61969780734734L290.57414483616435,368.2817564911966L290.5535901937926,368.09956269886635L290.75620029503216,367.9967116026153L290.93825575389724,367.8762290246448L291.07332913868913,367.7028520669668L291.2084025234783,367.46776530378554L291.4579946506876,367.22680224053335L291.58425892364835,367.0299183327206L291.71933230844,366.8859289544386L291.9013877673051,366.6008896502814L292.00709739789386,366.4862865392655L292.14217078268575,366.38931482250916L292.31541708161603,366.31291295298263L292.5180271828558,366.25414234298637L292.70008259361157,366.27471204862377L292.9115018547891,366.2453267291423L292.6237367653355,366.0484455612859L292.2008983391986,365.89858113302114L292.0834432261729,365.81630277440274L292.0364611520972,365.4930671606994L291.9395606814462,365.2932495559751L291.79567813671633,365.09343245224454L291.61362272596057,365.00233954349676L291.4198217365465,365.02290889382334L291.23776632579074,364.98470866952647L290.7855640973419,364.83484643689246L290.36272562309614,364.6761691366585L290.04559677943917,364.5791998395578L289.90171428282133,364.58801520300875L289.46713027802934,364.64090755045436L288.119332752623,364.828969507968L287.92846818192925,364.84366187931255L287.705303438315,364.8113386758828L287.1092186651392,364.6320921806298L286.67757107906755,364.4969229244576L286.4837701377628,364.40583080730187L285.68507526334747,363.7652504393275L285.29160059141395,363.2745343339231L285.1477180947934,363.17756688171426L284.59861534758693,363.2157661673975L284.3783870226903,363.15993649324275L284.2521227497268,363.03946194705856L284.193395193214,362.61045670381856L284.0876855626252,362.50467500081345L283.91443926369516,362.43709228576796L283.8087296331064,362.2637282698038L283.6472288647253,362.15794700907867L283.38589120696975,362.04628918964704L282.78099732196824,361.81122066939287L282.16435790641776,361.55558444175875L281.6534281214588,361.36459244580453L281.0867071024861,361.1324643696468L281.02797954597327,361.2617507722646L280.951633717694,361.4703725906815L280.6550595164117,361.349900762711L280.31737607848913,361.1941692226342L280.3849127468309,360.8827070553066L280.1147659772496,360.75342125093596L279.9327105183818,360.6799635044416L279.76827333128017,360.5800611042276L279.2778981886959,360.2215888129805L279.0077514191146,360.03941499817284L278.2971479035216,359.52815536606L276.62341237452324,358.30290899121303L276.42080227328074,358.18244218531265L275.8511449318087,358.1677511112391L275.6015528046023,358.1471836314377L275.6015528046023,357.8151664030743L275.47822490224735,357.7005767234521L275.3225968750835,357.6418128538706L273.56370635786857,357.4743360453203L273.1203132893572,357.39794323875094L272.91770318811723,357.224590610402L272.6593019009731,357.17464159923315L272.48605560204305,357.2480960185583L272.3509822172539,357.19814699248855L271.6873607276277,356.82793770552775L271.4935597863257,356.65164813236936L271.44657771224956,356.4665445266419L271.32912259922364,355.92005070643796L271.2527767709448,355.78489690669676L271.07072131207997,355.54397110917245L270.92683881546213,355.3353652231294L270.80938370243643,355.0915026839448L270.60970997180493,355.0856265023775L270.40709987056243,355.0415550579955L270.3101993999114,354.8946503531734L270.2250444116976,354.7830029601622L270.0517981127673,354.7007365790112L269.91672472797813,354.53620401947336L269.8374425290906,354.35991948773534L269.6935599843637,354.20126378457974L269.55848659957155,354.089617346386L269.3852403006415,353.96915691018705L269.1473936558723,353.91039573473665L268.9447835546325,353.87220102227354L268.8097101698406,353.831068282398L268.49258132618365,353.83988246670526L268.33695329901934,353.831068282398L268.12553408595136,353.8340063276818L267.9141148728829,353.87807716404376L267.655713585739,353.8193161023186L267.45310348449925,353.8927674481206L267.2299387408848,353.93096212207456L267.00090125605016,353.80168778723464L266.8452732288863,353.64303312259017L266.8452732288863,353.38742354863814L266.548699027604,353.25227392672804L266.4136256428121,353.16119502608L266.2491884557105,353.02604577610646L266.2403792957755,352.8673926586555L266.143478825122,352.7528100306724L265.90269580974405,352.4325671066315L265.70008575661336,352.1299533734761L265.6736583249094,351.85672053375424L265.526839409574,351.69219371396184L265.47985738360717,351.5482329642283L265.70008575661336,351.5394190242631L265.77936795549795,351.42190026636945L265.7881770673264,351.27500202661116L265.77936795549795,351.08697266626575L265.91444134029007,350.82255709208164L265.86452289560566,350.6345287414471L265.88507758608694,350.43181113376875L265.8733320555407,350.23496989560914L265.6061216565706,349.88829537210324L265.526839409574,349.6180076922483L265.38295691295616,349.51224322249L265.2390743682265,349.4681746878679L265.13336478574706,349.37122406849846L264.951309326882,349.3624104031436L264.8837726104314,349.24195673043323L265.0863827116714,349.0980001893953L265.18034681171366,348.9334786750335L264.98948224102014,348.8247771299516L264.9806730810826,348.4927975981095L265.0658280692992,348.3517801602848L264.9601184387104,348.21370080083386L264.89258177036913,348.01980243985633L265.12455562581204,347.77008554579504L265.3066110846771,347.59675306392575L265.40351155532835,347.4234208772442L265.34478399881505,347.235399950392L265.45049358129495,347.00037438152026L265.56794874242996,346.83585682752505L265.66191284247225,346.6860286170648L265.77936795549795,346.4157509390526L265.63254904016276,346.3452438374863L265.70008575661336,346.1043450280615L265.88507758608694,345.8252557617298L266.0289600827073,345.59023392847286L266.548699027604,345.2377022860777L266.633853967709,345.0584992629109L266.86582787126076,344.6354639454156L267.01851952781635,344.33875285967304L267.2299387408848,343.96272437293635L267.40318503981484,343.69833027363075L267.52064020094986,343.6160745044621L267.4707217562627,342.5673196486661L267.4149305703611,341.7859022037133L267.356203013848,341.0779318304906L267.28866629739764,340.38171718769394L267.20351135729265,340.1467091498049L266.4811623111534,338.65735921794186L268.17545248252645,337.8583485546485L269.0798569875308,337.4559081003584L269.2119940017142,337.3119699828764L269.4057949430164,337.35015763321553L269.8198242573244,337.4559081003584L269.97251591388,337.45003308481375L270.14576221281004,337.4559081003584L270.183935126948,338.0962885253587L270.183935126948,338.65735921794186L270.2044897693229,339.0950553773818L270.2044897693229,339.5239407052144L270.2720264857735,339.6796324743167L270.4364636728749,339.9910166720488L270.6772466882528,340.3376531576149L271.14706718846514,341.12199620387287L270.80938370243643,341.70364808274394L271.4759415145593,342.05029083899234L271.97512581708384,342.58200802028955L271.9163982124621,343.2753013199846L272.6093834562887,342.9227786447218L273.1761044752616,342.7582685167164L273.4844241589808,342.7024526493892L273.88964431335376,342.64957453081274L274.02471774625224,342.60844705656314L274.1774094028076,342.7112657041708L274.32129189942793,342.7112657041708L274.4945382464646,342.69070197515805L274.6296116312567,342.74064244718517L274.7940488183581,342.85521198314495L275.1405414162157,342.9080902190931L275.3049786033173,342.9697816127883L275.4664793717011,342.89340184392756L275.6221074469745,342.84933658802674L275.93042713069644,342.89340184392756L276.0919279471866,342.8757757486742L276.29453800032,342.7788322607187L276.49714810155956,342.72595409857956L276.69975820279956,342.58200802028955L276.8730045017296,342.52325459585705L277.0550599605947,342.4263115243314L277.31639761835004,342.3293685538097L277.52781683141825,342.2059867065881L277.68931764790864,342.16779712831226L277.89192770104205,342.05029083899234L277.7010631303458,341.85934342176915L277.56598974555664,341.512701371287L277.3927434466266,341.23362608662376L277.3428250019422,341.0779318304906L277.325206730176,340.8811111617929L277.1225966770453,340.73716791328695L276.96990497238085,340.3758419953416L276.7966586734508,340.0967700528432L276.6615852886614,340.02039261549857L276.62341237452324,339.8617627143615L276.5734939298361,339.72663377804605L276.4765934591851,339.5738795526017L276.45897518742163,339.33593592670024L276.3444564450044,339.1068056060139L276.23874681441566,338.9863655412115L276.14184634376466,338.7542984509116L276.0655005154856,338.4752312414527L275.9480454024597,338.2167275400728L275.8716995741836,337.969974659929L275.77479910352963,337.8700986346406L275.6778986328786,337.70559725713764L275.59274364466455,337.4940958061395L275.49584317401354,337.30021992106447L275.16990521852813,337.0564068249714L275.06419558793937,336.9124692377374L274.89975840083775,336.80965683695865L274.7852396584208,336.69509455150916L274.64135711369363,336.5834698793175L274.52390200066793,336.4777202893752L274.4681108147636,336.3102836905467L274.3124827875995,336.13109749412405L274.22732779938565,335.8608499937029L274.41819241818826,335.66110235763585L274.54445664304285,335.5817909039879L274.7353212137359,335.4966045629758L274.92031304321245,335.37616887476395L275.08181385970283,335.2557332808649L275.1493505761532,335.05304939532095L275.29323307277105,335.00605025808534L275.36076978922165,334.7974919581112L275.4400519881094,334.62124585214326L275.5839345328361,334.7034939876803L275.6514712011774,334.5683720648281L275.8335266600425,334.4655619925314L276.19763752966605,334.06313509971886L276.3708838767054,333.9515133105786L276.5177027439345,333.9368262318682L276.708567314628,333.98969969607936L276.911177415868,334.03376091277084L277.0550599605947,334.04844800520556L277.2870338160376,334.01907387054473L277.89192770104205,334.28344162301346L278.01819197400255,334.3803766284906L278.4322212883137,334.4949363021845L278.67300430369164,334.51549830467025L278.8462506026217,334.50962346014967L279.01949690155175,334.5389977342351L279.1721886062162,334.40387602725605L279.2778981886959,334.50374856783515L279.471699178107,334.48612398915844L279.633199946491,334.4126882851261L279.73890957707954,334.3040035833518L279.84461915955944,334.1630073109963L279.950328790148,334.07194732855106L280.3849127468309,333.88982765170266L280.57577731752417,333.883952794584L280.76957830693823,333.91332693912716L280.8752878894179,334.03376091277084L280.951633717694,333.83989164146203L281.11607090479583,333.81639237064155L281.26876256135097,333.85457870646843Z\" stroke=\"#000\" fill=\"#FFF\" strokeWidth=\"0.5\"></path>\r\n        <path id=\"Nyandarua\" ref={(item) => countyRefs.current[17] = item} d=\"M234.18013347248848,256.171062538928L234.55392293908767,256.5722789379419L234.63320518608475,256.79544392338295L234.67137810022268,256.92758106846526L234.72716928612704,257.0744001189848L234.7947059544656,257.32399245234785L234.98850689577057,257.9670596585132L235.02667985801781,258.16086069127243L235.1323894404975,258.4310076153757L237.52847401563508,257.45906593689256L237.74870234053196,257.3915291715712L238.4035146702206,258.72758190802824L238.50922430080914,259.6143682408839L239.03777235753478,260.59511855738367L239.31672828705064,260.5363910007507L240.5969891441157,260.0460158509792L241.2429923138668,261.5142049256296L238.36534175607972,261.6874512330103L238.1245587407018,261.73149689108305L237.96012160170926,261.80784272467764L237.89258488525866,261.975216296985L237.73989322870352,262.1778264220396L237.6929111546276,262.31289982695245L237.56664692977347,262.4274185893722L237.14380845552773,262.7504202950975L236.98818042836342,262.81208423910664L236.94119835428774,263.0088216119762L236.8824707977749,263.18794076575017L236.70922449884483,263.38174178960185L236.6827971152527,263.54030631268654L236.4713778540754,264.0864729812665L236.87366168594644,264.4094748276938L236.6534333129432,265.08777888886624L236.97937126842612,265.0202420897532L237.17317225783995,265.3960989837142L237.4991102133256,265.72791023615156L238.453433114905,265.6662462093677L240.5000886734647,265.8717930231755L240.80840835718413,266.5500977029275L241.06093690311081,267.1520566972012L241.52194824338562,268.1093189640553L241.68638543048723,268.06527310418L243.15751085824581,269.1253099457644L242.80220910045068,269.2310200234004L242.84919117452637,269.47474059883507L242.84919117452637,269.6391786269096L242.1180330165614,271.03103030065427L241.8860591611185,271.4186350349372L241.78034953052975,271.6065646698494L241.70400370225343,271.771003153823L241.53075740332338,272.06464335023986L241.43385688456283,272.24670037001624L241.28997438794272,272.4434394251616L241.2136285596664,272.68128825711767L241.10791892907764,272.87802749339147L240.79079008542067,273.4212629079627L240.24168738632056,274.40789725451236L240.09780484159364,274.6046370194673L239.90400390028867,275.01867172805765L239.81884896018414,275.1625562223382L239.56925678486846,275.63531977759123L239.5310838707303,275.8643606575296L239.51933838829336,276.0963381061459L239.41362875770437,276.29307850979586L239.3284737694878,276.48100973714844L239.29030085534964,276.65425889163225L239.260937101149,276.85687241221194L239.29030085534964,277.12115103160284L239.31672828705064,277.27971830421683L239.36664668362846,277.4089212914914L239.56925678486846,277.7407381757101L239.59568421656945,277.88462347980743L239.47235631421745,278.0050173081766L239.18459127286997,278.24286868224834L239.0113449739399,278.4396100044467L239.0113449739399,278.6128599575534L239.0583269999065,278.7655548508446L239.22276418700835,278.87713962290775L239.5575113024313,278.94467775846203L239.73075760136135,279.05919901375927L239.87464009797918,279.1414194549715L240.05963192745548,279.2177669912531L240.26224202869548,279.3293518848898L240.34739701690933,279.4937928439428L240.0390772850808,279.8784674412858L239.93336770260134,280.0517179533676L240.00971353087766,280.18092178857046L240.49127951352693,280.62726263183464L240.58817998418067,280.77702184426727L240.67333497239474,280.9297175651924L241.13728273138713,281.5023270742242L241.25180147380433,281.681451286887L241.26061058563278,281.86351204477955L241.25180147380433,282.05731872825265L241.2136285596664,282.3891395495287L241.28997438794272,282.8501654115721L241.4456024151093,282.9177043070444L241.64527614574058,282.93825961524044L241.79209506107577,283.02341732690695L241.91542291532141,283.1819869903635L241.9535958294598,283.34642966672317L242.01232338597265,283.4815076207019L242.0504963001108,283.6400774520089L242.05930546004856,283.7927744124678L242.0211325459104,283.9278525962308L241.94478671763136,284.08642264217553L241.80971328473288,284.24499276537045L241.75098572822003,284.4094359721087L241.72455834462562,284.5885617133375L241.73336745645406,284.7412591207598L241.79209506107577,284.88514710385374L241.72455834462562,285.0143527301043L241.61884871403663,285.1464948953693L241.60710323159947,285.40490641810214L241.63646698580283,285.60752469646553L241.72455834462562,285.75728611266237L241.80090417290444,285.9452221101372L241.90661380349297,286.1595867307885L241.89780464355567,286.4532371906584L241.96534136000582,286.6382371261381L242.07986010242325,286.7968085647211L242.12684212838985,286.9436340761983L242.165015042528,287.1315708278741L242.17676057307426,287.36942847173805L242.14739677076204,287.6043497556955L242.21493348721242,288.1035582062222L242.2031879566664,288.29736876356566L242.28247020366302,288.43538544974103L242.61721727097438,288.5851483348684L242.65539018511504,288.80245150978993L242.65539018511504,289.0138817607931L242.88736408866453,289.58063314340154L243.13695621587362,289.8419852344907L243.21623841475866,290.0240509024912L243.41591214538994,290.33238816765476L243.5216217759787,290.4821521265122L243.67724980314506,290.6730278782191L243.79176854555976,290.7846168530387L243.94739657272635,290.91382520372355L244.01493328917422,291.0958916351961L244.01493328917422,291.29851410361493L243.97382400442734,291.47764421452763L243.92684193035166,291.63621856904666L243.90628728797697,291.8182854825004L243.92684193035166,291.99741602023425L243.99437864680226,292.38210656752585L244.07953358690702,292.66108103746285L244.01493328917422,293.3570503367487L244.0413606727691,293.6125332771971L244.0325515609402,293.85333353908095L243.97382400442734,294.09413400553433L243.96501484448982,294.358427581474L244.0531062033151,294.5522430186559L244.0912791174535,294.76367823607495L244.18817958810428,294.9516208302506L244.26452541638355,295.12488053958765L244.26452541638355,295.32163329313323L244.27333457631858,295.4802102257934L244.26452541638355,295.6446605334748L244.29388921869304,295.7885546605914L244.35848951642583,295.9383221031106L244.40840796111024,296.0851529894016L244.44658087524863,296.36413203176636L244.43777171531087,296.543266153085L244.45538998707707,296.716527136018L244.493562901215,296.94264762799435L244.5434813458994,297.15408518087276L244.64919097648817,297.44187557733585L244.76370971890537,297.65037700417145L245.00449268617695,297.94404132034106L245.18654814504202,298.1114301909211L245.34217617220588,298.27588255643235L245.19829367558805,298.290565819291L245.03385648848666,298.27588255643235L244.75490055896785,298.41096850911134L244.59927253180376,298.3287422788436L244.61982717417868,298.60185099308467L244.73434591659566,298.76630375871275L244.76370971890537,298.96305993520434L244.71672764482946,299.13632296506574L244.68736389062929,299.3242694854949L244.64919097648817,299.5063428151125L244.5317358153534,299.33895282546933L244.43777171531087,299.17449958605016L244.32031660228495,299.00710982984606L244.17643405755803,298.833846912662L244.07072447507858,298.65471080104106L243.96501484448982,298.4961314670348L243.7242318291121,298.3727920340218L243.55098553018206,298.14960661674235L243.4071029854549,297.99102767889167L243.30139340297546,297.8236389070505L243.13695621587362,297.69736324727677L242.95490075700582,297.50648161109814L242.75229070387513,297.4242557446974L242.60840815914844,297.3948893442615L242.42635270028063,297.3420298628227L242.25310640135058,297.2803605088779L242.0886692142492,297.3948893442615L241.90661380349297,297.50648161109814L241.80971328473288,297.6797433928279L241.64527614574058,297.6944266127835L241.45441157504433,297.58283424436496L241.22243767149484,297.7120464684938L241.01982757025212,297.9352314063822L241.20481939972865,298.0115841991257L241.40742950096842,297.9616611975176L241.56012115752355,297.9381680443263L241.71281281407914,297.9528512827961L241.8390770870426,298.0203941163834L242.0504963001108,298.0820637403026L242.32064311780118,298.1936563810712L242.21493348721242,298.36691874560495L240.55881622997777,299.90573017574377L240.3943790428757,300.09955077575495L240.250496498149,300.2199545695368L239.87464009797918,300.58410317727584L239.88638562852543,300.73974752560724L239.72194844142405,300.74268420538846L239.45180167184276,300.71919072031153L239.2315732988368,300.7103806340843L239.02896319759702,300.67220371075376L238.62667941383506,300.62228008294346L238.28018681597496,300.6281534389216L238.37415091601724,301.3652629366696L238.441687584359,301.6471860634761L238.85571689866697,302.23452732471566L238.8380986269035,302.40779333422665L238.5591426973847,302.9804533663367L238.453433114905,303.2359484584176L238.34478711370775,303.43858275145266L238.1333679006393,303.52962137659716L238.03940380059703,303.64415400146765L237.89258488525866,303.69407845155865L237.15261761546503,304.22269147192264L237.0469079848765,304.37246545408783L237.1819813696684,304.44294738391L237.39340058273683,304.53398657753337L237.14380845552773,304.7278120856962L236.70041538701912,305.00093026027076L236.13369436804396,304.44294738391L236.26876780094472,304.02886652599113L236.55653284228924,302.96576974200093L236.67105158470667,302.7249586852277L236.60351486825607,302.5193884881007L236.55653284228924,302.24627413827244L236.52716903997975,301.87918565560835L236.89421632832114,301.3681996261938L236.98818042836342,301.2624785917618L236.86485252601142,301.1038970796477L236.75033378359421,300.7573676530792L236.41265029756255,299.4064961264884L236.37447738342416,299.21854952769695L236.24821315857002,298.7751137570308L236.1894855539481,298.48144818922265L236.06615769970495,298.06738049252755L235.96044806911618,297.62101057159293L235.78720177018613,296.9573307958522L235.73728332550195,296.82224579611244L235.59340082888139,296.2936530713392L235.54641875480547,295.87371650053797L235.44070917232602,295.744505401368L235.3144448993653,295.52425943155373L235.00612516753404,294.9457476368135L236.14250352798126,294.2967590288137L235.48769119829262,293.069265328039L235.02667985801781,292.17361008031145L235.27627198522418,291.8623339892175L235.20873526877676,291.66852072479963L235.19111699701034,291.5158195047621L235.08540741453066,291.3748646347562L234.8328788686067,291.2016076976936L234.81526059684052,291.02835083285595L234.93858849919548,290.8697769135082L234.75653304032767,290.80223617187954L234.61265054370983,290.5731852186987L234.54511382725923,290.35588058341875L234.3248854542535,290.678901013853L234.0077566105963,290.7611244458632L233.50563598557483,290.80223617187954L232.46615809577884,290.90501556430877L232.2253750804009,290.6201700004268L231.87888248254058,290.14444920744717L231.86126421077734,289.88896993099826L231.7731728519518,289.02269138424714L231.7467454683599,288.6967364222189L231.66746326947236,287.97435122716064L231.34152526587764,288.14760603512855L230.8687683950568,288.2445113122462L230.23451075585194,288.33554358780106L229.48573432612056,288.40308369662426L229.368279164986,288.27387657776586L229.40645207912667,287.877446044172L229.35947005316007,287.74823916963334L229.39764296729822,287.54561941648143L229.494543437949,287.36355540844744L229.44462499326482,287.21966623742975L229.33891541078538,287.0610945196388L229.41819760967292,286.8203006281078L229.31248797908438,286.6382371261381L229.22439666836817,286.45030069231893L229.2625695825061,286.1948247745253L229.368279164986,286.0832376663055L229.44462499326482,285.9099840956993L229.33010625084762,285.71911162891735L229.2332057801966,285.58403272854576L229.32129713901895,285.39609695377834L229.33010625084762,285.1993517867827L229.31248797908438,285.0554636595293L229.17741459429226,284.996733775748L229.07170501181258,284.89982956854567L229.0511504175497,284.717767362582L229.08932328357878,284.3272143823027L229.00416829536198,284.14515231017964L228.90726782471097,283.86031349740824L228.89845866477322,283.65475986009386L228.86909491057304,283.48444409124556L228.792749082294,283.33174727219074L228.76338527998405,283.18785992624623L228.63712105512968,283.0968291909188L228.59894809288244,282.90008546555896L228.53141142454115,282.7444524450826L228.62831189519238,282.5712006219327L228.64593016695835,282.35390192112897L228.66648480933304,282.21588790249575L228.64593016695835,282.04850935313846L228.590138981054,281.82533801194745L228.493238510403,281.2967748779959L228.29062840916322,281.2057446287601L228.22309169271261,281.0119383488238L228.21428258088395,280.7975770301776L228.24364638319662,280.6096439019988L228.21428258088395,280.392346316562L228.11738211023317,280.19854049886175L227.93532665136536,280.0781460344421L227.59764316533642,279.8784674412858L227.49193358285675,279.6758525086554L227.42439686640614,279.51728440121036L227.3686056805018,279.34697055761677L227.31868723581738,279.1355465829521L226.4348374212973,279.2941145417114L226.0002534646144,279.4791106032993L225.47170540788898,279.37633498178053L225.09584900771938,279.32347901018505L224.9049844370229,278.4777837552229L224.0475620060945,278.7215082080475L223.21950337747853,279.64061513535773L222.86420161968317,278.2604873094946L222.5940548501021,277.25035397432464L222.09487054757733,277.2268625406249L221.89226049444665,277.4089212914914L221.75718706154566,277.4382855834504L221.59568629316436,277.37074768109704L221.4224399942343,277.31789190701767L221.24919364719517,277.30320974061647L221.08475650820242,277.34725619312457L221.00841067992633,277.64383587283487L220.7969914187488,277.4529677541941L220.70890010803282,277.1123417643284L220.43875329034222,275.8261871703299L220.37121662200093,275.541354314523L220.3154254360993,275.2447759234804L220.23907960782026,274.9129607380653L220.1979702749643,273.7912505967721L220.4681170926549,273.60332032081203L221.72782330734503,273.0365934483188L221.6896503932071,272.67541546083L221.38133066137584,271.83854036614576L220.8439734928245,271.0486486953838L220.70890010803282,270.83722803434347L220.54446292093098,270.9253199891985L220.15098824899792,270.53477912338184L220.14217908906016,269.9798003269607L220.12162444668547,269.8182986672783L220.0658332607809,269.6098147202274L219.78687737937412,268.2209017405488L219.61363103233498,267.31062153449676L219.93956903592948,266.88190917926926L220.50629000679282,266.1947952034881L220.5650175633059,265.8248108684646L220.94087396347572,265.886474949834L220.90270104933734,266.26820480676906L221.8540875803085,266.43557871121294L221.9010696062751,265.6956100107184L222.04788852161073,264.80001351294055L222.00677923686385,263.63427046281583L221.8159146661676,263.64014320727694L221.93043340858503,263.19674988106107L222.11542518995202,262.961839570441L222.20938928999453,262.48908257656575L222.10367970751508,262.3745638126035L222.27692600644514,262.0133892150672L222.32625390555268,261.7011860490205L222.555881935961,261.7491151640063L222.80547406317032,261.7256241494893L223.0580026090945,260.84471068468315L223.21950337747853,260.7008281880395L223.46028639285646,260.59511855738367L223.82733368120034,260.3337808982123L223.98883444958165,260.2280712661426L224.15327163668303,260.63329147156236L224.45278220857676,260.5275818407875L224.4821459627774,260.36314470082306L224.53793714868152,260.210452994063L224.5830258205831,260.01561648810457L224.92260270878887,259.9314971042858L225.3659957773002,259.86396038467115L225.77179642233682,259.7448018474655L225.78938178712133,259.53026039907337L226.10596309520315,259.44112192513495L226.47301033543522,259.3236667497179L226.68442959661252,259.2854938303941L226.89584880968096,259.8727695450498L227.483124422919,259.8140419373113L228.5607751787445,259.46754931161047L228.69341888343365,259.38360836006956L228.7429055923967,259.204906357556L228.90726782471097,259.27668471732954L229.09813239540472,259.344221394772L229.27137869433477,259.3148576367204L229.2332057801966,259.08288369678166L229.44462499326482,258.88320997359466L230.1111828534997,258.8920190874153L230.407757054782,258.680599821121L229.46517968374883,258.16086069127243L229.29193333670946,258.0727693406258L229.3506608932223,257.9288867247744L230.30204742419323,256.7543345960758L230.8217863690902,256.5810880598247L231.2827977093648,256.3696685935219L231.26517943760132,256.17880377216017L231.4002528704998,256.2757043727498L231.80253665426403,255.30376162621482L231.87888248254058,255.10115116400138L232.02570139787895,254.80163993123952L232.23712061094693,254.34062738735457L232.35163935336163,254.1292075852731L232.8508236558862,254.7341030562093L233.17969798198033,255.0923419855942L233.2854076125691,255.22447927080995L233.73760984101546,255.71779168630394Z\" stroke=\"#000\" fill=\"#FFF\" strokeWidth=\"0.5\"></path>\r\n        <path id=\"Nyeri\" ref={(item) => countyRefs.current[18] = item} d=\"M261.80351195140474,260.7595557445539L261.9297762243682,261.00914787218164L262.1705592397461,261.35857689349706L262.3144417844728,261.5053957653495L262.4583242810934,261.5670597431453L262.5845885540541,261.66689658945114L262.746089370547,261.84601568988535L262.87235359540136,261.9575980234816L263.0661545848127,262.1719536800282L263.2482099955712,262.2982179715427L263.47724748040287,262.50082806137993L263.62406639574124,262.2541722612469L263.8061218546063,261.69038760379266L264.13205981009173,261.98989819962827L264.3170516395678,262.13378076088446L264.4227612701568,262.23949035790207L264.44037954192004,262.4421004932972L264.6048166809128,262.6065377148238L264.7956812997179,262.7562930378822L265.8057953390928,263.422851093504L266.39307100043993,263.7987076976151L266.7101997959878,264.01599984339833L272.87072111404154,268.0564639612943L271.1558763002936,272.6020053193784L269.51150457360495,276.9919481248682L268.99176562870844,278.351516886994L268.44266292960833,279.75807307443057L267.92292398471136,281.1382060572087L267.8289598846691,281.34375821326864L267.6964842268774,281.46600674726017L267.656078208543,281.6218631148579L267.6676227852099,281.8527614905807L267.5425564417667,281.98167983033386L267.20006709343147,282.0547977088373L267.04806340443247,282.07596339937777L266.8951916254614,281.9369236651781L266.6632177700212,281.96922474634533L266.5324052617648,282.0663426307949L266.50739201232113,282.3261036665701L266.51052611346586,282.5036618422358L266.5439498865435,282.7474941764569L266.52855706954324,282.97069665481666L266.5575081394327,283.1731775386165L266.56631729936726,283.3611120137833L266.548699027604,283.5960302797581L266.56319084765346,283.9520196835675L266.415035350876,284.0770904847945L266.2491884557105,284.1745171722178L266.07639419476504,284.2521896487866L265.9282386979876,284.3791847325957L265.8897567276533,284.5446632212978L265.9907871685664,284.7471320846345L266.14950989509794,285.01608503221786L266.23994246043117,285.24121323221146L266.2591834696527,285.485583379492L266.1341171262095,285.6491382784095L265.9702325261942,285.66625464822533L265.91477002520855,285.8300108949162L265.833957892321,285.97432421126746L265.5876734457647,285.8761911178568L265.4703034867641,286.03782209812164L265.2413359052082,286.001262686672L265.0662430628722,286.1705904460416L265.0863827116714,286.31522146339677L265.13336478574706,286.5501418928143L265.1627285399504,286.7674435001783L265.11787324781017,287.00350194364324L265.2480101045737,287.337981163904L265.26138866803467,287.5009639327371L265.205441991842,287.6627304778269L265.1957121100104,287.8609858398186L265.0205746700615,287.9339633024564L265.02179092934375,288.1978986649925L265.2601724087492,288.4046684591696L265.2759834426688,288.6321153933434L265.3769307020523,288.8340203702343L265.5473941000578,289.0138817607931L265.6912765966756,289.18126417477004L265.7881770673264,289.30753519813675L265.9790416861292,289.33690053078067L266.14194076059744,289.3181063634095L266.18165173926263,289.47491779649323L266.2818074510783,289.59298971723115L266.47883707703704,289.6501557901914L266.63329854215476,289.74381080521516L266.67202688184693,289.9036526052871L266.6925815723307,290.06222597342867L266.6953263704379,290.2181680768498L266.60944170362836,290.3850821150304L266.52336984229055,290.4883743133534L266.47603036185114,290.6088819068104L266.38426184050263,290.7552513564372L266.34608892636425,290.9813659752587L266.42243475464056,291.1839883508383L266.2579975675392,291.228036696258L266.12942206036064,291.39247899142265L265.9500076271495,291.44298875199934L265.83719158037684,291.4394630604501L265.51637094886837,291.46590594075326L265.4123206671568,291.62153574613774L265.2390743682265,291.5481216928365L265.0276551551583,291.5099463976087L264.84871893156424,291.5009593459271L264.7179919622138,291.54453773539893L264.5460891243997,291.6274088559532L264.34347907126903,291.7419348140498L264.1559343529591,291.86177843203734L263.83547233055265,291.86255689528946L263.65049382744223,291.74780797485647L263.2951920696471,291.6274088559532L262.98687233781857,291.4864539222732L262.91933566947705,291.3425624692958L262.93989031185197,291.131130317727L262.80481692705985,290.9872390699481L262.64037973995846,290.92263489155863L262.47887892346534,290.8462844984146L262.33499642684774,290.80810931050877L262.17936835157457,290.80223617187954L262.0942134114698,290.678901013853L261.9092215819933,290.5585024100331L261.76533903726636,290.43223082923635L261.6126473807112,290.3793729532215L261.46876488409066,290.2971495961506L261.26615478285066,290.2061166982392L261.0635446816111,290.24135520916525L260.8991074945095,290.1738146819979L260.8521254685427,290.0387336325198L260.7552249978919,289.827302515558L260.5907878107903,289.65404662909475L260.46745990843533,289.49547355641437L260.2942136095053,289.4279331740215L260.1591402247161,289.38975819545067L259.96533928341114,289.30753519813675L259.75392002223384,289.25467754981395L259.52488253740194,289.2253121781271L259.2840995220213,289.2253121781271L259.119662383029,289.15777191249055L258.81134265120045,288.9463415484253L258.6498418828164,288.9551511215559L258.4765955357798,288.95221459714776L258.2916037063037,288.9375319274734L258.06256622146907,288.9463415484253L257.88931992254174,288.91697621051674L257.8305923660289,288.7818958031083L257.79241945188824,288.59983098545837L257.61917315296046,288.5469734758942L257.40775389178316,288.4941159765571L257.27268050699126,288.5851483348684L257.0994342080612,288.65268850526354L256.91737874919613,288.6967364222189L256.69421400558167,288.83181678713845L256.55033150896384,288.95221459714776L256.4270036066089,289.02269138424714L256.2155843935409,289.06673936151367L256.0305925640646,289.0814220382459L255.8573462651368,289.17832764788665L255.7134637204074,289.3398370594118L255.35816191450317,289.47491779649323L255.1555519094818,289.5130927873507L254.973496450614,289.58063314340154L254.7914409917489,289.69222164590616L254.5389124939311,289.79793712828433L254.39502994920417,289.874287209422L254.18361073613596,289.8566679542469L254.03972819140904,290.0299239751599L253.90465480661692,290.1062741243883L253.7402176195153,290.09159139053264L253.54935304882179,290.09746451284104L253.1353237345138,290.06222597342867L252.92390452144582,290.068099046962L252.674312394239,290.1209568590772L252.45114765062453,290.1062741243883L252.26909219175673,290.00055856504L252.12520964703003,289.9565103839181L251.92259959389958,289.941827706648L251.7023712208936,289.8801602787088L251.5584886761667,289.9330180525717L251.42341529137457,289.9623835031713L251.23842346189826,289.8419852344907L250.90367634647805,289.5483312527472L250.6805116028636,289.3692024437343L250.30759162141112,289.3603928569655L250.05506307548717,289.2311852810738L249.66158840355092,288.97570684142545L249.47953299279516,288.8464994510621L249.08312190214156,288.7642766203229L248.9392393574144,288.66149806884L248.90106649138284,288.45594113029017L248.93043024558597,288.22982868065355L248.74837483482747,288.22101913094326L248.60449229010078,288.15347906668364L248.41950046062425,288.13879648803436L248.22863588993073,288.21514609795577L248.07300786276664,288.21514609795577L247.56501444841592,288.05070079188505L247.35359518723862,288.0360181705567L247.18034888830857,288.05657382139015L246.94837503286567,288.0712564438034L246.7663195740006,288.1035582062222L246.59307327507054,288.1241138620483L246.39046317383077,288.1182407830066L246.18785307258804,288.18578083867544L245.99698850189452,288.22101913094326L245.80318756059228,288.14760603512855L245.6387503734909,288.14173300370095L245.43614027224862,288.0477642771799L245.20710278741672,288.0360181705567L244.84005554718442,288.20927301698435L244.73434591659566,288.3502262250204L244.61982717417868,288.4735602931443L244.44658087524863,288.5469734758942L244.3496804045974,288.6673711594951L244.28214368814702,288.7877688482566L244.16762494572959,288.86999168613306L244.0413606727691,288.97570684142545L244.0237424010029,289.16364496584055L244.10008822928194,289.37507550174615L244.07072447507858,289.69809475921534L244.18817958810428,290.01524124562746L244.10008822928194,290.14444920744717L244.07072447507858,290.341197835343L244.12064287165367,290.54969278297324L244.0912791174535,290.73175895198665L243.96501484448982,290.90501556430877L243.79176854555976,290.7846168530387L243.67724980314506,290.6730278782191L243.5216217759787,290.4821521265122L243.41591214538994,290.33238816765476L243.21623841475866,290.0240509024912L243.13695621587362,289.8419852344907L242.90791873103922,289.5776966120979L242.82863653215168,289.44261587065733L242.65539018511504,289.0138817607931L242.65539018511504,288.80245150978993L242.62896280152063,288.5763387737594L242.44397097204705,288.50879862225514L242.28247020366302,288.43538544974103L242.2031879566664,288.2914957289573L242.21493348721242,288.1035582062222L242.14739677076204,287.6043497556955L242.17676057307426,287.36942847173805L242.165015042528,287.1315708278741L242.12684212838985,286.94069757294034L242.07986010242325,286.7968085647211L241.96534136000582,286.6382371261381L241.89780464355567,286.4532371906584L241.90661380349297,286.1595867307885L241.8390770870426,285.94815860350684L241.63646698580283,285.60752469646553L241.63646698580283,285.4137159307891L241.61884871403663,285.1464948953693L241.72455834462562,285.0143527301043L241.79209506107577,284.88514710385374L241.73336745645406,284.7412591207598L241.72455834462562,284.5885617133375L241.75098572822003,284.4094359721087L241.80971328473288,284.24499276537045L241.94478671763136,284.08642264217553L242.0211325459104,283.9278525962308L242.05930546004856,283.7927744124678L242.0504963001108,283.6400774520089L242.01232338597265,283.4815076207019L241.9535958294598,283.34642966672317L241.91542291532141,283.1819869903635L241.79209506107577,283.02341732690695L241.64527614574058,282.93825961524044L241.4456024151093,282.9177043070444L241.28997438794272,282.8501654115721L241.26061058563278,282.65342182757786L241.25180147380433,282.05731872825265L241.26061058563278,281.86351204477955L241.25180147380433,281.681451286887L241.13728273138713,281.5023270742242L240.67333497239474,280.9297175651924L240.58817998418067,280.77702184426727L240.49127951352693,280.62726263183464L240.00971353087766,280.18092178857046L239.93336770260134,280.0517179533676L240.0390772850808,279.8784674412858L240.34739701690933,279.4937928439428L240.26224202869548,279.3381611971019L239.9539223449758,279.1649109919888L239.7806759979369,279.0944363368345L239.5575113024313,278.94467775846203L239.22276418700835,278.87713962290775L239.0583269999065,278.7655548508446L239.0113449739399,278.6128599575534L239.03777235753478,278.42492784902583L239.18459127286997,278.24286868224834L239.47235631421745,278.0050173081766L239.59568421656945,277.88462347980743L239.56925678486846,277.7407381757101L239.36664668362846,277.4089212914914L239.31672828705064,277.27971830421683L239.29030085534964,277.12115103160284L239.260937101149,276.85687241221194L239.31672828705064,276.48100973714844L239.51933838829336,276.1051473547299L239.54870214249354,275.66174759575745L239.64212116055,275.46804844387685L239.7425030837985,275.306440755911L239.90400390028867,275.01867172805765L240.09791236659316,274.61394168191134L240.19187646663568,274.4406932162337L240.27105118863278,274.34916897928576L240.35620612873777,274.2052846997573L240.79079008542067,273.4212629079627L241.10791892907764,272.87802749339147L241.2136285596664,272.68128825711767L241.29878349977116,272.47280349274644L241.70400370225343,271.771003153823L241.78034953052975,271.6065646698494L241.8860591611185,271.4186350349372L242.1180330165614,271.03103030065427L242.84919117452637,269.6391786269096L242.84919117452637,269.47474059883507L242.80220910045068,269.2310200234004L243.15751085824581,269.1253099457644L241.69519454231568,268.06527310418L243.57154017255652,267.4515681175343L243.8681143738388,267.37815844472163L244.12064287165367,267.2783213184091L244.43777171531087,266.9406369310111L245.08083856256235,266.77326296133816L245.67692328762928,266.6323164575781L246.11150724431195,266.54128852345934L246.4961728044193,266.23884094574515L246.7751287339354,265.9921847202737L246.91901123055595,266.23296819286054L247.16860340587164,266.1713041447288L247.61199647438298,266.03623045621873L247.86158860158935,265.96869366485964L248.09356250514156,265.9158387554824L249.9036227982367,265.74681956060715L249.9518985399743,266.7847502670036L249.9493534930075,267.2254663556827L250.1343452743722,267.24308467632676L250.527819946308,267.3018123976874L250.75979384986022,267.3487945576754L250.88312170410313,267.4222042285988L251.05636800303319,267.48974114542824L251.38524237723664,267.6864790642884L251.37120557796402,267.82268183026554L251.2891368218236,268.0833717664264L251.47920647727892,268.3706575889213L251.54674319372953,268.54684094900045L251.5584886761667,268.7024696126429L251.64364366438053,268.8610347331155L251.7787170491697,268.9814267468586L251.8462537656203,269.1106279768167L251.85506287744874,269.31617541956285L251.76990788923513,269.45712228692776L251.62308902200584,269.5011681635813L251.5584886761667,269.73020683545855L251.36468773486172,269.8182986672783L251.21199607830658,269.9093268952134L251.0769226935172,270.0678921852781L250.92129461824152,270.20590274240504L250.730430047548,270.2029663544931L250.59879356584406,270.2171698892847L250.36869507147003,270.2854499689484L250.45147411802895,270.59644344215263L250.5953566627586,270.9634931648424L250.42211036382855,271.0398395220212L250.61297493452184,271.56839146020303L251.04755889120474,272.72239792885705L251.16207763362218,273.0072293545908L251.71118033272205,272.7282707736881L251.87561751982366,272.68128825711767L251.9607725080375,272.916200778712L252.2309192776188,273.15992258989183L252.66256686369297,273.30967941405123L253.0677870661725,273.4388813663917L255.59013586616447,274.19647548291584L256.0423380946106,274.39321517309577L256.23320266530686,274.4225793363142L256.79111452434176,274.6574925057835L257.1464162821369,274.8248682222401L257.4547359658591,274.95700697734264L257.7454373778123,274.357978198524L257.9744749107556,273.8000598554983L257.61917315296046,273.04540264784356L257.8305923660289,272.954374066365L258.012647824894,272.8633454500949L258.1301029379197,272.7517620092236L258.21525787802466,272.6372421900716L258.3591404227541,272.487485527037L258.5235776098557,272.3817749452861L258.62928719233537,272.27019158804603L258.6498418828164,272.0940074009506L258.69682390878324,271.9442508615742L258.6204780805069,271.7475119050737L258.46485005334284,271.4920450471293L258.49421380754325,271.2806242574916L258.6380963522704,270.66398059321216L258.793724379437,270.06201941046584L258.9376069241639,269.45712228692776L258.9669706783643,269.31617541956285L258.97577983830183,269.1781650070849L258.87887936765105,268.99904509751093L258.87887936765105,268.8610347331155L258.81134265120045,268.65842377459563L258.7555514652961,268.5321589890893L258.65865099464486,268.4176397959543L258.51476844991817,268.27669313338L258.4765955357798,268.0623367232081L258.4090588674385,267.9213901095919L258.2446216803369,267.8832170666401L258.06256622146907,267.76869794596905L257.88931992254174,267.73052490845123L257.7836102919532,267.6277513229376L257.6367914247239,267.4662500622909L257.38719924940847,267.1667386381535L257.3314080635041,266.95531882127545L257.3020443093037,266.6616803272808L257.2345075928531,265.5987093865961L257.20514383864975,265.3637988131699L257.02308837978467,264.5533575048842L257.01134284923864,264.3272561870177L257.01624906820734,264.1749342737211L257.18417020960214,264.0613404497067L257.3783901375798,264.0629819029969L257.5310817941354,263.94846308026604L257.68670982129925,263.90441739550215L257.9274928366799,263.8662444565338L258.793724379437,263.399360069502L259.29290868195903,263.09691300178L259.3459136473746,262.94840533981846L259.7744746646083,262.4039275720548L260.3529411660181,261.6874512330103L260.51444198251124,261.4701592686365L260.5526148966492,261.2675491621007L260.64951536730314,261.1001756022078L260.99641598284165,260.7793053686688L261.3336914511924,260.8535198446268L261.43940108178117,260.69201902810056L261.51574691005726,260.5363910007507L261.585388903447,260.3541405525122L261.8099348261194,260.2418675656613L261.78589367963855,260.430681369693L261.85343039608915,260.60392766922115Z\" stroke=\"#000\" fill=\"#FFF\" strokeWidth=\"0.5\"></path>\r\n        <path id=\"Kirinyaga\" ref={(item) => countyRefs.current[19] = item} d=\"M278.42047580587655,282.00446233650104L278.4116666459388,282.1923961774159L278.58491294486885,282.29223605586964L278.63189501894453,282.45961476883684L278.6142767471788,282.68278651079805L278.63189501894453,282.8854030903244L278.60546758724104,283.0850833224031L278.63189501894453,283.25539888868923L278.58491294486885,283.4756346315809L278.49975800476113,283.8074568273339L278.4586487200145,284.0482483612488L278.51737627652756,284.19800903489795L278.6142767471788,284.3800711368132L278.6994316872833,284.59737115495255L278.5761038330404,284.7941159438759L278.54674003072796,284.996733775748L278.54674003072796,285.1464948953693L278.5937221048039,285.3050655966115L278.6906225754576,285.4430808626364L278.78752304610884,285.6310166661913L278.922596430898,285.83950807915625L279.0840972473909,285.9305395956033L279.28670734863044,286.1419677104789L279.4511444876232,286.27117386753036L279.5186812040738,286.43561815294737L279.5186812040738,286.60887202939085L279.5862179205242,286.7997450665291L279.5862179205242,286.9788722138471L279.7007366629416,287.1139517491982L279.85636469010547,287.249031347882L280.047229260799,287.2960155982168L280.24103020210373,287.31950770222085L280.2792031162419,287.4898255982815L280.4230856609688,287.5691115410831L280.74902361645445,287.61315933409077L280.854733247043,287.71887395947897L280.96044287763175,288.05070079188505L280.9721883600689,288.2004634679258L281.04853418834523,288.39721061164886L281.19241673307465,288.6145136368386L281.3656630320022,288.7495939608568L281.3862176743769,288.9375319274734L281.32749011786404,289.0814220382459L281.19241673307465,289.2018199119734L281.07789799065745,289.3603928569655L281.0867071024861,289.5424581427786L281.07789799065745,289.74507938176134L281.2599534495225,289.8449217687532L281.3362992778018,290.0093681732941L281.4537543908275,290.15913194430647L281.50954557673185,290.3118323417113L281.51835468855757,290.4615962885505L281.4801817744194,290.6054872371641L281.4537543908275,290.8169189465394L281.2893172037259,290.8903327845253L281.1747984613087,291.0195411894276L281.1248800166243,291.3337528147818L281.07789799065745,291.47764421452763L281.04853418834523,291.6509013447228L280.94282460586555,291.75661764416105L280.80775122107616,292.0502742392512L280.7871965787017,292.20297579351467L280.8371149752768,292.34686770516123L280.84592413521455,292.5054426265599L280.93401544593075,292.6463981523676L280.96044287763175,292.81084641136925L281.0397250765195,292.95473873761847L281.0191704341446,293.12799693080416L280.9898066318324,293.26307967781497L280.9898066318324,293.4157820118091L280.8840970493527,293.5420551899141L280.8840970493527,293.70944065824983L281.0955162624209,293.9942898777314L281.14543470710805,294.2086612080428L281.04853418834523,294.76367823607495L281.02797954597327,294.98098689598197L281.0867071024861,295.139563583455L281.26876256135097,295.23353501996706L281.6152552073204,295.494893293394L281.7591377039382,295.6299774557939L281.8002469886849,295.78268139664243L281.8942110887274,295.9471319332581L281.7708832344845,296.03816710644435L281.39502683431465,295.90895590898015L281.154243818934,295.85903340736445L280.9721883600689,295.78268139664243L280.79894206113886,295.72101249563894L280.61395023166233,295.8032377008734L280.4994314892481,295.88839959470886L280.36435810445596,295.9471319332581L280.31737607848913,296.1145192075493L280.1353206196243,296.11158259517475L279.67137286062894,296.03816710644435L279.430589845251,296.00880089872123L278.6142767471788,296.6254916735831L278.4586487200145,296.73708352998L278.31476617528756,296.8134358816896L278.1121560740453,296.8281190405225L277.5953535478661,296.8310556627917L277.0256961582852,297.0190000543485L276.83483158759145,297.057176277958L276.6615852886614,297.10709906092495L276.3444564450044,297.3420298628227L276.19763752966605,297.4683053050468L276.02439123073873,297.52410145074043L275.8716995741836,297.5916441913113L275.719007917628,297.5299747149155L275.41068818579674,297.52410145074043L275.31378771514574,297.72672969075643L275.19926897272876,297.9146748938369L274.8703946466344,297.9969009564304L274.6677845453946,297.98221771479206L274.02471774625224,297.7560960903164L273.81329848507494,297.66506017392027L273.6194975437729,297.5387846596078L273.4844241589808,297.4242557446974L273.3699054165663,297.3038535870639L273.27300494591236,296.9896337591359L273.19665911763605,296.8604219839391L272.8119935575287,296.88097839193836L272.6593019009731,296.9279644611638L272.5330376280099,297.01019017978626L272.3979642432207,297.08360600491375L271.97512581708384,297.1599584826966L271.6907222429438,297.171429779552L271.51512598155205,297.13913337979034L271.34967724159856,297.162895109612L270.91509328491566,298.22302284782074L270.92683881546213,298.4197784918346L270.91509328491566,298.62240757539325L270.73303787415716,298.3463621893864L270.6772466882528,298.202466306214L270.65669199777153,297.9969009564304L270.6478828859431,297.8001457697086L270.5509824152921,297.59751745741085L270.49225485877923,297.4095725439592L270.37773611636203,297.25099412879155L270.41714472607123,297.0503183302487L270.6273282435686,296.9573307958522L270.7418469859856,297.04836640178934L270.95620256966276,297.04836640178934L270.876920370775,296.88978826107603L270.7418469859856,296.74589344121085L270.82112918487337,296.56675914881447L270.66550115770656,296.3846883915905L270.5979644412587,296.2554769855003L270.4834456988415,296.1438854297094L270.4159090305002,296.0234840020822L270.4540819446386,295.87371650053797L270.4364636728749,295.72101249563894L270.2632173739448,295.66815343095277L270.12814394104635,295.5859282768115L270.1956806574942,295.41854141036L270.0018797161922,294.9398743954223L269.8110150973894,294.8165370836831L269.7522875408765,294.6755801845141L269.76109670081155,294.5081940060258L269.78165134318624,294.320251783596L269.7434784290481,294.12937313122535L269.5878504018842,293.77110900410537L269.57023213011803,293.51268935861697L269.44396785715435,293.3922893496289L269.452776968983,292.9870411184398L269.27953067005296,292.9341826925196L269.1650119276385,293.0604555624313L269.0504931852213,293.1368066989489L268.90661064049436,293.21903096099476L268.7509826133278,293.421655213808L268.6159092285384,293.58023080984145L268.4544084120455,293.8239676200455L268.3486988295658,293.9414312225266L268.2606074707435,293.77698221513094L268.21362539666757,293.64777232889367L267.98165154122444,293.4304649449183L267.88475107057343,293.30125525193824L267.85538726826076,293.1221237843016L267.79959608235663,292.9048168894185L267.7115047716434,292.73743199682076L267.52064020094986,292.7139394024322L267.38556676804865,292.81084641136925L267.1624020725433,292.8343390153547L266.72194532653407,292.8637048097016L266.7307544864691,292.7227491070141L266.7101997959878,292.5847301025906L266.60449021350837,292.43496487076936L266.56631729936726,292.2851997325046L266.4811623111534,292.15599066372704L266.3548980862993,292.0884496187907L266.23157018394704,291.973923498177L266.3007950188262,291.7338608840741L266.12980818816413,291.3936286899617L266.25846249889946,291.22862155255797L266.42243475464056,291.1839883508383L266.34608892636425,290.9813659752587L266.38426184050263,290.7552513564372L266.4811623111534,290.58199484657086L266.524728457935,290.48727802373844L266.60968571561557,290.385395374874L266.6925815723307,290.21786285197504L266.6925815723307,290.06222597342867L266.67202688184693,289.9036526052871L266.633853967709,289.74507938176134L266.4811623111534,289.65404662909475L266.27855220991364,289.59237931705604L266.18165173926263,289.47198126636556L266.143478825122,289.3163447831562L265.9790416861292,289.33690053078067L265.7881770673264,289.30753519813675L265.6912765966756,289.18126417477004L265.36533864118996,288.81713417212035L265.2772472823676,288.6291962890096L265.25962901060143,288.40308369662426L265.0188459952235,288.1945904353752L265.0188459952235,287.9361764526342L265.1920923422599,287.86276343195493L265.20090145408835,287.66308010710407L265.25962901060143,287.49863517311707L265.24788352816427,287.3429998081556L265.20090145408835,287.2049836592772L265.1157465139836,287.0023642919581L265.1627285399504,286.7674435001783L265.1421738975755,286.5648244378886L265.0863827116714,286.3533960229002L265.0658280692992,286.1713327609424L265.2390743682265,286.0010156334052L265.4710482717787,286.0362536584957L265.58556701419593,285.8806190707715L265.8351591414023,285.96871410601335L265.91444134029007,285.8277621100697L265.96142341436575,285.6691911388926L266.1346697132958,285.65157214719875L266.2579975675392,285.48712828972265L266.2403792957755,285.2551451739044L266.1933972698091,285.1259394480386L266.1258605533583,284.9673688860999L265.99959632850414,284.7706239893273L265.88507758608694,284.5445143645874L265.93205961205354,284.3800711368132L266.058323885017,284.25967520058384L266.2198246534008,284.1833266024822L266.38426184050263,284.0922955940639L266.5575081394327,283.9513444411255L266.5575081394327,283.7546001657373L266.548699027604,283.5960302797581L266.56631729936726,283.3611120137833L266.5575081394327,283.16436813520926L266.5281443852293,282.97643376917813L266.53988986766626,282.7444524450826L266.51052611346586,282.53302651280825L266.51052611346586,282.29223605586964L266.5281443852293,282.07493752724247L266.6632177700212,281.96922474634533L266.8951916254614,281.9369236651781L267.047883282017,282.07493752724247L267.1917658267464,282.05731872825265L267.5382584727131,281.98390708317527L267.6645226975677,281.8547026263247L267.655713585739,281.62272204053494L267.6938864998772,281.4641530793551L267.8289598846691,281.34375821326864L267.92292398471136,281.1382060572087L268.44266292960833,279.75807307443057L268.99176562870844,278.351516886994L269.51150457360495,276.9919481248682L271.1558763002936,272.6020053193784L272.87072111404154,268.0564639612943L274.4769199747011,271.765130317507L276.42080227328074,276.28720567514597L278.4880124742151,281.1382060572087L278.5085671165898,281.3349488554902L278.54674003072796,281.4758989420098L278.5555491906655,281.62859495030864L278.49975800476113,281.8077192252275Z\" stroke=\"#000\" fill=\"#FFF\" strokeWidth=\"0.5\"></path>\r\n        <path id=\"Muranga\" ref={(item) => countyRefs.current[20] = item} d=\"M247.70889694503376,288.09474861241154L248.07300786276664,288.21514609795577L248.22863588993073,288.21514609795577L248.41950046062425,288.13879648803436L248.60449229010078,288.15347906668364L248.74837483482747,288.22101913094326L248.87170268907312,288.2914957289573L248.9098756032115,288.5469734758942L249.02733076434606,288.74078439442457L249.47953299279516,288.8464994510621L249.66158840355092,288.97570684142545L250.08442687779666,289.2458679187234L250.30759162141112,289.3603928569655L250.6805116028636,289.3692024437343L250.90367634647805,289.5483312527472L251.33532393255223,289.91833532851547L251.5173793914173,289.9506373129115L251.67300741858116,289.8801602787088L251.83744460568255,289.91246225837085L251.98132715041243,289.96532003879L252.12520964703003,289.9565103839181L252.26909219175673,290.00055856504L252.42178384831232,290.07690870562146L252.51868431896332,290.2061166982392L252.68312150606516,290.1150837843475L252.92390452144582,290.07690870562146L253.1353237345138,290.06222597342867L253.32618830520732,290.09159139053264L253.49062549230894,290.09746451284104L253.663871791239,290.08278177948546L253.866481892479,290.1062741243883L254.06909199371876,290.0299239751599L254.20416537851088,289.871350674829L254.39502994920417,289.874287209422L254.5389124939311,289.79793712828433L254.71215879286115,289.7392063155119L254.82961390588684,289.65404662909475L254.9529418082418,289.59237931705604L255.13499726710688,289.51896584855126L255.33760732023757,289.4807908568481L255.50204450733895,289.4132504782032L255.64592705206883,289.37507550174615L255.8955191792752,289.1430892315729L256.09812928051474,289.0814220382459L256.2919302218197,289.0461836346816L256.4446218783753,289.0461836346816L256.588504423102,288.9022935427614L256.7059595361277,288.8112610782267L256.8880149949928,288.7261017362297L257.0700704057517,288.65268850526354L257.2345075928531,288.6203866783688L257.34021722344187,288.50879862225514L257.52227268230695,288.52348126874193L257.7630556495783,288.59983098545837L257.8394014778546,288.83475335834777L257.9568566389896,288.95221459714776L258.1565303215118,288.94046845172164L258.41786797926693,288.9375319274734L258.6498418828164,288.9551511215559L258.86126109588486,288.98451646362884L259.0345073948149,289.10491429382296L259.2635448796491,289.234121808539L259.486709623264,289.234121808539L259.698128836332,289.25467754981395L259.9565301234761,289.30753519813675L260.1591402247161,289.38975819545067L260.2942136095053,289.4279331740215L260.46745990843533,289.49547355641437L260.5526148966492,289.63349085680926L260.6700700096749,289.73626978243686L260.77577964026364,289.8654775576309L260.8521254685427,290.0181778299581L260.8991074945095,290.15913194430647L261.0635446816111,290.3030227231422L261.26615478285066,290.2061166982392L261.46876488409066,290.2971495961506L261.6126473807112,290.3793729532215L261.76533903726636,290.43223082923635L261.88279419840137,290.5526293252922L262.06484960915736,290.65834516001394L262.17936835157457,290.7992996266731L262.33499642684774,290.80810931050877L262.4964971952313,290.8462844984146L262.6521252705047,290.92850798487666L262.80481692705985,290.9872390699481L262.91933566947705,291.06946265061003L262.9486994236777,291.22216359591494L262.9692540660526,291.462961401059L263.160118684855,291.5686776197838L263.2951920696471,291.6274088559532L263.65049382744223,291.74780797485647L263.8354856088097,291.8623339892175L264.1526144524664,291.8623339892175L264.32586079950556,291.7507445312557L264.5460891243997,291.6274088559532L264.7181488957922,291.54450761689765L264.84559969629345,291.50113668902526L265.03646426698697,291.5099463976087L265.24788352816427,291.5481216928365L265.4123206671568,291.62153574613774L265.51803029774555,291.462961401059L265.7676224249519,291.43946893018796L265.9526142544282,291.4424054829106L266.1311199450397,291.3933279862505L266.29910690039765,291.73606170149844L266.2198246534008,291.98273317564104L266.3548980862993,292.0884496187907L266.48997147109117,292.17361008031145L266.7013906841594,292.549491210415L266.72194532653407,292.7051296981767L266.7101997959878,292.866641379713L266.86582787126076,292.82846587616933L267.00090125605016,292.8813242784342L267.17414755498044,292.82846587616933L267.38556676804865,292.81084641136925L267.5588131150878,292.7227491070141L267.7026956117056,292.74330518186656L267.78785059991947,292.87251451984895L267.8172143541228,293.0545824176151L267.8759419106357,293.2337138817162L267.98165154122444,293.4304649449183L268.1079158141879,293.550864973705L268.21362539666757,293.6712650169746L268.2694165825692,293.8063480800471L268.3486988295658,293.9414312225266L268.4544084120455,293.8239676200455L268.56011804263426,293.6565820685997L268.6834458968799,293.52149909318194L268.7597917732651,293.3922893496289L268.90661064049436,293.21315781221045L269.0504931852213,293.1368066989489L269.1650119276385,293.0604555624313L269.27953067005296,292.9341826925196L269.452776968983,292.96354845115934L269.44396785715435,293.22490410992975L269.452776968983,293.4069722812553L269.5496774877431,293.54499176843615L269.5878504018842,293.7476163058475L269.6641962301603,293.9502410216005L269.7434784290481,294.12937313122535L269.78165134318624,294.320251783596L269.76109670081155,294.5081940060258L269.7522875408765,294.6755801845141L269.8110150973894,294.8165370836831L270.00754428708706,294.9476901641332L270.0782255444685,295.1542466282964L270.1923628738243,295.41275384639266L270.1163984586094,295.5918014873304L270.2632173739448,295.66815343095277L270.4364636728749,295.72101249563894L270.4540819446386,295.87371650053797L270.4159090305002,296.0234840020822L270.4834456988415,296.1438854297094L270.5979644412587,296.2554769855003L270.66550115770656,296.3846883915905L270.82112918487337,296.56675914881447L270.7418469859856,296.74589344121085L270.876920370775,296.88978826107603L270.95620256966276,297.04836640178934L270.73303787415716,297.04836640178934L270.6273282435686,296.9573307958522L270.4159090305002,297.05423965252794L270.37773611636203,297.25099412879155L270.49225485877923,297.4095725439592L270.5509824152921,297.59751745741085L270.6478828859431,297.8001457697086L270.65669199777153,298.0115841991257L270.6772466882528,298.1701631529951L270.73303787415716,298.3463621893864L270.91509328491566,298.62534427142L270.80938370243643,298.81329030863293L270.6948649119099,298.93956661714896L270.6948649119099,299.1568796025183L270.6478828859431,299.59737956734983L270.6478828859431,299.8528700326284L270.5979644412587,300.123044184814L270.49225485877923,301.124453974878L270.0694163845335,301.1420740900965L269.6641962301603,301.1391374041103L269.2531032864608,301.18612452970297L269.0504931852213,301.56202176617717L268.91541980042916,301.8556919799041L269.41460405484486,302.04364118061324L269.6465779583971,302.17285637344014L269.684750872535,302.30794506615786L270.2044897693229,302.29326154438144L270.35718147398734,302.56343920784724L270.5979644412587,302.87473140369343L270.7242287142194,303.0098206186063L271.0119937555669,303.3416706339814L271.59926941691424,303.9525113001596L271.7725157158443,304.07291761811763L272.48605560204305,304.4546943910284L273.3904600589383,305.0684756480357L273.2935595882873,305.1859460368119L273.39926917076673,305.3151634758979L273.53434260366794,305.50311635072546L273.6488613460824,305.59415610674364L273.6870342602231,305.7439312848508L273.59013378956956,305.86727566872486L273.36109625662857,305.9935569092256L273.2054682294645,306.12277496511956L273.2935595882873,306.41645284990875L273.59013378956956,306.3782746994882L273.88964431335376,306.3929586135645L273.8690896709793,306.5838494702132L273.9659901897394,306.7101312531089L274.1010635745315,306.8070452270259L274.1979640451823,306.9509479271352L274.54445664304285,307.1242186619216L274.7734941759834,306.8775281703998L275.1199867738437,306.4399470895707L275.2168872444947,306.59559662553L275.4400519881094,306.92158000126494L275.5340160881517,307.04198842482816L275.66028036111516,307.1829545433304L275.5633798904614,307.32098394527793L275.2168872444947,307.54124391117307L274.70889383014423,307.8466715278132L274.3888286158758,307.8466715278132L274.07169977221884,307.8349243307324L274.2155823169487,308.05224814472126L274.3330374299744,308.2607618316738L275.45767025987243,308.36942401445043L275.86289041424584,308.5779381154512L276.31509269080107,308.82756802493446L277.5953535478661,309.55002864678784L278.2971479035216,310.5691149426704L278.17088363055814,310.6983367506773L277.0080778865188,311.5206599047877L276.6909490909711,311.7614839237686L276.42961143321827,312.1432789939976L275.8511449318087,312.95973629359776L275.6015528046023,313.3297868143441L275.4664793717011,313.42670495274484L275.2668056891789,313.3033545754469L274.99665887148876,313.34153448297434L274.7734941759834,313.2446163535872L274.62080247131894,313.0507803856202L274.37121034411234,312.754153083331L274.1686002428728,312.8158280496681L274.02471774625224,312.7335947830452L273.910199003838,312.6190557137404L273.7369526567986,312.6484247195313L273.61068843194425,312.56031776793566L273.5519608754314,312.43696812461104L273.4462512448424,312.2666283431662L273.32292334249064,312.0933518782559L273.1672953153238,312.0169928209416L273.01460365876846,312.0845412379944L272.8795302739793,311.95531823755715L272.77382064339054,311.81434780247014L272.57121054215077,311.61757684954745L272.2452725866651,311.3150786954901L272.11019920187323,311.23872003643123L272.00448957128447,311.1329927040968L271.92814374300815,311.0125811504234L271.7725157158443,310.9009802627635L271.37904104390805,310.3576613329441L271.1558763002936,310.1403342826313L270.98263000136353,310.01698667300184L270.91509328491566,309.8907022764906L270.8005745424987,309.7556074783764L270.3982907587367,309.808470658764L270.0224343585669,309.9670602601488L269.7992696149522,310.0786604654673L269.57904124194647,310.0404814413002L269.3088944723652,309.8613338090769L269.18556657001045,309.76148114815527L269.07985665076444,309.87014470478346L268.95359271457005,310.01698667300184L268.865501355745,310.16089222717653L268.72161881101783,310.14914485745095L268.58654542622594,310.1990712812187L268.4544084120455,310.304797964149L268.3486988295658,310.5074409529617L268.19307075429265,310.49569350855336L268.0022061835991,310.53974634553964L267.7702323281562,310.65134696775283L267.5088946704036,310.8393060903656L267.2798571855692,310.90979083337453L267.0978017267041,310.7717582824804L266.8951916254614,310.6983367506773L266.73956359829776,310.5984835454599L266.5868719417422,310.5221252477123L266.5281443852293,310.65134696775283L266.48997147109117,310.886295931435L266.3666435687362,311.00083366696055L266.2198246534008,311.0448866504505L265.9526142544282,311.20935130952324L265.74119504136,311.27689936111256L265.5767578542584,311.2710255849124L265.47985738360717,311.4149323740205L265.2684381705392,311.3532580395666L265.1040009834371,311.2710255849124L264.9425001669442,311.23872003643123L264.7486992256422,311.29452059486056L264.5842620385406,311.27689936111256L264.4697432961234,311.203477584074L264.29649699719334,311.27689936111256L264.1526144524664,311.3209524252945L264.046904869987,311.42080610773536L263.88246768288536,311.30920491779574L263.8061218546063,311.13592956541737L263.7092213839551,310.945033217176L263.6123209133041,310.8393060903656L263.39209254029834,310.74826340191936L263.2276553531965,310.61316780085804L262.9986178683648,310.53093579637147L262.77545312475036,310.62785210578863L262.5464156399157,310.47807236769376L262.29388709399177,310.47807236769376L261.9679491385061,310.33710336204194L261.80351195140474,310.3282927764347L261.65082029484915,310.1990712812187L261.41884643940625,310.1109658158063L261.3336914511924,309.9435655030304L261.37186436533057,309.7644179831308L261.14869966982496,309.6351969600675L261.0429900392362,309.4854181868591L260.9666442109599,309.6351969600675L261.0429900392362,309.84371274092547L261.0635446816111,310.03460776092055L260.97838969339705,310.20788185940495L260.79339791202983,310.2842400003373L260.6700700096749,310.39584043595676L260.5056328225735,310.49569350855336L260.3411956835812,310.47807236769376L260.16794933654455,310.425208957309L260.0064485681605,310.4017141301537L259.8596296528226,310.3576613329441L259.64821043975417,310.26661888381716L259.55424633971165,310.1638290697503L259.52488253740194,310.02579719265094L259.45734586906065,309.8965759513979L259.3516362384719,309.7174285339951L259.22537196550843,309.64107067340666L259.17838993954183,309.46779716135444L259.0345073948149,309.36207109823727L258.8700702077133,309.32389225034103L258.76436062523385,309.1917347681433L258.6498418828164,309.11537716467603L258.2739854826468,308.80407343919524L258.1183574073734,308.71596871360737L257.9744749107556,308.59555904130735L257.82178320609114,308.48689670432753L257.65734606709884,308.40466582194534L257.57219107888477,308.28425633711277L257.43711769409265,308.13447884584764L257.281489666929,308.0375640816345L257.1669709726207,307.8701660688985L256.9731699351005,307.767377771626L256.7441324502661,307.73507290133114L256.41525812417194,307.62347435186604L256.30073938175474,307.4883814863883L256.22439350536933,307.3121735759318L256.1069383923434,307.1829545433304L256.02178345223865,306.9979365617013L255.9454376239596,306.8070452270259L255.78980954868666,306.77767732680377L255.70465460858168,306.6572690963496L255.56958122378956,306.55154483346934L255.42569867906263,306.47518847934595L255.3199890484741,306.2872345188545L255.16436102131024,306.21381505608326L254.9911147223802,306.1080911229186L254.81786842344968,306.02292462296197L254.57708540807175,305.78504605341493L254.37741167744093,305.78210929077363L254.28932036672472,305.6470179276588L254.1748015761982,305.54129435043455L254.03972819140904,305.5119266723939L253.90465480661692,305.3445311199574L253.79013606420244,305.1066535023158L253.64625351947302,304.91576431586475L253.6168897652724,304.76598986436676L253.41427966403262,304.6808240841976L253.18230580858972,304.6279625616824L252.96207743558375,304.6162155428337L252.84755869316655,304.44294738391L252.73010358014085,304.228564992017L252.7506582225153,304.07879113318916L252.69193066600246,303.9525113001596L252.48932056476292,303.8908398069116L252.2984559940694,303.86734586916265L252.1839372035431,303.71757231812967L251.98132715041243,303.68233154350054L251.731734975094,303.6118499190619L251.54674319372953,303.5883560665177L251.4028606490001,303.45620313774117L251.2883419065854,303.2741259128412L251.1239047194838,303.2359484584176L250.93304014878754,303.2359484584176L250.7392392074853,303.15959357401357L250.6247204650681,303.07149180625055L250.4602832779667,302.9951369918702L250.30759162141112,302.96576974200093L250.19013646027634,302.85123759987L250.00808104952034,302.8130602353245L249.9111805788666,302.7073383707363L249.7379342318302,302.58693292620273L249.59405173520963,302.404856628172L249.31509580569355,302.2638944081338L249.18002242090165,302.2198437607133L249.06550367848445,302.1346791511969L248.88344821961937,302.02308423196246L248.71020192068931,301.9760969431219L248.63091967369246,301.8498185855036L248.525210091213,301.744097229467L248.32553636058174,301.6471860634761L248.16109917348012,301.5091611625725L247.95848912034944,301.42693361882937L247.81460657562252,301.33589599584406L247.70889694503376,301.2389850420004L247.56501444841592,301.1949345899957L247.4593048178274,301.05691002270066L247.13043049173348,300.87483517928996L246.93956587292791,300.8249114982214L246.6987829056593,300.8249114982214L246.43744524790645,300.84546831496925L246.27594443141356,300.8161014070879L246.09095260193726,300.82197476905344L245.92945183355323,300.67220371075376L245.85016958655933,300.5517996328751L245.7180325723757,300.28749822464516L245.60938661928776,300.1436009261018L245.4772496051071,300.06137397408867L245.30400325806795,299.9204135112944L245.11901147670073,299.81469327956444L244.9281468578979,299.78238986417415L244.79307347310873,299.6473029780105L244.7049821623923,299.53570952338407L244.68736389062929,299.3242694854949L244.71672764482946,299.13632296506574L244.76370971890537,298.96305993520434L244.73434591659566,298.76630375871275L244.61982717417868,298.5842310601956L244.59927253180376,298.3287422788436L244.75490055896785,298.41096850911134L245.03385648848666,298.27588255643235L245.2540848614924,298.27588255643235L245.18654814504202,298.1114301909211L245.00449268617695,297.94404132034106L244.76370971890537,297.65037700417145L244.64919097648817,297.44187557733585L244.5434813458994,297.15408518087276L244.493562901215,296.94264762799435L244.45538998707707,296.716527136018L244.43777171531087,296.543266153085L244.44658087524863,296.36413203176636L244.40840796111024,296.0851529894016L244.29388921869304,295.7885546605914L244.26452541638355,295.6446605334748L244.27333457631858,295.4802102257934L244.26452541638355,295.32163329313323L244.26452541638355,295.12488053958765L244.0912791174535,294.76367823607495L244.0531062033151,294.5522430186559L243.97382400442734,294.3789837533952L243.99437864680226,294.1851684167102L244.07072447507858,293.9208750901517L244.10889738921674,293.70356749705957L244.0325515609402,293.54499176843615L244.01493328917422,293.3570503367487L244.07953358690702,292.7756074857007L244.07072447507858,292.60234955063135L243.99437864680226,292.38210656752585L243.92684193035166,291.99741602023425L243.90628728797697,291.8182854825004L243.92684193035166,291.63621856904666L244.01493328917422,291.42478611898224L244.01493328917422,291.00192185538725L244.07953358690702,290.8169189465394L244.12064287165367,290.5673120855065L244.07072447507858,290.341197835343L244.10008822928194,290.14444920744717L244.18817958810428,290.01524124562746L244.07072447507858,289.69809475921534L244.10008822928194,289.3515832223739L244.0237424010029,289.16364496584055L244.0413606727691,288.97570684142545L244.16762494572959,288.86999168613306L244.28214368814702,288.7877688482566L244.3496804045974,288.6673711594951L244.44658087524863,288.5469734758942L244.61982717417868,288.4735602931443L244.73434591659566,288.3502262250204L244.84005554718442,288.20927301698435L245.20710278741672,288.0360181705567L245.43614027224862,288.0477642771799L245.6387503734909,288.14173300370095L245.80318756059228,288.14760603512855L245.99698850189452,288.22101913094326L246.18785307258804,288.18578083867544L246.39046317383077,288.1182407830066L246.59307327507054,288.1241138620483L246.7663195740006,288.1035582062222L246.94837503286567,288.0712564438034L247.18034888830857,288.05657382139015L247.35359518723862,288.0360181705567L247.56501444841592,288.05070079188505Z\" stroke=\"#000\" fill=\"#FFF\" strokeWidth=\"0.5\"></path>\r\n        <path id=\"Kiambu\" ref={(item) => countyRefs.current[21] = item} d=\"M242.9577058845748,297.5094227656224L243.13695621587362,297.69736324727677L243.30139340297546,297.8236389070505L243.4071029854549,297.99102767889167L243.55098553018206,298.14960661674235L243.7242318291121,298.3727920340218L243.92684193035166,298.4961314670348L244.07072447507858,298.65471080104106L244.17643405755803,298.833846912662L244.32031660228495,299.00710982984606L244.43777171531087,299.17449958605016L244.5317358153534,299.33895282546933L244.59927253180376,299.4887228018862L244.8312463872469,299.67666965933313L244.9281468578979,299.78238986417415L245.11901147670073,299.81469327956444L245.30400325806795,299.9204135112944L245.4772496051071,300.06137397408867L245.60938661928776,300.1436009261018L245.7180325723757,300.28749822464516L245.79437840065498,300.4167122083591L245.88834250069726,300.6193434050231L246.09095260193726,300.82197476905344L246.27594443141356,300.8161014070879L246.43744524790645,300.84546831496925L246.6987829056593,300.8249114982214L246.90139295878998,300.8249114982214L247.05408466345443,300.8395949041613L247.19796716007204,300.90713877860657L247.391768101377,301.02166971362124L247.5738235602421,301.2154914470668L247.70889694503376,301.2389850420004L247.81460657562252,301.33589599584406L247.96729823217788,301.42693361882937L248.16109917348012,301.5091611625725L248.32553636058174,301.6471860634761L248.525210091213,301.744097229467L248.63091967369246,301.8498185855036L248.71020192068931,301.9760969431219L248.9098756032115,302.04364118061324L249.10367659262533,302.1434893046101L249.2563682491807,302.2550842970471L249.45897830231138,302.34024891444926L249.64103376117646,302.4577174406412L249.75848887420216,302.6192368239759L250.05506307548717,302.8218704215657L250.19013646027634,302.85123759987L250.30759162141112,302.96576974200093L250.50726530393308,303.0098206186063L250.71868456511083,303.14490993502784L250.93304014878754,303.2359484584176L251.1239047194838,303.2359484584176L251.2883419065854,303.2741259128412L251.4028606490001,303.45620313774117L251.54674319372953,303.5883560665177L251.731734975094,303.6118499190619L251.89323579158713,303.65590090699214L252.03711833631382,303.7087621358423L252.1839372035431,303.71757231812967L252.2984559940694,303.86734586916265L252.4628931330617,303.93782759558377L252.62439394955186,303.8908398069116L252.73010358014085,304.0200563281405L252.73010358014085,304.228564992017L252.84755869316655,304.44294738391L252.97969570735017,304.6132788002756L253.18230580858972,304.6279625616824L253.41427966403262,304.6808240841976L253.6168897652724,304.76598986436676L253.64625351947302,304.91576431586475L253.79013606420244,305.1066535023158L253.90465480661692,305.3445311199574L254.0984557479219,305.5324840272416L254.28932036672472,305.6470179276588L254.37741167744093,305.78210929077363L254.57708540807175,305.78504605341493L254.81786842344968,306.02292462296197L255.09682430485964,306.16682664378715L255.2994344060994,306.2813609760409L255.40514403668817,306.47518847934595L255.56958122378956,306.55154483346934L255.96305589572557,306.85403382051516L256.1069383923434,307.1829545433304L256.22439350536933,307.3062999485156L256.30073938175474,307.4795711079863L256.41525812417194,307.62347435186604L256.7441324502661,307.73507290133114L256.99372457747245,307.7732513676024L257.1845891962778,307.88778682057807L257.281489666929,308.0375640816345L257.43711769409265,308.1403525033371L257.61917315296046,308.35180311362103L257.810037723654,308.4810230822102L258.08018449323527,308.68366369994214L258.28279459447526,308.8070102562067L258.6498418828164,309.11537716467603L258.76436062523385,309.1917347681433L258.8700702077133,309.3121448958954L259.0345073948149,309.36207109823727L259.17838993954183,309.46779716135444L259.25473576782065,309.65575483743635L259.38099999267524,309.7467969260059L259.52488253740194,310.02579719265094L259.55424633971165,310.1638290697503L259.64821043975417,310.26661888381716L259.8596296528226,310.3576613329441L260.0064485681605,310.4017141301537L260.3529411660181,310.47807236769376L260.5056328225735,310.49569350855336L260.65832447912885,310.4017141301537L260.805143394467,310.28130315546423L260.97838969339705,310.20788185940495L261.0635446816111,309.9670602601488L260.9666442109599,309.6351969600675L261.0429900392362,309.49129189454607L261.14869966982496,309.6351969600675L261.34250061112994,309.76148114815527L261.3336914511924,309.9435655030304L261.35130972295565,310.10802892612793L261.4951922676853,310.12271318261645L261.65082029484915,310.1990712812187L261.815257481951,310.3282927764347L261.9679491385061,310.33710336204194L262.29388709399177,310.48100921634426L262.5346701093697,310.47219867056543L262.77545312475036,310.62785210578863L262.9986178683648,310.53093579637147L263.2276553531965,310.61316780085804L263.39209254029834,310.74826340191936L263.6123209133041,310.8393060903656L263.7180304957835,310.945033217176L263.88246768288536,311.30039432386155L264.0380957100492,311.42080610773536L264.1526144524664,311.3209524252945L264.29649699719334,311.27689936111256L264.4697432961234,311.203477584074L264.5842620385406,311.27689936111256L264.7486992256422,311.29452059486056L264.9601184387104,311.2416568998135L265.153919428122,311.2915836823287L265.31542019650556,311.391437393351L265.47985738360717,311.4149323740205L265.5767578542584,311.2710255849124L265.7676224249519,311.25634126570606L265.9702325261942,311.203477584074L266.2198246534008,311.0448866504505L266.37545272867374,310.99789680826694L266.48997147109117,310.886295931435L266.51933522529157,310.65134696775283L266.5956810535706,310.51625150077325L266.8951916254614,310.6983367506773L267.13597464084205,310.79525316667724L267.2798571855692,310.9156645474007L267.42373968218703,310.862801033138L267.56762222691646,310.82462181312764L267.76142316821847,310.6660312763649L267.92292398471136,310.5603043918094L268.1343431977798,310.5103778021746L268.3486988295658,310.50156720658447L268.463217571983,310.2989242736683L268.58654542622594,310.1990712812187L268.72161881101783,310.14914485745095L268.865501355745,310.16089222717653L268.95359271457005,310.01698667300184L269.18556657001045,309.76148114815527L269.452776968983,309.95824974385357L269.5878504018842,310.0404814413002L269.7992696149522,310.0786604654673L270.0224343585669,309.9670602601488L270.2632173739448,309.8613338090769L270.40709987056243,309.808470658764L270.80938370243643,309.76148114815527L270.9444570872254,309.9288812636033L271.05016666970505,310.0786604654673L271.205794744978,310.17851333156517L271.37904104390805,310.36647187212554L271.48475067449704,310.5074409529617L271.55228734283855,310.6660312763649L271.7049789993937,310.75120025577587L271.7725157158443,310.9009802627635L271.92814374300815,311.0125811504234L272.00448957128447,311.1329927040968L272.11019920187323,311.23872003643123L272.2452725866651,311.32388929028303L272.57121054215077,311.61757684954745L272.77382064339054,311.81434780247014L272.9088940281795,311.97881330704377L273.02341277059713,312.0992256387199L273.1672953153238,312.0169928209416L273.3111778600535,312.0933518782559L273.5519608754314,312.4164098688123L273.61068843194425,312.56031776793566L273.7457618167359,312.6484247195313L273.927817275601,312.63374021589954L274.02471774625224,312.7335947830452L274.1686002428728,312.807017317974L274.37121034411234,312.754153083331L274.64135711369363,313.0625280316258L274.7734941759834,313.2446163535872L275.0054680314265,313.3356606244828L275.2668056891789,313.3062915280655L275.4664793717011,313.43257876682645L275.31378771514574,313.6910274972345L274.697148299598,314.407637742646L274.5356475312142,314.56329539976946L274.4475561723889,314.4428809689497L274.37121034411234,314.31659278996585L274.1010635745315,314.0375844911891L273.98654483211385,313.9670982483399L273.8808352015253,313.8554951176911L273.7839347308743,313.7115859334581L273.57251551780587,313.53243393152417L273.4286329730792,313.46488484478255L273.3405416142539,313.3503451989866L273.2436411436029,313.25049020838134L273.1203132893572,313.07721253032395L272.9088940281795,312.8833767857802L272.7444568891872,312.78352211625395L272.6299380986636,312.63374021589954L272.4273280455302,312.43109435069556L272.29225461263195,312.3694195943842L272.0426624854256,312.33417687434996L271.8694161864953,312.2813128101102L271.69616988756525,312.1755847384698L271.46419598401303,312.10509944753767L271.23515849918135,312.1520896377582L271.07953047201727,312.17264785669215L270.92683881546213,312.17264785669215L270.7535925165321,312.1990798910351L270.58915532943024,312.27250215863796L270.47463658701304,312.3547351186596L270.33075404228634,312.47808469295205L270.1663168551845,312.60437121305085L270.0517981127673,312.6807305749665L269.8198242573244,312.67779368309846L269.62602331602216,312.63374021589954L269.2912762005992,312.513327399362L269.0211293829086,312.5309487797976L268.81851932977816,312.65136161080983L268.2606074707435,312.7100995931341L267.9434786270863,312.9656101368606L267.8172143541228,313.12420308048615L267.655713585739,313.25049020838134L267.45310348449925,313.3356606244828L267.3092209397721,313.42670495274484L267.18295671491796,313.62054142503985L267.11541999846736,313.9377289747227L267.00090125605016,314.034647523608L266.83646406894854,314.09632303746866L266.67202688184693,314.21673712589245L266.51052611346586,314.4340701856095L266.4517985569528,314.616160252626L266.5956810535706,314.789439797291L266.67202688184693,315.01558455854723L266.7777365124357,315.12718860496193L266.90400078539915,315.33277518908795L267.03907417019127,315.52955127272355L266.962728341912,315.6499665905182L266.8951916254614,315.81443650092217L266.962728341912,316.0258980749432L266.86582787126076,316.22267514637497L266.76892740061,316.3812717560519L266.8071003147479,316.6367889571469L266.82765495712283,316.8394408668139L266.7307544864691,316.9833532374928L266.5575081394327,317.10964385274053L266.42243475464056,317.2329975989793L266.1258605533583,317.75872070060234L266.04657835447074,317.9261301232773L265.91444134029007,318.067106703549L265.77936795549795,318.18165026133727L265.5943761260244,318.2286425447607L265.5562032118835,318.4401079067938L265.63254904016276,318.57227393641483L265.7118312390503,318.75436954180395L265.5473941000578,318.8131101664079L265.45049358129495,318.921780275968L265.5473941000578,319.0715690069187L265.51803029774555,319.2683505663081L265.51803029774555,319.4269508044402L265.4622391118412,319.56205487310694L265.3066110846771,319.7059702582498L264.9982913528486,319.7206555194988L264.84559969629345,319.75002599890104L264.7486992256422,319.8998156876549L264.634180483225,320.0437314505877L264.4697432961234,320.10540966353136L264.2876878853649,320.0965985090571L264.11444153832826,320.07310205197234L263.9705590417077,320.1553396947009L263.7767580522964,320.37561941743746L263.7767580522964,320.73687895495596L263.65049382744223,320.81324289055857L263.50661128271554,320.7809350512195L263.32455582384773,320.8073687548376L263.3333649837855,321.30960959821454L263.1513095249204,321.37716263741504L262.98687233781857,321.4094706297382L262.5640339116819,321.12751036807686L262.2380959080874,320.833802415855L262.622761468195,320.6311443286701L262.42896052689,320.2992557448708L262.24690511613426,320.12009497045483L261.92096711253976,320.2698850915408L261.5627289841332,319.62079586260256L261.4100372794685,319.3270913744124L260.9960079651605,318.7837398508103L260.82276166623046,318.8894729600708L260.6700700096749,318.80723607388836L260.3411956835812,318.921780275968L260.15033106477836,318.9717098498824L259.8596296528226,319.1156245799141L259.6599559221911,319.283035777871L259.55424633971165,319.43869899755333L259.17838993954183,319.6237329031545L259.0345073948149,319.7705854010238L258.8230881817467,319.8469487583906L258.68801479695753,319.99673856011486L258.6380963522704,320.1788361668857L258.42667713920196,320.21114385326746L258.20644876619895,320.21114385326746L258.08018449323527,320.14946558936043L257.9157473061339,320.0819132048297L257.8012285637167,319.9908644139256L257.6367914247239,319.6971591311746L257.48409976816856,319.635481066032L257.31966258106695,319.6061106127214L257.17578003634026,319.6442922370131L257.02308837978467,319.66778861570316L256.6560410914433,319.8322634827336L256.32129402412966,319.86457108177063L256.16566594885626,319.8117041188774L256.0305925640646,319.86457108177063L255.50204450733895,319.7265296052203L255.09682430485964,319.5444326392094L254.80905926351238,319.53268443649426L254.42439375151662,319.3505876954769L254.28051120678697,319.30359505760396L254.15424693382624,319.17730234941183L254.0103644372059,319.0774431113276L253.8958456947912,318.8894729600708L253.9810006348962,318.7015030791732L254.07790110554743,318.5869590697129L254.49193041985518,318.1375950498837L254.75033170699953,317.873263992374L255.17610655185626,317.41509136702473L255.2230885778231,317.2418085611167L255.05865139072148,317.12726580957127L254.86778682002523,317.03621906541247L254.69454052109768,316.97747927393124L254.5124850622301,316.9451723826592L254.37741167744093,316.8247559258855L254.2423382926488,316.76601622620024L254.15424693382624,316.65734782716635L253.9810006348962,316.6279779863066L253.80775433596614,316.6221040381422L253.60514423472614,316.6279779863066L253.31737919337888,316.5780493387674L253.10595998031044,316.6162300902341L252.953268275646,316.9627943180191L252.69193066600246,317.2418085611167L252.76827649428174,317.3680994187639L252.87398607676118,317.5883743968686L253.0208049920966,317.8350828841674L253.0677870661725,318.0759177207308L252.91509536150807,318.1757762451292L252.76827649428174,318.16696517318417L252.60677567778862,318.26388670814146L252.43352937885857,318.2932569076148L252.1839372035431,318.3020679398562L251.9607725080375,318.2785718070598L251.7787170491697,318.2110204425364L251.59666159030462,318.09941386565083L251.47920647727892,318.0171774728897L251.29715106652316,318.5663998546861L251.15326852179373,318.5605258213361L250.94184926061598,318.6045812222095L250.8449487899652,318.8894729600708L250.81558503576184,319.10975047378054L250.00808104952034,318.9129692021449L250.0756177178589,319.1919875506835L248.37251843465742,318.2492016589746L247.96729823217788,318.07004370921294L247.81460657562252,318.40780066139047L247.67953319083085,318.61339227528583L247.70008783320532,318.76905469548393L247.8733341321356,318.85129155766583L247.65897854845866,319.20667275361757L247.52684153427526,319.5238732731276L247.391768101377,319.7647112651726L247.0746393058289,319.6061106127214L246.98654794700383,319.741214868813L246.59307327507054,319.5150621584846L246.3141173455515,319.45632126516335L245.80318756059228,320.26401098093254L245.44788580279464,320.2228921180089L245.08083856256235,320.14946558936043L244.96631977203583,320.4813537829433L244.84005554718442,320.7985575036447L244.82243727541845,320.95715968598364L244.64038181655337,321.27436460103326L244.493562901215,321.49170914076734L244.33206213283142,321.3947851732757L243.9356510902894,321.3331063326648L243.81232318793445,321.27142747426853L243.66844064320776,321.4447157130266L243.4364667877644,321.3947851732757L243.31020251480118,321.55338805951544L243.4364667877644,321.7325508676495L243.26322048883435,321.7472363638191L243.3601209594883,321.87353157725573L243.19568377238647,321.92639940260534L243.2044929323215,322.1084998462445L243.0606103875948,322.1084998462445L243.09878330173296,322.2906005576661L243.0606103875948,322.4638901688887L242.93728248524258,322.637180024006L242.81982737221688,322.9749491112994L242.7141177897372,323.1952338142548L242.56142608507275,323.35090188830657L242.35881603193934,323.63874150485975L242.19437884483773,323.57999867332813L241.9741504718345,323.9471418997351L241.8596317294173,323.7914730101942L241.80971328473288,323.55650155833115L241.71281281407914,323.45663883439136L241.1460918432158,323.33034194528904L239.25212794121148,322.9749491112994L239.0495178880808,322.8985838481395L238.1069404689356,322.7576019194977L237.52847401563508,322.637180024006L237.0674626272512,322.5549407533269L235.2204807993228,322.1848646187513L233.98720196822455,321.9528333477769L233.60253645622606,321.8236009140626L234.12227535301372,321.1656924482918L234.7007418544233,320.5254098386119L234.8328788686067,319.7177184767395L235.05604361222117,318.9188432512955L235.27627198522418,318.19046128614065L235.6814921395976,316.74839431644256L235.8459293266992,316.093448391865L236.17186728218462,314.9333500271059L236.31574982691131,314.7688811569463L236.6152603988021,314.46637644198887L236.7885066977326,314.2255479438474L237.28769100025715,313.749765901134L237.452128187359,313.6528475451882L237.53728312746352,313.4854432486714L237.76925698290688,313.08602327837L238.16273165483994,312.34886134802787L238.3858963984544,312.1285945407812L238.39470555839216,311.799663381817L238.36534175607972,311.391437393351L238.32716884194156,311.194666948214L238.239077483119,310.9685281282299L238.25963217360004,310.7188947702343L238.3858963984544,310.4428300920715L238.4035146702206,310.06397621318L238.50922430080914,309.5911443817297L238.57676096914793,309.4296182876134L238.57676096914793,309.23578723378296L238.6354885737701,308.92742013751774L238.65310679742697,308.7394633343795L238.70302524211138,308.53975945748164L238.65310679742697,308.1491629178029L238.47986049849692,308.15797338086935L238.34478711370775,308.0728058160543L238.239077483119,307.86135557348905L238.18328629721464,307.72038886713966L238.23026837129055,307.18589133073647L238.16273165483994,307.05667239786874L238.1069404689356,306.8980856932111L237.88377577343022,306.43113676735123L237.74870234053196,306.2637403007287L237.54902865800977,306.1844473088811L237.32586391439554,306.243182856565L237.10563554138935,306.06403945970055L236.9705621566004,305.92013757516935L237.15261761546503,305.7909196269651L237.36403682853347,305.6617017777505L237.4991102133256,305.58828258814157L237.36403682853347,305.4737487274024L237.22015428380678,305.4120766916453L237.03809887304783,305.39739286315796L236.8824707977749,305.3445311199574L236.6152603988021,305.3239737878316L236.70041538701912,305.00093026027076L237.14380845552773,304.7278120856962L237.39340058273683,304.53398657753337L237.09389005895218,304.3959594596002L237.15261761546503,304.22269147192264L237.89258488525866,303.69407845155865L238.03940380059703,303.64415400146765L238.1744771853862,303.55898871912643L238.3183597301129,303.49144386743706L238.41232383015563,303.3504808461719L238.47105138666848,303.1830873700266L238.5591426973847,302.9804533663367L238.72064351387758,302.6691610365691L238.86452605860427,302.30207165730445L238.73238904442405,302.0612614310189L238.59731565963193,301.8498185855036L238.441687584359,301.6471860634761L238.37415091601724,301.3652629366696L238.28018681597496,300.63696352134195L238.62667941383506,300.62228008294346L239.02896319759702,300.67220371075376L239.2315732988368,300.7103806340843L239.45180167184276,300.71919072031153L239.72194844142405,300.74268420538846L239.88638562852543,300.73974752560724L239.87464009797918,300.5811664999441L240.250496498149,300.2199545695368L240.3943790428757,300.09955077575495L240.55881622997777,299.90573017574377L242.21493348721242,298.36691874560495L242.32064311780118,298.1936563810712L242.0504963001108,298.0820637403026L241.8390770870426,298.0203941163834L241.71281281407914,297.9528512827961L241.56012115752355,297.9381680443263L241.40742950096842,297.9616611975176L241.2136285596664,298.0057109211671L241.01982757025212,297.9352314063822L241.22243767149484,297.7120464684938L241.45441157504433,297.58283424436496L241.64527614574058,297.6944266127835L241.80971328473288,297.6797433928279L241.9829596317693,297.48592514143303L242.12684212838985,297.3655229960969L242.31183395786366,297.3038535870639L242.75229070387513,297.4242557446974Z\" stroke=\"#000\" fill=\"#FFF\" strokeWidth=\"0.5\"></path>\r\n        <path id=\"Turkana\" ref={(item) => countyRefs.current[22] = item} d=\"M192.22896863522624,1.8846857433422315L192.4022149341563,1.9230270758900474L192.53728836705727,1.8669897231447408L192.6312524671,1.7490160154900423L192.81624424846427,1.595649430363551L192.99829970733208,1.5366620915817748L193.41232902164006,1.527814002301966L193.60319359233358,1.4599783693956283L193.7881854218101,1.3626487452780225L194.03777754901648,1.2948127310922928L194.26681508195998,1.3361042639554626L194.49878893740288,1.2682681884671183L194.71901731040634,1.2387741811299975L194.8922636093364,1.3066103247365959L195.1066191930131,1.3626487452780225L195.46192095081096,1.3832944471318456L195.66453105205073,1.4422820936845255L195.85539562274448,1.480624002868069L195.9992781674714,1.4422820936845255L196.3281524935653,1.4216364332758644L196.47203503829496,1.4688265274137962L196.61591758302166,1.5366620915817748L196.7803547220144,1.6929783314155884L196.7803547220144,1.8669897231447408L196.6922634112982,1.9908615928437712L196.74218180787602,2.1383274665099066L196.88606435260294,2.1265302547045053L197.059310651533,2.0586960018728746L197.23255695046032,2.0793412152864335L197.3764394951902,2.002658907299292L197.56730406588372,1.9731656364578498L197.80808708126165,2.002658907299292L198.01069718250392,2.0704932891611065L198.36599894029928,2.2445024501768103L198.5128178556347,2.3772206178676925L198.49226316515364,2.580720661447117L198.6449548698181,2.6868940045071668L198.94446544170887,2.7075387782191456L199.13826638301384,2.7370313146735157L199.29095803956898,2.8225594168877706L199.59046861145998,3.1145329109029944L199.77252407032756,3.20890755689436L199.96338864102108,3.179415491220766L200.1278257800136,3.2383995448516885L200.29226296711522,3.353418166875599L200.53304598249315,3.394706769205584L200.7444651955616,3.4212493979226792L200.973502680396,3.5185722307963943L201.1584945098723,3.5185722307963943L201.34054996873738,3.4124018737657593L201.504987155839,3.3357230270642617L201.65767881239435,3.2855867320989205L201.82211599949596,3.3268754290314746L201.9748076560511,3.394706769205584L202.1010718809057,3.5687081313246836L202.11869015266893,3.798742267083753L202.15686306681005,3.9550464875658236L202.39764608218798,4.1850776759594055L202.50335571277674,4.388565246579958L202.51510124332276,4.583204297358691L202.49454655283898,4.931192073775577L202.51510124332276,5.105184437165775L202.60906534336527,5.267379822922209L202.77350248235757,5.470860045543702L202.888021224775,5.665491978830801L202.8704029530088,5.916152454938413L202.78231164229533,6.0989858547713425L202.65898373994037,6.2523291164547175L202.38883697035953,6.553115556298565L202.33010941384623,6.697609944648292L202.30368198214524,6.842103588580358L202.25376358557014,7.007238378106479L202.18622686911954,7.470200704933291L202.13924484315294,7.703153547502382L202.080517238531,7.936104587916873L202.04234432439262,8.233925479600885L202.11869015266893,8.437385590035575L202.25376358557014,8.853147618210954L202.3594731680496,9.044809032736993L202.58263791166405,9.354413362722795L202.66779289987812,9.510688677367256L202.72652045639097,9.66401457843827L202.76469337052913,10.050274465669048L202.80286628467024,10.194752117959155L202.8615938411831,10.321538062672204L202.89976675532102,10.4660143782109L202.95555794122538,10.610490056396685L202.98492174353532,10.746119636632926L202.96730347177163,10.920078433164377L202.89976675532102,11.094036285744124L202.84984831063684,11.25030261631349L202.84103919880818,11.412464977806223L202.8615938411831,11.607058637073436L202.99666722597226,12.040467373643992L203.0054763859098,12.196728868901545L202.99666722597226,12.562318703789515L202.95555794122538,12.718577589096668L202.888021224775,12.871887380923539L202.8615938411831,13.567668404517462L202.83223003887042,13.720973967168192L202.81167539649596,13.945034587577396L202.78231164229533,14.157301025780129L202.58263791166405,15.171442860299521L202.49454655283898,15.548789486960203L202.44756452687238,15.858328200130188L202.409391612734,16.20618712792063L202.409391612734,16.35063583702683L202.39764608218798,16.50392764016226L202.409391612734,16.7161766300853L202.37121869859584,17.25858403356267L202.312491142083,17.683070276409467L202.312491142083,17.88646789542679L202.32130025391166,18.03090884272791L202.30368198214524,18.184192413927633L202.312491142083,18.349266210992766L202.312491142083,19.024291076356633L202.32130025391166,19.218837023577123L202.312491142083,19.38390539592362L202.2919364997083,19.52833951955708L202.23614531380395,19.758253665282012L202.13924484315294,20.279975755813894L202.10988104084322,20.551149917980666L202.09226276907725,20.851796845338015L202.0628989667673,21.149493456545798L202.04234432439262,21.52676831235567L202.04234432439262,21.806774063386143L202.01298057018948,22.685092098518027L201.99536229842602,22.88845760447765L202.04234432439262,23.05350692423883L202.20678151149446,23.189082496270828L202.3800278104245,23.28339560587048L202.51510124332276,23.312868368586805L202.65017462811466,23.362972065837L202.83223003887042,23.401286590859854L203.21689559897823,23.498546329865775L203.39014189790828,23.57517501055193L203.54283355446364,23.660645272393623L203.8599623981204,23.87284625065527L204.00678131345603,23.999576743287406L204.44723801135888,24.550701153267227L204.5529476419474,24.71279479723424L204.69976655728306,24.91614742778617L204.81428529970026,25.10181614468746L204.89063112797658,25.24622442008362L204.95816784442695,25.39947328963524L204.99634075856534,25.61166283050693L205.07268658684416,25.92994456024033L205.17839616932383,26.61659725773319L205.3046604422873,27.06158764771314L205.38100627056338,27.621500690675447L205.44854298701398,27.93092217358779L205.49552501298103,28.402415979816425L205.53663429772746,28.691202571217246L205.62178928594403,29.186259451539456L205.6687713119111,29.899363964383213L205.69813511422058,30.05553767145807L205.68051684245734,30.20876399409778L205.71868975659527,30.47985497067191L205.70988064476683,30.692011626604256L205.73630802835874,30.88354073295858L205.7950355848718,31.45517487797366L205.7950355848718,31.667325245646424L205.85376314138466,32.17706993014872L205.86257230132196,32.62198523762356L205.90074521546035,32.766360463548125L205.96828188380186,33.258410058999345L205.99764568611408,33.41456798673124L206.0064547979398,33.65616941421638L206.11216442852856,34.21597085987955L206.1885102568076,34.80522554062895L206.1885102568076,35.01735467735517L206.17970114497916,35.17939689806417L206.20025578735385,35.59481062435165L206.1620828732157,35.904157938177946L206.14152818273192,36.62890346950587L206.15033734266967,37.05313761657686L206.1885102568076,37.285874907127294L207.53630783032327,37.942833679416594L207.42178908790606,38.14315941658154L207.18981518435385,39.15949979666712L207.05474179956468,39.68975239341725L207.02537804536132,39.83409748936498L207.04593268773624,40.0668159438774L207.16045143015322,40.22883414352077L208.17056546952813,40.452712632331156L208.19992927183762,41.01240251365576L207.1986243442916,41.860757293279846L208.66387703083274,43.17448814847285L209.87366480083892,44.24369899534369L212.3754589584562,46.31133707128666L212.36664984662752,46.48510740811204L212.33728604431508,53.86515359309564L212.29030401834848,61.894354242032506L212.33728604431508,65.0855414784796L212.33728604431508,68.97407953164355L212.3754589584562,80.92287474132738L212.3754589584562,83.83303466283135L212.38720448900222,85.15416441103204L212.41656824320262,99.88401454399764L212.42537740314037,101.995877968586L212.45474115734078,104.97232995082175L212.61624197383412,105.05173875678562L212.94511634803712,105.23408429586402L213.11836264696717,105.35760835055541L213.25343603175634,105.47524998548681L213.3767638860022,105.53112967032797L213.5118373189007,105.5811272442856L213.68508361783074,105.61053752123794L213.89650283089895,105.59877343184726L214.15784048865157,105.65759399513021L214.34870505934782,105.68700422622493L214.49258760407474,105.74582468370303L214.6658339030048,105.79288102783224L214.87725311607323,105.83111425314104L215.10922701962272,105.81052713922645L215.32945534451937,105.85170135842367L215.48508341979232,105.92816768768321L215.74348465882736,106.17815293020567L215.9079218459292,106.21638585585052L216.24560533196063,106.32226151722068L216.41885163089069,106.35167139882199L216.61852536152196,106.39872711504924L216.77415338868582,106.30461558946621L216.70661672034453,106.0634539750159L216.77415338868582,105.86934744867827L216.9268450452414,105.71641448786951L217.12064603465546,105.81052713922645L217.19699186293155,105.97522385709456L217.26452853127307,106.22520886042076L217.23516477706994,106.45754672124215L217.23516477706994,106.85163631717592L217.19699186293155,107.21925439578024L217.12945514648118,107.4986423012187L217.07072758996833,107.70156511910506L216.93859057578766,108.0868222003013L216.82113546276173,108.38385042569905L216.70661672034453,108.71322615769472L216.60971624969352,109.03083644619889L216.63908000389688,109.2219898051562L216.83288094519912,109.4249056698051L216.96501795937934,109.61017595911727L217.05310931820486,109.74251145554064L217.12945514648118,109.92778057612841L217.18818270299425,110.27479071398253L217.21754650530647,110.56298376565988L217.2557194194444,110.7658942371383L217.26452853127307,111.00703315860127L217.2557194194444,111.15112783239226L217.15000978885587,111.86277297620765L217.26452853127307,112.04803435768395L217.30270144541123,112.24799828036384L217.27333769121083,112.45090204317981L217.19699186293155,112.65380500327544L217.07072758996833,112.84788532029705L216.91803593341297,112.9243410045166L216.76534427685738,112.94198461152382L216.69780756040973,113.07725203218808L216.6860620779728,113.24192495745174L216.64788916383168,113.4154190544293L216.71542583217297,113.53892300011978L216.78296254862357,113.70359440427578L216.791771660452,113.8976708190298L216.78296254862357,114.059400552878L216.78296254862357,114.26229718840196L216.75359874631135,114.39756115546922L216.69780756040973,114.76512455324863L216.57154328744627,114.98566129860242L216.51281573093343,115.18855432344435L216.54217953324292,115.33263730647965L216.4863883473413,115.81487125862128L216.301396517865,115.9501312524344L216.11934105899718,116.23829258843122L216.06061350248433,116.3911938828864L216.05180439065862,116.56467750285756L216.0224405883464,116.71169709106502L215.97545856237934,116.8440143608095L215.94609476006985,117.06748278402861L215.9079218459292,117.27036777727099L215.984267674208,117.39386257676952L216.17806866361934,117.41444501539812L216.22505068958594,117.62614971782702L216.33076032017493,117.52029747211901L216.49519745916723,117.43208710617802L216.51281573093343,117.59674632133931L216.42766079082844,117.808450249238L216.40710614845375,117.96428736800621L216.57154328744627,117.90548098077142L216.8035171909985,117.89665999058914L216.96501795937934,117.91430192131637L217.53467534896345,117.94370514226807L217.7079216478935,117.97310829881027L217.8518041926202,118.02015338296562L217.99568668923803,118.00251148729842L218.13956923396495,117.95252607648402L218.29519726113153,117.97310829881027L218.4684435600591,118.02015338296562L218.62113526472353,118.02897430452293L218.75620864951566,118.00251148729842L219.17023796382364,117.95252607648402L219.32292962037877,118.02897430452293L219.66942221823933,118.25243774192128L219.89258696185357,118.2994825796612L220.12162444668547,118.32888554004583L220.35359835023746,118.37593031043033L220.5650175633059,118.4935419828966L220.72945475040729,118.53176572313714L220.9203193211008,118.45531821532438L221.31673036364577,118.51118371626097L221.47823118013866,118.6082131216624L221.63385920730252,118.73464513654503L221.8071055062328,118.8199130363221L222.00677923686385,118.78168950185946L222.13304346171526,118.69642154123227L222.20938928999453,118.57881026677228L222.23875309230425,118.44355703204425L222.30628980875463,118.30830345502486L222.38263563703367,118.51118371626097L222.48834521951358,118.94634455155906L222.5000907500596,119.19626639727855L222.5000907500596,119.40796399179823L222.5265181336515,119.57261712194827L222.57643657833592,119.74609038786798L222.63222776424027,119.86957951998946L222.72031912306284,120.00482916560824L222.78785579140435,120.17830104270834L222.83483786548004,120.38117425017035L222.90237453382156,120.75751672059144L222.9611020903344,120.89276414968262L223.03744796671958,121.00743018789058L223.2106942656501,121.21912074524255L223.29878557636584,121.34554660191415L223.42211347871807,121.46903209443377L223.54837775168153,121.6248585868014L223.70987852006556,121.73070277061379L223.8948703495389,121.79832529624133L224.03875289426878,121.83654670146913L224.19144455082392,121.84536704790128L224.347072577988,121.83654670146913L224.52031887691805,121.92180976599909L224.7111834957209,122.04823404578181L224.86681152288475,122.1246764809205L225.0195031794401,122.23933993393646L225.1633857241668,122.289321382672L225.29845910895892,122.39516423529511L225.4335324937481,122.48042643185212L225.5686058785402,122.54804803345147L226.0501719092988,122.74209228332876L226.23222736816388,122.84793426521432L226.6080837683337,123.03021726926988L226.7695845367175,123.05079756440543L226.93402172381911,123.08901809904859L227.1072680227494,123.08901809904859L227.28051432167945,123.12723860725134L227.4361423969524,123.25072009443556L227.5594702511953,123.47416205282397L227.66517988178407,123.62704286328739L227.95588129374028,123.86812325561502L228.1467458644338,124.0621628760776L228.25245549502233,124.18564223397789L228.40808352218892,124.43848014773818L228.56958433867953,124.82361470467174L228.56958433867953,125.01471102303154L228.59894809288244,125.14994806812166L228.87790402240148,125.74675093002566L228.96599538122405,125.94960368582667L229.01297745529973,126.09365810749031L229.08932328357878,126.22007286034113L229.17741459429226,126.40234486204503L229.29193333670946,126.5757966808741L229.41819760967292,126.7492480170514L229.48573432612056,126.952097130672L229.5796984261633,127.10496847033946L229.68540800864275,127.23138101718698L229.7646902556396,127.34603399790277L229.80286316977754,127.49008487418521L229.89682726982028,127.64589456486686L230.01428238284598,127.76936612521646L230.0994373229537,127.87519863087172L230.13761023709162,128.0486460123083L230.15816487946654,128.4072981745429L230.20514695354245,128.5601656237551L230.24331986768038,128.75418910157254L230.21689248408848,128.95409142886817L230.21689248408848,129.11871635196613L230.27268366998987,129.26276273268934L230.36077498070608,129.38035136267752L230.4283116971567,129.54203537505026L230.5516395513996,129.88891949004176L230.62798537967888,130.03296400517027L230.76305881257713,130.2064048564111L231.0801876562341,130.3504485859426L231.215261041026,130.44745740908385L231.3708890681903,130.54446607096935L231.42668025409444,130.78551722780693L231.2739884051,130.99717130408686L231.13891521274695,131.16179020595953L231.02439647032975,131.33522770849513L230.9363051115074,131.5263023345915L230.88051392560305,131.71149716414908L230.84234101146467,131.96136230630694L230.9098776798062,132.19064934791277L230.92749595156965,132.44345196789985L230.85995928322814,133.1548210709519L230.9186868397412,133.38704300883842L231.01558731039472,133.59868758375228L231.04201469398686,133.81914981392777L231.02439647032975,134.04255075399703L231.17708812688534,134.25419296496517L231.24462479522663,134.45407662054288L231.3503344258154,134.58047329761288L231.50596245297925,134.74508252059312L231.6586541095346,135.0037531947146L231.76436374012337,135.109572729737L231.91999176729018,135.17717956603934L232.07268342384532,135.19775553424543L232.2253750804009,135.24478627870468L232.6394043947089,135.25360456932685L232.74511402529765,135.4652425333521L232.78328693943558,135.66806157843422L232.90074205246174,135.83266779749812L233.06517923956312,136.01490993302713L233.44984479967047,136.5439968701625L233.58198181385137,136.69978269538464L233.67007312456758,136.8438107766637L233.7963373975283,136.9790204799549L233.94902905408344,137.08483658702218L234.09291159881332,137.17007716736435L234.3425037260197,137.355254636125L234.48638627074638,137.44049489027856L234.65082345784822,137.56688537516794L234.7858968426399,137.76969741364883L234.84462439915274,138.05774823776926L234.92097022742928,138.2488015876412L234.9679522533961,138.4222187308028L235.12358032866905,138.82783664702524L235.17056235463565,139.06885468682816L235.2204807993228,139.27166187275202L235.39372709825034,139.39510941790985L235.47007292652916,139.52149588217935L235.4495182841547,140.2621744691502L235.48769119829262,140.40619430502144L235.48769119829262,140.56197046117575L235.3438086535657,140.9264263991101L235.33499954173726,141.14098419669546L235.35261781350346,141.39962817984153L235.4113453700163,141.67002765282447L235.42015448184475,141.8610700394829L235.37317245587815,142.00508625280747L235.30563573942754,142.13146751177106L235.2469081829147,142.3136912789663L235.1999261569481,142.53706163047775L235.1793715145734,142.71928419935227L235.17056235463565,142.93971409097242L235.1793715145734,143.10430125429508L235.2469081829147,143.30709557133494L235.36436329594062,143.48931596742477L235.4495182841547,143.65390173340535L235.53760964297976,143.79791394242176L235.63157374302205,144.17410755332418L235.6814921395976,144.32693558153252L235.7960108820148,144.62671261332548L235.83418379615273,144.81774627066216L235.93108431491328,145.0587418016985L236.14250352798126,145.18511716247184L236.33630446928623,145.2321404614308L236.4508232117007,145.34675966609362L236.59470575643036,145.44374498750653L236.75033378359421,145.4937070875261L236.9118346000871,145.511340758017L237.1819814177777,145.36733231903796L237.26713635788246,145.18511716247184L237.46974645912223,145.13515482836706L237.6429927580523,145.15572754744113L237.79862078521637,145.04992488236104L238.01003999828458,145.04110800999217L238.20090456897833,144.98232868617993L238.47105138666848,144.75014978719696L238.79698934215412,144.9735117565897L238.91444445517982,145.09694832613422L238.8850807009792,145.9845090703413L238.8850807009792,146.90732452770973L238.87627154104143,147.2452951487365L244.8106917448722,150.07536531739686L244.74609144714213,150.28695461349247L244.77251883073382,150.5191143394497L244.696173002455,150.81886374048375L244.75490055896785,151.17444713078987L244.74609144714213,151.3654622388917L244.64038181655337,151.4918258095925L244.50530843176148,151.5505994728872L244.38785331873555,151.712226827312L244.2146069716964,151.77981630035777L244.0325515609402,151.90617911960157L244.01493328917422,152.07074430337303L244.19698869993294,152.21473847946245L244.29388921869304,152.36754832929628L244.32031660228495,152.51154194383744L244.31150749045923,152.72606249962996L244.26452541638355,152.870055331795L244.16762494572959,152.97584583776285L244.10889738921674,153.1110223324387L244.17643405755803,153.3226024156471L244.22635250224243,153.52242749836938L244.19698869993294,153.77514660564754L244.0237424010029,153.89856726962887L243.8211322997629,153.9485231998134L243.67724980314506,154.09251354671454L243.66844064320776,154.36286207344818L243.686058914971,154.553868539223L243.7741502737963,154.84184655158933L243.686058914971,155.02697468076323L243.5421764183534,155.08280687934365L243.36893007131425,155.09456099048435L243.21623841475866,155.12100782981915L242.97545539938073,155.20034819324107L242.73467243210916,155.31495079682855L242.22374259904086,155.62349540399072L241.8185224446679,156.03782462361852L241.64527614574058,156.19944173477398L241.45441157504433,156.31698123508045L241.15490100315333,156.4785977742754L240.91411798777267,156.56675210354672L240.5676253418062,156.7107372228679L240.12716864390336,156.79889127189352L239.79829426970014,156.84590673730185L239.4429925600141,157.0104605080494L239.4224378695303,156.79889127189352L239.24038245877432,156.8752913457125L238.8380986269035,157.19264466399346L238.70302524211138,157.40421276438593L238.60612477146037,157.53938095299776L238.28018681597496,157.56876533201662L238.18328629721464,157.67454894170828L238.09519498649843,157.83616244077314L238.03940380059703,158.00952927592775L238.01003999828458,158.2416639395317L237.95131244177173,158.5795801450859L237.88377577343022,158.7529452432977L237.7105294263938,158.97332405034726L237.49030110149693,159.1966405705379L237.27888184031963,159.3876344215535L237.14380845552773,159.5521825504387L237.12325381315554,159.7431755449236L237.2583271979447,160.16629664760197L237.2583271979447,160.35141140263488L237.1819813696684,160.71576289976633L237.2583271979447,161.3710035796256L237.32586391439554,161.6413254783038L237.32586391439554,161.8440662168104L237.17317225783995,161.9498438187366L236.96175299666265,162.1408307472282L236.80612496949857,162.19078111510345L236.70922449884483,162.34357021829726L236.70041538701912,162.55512385870134L236.4978052857764,162.94884717668793L236.36273190098723,163.05756148218882L236.21884935626053,163.18978136448783L236.29813155514535,163.37488883248682L236.16305817035618,163.4512822566054L236.17186728218462,163.60406888081457L236.27757691277338,163.74804064130655L236.27757691277338,164.19170697831976L236.26876780094472,164.36505937109837L236.13369436804396,164.22990330183177L235.99862098325457,164.2592850987604L235.95163895728774,164.3944411176521L236.06615769970495,164.55897859032274L236.2012310844941,164.6529998425599L236.2394039986325,164.84691830745635L236.13369436804396,165.19361984158877L236.0162392550178,165.5109385906374L235.98981187142613,165.64609252586658L235.93108431491328,165.79006052356817L235.8253746843243,165.9545951092077L235.72847421367328,166.1279436592552L235.63157374302205,166.36886816535173L235.57578255711792,166.54221582266118L235.54641875480547,166.67736797423657L235.63157374302205,166.8213341741012L235.7960108820148,166.7831390907211L235.91052967253836,166.67736797423657L235.95163895728774,166.8889100689159L235.9692572290512,167.1004515629212L235.9692572290512,167.30317833274324L235.93108431491328,167.45595757954607L235.93989342674172,167.81146204510674L236.02798478556406,168.2639200313077L235.99862098325457,168.45782981990675L235.96044806911618,168.63117303523927L235.83418379615273,168.9102842517308L235.80482004194982,169.06306050870148L235.8459293266992,169.23640245567327L235.69030129953535,169.33335631472903L235.5640370265719,169.45968987395813L235.45832739598313,169.59189924214252L235.4113453700163,169.73879830500005L235.2674628252896,169.853379383099L235.17056235463565,170.05609938611383L235.0178706980803,170.153052245087L234.93858849919548,170.28526051737666L234.7858968426399,170.3910270046801L234.72716928612704,170.66131847096497L234.72716928612704,171.16370579299067L234.7389147685642,171.37523638842822L234.75653304032767,171.5191944341375L234.7858968426399,171.67196594811682L234.89160642511956,171.84530252333195L235.0648527721562,171.76010325410383L235.1999261569481,171.92168802279105L235.19111699701034,172.10677569595302L235.05604361222117,172.4710740922493L235.1529440828724,172.6062166332663L235.10302568629686,172.7413589625047L234.7858968426399,172.70316658551417L234.7007418544233,172.81774366583193L234.7183601261895,172.9616992916718L234.74772392849923,173.09684106540152L234.7947059544656,173.24079617946387L235.03548896984626,173.53164362892977L235.17056235463565,173.65503312463832L235.43190001239122,173.8195522290672L235.61395547125608,173.88712250043739L235.54641875480547,174.0310763096591L235.4495182841547,174.13683818253202L235.35261781350346,174.31016982520862L235.23809907108625,174.4658742739088L235.1529440828724,174.59807591739724L235.20873526877676,174.75377980950861L235.03548896984626,175.0034930344641L234.91216106749175,175.06224898226293L234.78589679453103,175.17682297577852L234.8622426709162,175.32077472911618L234.8534335109789,175.50291742434L234.65082345784822,175.43534838946016L234.56566846963415,175.54404635609583L234.60384138377208,175.69681082132212L234.91216106749175,175.99646345221407L234.89160642511956,176.1580404534671L234.97969778394213,176.30199057901882L235.1323894404975,176.16979146525915L235.2204807993228,175.98471236960245L235.32619038180246,176.09047191330643L235.33499954173726,176.29317733327252L235.2292899111485,176.50469552262487L235.08540741453066,176.70740001084317L235.04723450039273,176.91010404476407L234.95914314156744,177.02467567902352L234.7947059544656,177.007049279465L234.68899637198615,177.10105668818983L234.60384138377208,177.2185658003163L234.43059508484203,177.50646249860412L234.40123128253254,177.86192556054004L234.27496705767817,178.044063136876L234.16925742708963,178.15275797163562L234.20743034122756,178.44946477416332L234.11346624118528,178.59341132994183L233.98720196822455,178.69916784632602L233.7963373975283,178.75792139831918L233.61134556805473,178.76673440624754L233.43809926912445,178.80492419385058L233.3617534408454,179.02818726793373L233.37056255267385,179.23969918994234L233.3999263549863,179.40420806671082L233.37056255267385,179.53640251742834L233.31477136676972,179.6715344221416L233.32358052670702,179.82722968108843L233.22668005605624,179.932984750527L233.11216131363904,180.0299268612311L233.01526079487894,180.2296859337485L232.9183603242277,180.61451480456412L232.8420144959489,180.74083229448922L232.5924223687423,181.08747024772657L232.5542494546039,181.442919699361L232.55424940649232,181.7219908071666L232.504331009917,181.94524680224964L232.51607654046325,182.09800077603782L232.44853982401537,182.25075446025141L232.419176069812,182.39763274218905L232.27529352508532,182.791265550144L232.28410268502262,182.98220630384014L232.19894769680604,183.15552138682563L231.98752848373783,183.16727152147064L231.83190045657398,183.14670873679142L231.62929035533398,183.0321445510285L231.40906198232824,182.98220630384014L231.2358156833982,183.07914528476135L231.13891521274695,183.20545954559213L231.07137849629657,183.40814959709658L231.04201469398686,183.59027653873335L230.94805059394457,183.81059093288366L230.8012317267153,184.0044671663191L230.77480429501406,184.27471825555466L230.71607673850122,184.50384365773408L230.589812465538,184.6595310903227L230.4841028830583,185.09134217414575L230.16697403940134,185.29402837853223L230.07007356875033,185.3997775050223L229.8498451957446,185.67002487637959L229.7441355651556,185.85214764448872L229.6765988968168,186.01664538955805L229.5796984261633,186.1987675844311L229.50335259788676,186.3720770880953L229.31248797908438,186.86262954113505L229.1392416801541,187.15049754278346L229.08051412364102,187.34436742046188L228.94544073884913,187.42955251479478L228.76338527998405,187.4677389236225L228.6077572528202,187.32380548898266L228.493238510403,187.1416852910408L228.31999221147294,186.97718935387616L228.21428258088395,186.8920038864592L228.11738211023317,186.75688188624127L228.0410362819539,186.62175975640923L227.9940542078782,186.4690127823307L227.91477200899317,185.48496426752536L227.88834462539876,185.26465357206848L228.00286336781596,185.120716983091L228.0615909243288,184.94740533690793L228.079209196095,184.8034682930566L228.08801830792095,184.6007811452012L228.04984539378256,184.41865606176844L227.9940542078782,184.2923433052224L227.90596289716473,184.15721787660226L227.77088946426375,184.06027995683496L227.60938869588244,184.14840536423205L227.51248822522894,184.25415570167758L227.2247231357751,184.49503112794918L227.18361385102548,184.63896861587068L227.17480473919977,184.81228079562652L227.18361385102548,185.15009183157557L227.1072680227494,185.26465357206848L226.9046579215094,185.28521591824352L226.68442959661252,185.27346598603202L226.54935616371176,185.2059039815556L226.50237413774516,185.05315487598858L226.35849159301802,185.15890425557205L226.0501719092988,185.3527779176391L225.82700716568434,185.54371369545984L225.64495165870744,185.68764968090807L225.32782286315955,185.99608319200186L225.15457656423223,186.17820542365712L224.96077562292726,186.283953628037L224.74935640985882,186.43082600320372L224.58785559336593,186.58357303424077L224.5085733944809,186.71869521436201L224.4615913204052,186.93900276379063L224.43222756620185,187.16224725873195L224.43222756620185,187.78791673325753L224.42341840626432,187.94947399011693L224.35588173792576,188.11396838692707L224.31770882378464,188.26671293523162L224.31770882378464,188.46058068802645L224.25017210733722,188.64269858357534L224.28834502147515,188.83656564399405L224.36469084975147,189.02749498443865L224.347072577988,189.21254926247508L224.19144455082392,189.4798492961202L223.92423415185158,190.01151001876838L223.8449519529638,190.2229986760182L223.97121617781818,190.36692816309213L224.1150987225451,190.34636681954947L224.33532709555084,190.26118407573216L225.1075945382654,190.0496955416337L225.31901375133384,190.02032207851977L225.480514567824,190.0761316130756L225.63614259499082,190.2112493010295L225.9327167962731,190.58722808890928L226.1470723799498,190.90445918192646L226.26159112236724,191.06013704848598L226.40547366709393,191.21287738810776L226.5111832495736,191.3391817569862L226.6550657943003,191.48310981482916L226.79013917909242,191.5682916023054L226.96338547802247,191.65641066478844L227.11607718268692,191.6945955619159L227.30106896405164,191.635849564546L227.47431531109055,191.61822575440613L227.66517988178407,191.62703763576604L227.83842618071435,191.52129477217096L228.02048163958193,191.46254868215016L228.23483722325886,191.48310981482916L228.38752887981445,191.3861787132746L228.58132986922556,191.30099673620467L228.8103673540602,191.30980869117073L228.93663157891433,191.39499061326495L229.05115036943812,191.53010666130766L229.1392416801541,191.66522254309166L229.2067783966047,191.80033830706134L229.29193333670946,191.90608090264914L229.494543437949,192.01182344508425L229.6472350945046,192.1381268969035L229.73532645332966,192.26149287983213L229.93793655456966,192.4553534606743L230.09943737106255,192.63746463694343L230.27268366998987,192.7138337420887L230.46648461129485,192.74320648314188L230.53402127963614,192.9928742782731L230.69552209612675,193.02224694612585L230.88051392560305,192.98406250529086L231.0537602245331,192.92531714188897L231.20645188108824,192.98406250529086L231.34152526587764,192.93706622665718L231.49421697054208,192.91650536359697L231.62048119539668,193.07218039646233L231.6968270236755,193.292474918356L231.79372749432673,193.4745847350487L231.93761003905342,193.5509532711331L232.05212878147063,193.407027887886L232.2077568567438,193.3512200417692L232.36044851329916,193.4745847350487L232.38100315567385,193.70662742766496L232.3721939957361,194.20595825232044L232.31346643922325,194.3998154895273L232.19894769680604,194.70822405918778L232.06387431201688,194.88151998875497L231.38850733995332,195.19873887177212L231.215261041026,195.3044783384609L231.04201469398686,195.49539653614767L230.89813219736902,195.69806322211082L230.77480429501406,195.80380223554397L230.61917626785043,195.87135762622069L230.44592996892015,195.9301014313624L230.27268366998987,196.13276736464076L230.2257015959142,196.4969776931897L230.1963377936047,196.6320877366574L229.8498451957446,196.8259409372509L229.54152551202492,197.21070924072248L229.39764296729822,197.45155596856665L229.21558750843042,197.48973893904937L229.05115036943812,197.43980738943583L228.9248860964774,197.50736184811262L228.89845866477322,197.70121367739773L229.02178656712817,197.90387654800537L229.17741459429226,197.94205937521L229.33891541078538,197.93031084388943L229.48573432612056,198.31507561518455L229.6765988968168,198.30626424388228L230.03190065461195,198.4325607936874L230.1963377936047,198.5001147465331L230.34902949826915,198.4208123098064L230.44592996892015,198.31507561518455L230.61917626785043,198.25927010847005L230.85995928322814,198.1417847626512L231.01558731039472,198.23871018355493L231.01558731039472,198.4208123098064L230.97447802564534,198.68221648266245L231.1212969409837,198.8936890972735L231.1682789669503,199.02879640909407L231.29454323991104,199.20208600618088L231.38850733995332,199.42236906828091L231.5353262552917,199.5574758019036L231.64103583777114,199.69258238856582L231.66746326947236,199.90405332363673L231.73499993781388,200.12433509481394L231.7731728519518,200.3181827967501L231.6968270236755,200.500281816775L231.49421697054208,200.59720543969345L231.33271615405192,200.4826593843773L231.1976427692598,200.3387423759401L231.0537602245331,200.21244772370207L230.71607673850122,199.95104678402126L230.53402127963614,199.87468236582757L230.28442915242726,199.81887756545404L230.11999196532543,199.6632114290562L230.01428238284598,199.5192934780064L229.8498451957446,199.45174013286007L229.6765988968168,199.3665640648926L229.494543437949,199.51048219303325L229.31248797908438,199.5574758019036L229.1186870377794,199.44292879497021L229.01297745529973,199.58684683451003L228.95424985067757,199.73957597673558L228.76338527998405,199.78069532176545L228.64593016695835,199.9804177238787L228.72521236584612,200.10671260972683L228.86028575063528,200.21244772370207L228.9748044930525,200.34755360251341L229.05115036943812,200.46209978056115L229.19503286605823,200.4826593843773L229.32129713901895,200.5502121728926L229.45637052381107,200.59720543969345L229.60906218036666,200.32699402476317L229.7147718109552,200.23300732018862L229.87039983811906,200.38573567343872L229.8792089980568,200.56783464397608L229.87039983811906,200.74993335194753L229.91738191219474,200.89678695487743L230.1111828534997,201.11706699285207L230.1963377936047,201.23161247552753L230.2257015959142,201.3667173161787L230.1963377936047,201.5018219660968L230.11999196532543,201.65454879451642L229.99372774047401,201.80140135791763L229.87039983811906,201.68391929172438L229.73532645332966,201.60755591766124L229.47398879557454,201.67510815770333L229.13924134338754,201.9247577322165L228.9748044930525,202.09804297042385L228.96599538122405,202.28013950338942L229.05995948126656,202.66782803349813L229.05115036943812,202.85873482529468L229.02178656712817,203.09075962198088L229.02178656712817,203.36977626924607L228.88671318233628,203.54305998105187L228.71346688340896,203.66641437855503L228.71346688340896,203.85144573654895L228.7545761681556,204.04235082200216L228.7721944399218,204.24500363370836L228.86909491057304,204.37129432072845L229.05115036943812,204.3977272760484L229.21558750843042,204.33017643339457L229.41819760967292,204.19801168298233L229.87039983811906,203.9454298163593L230.05245529698686,203.8103276898653L230.1963377936047,203.77214662830306L230.32260206656815,203.86906775955293L230.46648461129485,203.90724879340848L230.64854007015992,204.04235082200216L230.78361345495182,204.1304607881837L231.02439647032975,204.15689374269573L231.1888336093225,204.26262560498418L231.215261041026,204.4946479556444L231.17708812688534,204.68848910636814L231.1682789669503,204.86177111543535L230.98622355619182,205.17015385353227L230.89813219736902,205.3992376926106L230.88051392560305,205.58132972445193L230.94805059394457,205.70761917303247L230.85995928322814,205.87208903652788L230.8217863690902,206.03362175579193L230.94805059394457,206.1980912327166L231.10955141043746,206.3537496410462L231.13010605280942,206.51528175370757L231.1976427692598,206.67093985731262L231.27398859753907,206.9499491800591L231.33271615405192,207.12322836142215L231.34152526587764,207.32587664968761L231.26517943760132,207.50796612716172L231.1682789669503,207.69886616358374L231.09193313867127,208.0836024287881L231.09193313867127,208.248069527578L231.06256938447063,208.4125363913972L231.0801876562341,208.6151828617953L231.17708812688534,208.84426112044486L231.25343395516416,209.05571770086937L231.2827977093648,209.2877321539433L231.24462479522663,209.48156673272763L231.2358156833982,209.71945431357844L231.2827977093648,209.9220989865324L231.34152526587764,210.0483846170986L231.312161511677,210.23928139152042L231.26517943760132,210.4624833772804L231.25343395516416,210.74148545625889L231.3503344258154,210.92357075733585L231.43842578464046,211.03810816004696L231.47659869877884,211.22312995190043L231.52358072474544,211.38465674361487L231.5823082812583,211.51094115829662L231.66746326947236,211.66365709246946L231.7467454683599,211.8751097202502L231.7261908259852,212.14529870667016L231.64103583777114,212.65630706217672L231.59992655302176,212.83839011724962L231.4002528704998,213.53147849960223L231.26517943760132,213.8868319776564L231.1212969409837,214.2245638975606L230.96566886570758,214.52411684372925L230.9098776798062,214.65627237873719L230.7454405408139,214.94701416408884L230.68671298430104,215.07035904046586L230.46648461129485,215.43745625853234L230.36958414064384,215.58135817501162L230.1111828534997,215.86035131176448L229.84103608391865,216.12172340967467L229.5503346238536,216.38015830747983L229.41819760967292,216.51524913130973L229.27137869433477,216.63859286349623L229.10987792595097,216.80305101972976L228.90726782471097,216.8999637739215L228.86064820850743,216.76839234081388L228.88345899958313,216.61396114441422L228.82730934890674,216.48936315951866L228.7046577234712,216.3596010020096L228.59744678410448,216.20682366253857L228.6079748526265,215.99623492090976L228.62831189519238,215.80161596045102L228.67529396926807,215.54318013344047L228.6576756975046,215.38753106420774L228.61950278336667,215.17608309931387L228.4588273836107,215.09421015419392L228.37460293165032,214.91696348889022L228.12912759267033,214.87065778215455L227.9940542078782,214.80311170043723L227.84723529254302,214.85010029240007L227.7043166721453,214.85203148767135L227.55692390526906,214.71514771816962L227.42439686640614,214.4830017271836L227.24234140753856,214.42720267553062L227.08316135096834,214.42032077770762L226.9305045257779,214.3325745583013L226.79082878237477,214.16081485555583L226.69322417933404,213.98332655351766L226.67562043667522,213.79285427549965L226.59927460839867,213.34939623583574L226.46420122360678,213.26129183271746L226.4181096585835,213.09866206945262L226.06779018106226,213.04984111529018L225.5686058785402,213.10857745110812L225.18409513518804,213.18571367081157L224.8756206347132,212.72385404036672L223.88312486710174,211.5021306412346L223.2870400939289,210.7502960651946L223.07776002696892,210.55866797222322L222.65278240661496,209.95146772831077L222.45898146531022,209.71945431357844L221.95979716278794,209.0938973207546L221.84527842037073,208.96173705211785L219.0146098885507,205.40804862776392L218.28345177869437,204.50345890119337L216.33076032017493,204.55338772615508L215.78165757296847,204.58275762590048L214.62766098886414,204.60037955306572L214.1960134027927,203.9454298163593L212.62798750438014,201.4812625751733L212.1082485594834,200.6941289401413L211.8381017899021,200.24181860229385L211.70302835700113,200.04797078239218L210.98067935897348,198.93187161453156L210.89552437075986,198.7791414742784L210.3845945857979,197.98905363345125L209.93239235735177,197.23714368892L209.7885098607312,197.0256681802374L209.2981346700376,196.24731750976144L208.82537779921404,195.5247685609719L208.43190312728052,194.89914324009885L207.3630614832839,193.23372976431455L207.14283315838702,192.81957551601687L206.84332258649624,192.43479250891997L205.87138141315063,190.90445918192646L205.56306172943118,190.4051135118747L205.32521508465925,190.0496955416337L204.44723801135888,188.65444808336107L204.3033555147383,188.41358245007683L203.09063132601455,186.554198648806L200.08965286587568,181.89530799603108L199.63745063742658,181.1256590931846L199.5317410549469,180.9229642585841L199.39666767015797,180.77020845995642L199.2527851254281,180.74964516433616L199.01200211005016,180.69383046860068L198.75066445229754,180.5675128679837L198.5774181533675,180.5205109562295L198.29846222384867,180.30900192018913L198.12521592491862,180.2796256598566L197.97252426836303,180.20030964874093L197.7699141671235,180.15330750632302L197.42342156926588,180.0563655707445L197.03875600915853,179.82722968108843L196.8743188220567,179.69209800076743L196.7128180536729,179.5775296332249L196.51901706426156,179.52758958232226L196.375134567641,179.38364447296476L196.2106973805394,179.25732511364242L196.0668148358127,179.13394328898246L195.90531406742866,178.96062089831798L195.74087688032728,178.85486468012033L195.62342176730135,178.73735766176455L195.2593108495687,178.55522145512492L194.9421820540208,178.3642718443284L194.79829950929388,178.2673280482799L194.68084439626796,178.15275797163562L194.53696185154126,178.044063136876L194.39307930681434,177.98824682433974L194.21102389605585,177.87367639990325L194.12293253723305,177.6797876705839L193.9878591524414,177.56521681225414L193.7676307794352,177.4770853516692L193.59438448050787,177.43008182952462L193.45050193577845,177.38014061786674L193.2860647486766,177.24794307869664L193.11281844974928,177.08343030345827L192.97774506495716,177.02467567902352L192.6811708636751,176.99529832848185L192.54609747888298,176.88953989366462L192.3640420200179,176.84253606782147L192.12325905274656,176.79553226572284L191.92064895150656,176.70740001084317L191.70922973843858,176.6310186698591L191.54479255133697,176.63983188259107L191.3421824500972,176.58107697041686L191.1131449652628,176.55463726431586L190.92815313578922,176.41950077679002L190.77546147923363,176.25498649547276L190.68737012040856,176.14041388476437L190.53467846385297,176.03465439990612L190.38198680729784,175.9758990927309L190.21754962019622,176.0522809893697L190.01493951895623,176.11984955826614L189.84169322002617,176.14922714548248L189.65963776116132,176.1022229820689L189.38068187975136,176.0522809893697L189.13108970443568,176.14922714548248L188.996016319644,176.11103624653407L188.81396086077893,176.03465439990612L188.59079616527356,175.96708576686444L188.29422196398855,175.86132612576029L188.12978477688694,175.91714374705535L187.93598383558492,175.93770812001694L187.73631010495365,175.90833041541097L187.5806820777898,175.90833041541097L187.40743577885974,175.9758990927309L187.17546187530752,175.92889479039223L186.97578819278556,175.82313510419982L186.7144505350327,175.71737524490794L186.5030312738554,175.71737524490794L186.3385941348629,175.74381524552297L185.99210148889347,175.82313510419982L185.83060072051217,175.7350018968092L185.66616353341055,175.67624639300186L185.7248910899234,175.47647735238698L185.63679973109834,175.27377013006117L185.45474432034257,175.091626965631L185.20515214502416,174.73321516297034L185.07888792017252,174.57163557567702L185.03190584609683,174.35717498444794L184.72358616237466,174.21322166206528L184.6648586058618,174.0692681519073L184.5415307035098,173.97231967453382L184.6648586058618,173.79017386950323L184.77056818834126,173.59921412305906L184.6090674199604,173.49345159989622L184.6648586058618,173.29073976220664L184.73239527420333,173.1056546300486L184.73239527420333,172.9440720840637L184.65604944592678,172.80893002374512L184.61787653178612,172.6532226639041L184.59732188941393,172.46226041474614L184.4152668635336,172.32711798472718L184.33011149044137,172.20078832545823L184.15686519151132,172.1919746683796L184.01004627617567,172.22135356992248L183.9248912879591,172.0950241401037L183.81037254554462,171.96281864069817L183.645935358443,171.95106706510384L183.57839869010172,171.81592349282795L183.27888811820822,171.4310568791223L179.7288069589688,168.09057604225518L179.65246113069247,167.94661208666193L179.7787254036532,167.8232142021934L179.85507123193247,167.66749759860014L179.87268950369548,167.45595757954607L179.940226172037,167.2532311905617L180.03712664268824,167.13864649677006L180.17220007558922,167.04169009483508L180.48051975930844,166.96530011787297L180.64495694641028,166.80076759668754L180.58622938989743,166.6362347409377L180.58622938989743,166.45407302038194L180.7213027746891,166.33067286787713L180.30727346037838,164.32686311309953L179.7493616013437,162.17021333181373L178.41037318776557,156.71955265662672L178.35458200186122,156.55793665134098L177.64104211565973,154.05431204759483L176.98622978597382,151.79157100766355L176.84234724124394,151.12742796885993L176.62211891635025,148.891040870364L176.60156427397533,147.73608422649232L176.5722004716631,146.90732452770973L176.49585464338656,146.29309526389912L176.41950881510752,145.40553866434306L176.16991668790115,144.42392241020144L176.0348432550029,144.13590049033388L175.87040611601037,143.98895002453426L175.5151043582125,143.86551136351994L175.28313045466302,143.75970665866384L175.16861171224582,143.67153589958465L174.93663785680292,143.556913757879L174.76339155787264,143.51870633231957L174.4580082447619,143.51870633231957L174.22603434121243,143.4981330975531L174.01461512814444,143.4599256373633L173.83255966927663,143.3923277457846L173.67693164211232,143.2189241967915L173.22472941366368,143.09548407052472L173.0426739547986,143.08372788783214L172.84887301349363,142.9220797254395L172.64626291225386,142.6046603692643L172.56110797214887,142.4194983995739L172.50238036752717,142.2372749328042L172.46420745338878,142.07268555179135L172.45539834156034,141.71705350185243L172.4260345392479,141.5348280837074L172.37905251328152,141.3320281684858L172.34968871097158,141.1586190526025L172.23516996855437,140.83237344982507L172.19406068380772,140.57078794616808L172.17644241204152,140.32095810252974L172.16763330021308,139.5508880757784L172.18525157197928,139.3098718451843L172.1382694979036,139.03946231507462L172.12946038607492,138.78080859655938L172.0795419413903,138.50157895123203L171.82994981418392,138.22234805234876L171.60972144117818,137.95193379916148L171.1956921268702,137.4787059888142L171.08998249628144,137.33467939466408L170.82864483852586,137.10541191199383L170.78166281255926,136.74681232881107L170.65539853959854,136.44993730391L170.61722562545788,136.2941508426601L170.38525177001725,135.76506173946962L170.0299500122194,135.22714974177313L169.83908544152587,134.88911518021484L169.64528445211477,134.6568990555577L169.41331059667164,134.36001381502555L169.30760096608287,134.27182978623912L169.0580088388765,134.12779565053893L168.70270708107864,133.87793960810478L168.03027652773585,133.47228883859322L167.82766642649585,133.39586157184408L167.6250563252563,133.2988575960935L167.2580090369122,133.19303487094402L167.14349029449772,133.29003901875421L167.03778071201805,133.42525666008018L166.8850890554627,133.47228883859322L166.6149422377723,133.50168388922134L166.44169593884226,133.5692925326692L166.31543166587858,133.7045095420922L165.9014023515706,133.9161529939622L165.70172866904863,134.0690061012598L165.53729148194702,134.41586362503625L165.41102720898357,134.5510787272942L165.2289717501185,134.6568990555577L165.0175525370505,134.70686970959585L164.92065206639654,134.83032637416937L164.87367004042994,134.9949349158518L164.80613332398207,135.17717956603934L164.7092328533281,135.35942361958593L164.73859660753146,135.60045528925917L164.71804196515654,135.76506173946962L164.632887025052,136.0060918010305L164.55654119677274,136.34412014909645L164.64169613688046,136.729176226522L164.64169613688046,136.99665651045046L164.53598655440078,137.3170434610624L164.50662275208856,137.4787059888142L164.43027692381202,137.66388253058892L164.2188577107438,138.0489303507115L164.04561136370467,138.26055866801175L163.87236506477439,138.60739245307607L163.69911876584433,138.91601406782002L163.51706330697925,139.13645717126906L163.15001606674696,139.71548399961722L162.87106013722837,139.99470822864464L162.7859051490143,140.1093367564045L162.7477322348734,140.24453936364307L162.59210420770933,140.65896296929031L162.7653505066396,141.06162726048075L162.82407806315268,141.3320281684858L162.81526895132401,141.64945382696567L162.77415966657713,141.89927844830362L162.82407806315268,142.09325924151125L162.89161477960283,142.3048739869721L162.7859051490143,142.4988536016071L162.7859051490143,142.67225908519976L162.83288722308998,142.88387192494713L162.89161477960283,143.08372788783214L162.92978769374122,143.25713179915218L163.04430643615842,143.40408392056207L163.0736702384679,143.56573083066615L163.0736702384679,143.75970665866384L162.87106013722837,143.75970665866384L160.99471450698752,143.33648597072226L160.78329529391908,143.29827841520878L160.5806851926793,143.24831468437293L160.40743889374926,143.230680403056L160.19601968068105,143.1336917939667L159.53239819105738,142.71046701112067L159.27399695202257,142.69871071011482L159.4090703368115,142.62229482165105L159.55295283342934,142.45770647561034L159.57057110519554,142.21964037475286L159.62048954987995,141.96687785900858L159.59112574757046,141.83167891801526L159.32978813792397,141.84343537785378L159.10955976492073,141.3320281684858L158.83941294723058,140.67659795917538L158.65735753647186,140.1269718997147L158.6661666483003,139.79190338046078L157.6472434489881,139.82129539934394L157.24202324650832,138.26937652498302L156.95425820516107,136.55575432384L156.89553064864822,136.42936175903156L156.71347518978314,136.17069710664344L156.0586628600945,136.352938232258L156.0586628600945,136.593965972501L156.00287172229923,137.143623218421L155.4831327774025,137.23768172145088L154.75197461943753,136.62335950623833L154.03843473323604,135.62984934983578L153.65376922123755,134.80093197376368L152.15327999116676,133.16363966828837L151.97122453230168,132.55809466601997L151.9330516181633,132.25825943372575L151.70988687454883,131.78792660052505L151.0169016307218,131.0941788618164L151.32522136255034,129.43620588545443L151.43974010496754,128.9658503365541L151.4514855874047,128.61896068463443L151.27823928847465,127.3754321831656L150.9875378765189,126.22889251170949L150.74675486114097,125.57329656456162L150.69977278706506,125.41160130607665L150.6410452305522,125.28518473893283L150.6028723164111,125.12936850113005L150.29455263269188,124.82361470467174L150.1124971738268,124.90005331028868L149.79536833017005,124.96767201202223L149.59275822892732,124.56195867197593L149.43125746054602,124.07980280800362L149.19047444516536,123.5888227001991L148.95850058972246,123.41536158433038L148.42995253299728,123.22425977488481L147.98655941637958,123.08019800025014L147.82212222927797,122.66565070681176L147.51380254555602,122.48042643185212L147.33174708669094,122.80971356360834L147.03517288540866,123.2124996716158L146.697489399377,123.14487883659282L145.94577659903712,123.14487883659282L145.43778318468662,123.06843781815732L145.17644552693127,122.98317653146589L144.5333787277914,121.05447262114251L144.18688612993128,120.8721830440175L142.56894178683433,120.17830104270834L142.06094837248384,117.48207300623801L142.06975748431228,116.83519324228638L142.0492028419378,116.63230657971573L142.06094837248384,116.45000195117379L142.01983903962787,116.30592208412784L141.78199244296502,116.06480789315603L141.67334644176776,115.88250129908869L141.67334644176776,115.70901542885613L141.4736727111365,115.44731529770405L141.34740848628235,113.88590861672748L141.385581400423,113.37719159082721L141.46192722869955,112.60675509129905L141.31804468397286,111.61281610287497L140.64561408252052,111.03644028577182L140.01135644331566,109.86896506448056L139.56796332669524,109.56018244168135L138.92196015694435,109.36903036995594L138.50793084263637,109.23375308353022L138.334684495597,109.20434490651792L137.49781675515214,109.58959041046813L137.28639754208416,108.96319736856879L137.01918709500228,108.48089885763096L136.42016595121777,108.0868222003013L135.88280878266414,107.98977300152626L135.6214711249113,107.59569245847061L135.72718075550006,106.69870640694234L135.55393440846115,105.61053752123794L135.46877946835616,105.43701648272352L135.43941566604371,104.82821744339168L135.32489692362924,103.58706729883974L135.28672400948835,102.83412660028429L134.8609492127432,101.67822203082193L134.7170666680163,100.88701427945685L134.27660992200458,99.82812830150951L133.61298848049,98.99865105315203L133.05214025084388,98.56331672364476L132.97579442256756,98.23681333760123L133.04333113901544,96.4336497914689L133.49553336746408,96.31892739878475L133.5248971216647,96.17478858247296L133.63060675225347,96.01005796320749L133.81266221112128,95.69236155473553L133.87138976763413,95.56587074579647L133.80385305118352,94.6892502012866L133.25475035208342,93.83026351522005L132.57351063880287,93.18601282080681L132.50597392235522,93.00362059819605L132.4678010082141,92.750623646966L132.56176510825685,92.6182409738662L132.8025481236375,92.87712229912506L134.1209818948405,92.750623646966L134.63191167980244,92.42407903217614L135.05475015404818,91.95043803819354L135.2191873411498,91.73862178283676L135.40124275190556,91.45914056449763L135.53631613669768,90.16762031907422L135.65083492722124,89.5115490340877L135.65083492722124,89.01139853239675L135.68900784136213,88.49947386916827L135.55393440846115,86.9577799385863L135.7770991520756,85.62787816400683L136.04724596976575,84.18023969908032L135.6214711249113,83.82420735348552L134.0534452264992,83.25631496242136L133.3310961803627,83.0621117068738L133.18721363563554,83.05328423895156L133.0139673367055,82.42653119169657L132.77318432132483,82.22349652689621L131.92750742094267,81.20242351887416L131.5633965513191,81.01998135783774L130.78231994866974,80.96995679279144L129.9278339364589,81.16416958713435L129.35817659498684,81.37603707921167L129.01168394901742,81.69383635781358L128.74153717943614,82.5236343728865L128.55948172057128,83.04445681742197L128.46258124991755,83.37107102240267L128.28933495099022,83.37107102240267L128.40679006401592,83.17981075178301L128.49194505222977,82.72666760996805L128.55067260874262,82.09990976926255L127.90466939088265,81.56730543737635L127.3467575799541,81.13474344004112L126.57742650785099,80.36377164284849L126.22212475005585,79.53393129581465L125.56731242036699,78.61873376305476L125.27954737901973,78.67464672971602L125.05638263540527,78.78058684949772L124.90369097884968,78.78058684949772L124.8067905081989,78.9542104414598L124.66290796347175,79.13960424844564L124.6041804069589,78.70407454894837L124.34577911981478,78.65699000894742L124.04626854792127,78.76293017347538L123.86421308905642,78.86004182346622L123.62343012178462,78.93655383871467L122.95099952033252,79.20728753178125L122.68966186258012,79.27202792156947L122.02604042106259,79.45742037105907L121.67954777509613,79.03366503755501L121.91152163053926,79.00423740195149L122.44887884719947,78.86004182346622L122.62212514612952,78.83061406578648L122.93044487795805,78.74233071672566L122.83354440730682,78.34799621130574L122.85409904968151,78.14494195488686L122.16992291768315,77.86537282190076L121.9291399023025,77.84477292185505L121.55621992085025,78.03017165521135L121.38297357381384,77.80651593067921L121.09227216185809,77.86537282190076L121.08346300192034,77.53871595860065L121.29488226309763,77.50928731624774L121.62375658919177,77.34448636966883L121.90271251871081,76.86185127563414L122.40189682123264,76.37921060091708L124.17253282088473,76.35272402892244L124.57775297525791,76.42041184777648L124.59537124702138,75.4639434895484L124.54838922105455,75.29030532223291L124.11380526437188,73.97769458322239L123.74088523481055,73.89234402008765L123.42082002054508,73.88351461301261L123.20940080747664,73.9217752506668L122.19928671999287,74.03655694802407L122.05540417526595,74.1336797147438L121.87334871639814,74.2308022019298L121.81462115988529,74.48096512554679L121.61201110675461,74.39267248413708L120.91902586292804,74.5280544723471L119.87073886130588,74.41327410949924L118.94871613264445,74.58691604338074L118.19700333230458,74.93419760264217L117.96502942875532,74.88710877160582L118.00613876161128,74.69286663838645L118.00613876161128,74.4986236309305L118.1001028616538,73.77756191632079L118.28509464302078,73.65100689534594L118.72555138902999,73.45970207432316L119.24529033392946,73.20658965893836L119.4390912752317,72.977021252865L119.93827552964717,71.39355232658778L120.17024943319666,70.31334353701502L120.21723145916326,70.13968328110062L119.1219624315745,69.45680842544203L118.74610603140468,69.29197485416898L117.57155480492861,68.04687026045221L116.64953202816082,67.77900577779911L116.54088607506992,66.88120494088852L118.00613876161128,66.41610657271198L118.13827577579173,65.97455236553151L118.15883041816664,64.91185818285012L117.60972771906654,64.10230709624432L116.77285993051282,63.71666047022836L116.1297931313702,62.39483464268088L116.90793331530494,61.37325882617631L116.03289266071943,59.63622269677671L115.58949954409877,59.21225606110622L113.34904304423708,57.475120597729784L114.6469221730656,56.259077919283044L117.82114693213498,53.123093821878456L120.50793291922832,50.528711056278155L124.79798134826115,46.28188436465538L126.6537723361273,44.467551704370464L128.40679006401592,42.76800270175869L131.07008503812335,40.143406470835686L132.59112891056907,38.65575223210905L136.47889355583993,34.872989135115716L137.76796352473343,33.75339875450538L142.34871341383132,29.946510801716386L143.89618466986622,28.576277598139313L147.48737511385502,25.437785393620743L153.248549018758,20.521674554841866L154.79895664540413,19.17167450042362L156.23190920713387,17.954266776429932L158.88933139191477,15.731565078103102L167.86583934063424,8.26341255670826L174.63125454369197,0.029495206085641712L175.89096075838233,0.020646661883972683L190.94870777816118,5.684341886080802e-14L191.10139943471654,0.1268293055080676L191.23647281950844,0.3303448890480922L191.33337333826853,0.5722022019285191L191.43908292074843,0.793411415542721L191.56534719371166,0.9379338745881114L191.67986593612864,1.035264906577936L191.82374848085578,1.1886343683206064L191.938267223273,1.374446311680174L192.09389525043707,1.7106744079299006Z\" stroke=\"#000\" fill=\"#FFF\" strokeWidth=\"0.5\"></path>\r\n        <path id=\"WestPokot\" ref={(item) => countyRefs.current[23] = item} d=\"M174.27536560799354,143.50959537455924L174.36991688593935,143.53634053523072L174.76339155787264,143.51870633231957L174.93663785680292,143.556913757879L175.16861171224582,143.67153589958465L175.28313045466302,143.75970665866384L175.5151043582125,143.86551136351994L175.87040611601037,143.98895002453426L176.0348432550029,144.13590049033388L176.16991668790115,144.42392241020144L176.4106996551725,145.45550079331332L176.49585464338656,146.29309526389912L176.60156427397533,147.73608422649232L176.62211891635025,148.891040870364L176.84234724124394,151.12742796885993L176.98622978597382,151.79157100766355L177.64104211565973,154.05431204759483L178.29585444534837,156.55793665134098L178.40156402782804,156.74893731580573L179.69063404483063,162.21722538609555L180.28671881800665,164.33567766174002L180.70955724414307,166.33948714668276L180.58622938989743,166.45407302038194L180.58622938989743,166.64798711607597L180.65376605823872,166.79195332011597L180.47171064748,166.96530011787297L180.18100918741766,167.04169009483508L180.03712664268824,167.13864649677006L179.93141706020856,167.26204536886894L179.87268950369548,167.45595757954607L179.85507123193247,167.66749759860014L179.7787254036532,167.8232142021934L179.6142882165518,167.9671783746382L179.73761607079746,168.17871707162624L183.26126984644475,171.46924982280757L183.60776244430213,171.85705416158737L183.6547445183778,172.00982507134765L183.79862706310746,171.96281864069817L183.93370044789685,172.11558940991762L184.03060091854763,172.24191880946185L184.16567430333976,172.20078832545823L184.31836595989535,172.1919746683796L184.42407559048388,172.32711764778787L184.59732188941393,172.46226041474614L184.61787653178612,172.6532226639041L184.71477700243986,172.89412830166367L184.73239527420333,173.1056546300486L184.67366771769048,173.29073976220664L184.50335778937142,173.387688948334L184.6090674199604,173.51989221865105L184.7529499165778,173.62565470973766L184.67366771769048,173.77254682977497L184.64724033409834,173.9047495170742L184.5209760611349,174.00169802108633L184.65604944592678,174.0604546365159L184.72358616237466,174.21322166206528L185.03190584609683,174.3483614979446L185.06126964840632,174.51287930188673L185.1464245885113,174.64801867790754L185.2139613049619,174.82134936312815L185.34022557792514,174.9271102392888L185.44593516040482,175.091626965631L185.58100854519398,175.24439220693517L185.71314555937738,175.35015262701353L185.6955273357205,175.52348189258907L185.73370024985843,175.69681082132212L185.90694654878848,175.80257070493164L186.0890019595472,175.87013941389705L186.206457120682,175.7643796582977L186.65865934912836,175.68799751610604L186.84952391982188,175.7643796582977L187.02277021875193,175.86132612576029L187.19601651768198,175.93770812001694L187.41624489068818,175.95533472853376L187.68639166026924,175.8995171310292L187.86844711913432,175.93770812001694L188.05343894861062,175.93770812001694L188.27366732161636,175.86132612576029L188.42635897817195,175.90833041541097L188.5819870053358,175.96708576686444L188.81396086077893,176.03465439990612L188.97546167726932,176.1022229820689L189.1398988643707,176.14041388476437L189.2925905209263,176.0522809893697L189.44821854809288,176.0522809893697L189.65963776116132,176.1022229820689L189.8505023799637,176.1580404534671L190.00613040712778,176.12866282099787L190.21754962019622,176.0522809893697L190.4289688332642,175.99646345221407L190.64038809444173,176.09047191330643L190.77546147923363,176.24617319699092L190.8606164193386,176.38130994443364L191.04560824881491,176.50469552262487L191.26583662181793,176.58107697041686L191.4097191665478,176.58107697041686L191.54479255133697,176.648645142595L191.70922973843858,176.6310186698591L191.92945806333546,176.70740001084317L192.17905023865092,176.8131586582718L192.39046945171913,176.84253606782147L192.55490663882074,176.88953989366462L192.67236175184644,176.99529832848185L192.97774506495716,177.02467567902352L193.11281844974928,177.08343030345827L193.23027356277498,177.2185658003163L193.37415610750213,177.3037598429941L193.53565692399502,177.41833098130334L193.75882166760948,177.46827217205316L193.97904999250363,177.56521681225414L194.12293253723305,177.68860078167242L194.1816600937459,177.82373538237385L194.30792436670663,177.95886978385028L194.52815273971282,178.0352500118206L194.9803549681617,178.40246179807338L195.11542835295086,178.47002862282775L195.30629292364438,178.59341132994183L195.5588214214622,178.69916784632602L195.71151307801733,178.83430096506171L195.86420478268224,178.94005720667832L195.9992781674714,179.0575639685471L196.10498774995085,179.1633199080917L196.26942493705246,179.28670174199732L196.42211659360783,179.4512105840875L196.55718997839995,179.5481531444125L196.70107252312664,179.5775296332249L196.88606435260294,179.70091092039837L197.04756516909583,179.84485554228226L197.22081146802316,179.932984750527L197.42342156926588,180.0563655707445L197.61722251056813,180.11511826941756L197.9813333801917,180.20030964874093L198.13696145546464,180.2796256598566L198.29846222384867,180.30900192018913L198.4335356086408,180.39419312459762L198.5774181533675,180.5205109562295L198.75066445229754,180.5675128679837L199.01200211005016,180.69383046860068L199.2527851254281,180.74964516433616L199.39666767015797,180.77020845995642L199.5317410549469,180.9229642585841L199.63745063742658,181.13447187928824L199.42603142435814,181.1638479233614L199.34968559608205,181.2989775038829L199.3878585102202,181.51048429244156L199.2527851254281,181.7043651496993L199.24397596549306,181.8483066892228L199.47301349843406,182.23312904375646L199.62864152559814,182.27131743408873L199.76371491039004,182.3682571228549L199.85767901043255,182.54157329759786L199.76371491039004,182.65613805939637L199.61689599505166,182.6767009473787L199.44364969612457,182.6855136398269L199.3878585102202,182.86764187719223L199.42603142435814,183.07033262784972L199.5493593267131,183.23483496084802L199.63745063742658,183.3963994912985L199.54055016677535,183.56971384260572L199.3673038678453,183.65783968732435L199.45539522667082,183.84877870735033L199.40547678198368,184.0426548659571L199.46420433849653,184.2159680834555L199.3379400655358,184.39809353764582L199.4348405842959,184.55378113533254L199.49356814080875,184.81228079562652L199.34968559608205,184.94740533690793L199.3673038678453,185.1677167269226L199.14707549483956,185.31165320054725L199.1558846547773,185.67883725496367L199.0883479383267,185.9285216220859L199.070729666563,186.1312061490719L198.9239107512251,186.2751413019108L198.8387558111201,186.4572629871458L198.80058289698172,186.6599464643593L198.84756492294878,186.85381726477695L198.8387558111201,187.02712566114116L198.70368242633094,187.07412447683885L198.56860904153882,187.1416852910408L198.55979988160152,187.3149932038835L198.53043607929158,187.47948860355808L198.44528113918682,187.63223408106893L198.44528113918682,187.78791673325753L198.28965311202023,187.82610301043457L198.18394348143147,187.91128775811129L198.1164067649836,188.1051561687375L198.0018880225664,188.2197146104806L198.04006093670455,188.37245900470526L197.8198326118079,188.43120678575426L197.57904959642997,188.50757885684274L197.52913115174533,188.7014462137913L197.41461240932813,188.77781808898195L197.30890277873937,188.90412531836134L197.22081146802316,189.05686872078172L196.96241018087926,189.28010869725415L196.95360106905355,189.42403945070407L196.82733347652584,189.60044163704885L196.6746451395345,189.86464271500768L196.53957175474284,189.92338967025267L196.44267123598252,190.03794614772585L196.4632258783572,190.20243730503944L196.54838086657128,190.3169934854639L196.60710842308436,190.4432988471649L196.63647222539657,190.65478665840226L196.51901706426156,190.75171840989734L196.51020795243312,190.94264434141752L196.43386212415385,191.06013704848598L196.2987887393649,191.09832215342584L196.15890525862415,191.1783534762024L196.12189885842304,191.3750124485359L196.0178183157609,191.51614392776088L195.84897659679973,191.617943599016L195.8935685368824,191.7621534465997L195.92293233919509,191.95307761671108L195.7966680662314,192.1381268969035L195.8465865109158,192.2732420345324L195.8847594250567,192.4553534606743L195.82603186854385,192.59928006477702L195.8935685368824,192.75201827507922L196.04788605802105,192.82565062180046L196.02244415186692,192.9667802538088L195.87673142100698,193.0223066681817L195.85822822090495,193.1680632308856L196.0155054458171,193.3323283874839L195.87210563300755,193.37628662617726L195.7027039661889,193.407027887886L195.63516724973852,193.6008864872291L195.62231235948275,193.7441470337945L195.50890302488665,193.8887365779372L195.47953922257443,194.03266130164047L195.60580349553788,194.1090294622713L195.56763058139995,194.3116985823773L195.31803845419063,194.6024840948337L195.25050173774275,194.78459176950588L195.2387562071965,194.98725969707522L195.1066191930131,195.13999469799552L195.056700796438,195.35147364211826L194.94000677758777,195.47238089274137L194.95850997768935,195.62738854010914L195.03908252467454,195.77443028091614L194.9421820540208,195.97709648315936L194.99089058989375,196.11323213876477L195.03946148414389,196.19651937234744L195.18296502129215,196.38242779051797L195.3268475660193,196.43823417092904L195.29748376370935,196.58509294595066L195.40721266432683,196.81654500842126L195.51771213671282,196.98748506168732L195.39669628644128,197.11282636702433L195.38414554519773,197.41070094618073L195.09487371057594,197.38400147849035L194.91281825171086,197.40162440307387L194.62505321036383,197.45155596856665L194.46942513509066,197.469178883232L194.14348717960502,197.5455448008617L193.37415610750213,197.83632231163176L192.7956896060923,198.08597917635186L192.55490663882074,198.16234470396606L192.4022149341563,198.18290464179694L192.23777779516377,198.24752160787125L192.14087727640367,198.39437812068923L192.00580389161155,198.5089261519453L191.85311223505641,198.5471087891016L191.6886750479548,198.66165662901344L191.48606499482412,198.83494674356066L191.3921008947816,199.02879640909407L191.29520037602128,199.17271493044956L191.09658014983188,199.26173354433251L190.87236194988486,199.26963953566684L190.39079591912628,199.1815262394647L190.1881858659956,199.11397270989326L190.11037577334696,199.06508818432147L189.89161166471058,198.83494674356066L189.69784579532188,198.71370469792248L189.34250896561343,198.69102782683245L189.18688089033753,198.6734050897373L188.81396086077893,198.79676419617036L188.65833283361212,198.95243142290371L188.42635897817195,198.95243142290371L188.07986633220276,198.93187161453156L187.7744830190918,199.11397270989326L185.90694654878848,200.56783464397608L184.74120443414063,201.56056307174168L184.31884214890488,201.90513295861433L183.9160821761334,202.25370617327886L183.6162521082599,202.55307984267628L183.26126984644475,202.79118320084996L182.8105295731059,203.1655639489112L182.41265657545387,203.484319767564L182.1788431043908,203.72646799271234L181.96045434700477,203.86025672428326L181.57578878689742,204.1686417475415L181.2116779172734,204.47702601469973L180.59503850172587,204.9675024267591L180.4217922027956,205.1114143495624L180.07336449172226,205.42364130520963L179.68182493300196,205.72817795877575L179.34414144697053,206.00718911649892L179.0302632259568,206.30404464629578L178.48716335648714,206.52866122117496L178.3152963122311,206.5836693207878L177.1301123307005,204.57100965714343L177.00678442834578,204.47702601469973L176.81298348704377,204.45646708871135L176.6390135232225,204.36569126514644L176.4933095002018,204.58784738068357L176.44006345748244,204.7354808864127L176.39014501279803,204.91757375418268L176.3813359009696,205.10260339532326L176.28443543031835,205.2347672643233L176.22570787380528,205.36986801695264L176.16991668790115,205.57251880039718L176.05246152676614,205.6870604323477L176.02603414317446,205.8603412265537L175.9673065866616,206.03362175579193L175.83223320186949,206.1599108400502L175.65898685483307,206.18046951062286L174.68704572959655,205.6870604323477L174.39047152831404,205.55489699871677L174.0909609564203,205.48734677814002L173.79145038452953,205.3228764554608L172.64626291225386,204.78247260206464L171.4834571682145,204.21563366041605L169.13435466715282,203.09075962198088L168.86714426818025,203.26404369914002L168.14479527015283,203.68697342566895L167.79830262418363,203.78389461879743L167.63386543708202,203.68697342566895L167.39308246981295,203.67816242648814L166.92326196960084,203.86025672428326L166.75001562256148,203.80151665072034L166.2214675658363,203.8778787461253L166.0658395386722,203.9747998006878L165.98068455045836,204.32136547652635L165.9307661538803,204.58275762590048L165.78688360915362,204.45646708871135L165.64300106442647,204.31255447096237L165.36404518301697,204.1304607881837L165.1819897241519,204.07172078508228L164.98818878284715,204.08053180643253L164.7973241640443,203.99535880032104L164.53598655440078,203.79270565910917L164.32456729322348,203.59886316702446L164.18068479660292,203.44613861244937L164.06616605418844,203.34040615143428L163.91934713885007,203.3022249548562L163.83419215063623,203.15831109259716L163.7079279257821,203.0320192076259L163.65213673987773,202.88810505038512L163.939901781225,202.3300691657352L163.80482839643287,202.21552466022422L163.05605196670467,201.47245137912782L162.7653505066396,200.98196193593944L162.4687763534664,200.45328856200467L161.8227731356062,200.3181827967501L161.55262636602492,200.27118942589402L160.85964112219835,200.55902343280354L160.3898206219858,200.77930405726627L159.87008167708632,200.6941289401413L159.67628073578408,200.67356941886572L159.4178794486404,200.6177649733841L158.87758586136852,200.5384638414301L158.63680289409717,200.55902343280354L157.84985355022764,200.58839418244636L157.41526959354496,200.58839418244636L157.27138704881827,200.59720543969345L157.33011460533112,199.68377111587682L157.3477328770971,199.0963500334576L157.1862320606042,199.12572112736987L156.83973946274386,199.2197086675166L153.7976517178554,199.97160642339887L153.12522111640305,200.19188812384866L153.58623250478695,199.83650013922102L153.69194213537548,199.65440010616888L153.6155962589903,199.4811111423649L153.57742334485215,198.93187161453156L153.57742334485215,198.48836622103443L153.60678714716187,198.32682415738202L153.6449600612998,198.18290464179694L153.662578333066,197.9978650277732L153.57742334485215,197.76876798936223L153.2779128210675,197.4309959062103L153.0664935598902,197.1137829929459L152.77872851854545,196.76719757801027L152.50858174896462,196.40005086339852L152.40287211837585,196.21794571421418L152.28835337595842,196.053463360084L152.02701571820603,195.63931930045976L151.85376941927598,195.41902929467597L151.4984676614804,195.01369464512752L151.334030474379,194.72584738515027L151.27823928847465,194.51436734344355L151.06682007540644,194.18833484644264L151.1049929895446,193.97685376356867L151.13435674374796,193.74481162389108L151.18133881782364,193.59207476180012L151.29585756023812,193.49514549613605L151.39275803089186,193.36003183410978L151.52783141568102,193.20435715173994L151.64235015809822,193.08980397602318L151.78623270282515,193.00462335596242L151.8919423334139,192.89888175681307L151.97122453230168,192.7343946423884L152.047570360578,192.59928006477702L152.13272534879457,192.48472626980228L152.2589895736462,192.3672350830054L152.4234267607476,192.26149287983213L152.57611841730318,192.18512346426593L152.89324726096015,192.0617573963163L153.0664935598902,191.95307761671108L153.2103761046169,191.80033830706134L153.28965830350467,191.6094138242132L153.40417704592187,191.43611290009858L153.60678714716187,191.28043556935233L153.78003344609192,191.1159460472101L153.93272510264728,191.0307639076567L154.08835317792045,191.00139071078644L154.27921774861397,191.01020268992866L154.47301868991872,190.98376679849076L154.6051557040994,190.82808882273787L154.69324706292468,190.65478665840226L154.76078373126325,190.47267219503385L154.769592891201,190.26118407573216L154.8195113358854,189.99976066881104L154.89585716416445,189.81764509876362L154.90466627599312,189.64434130987001L154.83712955954252,189.18317556922727L154.8195113358854,189.00987074835206L154.82832044771385,188.85418990893993L154.89585716416445,188.680884549347L154.94283919013105,188.5281406032392L155.14544929137105,187.78791673325753L155.25996803378825,187.30618096616288L156.51086513664973,185.99608319200186L156.71347518978314,186.01664538955805L157.27138704881827,186.1106439746613L157.82929890785567,185.79339839554513L157.98492693501976,185.7845860269252L158.0906365656083,185.64065017930855L158.43712916346612,185.40858995529874L159.1007506049832,184.91803047723926L159.2446331497099,184.67715607193475L159.47660700515326,184.4069060278784L159.62048954987995,184.0514673877252L159.92880923359917,183.56090122973302L160.00515506187844,183.38758686289924L160.24593807725614,182.9352055235071L161.2854159670526,180.8671496645906L161.37938006709487,180.6644542795071L161.41755298123303,180.38538022170877L161.50564429194924,179.48940009099985L161.51445345188426,179.27788878333925L161.55262636602492,178.85486468012033L161.58199012022556,178.63160118899418L161.5907992801633,178.420087928942L161.67008147905062,177.56521681225414L161.78460022146555,176.69858675656647L161.8521369379157,172.3476828620136L162.29553000642704,171.13432647921508L163.21755273508575,168.34030879338337L162.38068499464134,167.35900155602067L161.48508964957455,166.22490115805817L161.04463295167193,165.5109385906374L161.03288742112568,164.5883602165784L161.01526914936198,164.12412884800852L160.99471450698752,163.8068045363787L161.03288742112568,163.59525425007047L160.9653507527869,163.38370343994308L160.9477324810207,162.86363859451694L160.92717783864578,162.64327105823972L160.900750406945,162.05562127524652L160.64822190912992,160.95670407987632L160.54251227854115,160.44543776768603L160.22538343488418,159.02327645484021L159.92880923359917,157.73037911095605L159.87889083702407,157.3953974610912L159.80254500874776,157.13387564173922L159.67628073578408,156.59613682420252L159.50303443685402,155.82625251528526L159.45605236277834,155.5852947196268L159.3973248062655,155.37372128840101L159.3591518921271,155.16214728486497L159.2622514214761,154.7184275175682L159.20646023557197,154.36286207344818L159.16828732143358,154.0043561916318L159.11836887674644,153.8045325135054L158.94512257781912,152.74369424955077L158.8012400330897,151.93556575874925L158.77187627888907,151.72398149786176L158.7630671189513,151.53884472494022L158.70433956243846,151.28905625869788L158.6661666483003,151.06865389939838L158.47530207760678,149.92255036970704L158.39895624932774,149.40238941856094L158.3402286928149,149.10263383034373L158.25213733399255,148.5560173079952L158.21396441985144,148.30327911858012L158.21396441985144,148.0358458588164L158.12000031980892,147.75665614114413L157.9731814044735,146.87793572451685L157.93500849033535,146.5899244696053L157.83810801968139,145.9845090703413L157.84985355022764,145.7053107743932L157.70597100550094,145.50252389928704L157.67660725130054,145.27034688515403L157.71478016543847,145.04110800999217L157.7617621914053,144.847136036912L157.79993510554345,144.62671261332548L157.78231683377976,144.4151054536124L157.7911259937148,144.22994860882685L158.09944567743696,144.04773024099478L158.24332822216388,143.98013300915716L158.38721071878172,143.93310876252804L158.51347499174494,143.79791394242176L158.49292034937025,143.64214565206126L158.4841112375418,143.48931596742477L158.6485483765341,143.47168175172604L158.7630671189513,143.36293737173787L158.77187627888907,143.18953369586126L158.88933139191477,143.00731245556943L159.04202304847036,142.88387192494713L159.15654179088756,142.71928419935227L159.53239819105738,142.71046701112067L160.2077651631182,143.1513260535741L160.40743889374926,143.230680403056L160.5806851926793,143.24831468437293L160.78329529391908,143.29827841520878L160.99471450698752,143.33648597072226L162.87106013722837,143.75970665866384L163.0736702384679,143.75970665866384L163.0736702384679,143.56573083066615L163.04430643615842,143.40408392056207L162.92978769374122,143.25713179915218L162.89161477960283,143.08372788783214L162.83288722308998,142.88387192494713L162.7859051490143,142.67225908519976L162.7859051490143,142.4988536016071L162.89161477960283,142.3048739869721L162.82407806315268,142.09325924151125L162.77415966657713,141.89927844830362L162.81526895132401,141.64945382696567L162.82407806315268,141.3320281684858L162.7653505066396,141.06162726048075L162.59210420770933,140.65896296929031L162.7477322348734,140.24453936364307L162.7859051490143,140.1093367564045L162.87106013722837,139.99470822864464L163.15001606674696,139.71548399961722L163.23810742556975,139.5890978779812L163.51706330697925,139.13645717126906L163.69911876584433,138.91601406782002L163.87236506477439,138.60739245307607L164.04561136370467,138.26055866801175L164.2188577107438,138.0489303507115L164.43027692381202,137.66388253058892L164.50662275208856,137.4787059888142L164.53598655440078,137.3170434610624L164.64169613688046,136.99665651045046L164.64169613688046,136.729176226522L164.55654119677274,136.34412014909645L164.632887025052,136.0060918010305L164.71804196515654,135.76506173946962L164.73859660753146,135.60045528925917L164.7092328533281,135.35942361958593L164.80613332398207,135.17717956603934L164.89128826408682,134.9949349158518L164.92065206639654,134.83032637416937L165.0175525370505,134.70686970959585L165.2289717501185,134.6568990555577L165.41102720898357,134.5510787272942L165.53729148194702,134.41586362503625L165.70172866904863,134.0690061012598L165.9014023515706,133.9161529939622L166.31543166587858,133.7045095420922L166.44169593884226,133.5692925326692L166.6149422377723,133.50168388922134L166.8850890554627,133.47228883859322L167.03778071201805,133.42525666008018L167.1522994544323,133.31943420726486L167.2580090369122,133.19303487094402L167.6250563252563,133.2988575960935L167.82766642649585,133.39586157184408L168.0390856395643,133.4811073408523L168.70270708107864,133.87793960810478L169.0580088388765,134.12779565053893L169.30760096608287,134.27182978623912L169.41331059667164,134.36001381502555L169.64528445211477,134.6568990555577L169.83908544152587,134.88911518021484L170.0299500122194,135.22714974177313L170.38525177001725,135.76506173946962L170.61722562545788,136.2941508426601L170.65539853959854,136.44993730391L170.78166281255926,136.74681232881107L170.82864483852586,137.10541191199383L171.08998249628144,137.33467939466408L171.1956921268702,137.4787059888142L171.60972144117818,137.95193379916148L171.82994981418392,138.22234805234876L172.0795419413903,138.50157895123203L172.12946038607492,138.78080859655938L172.16763330021308,139.5508880757784L172.17644241204152,140.32095810252974L172.19406068380772,140.57078794616808L172.22342448611744,140.78240779538058L172.34968871097158,141.1586190526025L172.43484369918565,141.56421929363094L172.45539834156034,141.71705350185243L172.46420745338878,142.07268555179135L172.52293505801094,142.2960567419168L172.59928088628726,142.52530529779955L172.72554511114163,142.71928419935227L172.83125474173016,142.91032351117605L172.99275555822328,143.06609356162767L173.43614862673166,143.14250892437198L173.67693164211232,143.2189241967915L173.83255966927663,143.3923277457846L174.05278804228237,143.4599256373633Z\" stroke=\"#000\" fill=\"#FFF\" strokeWidth=\"0.5\"></path>\r\n        <path id=\"Samburu\" ref={(item) => countyRefs.current[24] = item} d=\"M246.43139267293122,139.81781637503667L246.7751287339354,140.85000839145033L247.0159117012072,141.3908108099671L247.24788560475918,142.01684263263286L247.7646881309381,143.48049888425226L247.8997615638366,143.83612120372283L248.2462541616967,144.81774627066216L248.6808381183796,146.0138983164275L249.1418495067635,147.44807671214687L249.65277929172248,148.70883526829562L250.12259979193504,150.01952913983558L250.58654750282085,151.38603306165703L250.98002217475437,151.8297737325493L251.54674319372953,152.36754832929628L252.40416557654885,154.22768791401865L252.87398607676118,155.20034819324107L253.0002503497219,155.34433607267442L253.2703971193032,156.71955265662672L253.32618830520732,157.04866044455576L253.91346396655467,158.52962739515658L253.8194998665124,159.4258331333606L253.8194998665124,159.5698126925941L253.94282772075803,159.70497699445906L254.0984557479219,159.73436047061412L254.1659924643725,160.0135031871722L254.1659924643725,160.25444659890783L254.15424693382624,160.5424023269501L254.22178365027412,160.97727218878634L254.23059276210256,161.24465714790796L254.28051120678697,161.4973498026593L254.28932036672472,161.78530083556254L254.1924198479644,162.04386821565288L254.22178365027412,162.2289784192592L254.21297449033932,162.47872955397074L254.1748015761982,162.66971517447365L254.18361073613596,162.94884717668793L254.14543782199758,163.1339552172068L254.03972819140904,163.53649019624618L254.08671026548473,163.72159684286106L254.259956564415,163.75979339496257L254.42439375151662,163.74804064130655L254.59764005044394,163.68340027213546L254.8854050917912,163.48947894064906L255.04984227889304,163.40133270000663L255.19372482361973,163.35432136308035L255.53140830965162,163.32493922701977L255.75163663454828,163.40133270000663L255.9454376239596,163.54824302979938L256.174475108794,163.74804064130655L256.30073938175474,163.82737188684294L256.6560410914433,164.02716873888517L256.9261879091339,164.2005215420788L257.94511110844337,164.6353708632712L258.1565303215118,164.9615062725858L258.26223995210034,165.06727965422354L258.46485005334284,165.2905785211108L258.60873254996045,165.36697008984737L259.610037525616,165.4139802273773L261.26615478285066,165.44336158536066L261.51574691005726,165.4639285102553L261.6801840971591,165.4639285102553L261.85343039608915,165.4933098017031L262.39078761275186,165.76067934121784L262.6022068258203,165.84882290405716L262.9486994236777,165.94578074004L263.1131366107793,165.9722237964969L263.2775737978807,166.01041926431236L263.5947027377588,166.06918153142715L263.81493096643476,166.1279436592552L263.9411952393982,166.19552013496192L264.25832408305496,166.23371549658742L264.50791621026156,166.28072512531833L265.2772472823676,166.31010616543296L265.5092211859169,166.33948714668276L265.6736583249094,166.36886816535173L265.81754086963906,166.33948714668276L265.86452289560566,166.64798711607597L265.90269580974405,167.29142605259608L265.93205961205354,167.45595757954607L265.9907871685664,167.5911082092129L266.1053059109836,167.8026478780469L266.30791601222336,168.11995637985177L266.39307100043993,168.22572562365178L266.56631729936726,168.39906932761852L266.76892740061,168.5635986292858L266.9128098972278,168.66055322796672L267.047883282017,168.76632172932204L267.22112962905635,168.8720901434459L267.50008551046585,169.07481253531603L267.7496776857813,169.22758848913168L268.04918825767504,169.43912395765994L268.2987803848814,169.6036511940176L268.463217571983,169.73879830500005L268.6658276732228,169.8827591436367L268.81851932977816,170.10310687460168L269.10628437112564,170.54673849559808L269.2119940017142,170.68188408739198L269.39698578307866,170.78765007685286L269.92553388791293,170.79646387926374L270.098780186843,170.8258433102588L270.3101993999114,170.8258433102588L270.73303787415716,170.85522273104624L271.088339583843,170.86403652640792L271.23515849918135,170.8934159339272L271.2909496850857,171.04618857309384L271.367295513362,171.32529174074313L271.41721395804643,171.53682193419684L271.6080785287427,172.24191880946185L271.71378815933144,172.68260145614613L272.0132987312222,173.81073873667435L272.0132987312222,174.0604546365159L272.1278174736394,174.28079163004014L272.406773403158,175.32077472911618L272.68572928456524,176.4371272427009L272.80318444570025,176.59282797516124L272.9764307446303,176.648645142595L273.3111778600535,176.77496804048394L273.4374420849051,176.83372287483473L273.7369526567986,176.9394813747581L274.1480456004979,177.1128075773584L274.62080247131894,177.29494664662826L274.8909492890093,177.4095177960121L275.33434235752065,177.659223645152L275.51639781638573,177.9206796460418L275.6514712011774,178.15275797163562L275.77479910352963,178.32608187477356L275.9979638471441,178.66979103229363L276.3914385190801,179.3160783611072L276.60285773214855,179.63334498952412L276.67039440049007,179.75966384118203L277.18132423355814,180.5381366879026L277.325206730176,180.77902127894896L277.64233557383295,181.26078872770393L277.7392360444867,181.45173245623684L277.8831185892136,181.654426170406L278.58491294486885,182.75307736418915L279.1252065321403,183.56090122973302L279.45995364756095,184.08965506925108L279.5656632781495,184.27471825555466L279.827000887793,184.63896861587068L280.1911118055259,185.2059039815556L280.68148694811293,185.910896859422L280.93401544593075,186.31332813921392L281.0191704341446,186.5071995472109L281.2599534495225,186.95956477189344L281.4801817744194,187.41192800996862L281.72096478980006,187.87310151213313L281.80905614862263,188.0669699936243L281.90595661927387,188.2490885719363L281.961747805178,188.3842085827934L282.1056303499047,188.66326025546843L282.93368897852383,190.1172543993495L284.166967761513,192.3290504181602L284.3284685780061,192.59928006477702L284.9362988336161,193.67725493807046L285.0889904901712,193.78299580726076L285.1858910089343,193.96510483509343L285.45603777851557,194.02384960971568L285.5999203232425,194.2735145762268L285.68507526334747,194.4379994535526L285.87006709282355,194.50555568864542L286.0227587493789,194.74640792067765L286.0902954658295,194.95788758430126L286.01394963755047,195.13999469799552L286.2929055189602,195.07243888298268L286.44559722362465,194.70822405918778L286.4837701377628,194.5231789975648L286.792089821482,194.21770715597853L286.8508173779949,193.96510483509343L286.96533612041253,194.0444102712694L287.0534274792376,194.3322591920932L287.1385824193426,194.49674398505033L287.2942104946155,194.64947963585655L287.52324797944993,194.69647520579537L287.7258580806897,194.6024840948337L288.0253686525805,194.5437396174623L288.0723506785471,194.34107090833774L288.410034164579,194.2558911807689L288.53336206693393,194.091406089548L288.70660836586126,193.99447720213283L288.86223639302784,193.92692071292493L288.997309777817,193.8035565123604L289.1793652366848,193.6185099841593L289.3819753379248,193.5039572291198L289.57283990861833,193.4745847350487L289.64918573689715,193.59207476180012L289.7754500098579,193.68606670499832L289.9868692229263,193.59207476180012L290.31280717841173,193.54214149368846L290.4302623395465,193.407027887886L290.62112691024004,193.33947104841013L290.7650094068606,193.43640044764965L290.9500012363342,193.53332976368404L291.12324758337354,193.49514549613605L291.3434759082704,193.39821614734004L291.5167222072005,193.3512200417692L291.86321485316716,193.28366316885786L291.99828823795906,193.2249179620964L292.2008983391986,193.16617277279914L292.4504904664052,193.11917661851936L292.70008259361157,193.11917661851936L293.0671298819557,193.18673359013707L293.31672200916205,193.18673359013707L293.5281412222305,193.1573610134169L293.6925784093321,193.06043137396892L293.836460954059,192.9928742782731L293.9979617224428,192.89888175681307L294.15358979771577,192.87832088674546L294.3650090107842,192.92531714188897L294.8172112392331,192.83132456375478L294.9816484263349,192.83132456375478L295.13434008289005,192.81957551601687L295.2606043558508,192.88713266804123L295.4720235689192,192.89888175681307L295.61590611364863,192.70502194714024L295.7421703385003,192.59046826078418L295.9330349091965,192.7138337420887L296.12683589860785,192.77257916835396L296.28833666699165,192.7931400578484L296.4997559281692,192.67564919604678L296.70236598129986,192.62865283597057L296.91378524247716,192.64627648534713L297.0606041097062,192.63746463694343L297.3571783109885,192.42598069191482L297.5392337698536,192.41716882609063L297.74184387109585,192.49353813028046L297.89747189825994,192.48472626980228L298.02079980061217,192.34079951758795L298.21460074191714,192.28205386364908L298.5111749431992,192.28205386364908L298.6462483279911,192.25268104908628L298.68442124212925,192.09994215319588L298.7137849963299,191.92664195247409L298.8106855150929,191.72396857290502L298.78132171278025,191.4919217070304L298.8694130716058,191.35680561194016L298.9751226540852,191.2422505280711L298.95456801171053,191.01020268992866L299.0132955682236,190.78990362302744L299.11900519881215,190.64597465044804L303.8436375845274,194.1090294622713L303.7761009161861,195.81261379162174L303.582299926775,200.0685304058453L303.59110908671255,200.45328856200467L303.63221837145943,201.43426963488383L303.7261824715017,203.39914642866208L304.89192458614957,204.95575449129393L306.2103583573555,206.54465123496183L307.65212003091096,208.49770669958932L307.7284658591898,208.66217332903025L307.7783843038742,209.18200406846597L307.825366329841,210.33619809457795L307.922266800492,212.22165638106873L307.9310759604298,212.45366600233422L307.9310759604298,212.96467340672822L307.95163060280447,213.4551214556832L307.9692488745677,213.64601399758112L308.0367855910183,214.94701416408884L308.0367855910183,215.17608309931387L308.05734023339323,215.36991045478055L308.05734023339323,215.551990429289L308.08670398759386,215.93670724282734L308.17185897581044,217.46675550355934L308.21003188994837,218.32428151913865L308.3274870029745,220.35354773293693L308.34510527473776,220.5473693774805L308.36565991711245,221.08478296221227L308.4038328312506,221.58695489637492L308.4214511030168,222.094998897745L308.8560350596997,222.3945386792502L309.81916707310756,223.02885673188115L309.95130408728824,223.16394271319194L309.60481148943086,223.16394271319194L309.4315651905006,223.21386579025813L309.27887353394544,223.2784720645655L309.1349909892183,223.3283951134182L308.94119004791355,223.3577616183295L308.7679437008742,223.36657154010868L308.6064429324931,223.29021867955126L308.48017865952966,223.21386579025813L308.39502371942467,223.10520969103936L308.36565991711245,222.97306031665843L308.22177737238553,222.90551724926942L307.96043971463314,222.83797420727842L307.7783843038742,222.7792410899631L307.6139471167726,222.69407800796478L307.50823748618404,222.60597828615795L307.37316410139465,222.5208151301902L307.2116633330111,222.40334869142492L306.9708803176302,222.40334869142492L306.9415165153205,222.18309889484357L306.77707932821886,222.11555555924417L306.58621475752534,222.25064220729632L306.5656601151509,222.4327152835791L306.58621475752534,222.64415484988348L306.4393958902963,222.83797420727842L306.2103583573555,222.91432723887988L306.02536652787944,223.2226757182852L305.9108477854618,223.3460150072511L305.7669652888442,223.36657154010868L305.5555460276669,223.4253044865526L305.4292818028125,223.5780100777169L305.1884987874346,223.82762478539576L305.103343799218,223.98326670881383L304.96827041442884,224.1447817739371L304.85375167201164,224.39733242316242L304.6893144849098,224.5588471673032L304.3721856893619,224.6087699066119L304.19893934232255,224.7438548527708L304.03450220333025,224.93473561288135L303.6028546172588,224.9934681642803L303.40905362784474,225.2137148952586L303.2739802430558,225.483883981485L302.8511418169189,225.89794676834828L302.78360510046855,226.05065057046198L302.6602771981138,226.12700243156627L302.5428220850879,226.2151007183529L302.3813213167066,226.19454441449943L302.2168841296052,226.29145252233323L302.11117449901644,226.47352207629504L301.9291190882575,226.46471228356776L301.90856439777394,226.31200876903225L301.81166392712294,226.12700243156627L301.6207993564294,226.1475586936233L301.4563621693278,226.05065057046198L301.51508972584065,225.84802432982613L301.3976346128147,225.73349638181838L301.2243883138847,225.79222866668434L301.0511420149546,225.7041302093692L301.01296910081646,225.51325013572574L300.93662327254015,225.369355840654L300.82210453012294,225.27244732169802L300.5137847982944,225.13736271196174L300.31998385698944,225.0610105013464L300.2348288687756,225.2049050515555L300.1291192862959,225.40753189437237L300.20546511457223,225.5690458706922L300.090946372158,225.76286255029135L299.7738175285008,225.85977080112804L299.6093803413992,226.02128444074592L299.4948615989822,226.11819257688708L299.1747963847165,226.29145252233323L299.0132955682236,226.36780429988582L298.8576675410593,226.50288814574697L298.7725126009518,226.6849575742882L298.66680297036305,226.8699633984566L298.6462483279911,227.0314763497753L298.6080754138502,227.16655979479728L298.61688452567864,227.33100912034453L298.70497588450417,227.53363401442616L298.59045714208673,227.68633670058517L298.47300202906104,227.79205385949228L298.3966562007822,227.9183271185808L298.27039192782127,228.0622198193621L298.097145628891,228.15031735220424L297.91509017002363,228.15031735220424L297.6860526851917,228.13857100037984L297.5010608557152,228.17674658150796L297.36598747092603,228.27365379416955L297.1252044555456,228.30301963158595L296.9049760825394,228.2942098615047L296.6935568694714,228.30301963158595L296.5496743247443,228.35000490606453L296.39404629758064,228.41754627577126L296.1532632822,228.48508757795963L295.9712078233349,228.37937073391984L295.8361344385428,228.27365379416955L295.6746336701615,228.25603429957076L295.4632144089842,228.2354782288842L295.2312405535413,228.34119518586138L294.96990289578844,228.40873650998685L294.74086541095426,228.44691204707135L294.5000823955763,228.45572181142325L294.2974722943336,228.34119518586138L294.0948622412029,228.28246356502711L293.8834429800256,228.37937073391984L293.79828803992086,228.55262890889543L293.70138756926985,228.71707725053673L293.54575949399396,228.82279394356732L293.45179539395144,228.97549578808096L293.2785490950241,228.96668609114167L293.15228482206066,229.063592980201L293.0671298819557,229.26621637538074L292.9320564971638,229.31320145966893L292.7969831123744,229.21629467120783L292.5855638511971,229.13994383782807L292.44168135457653,229.063592980201L292.3535899957542,228.95787639387743L292.3066079216785,228.7846184671505L292.18034369682414,228.64953596658285L292.00709739789386,228.69652122009018L291.77805986495287,228.80223792226747L291.5255313671355,228.86977916281222L291.3434759082704,228.8903351782817L291.19078425171483,229.063592980201L291.02634706461345,229.2280409696233L290.92063748213354,229.427727666633L290.9000828397591,229.6009850826244L290.9294465939622,229.74487671851304L290.8531007656834,229.89170487257945L290.68866357858155,229.92988017443272L290.50660816782556,230.00623076041884L290.3333618207864,230.15012220755588L290.2188430783692,230.2264727256836L290.06321505120536,230.31456946679077L289.80481376406124,230.35274470359414L289.57283990861833,230.41147582205974L289.3614206955499,230.4202854669912L289.1705561248564,230.60235187415026L289.05310096372136,230.8137836364175L288.84168175065315,230.88132432447566L288.77414508231186,231.00759597456357L288.77414508231186,231.18966191233184L288.91802757892924,231.29537759617057L288.7829541941403,231.45982411341123L288.6772445635513,231.6506993830891L288.69779920592623,231.85332068911205L288.6214533776472,231.9972110479024L288.4188433245165,232.09411676932632L288.2544061374149,231.95903605553076L288.0048140102085,232.01776680704194L287.8227585513407,231.95903605553076L287.5614208935883,232.132291742224L287.41753834886117,232.19102250345836L287.18850086402676,232.36427803897863L287.04168194869135,232.40245297320214L286.8684356497613,232.35253188577187L286.70693488137726,232.35253188577187L286.5513068061041,232.46118362692835L286.3692513953456,232.52578731676812L286.1196592200299,232.5375334623958L286.0433133917538,232.74015409335087L286.0697408234548,232.9515841326618L286.06093166351707,233.14245833659075L285.94641292109986,233.21880798105929L285.790784893936,233.18063316146947L285.6469023492091,233.17182360917147L285.4854015808253,233.27753845873247L285.25342767727307,233.30690371694618L285.04200846420486,233.31571326493685L284.8305892511364,233.34507851910698L284.6191699899591,233.24817324550992L284.4459236910318,233.13364878307465L284.31965941806834,233.0191242729814L284.12585847676337,233.08666434854828L283.9261847942412,233.24817324550992L283.82047516365265,233.45960289408524L283.6266742223504,233.5770637351819L283.42406412111063,233.49777767527206L283.28899073631896,233.3832533160106L283.1069352774539,233.37444377016507L282.97186189266176,233.43023765202426L282.85734315024456,233.52714291021638L282.7046514936892,233.48896813305228L282.5196596642154,233.42142810766768L282.3845862794235,233.31571326493685L282.27887664883474,233.17182360917147L282.1056303499047,233.10428350642093L281.77969234631314,233.0367434351898L281.66517360389594,232.93102844493006L281.7503285921098,232.71959838965873L281.7327103203461,232.4993585473713L281.55946402141603,232.43181827761666L281.2981263636634,232.43181827761666L281.16305297887175,232.50816812141983L280.98099752000667,232.46999320222972L280.8283058634511,232.36427803897863L280.7225962328623,232.27618199763583L280.55815904576093,232.27618199763583L280.43189482090656,232.37308761746175L280.3261851903176,232.52578731676812L280.1441297314502,232.6226928946444L279.9033467160723,232.69904268441118L279.7095457747673,232.79594815212997L279.48931740176386,232.845869109465L279.2984528310676,232.78713853934084L279.1721886062162,232.85467872035244L279.0371151733152,232.89285358531242L278.8256959602468,232.78713853934084L278.6436405013817,232.74896365955257L278.5085671165898,232.87229789315938L278.3265117058338,232.9222188365111L278.15326535879467,232.88404397565836L277.7774089586246,232.91340927591642L277.621780931461,232.91340927591642L277.4690892749054,232.96920329921778L277.31639761835004,232.960393692026L277.1607695911832,232.978012858012L276.99633240408184,233.0367434351898L276.81427694521676,233.0455529918152L276.4384205450467,232.78713853934084L276.30334716025504,232.74015409335087L276.1594646155281,232.64324860569334L276.00677295897253,232.516977743294L275.81297201767075,232.5551526558205L275.6221074469745,232.5551526558205L275.5545707305266,232.40245297320214L275.5633798904614,232.25856278587918L275.5633798904614,232.06475142772783L275.42830645756294,231.95903605553076L275.2168872444947,231.94141682271834L275.09355939024886,231.82395527261465L275.1023685020775,231.63308012958407L275.0730046997678,231.43926831048051L274.99665887148876,231.23664668209847L274.9878497596603,231.09275585469072L275.03483178562715,230.9488649464958L275.0054680314265,230.8137836364175L274.87920375846306,230.69925811845272L274.814603460733,230.57298631489908L274.8234125725587,230.41147582205974L274.7470667442824,230.25583832554938L274.59143871711854,230.08258132282793L274.62080247131894,229.91813395794588L274.5356475312142,229.77424237559433L274.4093832582507,229.639160429721L274.22732779938565,229.59217536038517L274.0159085863172,229.49526868341812L273.927817275601,229.31320145966893L273.7839347308743,229.13994383782807L273.72520717436146,228.9197008909801L273.72520717436146,228.7758087631614L273.58132462963454,228.44691204707135L273.4756149990458,228.31182935322653L273.4286329730792,228.17674658150796L273.3023687001157,228.02404421945553L273.1584862034979,227.82141975776017L272.98523985645875,227.36037507770507L272.91770318811723,227.2047355374173L272.8325481999036,227.0314763497753L272.71509308687746,226.91694901463404L272.7356477292524,226.75249938709902L272.6299380986636,226.617415692916L272.5917651845227,226.46471228356776L272.5330376280099,226.30026232196198L272.48605560204305,226.13874888788226L272.406773403158,226.02128444074592L272.16599038777736,225.7540526809202L272.0132987312222,225.59841206145805L271.97512581708384,225.42515161288708L271.8694161864953,225.31062339265526L271.6579969734271,225.23427124394073L271.46419598401303,225.14617260656598L271.18524010260603,224.93473561288135L271.088339583843,224.73210836843646L270.92683881546213,224.6087699066119L270.8005745424987,224.43550865190167L270.66550115770656,224.3385997536497L270.5803461694927,224.21232443173955L270.4540819446386,224.0684292028921L270.2632173739448,224.0684292028921L270.0517981127673,224.0889856633927L269.866806283291,224.1447817739371L269.62602331602216,224.39733242316242L269.4733316113577,224.49130466969962L269.3764311407065,224.64694609687493L269.194375729948,224.73210836843646L269.0681114569845,224.80846069738743L268.9829564687707,224.9435455158696L268.865501355745,225.04045413597893L268.5689271544627,225.23427124394073L268.4132991272986,225.25189097668448L268.2811621131152,225.2225247867147L268.1343431977798,225.15498245269058L267.9522877870213,225.1168063539558L267.86713279880723,224.955292036584L267.7115047716434,224.9171159020276L267.52944931277557,224.9171159020276L267.3356483714733,224.96410189060973L267.11541999846736,225.00227801672003L266.87463698308943,225.06982039910565L266.67202688184693,225.07863024838736L266.5575081394327,224.9934681642803L266.39307100043993,224.97291174426942L266.269743098085,225.0610105013464L266.06713299684543,225.06982039910565L265.8938866979154,224.89655947462157L265.81754086963906,224.67631241457582L265.65310368253745,224.59702336663074L265.47985738360717,224.59702336663074L265.32716572705203,224.50305116748095L265.2772472823676,224.27986706761112L265.0863827116714,224.27986706761112L264.8632179680569,224.26224725376034L264.7017171996756,224.2916135772748L264.5167253701993,224.27105713681547L264.39339746784435,224.1447817739371L264.2876878853649,224.05080937110847L264.1526144524664,223.95390029354988L264.10269605589133,223.74246214378937L264.0087319558486,223.49284738048644L263.8354856088097,223.36657154010868L263.70041222401755,223.2314856940432L263.50661128271554,223.21386579025813L263.30693755208404,223.26085216486575L263.2188462413678,223.14632280352612L263.1513095249204,223.01123681042375L262.8635444835729,222.9525037437926L262.69029818464287,223.02885673188115L262.51705183760623,223.13457622830535L262.3144417844728,223.19330924192528L262.0942134114698,223.2226757182852L261.68899320898754,223.3195851899839L261.4951922676853,223.3841914306351L261.41884643940625,223.56920016507524L261.43940108178117,223.73071555483256L261.4012281676428,223.9245339222265L261.2074272263378,223.98326670881383L261.02537176747273,223.91572397633416L260.9284712968192,223.79825834796839L260.82276166623046,223.6925391962206L260.5056328225735,223.84818126985869L260.31183188127125,223.95390029354988L260.1209673105777,224.03906284783034L259.79209293637473,224.1271619486434L259.1960082113078,224.3385997536497L258.83189729357514,224.47368487367783L258.46485005334284,224.6351996071396L258.08018449323527,224.72329845664456L257.8511470084011,224.70274205851314L257.6485369071611,224.82020717747736L257.4253721635466,224.89655947462157L257.10824336799897,224.98172164567688L256.9349970209596,224.96410189060973L256.79111452434176,224.87600309333908L256.6266773372404,225.0110879169107L256.4446218783753,225.0991866100734L256.0805110087517,225.04045413597893L255.68409996620676,225.03164428511735L255.5108536672767,225.00227801672003L255.16436102131024,224.79084092791527L255.0410331670646,224.6351996071396L254.90595973416612,224.6087699066119L254.7756523769126,224.85972233363668L254.7426193020533,225.06028143521138L254.55750229134765,225.1846521045491L254.3945704542307,225.2261150726219L254.2514522270253,225.27210225094444L254.1717501273804,225.40058568978912L254.01974869953165,225.75470885276064L253.79894517602838,225.7540526809202L253.65506267941055,225.66595420811024L253.63450803703608,225.483883981485L253.51118013468385,225.3194332801231L253.3672975899567,225.2137148952586L253.11066057876724,225.21445064866168L252.94988689105958,225.25135263353766L252.71248530837738,225.32824311911844L252.57741187547617,225.43396144754803L252.3953564647204,225.37816567759873L251.7963353209359,225.32824311911844L251.58491610786746,225.29006705130112L251.46158820551295,225.15498245269058L251.44103356314076,224.96410189060973L251.4028606490001,224.80846069738743L251.31770566078603,224.65575601186106L251.02700424883005,223.99207660370888L250.95946753238218,223.81881483536392L250.94184926061598,223.6661094238324L250.8449487899652,223.55745356618252L250.75979384986022,223.36657154010868L250.6805116028636,223.21386579025813L250.49845619210464,222.92313717998817L250.4397286355918,222.76162114659968L250.527819946308,222.52962508864678L250.33401900500303,222.3945386792502L250.17251818851287,222.29762880815065L250.08442687779666,222.16254224040023L250.0286356918923,221.63394170457127L249.87300766472822,221.296223938575L249.66158840355092,220.91151860748118L249.37382336220662,220.3065606098575L249.36207783166014,220.0451946522255L249.36207783166014,219.77795493912805L249.26811373161786,219.62230966164898L248.93923940552372,219.43142375588621L248.7571839466559,219.25815787168347L248.45767337476514,219.1318793046771L248.11118077690503,218.9292460066831L247.61199647438298,219.0085373094056L247.43875017545292,219.0643348810102L246.66941910334663,219.35506933816913L246.4961728044193,219.41086680409052L246.34348114786417,219.49896799615522L246.0527796877991,219.9218533160679L245.76501464645162,220.40347148121512L245.46550407456084,220.8557215890271L245.32162152983415,220.9614422569311L245.14837523090364,221.02898599435827L244.76370971890537,221.20225019468216L244.3496804045974,221.3755142387974L244.07953358690702,221.35495749920722L243.74478647148408,221.24923704830843L243.5216217759787,221.26979379917623L243.11933794410766,221.2874138764725L242.87855492872973,221.337337428083L242.6465810732866,221.44305783069385L242.4645256144188,221.46948789825316L242.4175435884522,221.64275170277682L242.24429728952487,221.64275170277682L242.07105094248573,221.6544984145458L241.8390770870426,221.6544984145458L241.59829407166467,221.64275170277682L241.357511056284,221.6544984145458L239.91574943083492,221.6544984145458L239.73075760136135,221.64275170277682L235.4994367288391,221.64275170277682L235.25865371346117,221.63394170457127L235.0178706980803,221.64275170277682L234.54511382725923,221.63394170457127L233.73760984101546,221.63394170457127L233.3999263549863,221.6544984145458L233.23842553849317,221.6251316578494L233.18850714191808,221.4812346205165L233.23842553849317,221.3461474879034L233.23842553849317,221.19050345542416L233.29421672439753,221.02898599435827L233.32358052670702,220.7676210357468L233.39111719504876,220.576736299291L233.43809926912445,220.36529447578738L233.50563598557483,220.19202951125445L233.50563598557483,220.03638458011264L233.39111719504876,219.892486291736L233.26485297019417,219.75739802590664L233.09160667126412,219.75739802590664L232.93891496659967,219.59294258987518L232.7069411111595,219.4696009528564L232.5924223687423,219.31395536707325L232.47790362632486,219.23760090048108L232.33108471098967,219.20823381537542L232.21656596857247,219.084891871706L232.0932380662175,218.9791701874468L231.95816468142834,218.91162570714923L231.7261908259852,218.8617015078299L231.50596245297925,218.88225852141878L231.30335235173948,218.8147140531927L231.09193313867127,218.63263744302967L230.88051392560305,218.47699118930666L230.67790382436328,218.3037244419235L230.43712080898263,217.99536790363118L230.30204742419323,217.58422505194451L230.15816487946654,217.49612292207118L230.01428238284598,217.44913505971647L229.8498451957446,217.49612292207118L229.697153539189,217.51668009286402L229.51216170971543,217.4785024811775L229.368279164986,217.4873126777889L229.24495131074264,217.41095743334316L228.94113069428317,217.25211908163973L228.94113069428317,217.08913980070304L228.90807139968229,216.89901786728603L229.10987792595097,216.80305101972976L229.27137869433477,216.63859286349623L229.41819760967292,216.51524913130973L229.5503346238536,216.38015830747983L229.9761094687076,215.99544254731646L230.1111828534997,215.86035131176448L230.36958414064384,215.58135817501162L230.54283043957116,215.32292200956635L230.65734918198837,215.22600835675743L230.68671298430104,215.07035904046586L230.7454405408139,214.94701416408884L230.9098776798062,214.65627237873719L230.96566886570758,214.52411684372925L231.1212969409837,214.2245638975606L231.26517943760132,213.8868319776564L231.4002528704998,213.53147849960223L231.54413536712036,213.03222020551036L231.611672083568,212.84720055906723L231.66746326947236,212.48303430754567L231.73499993781388,212.1159303382289L231.7467454683599,211.866299175783L231.66746326947236,211.66365709246946L231.5823082812583,211.51094115829662L231.52358072474544,211.38465674361487L231.47659869877884,211.22312995190043L231.43842578464046,211.03810816004696L231.3503344258154,210.92357075733585L231.25343395516416,210.74148545625889L231.26517943760132,210.4624833772804L231.312161511677,210.23928139152042L231.34152526587764,210.0483846170986L231.2827977093648,209.9220989865324L231.2358156833982,209.71945431357844L231.24462479522663,209.48156673272763L231.2827977093648,209.2877321539433L231.25343395516416,209.05571770086937L231.17708812688534,208.84426112044486L231.0801876562341,208.6151828617953L231.06256938447063,208.4125363913972L231.09193313867127,208.248069527578L231.09193313867127,208.0836024287881L231.1682789669503,207.69886616358374L231.26517943760132,207.50796612716172L231.34152526587764,207.33468741525868L231.33271615405192,207.12322836142215L231.27398859753907,206.9499491800591L231.1976427692598,206.67093985731262L231.13010605280942,206.51528175370757L231.10955141043746,206.33319099601502L230.94805059394457,206.1980912327166L230.8217863690902,206.03362175579193L230.85995928322814,205.87208903652788L230.94805059394457,205.70761917303247L230.8893230374315,205.53433823525768L230.9186868397412,205.35224618929556L230.98622355619182,205.17015385353227L231.1682789669503,204.86177111543535L231.17708812688534,204.68848910636814L231.215261041026,204.4946479556444L231.1888336093225,204.26262560498418L231.02439647032975,204.15689374269573L230.78361345495182,204.1304607881837L230.64854007015992,204.04235082200216L230.46648461129485,203.90724879340848L230.32260206656815,203.86906775955293L230.1963377936047,203.77214662830306L230.05245529698686,203.8103276898653L229.87039983811906,203.9454298163593L229.41819760967292,204.19801168298233L229.21558750843042,204.33017643339457L229.0423412095031,204.3977272760484L228.86909491057304,204.37129432072845L228.7721944399218,204.24500363370836L228.76338527998405,204.10109078984655L228.73402152578092,203.91899677201977L228.71346688340896,203.67816242648814L228.88671318233628,203.54305998105187L229.02178656712817,203.36977626924607L229.02178656712817,203.09075962198088L229.05115036943812,202.85873482529468L229.05995948126656,202.66782803349813L228.9748044930525,202.34769139209908L228.96599538122405,202.15678385268447L229.12749619771694,201.93650555119092L229.31248797908438,201.78965314168292L229.494543437949,201.66629697495722L229.75294472509336,201.5987447784052L229.87039983811906,201.68391929172438L229.99372774047401,201.80140135791763L230.11999196532543,201.65454879451642L230.1963377936047,201.5018219660968L230.2257015959142,201.3667173161787L230.1963377936047,201.23161247552753L230.1111828534997,201.11706699285207L229.91738191219474,200.89678695487743L229.87039983811906,200.68531768964908L229.88801810988525,200.4709110466252L229.84103608391865,200.32699402476317L229.73532645332966,200.23300732018862L229.60906218036666,200.32699402476317L229.45637052381107,200.59720543969345L229.25376042257108,200.51203015179266L229.05115036943812,200.46209978056115L228.9748044930525,200.34755360251341L228.86028575063528,200.21244772370207L228.72521236584612,200.10671260972683L228.66648480933304,199.92461297074516L228.78100355174752,199.76013565094806L228.94544073884913,199.75132438303837L229.01297745529973,199.58684683451003L229.1186870377794,199.44292879497021L229.31248797908438,199.5574758019036L229.494543437949,199.51048219303325L229.6765988968168,199.3665640648926L229.8498451957446,199.45174013286007L230.01428238284598,199.5192934780064L230.11999196532543,199.6632114290562L230.24331986768038,199.7895066357188L230.407757054782,199.87468236582757L230.601557996084,199.87468236582757L230.71607673850122,199.95104678402126L231.0537602245331,200.21244772370207L231.1976427692598,200.3387423759401L231.33271615405192,200.4826593843773L231.48540781060728,200.60601664820467L231.6968270236755,200.500281816775L231.7731728519518,200.3181827967501L231.7467454683599,200.17426560013516L231.66746326947236,199.89524201777073L231.64103583777114,199.71314211865598L231.5353262552917,199.5574758019036L231.38850733995332,199.42236906828091L231.29454323991104,199.20208600618088L231.1682789669503,199.02879640909407L231.1212969409837,198.8936890972735L230.97447802564534,198.68221648266245L231.02439647032975,198.35619543573307L230.94805059394457,198.1535333215948L230.7924225667805,198.17115613381605L230.61917626785043,198.25927010847005L230.44592996892015,198.31507561518455L230.34902949826915,198.4208123098064L230.20514695354245,198.5001147465331L229.8498451957446,198.36500685154377L229.6677897368795,198.30626424388228L229.48573432612056,198.31507561518455L229.42700676960771,198.1417847626512L229.29193333670946,197.93031084388943L229.07170501181258,197.91268799664687L228.89845866477322,197.70121367739773L228.9248860964774,197.50736184811262L229.05115036943812,197.43980738943583L229.21558750843042,197.48973893904937L229.39764296729822,197.45155596856665L229.54152551202492,197.21070924072248L229.8498451957446,196.8259409372509L230.03190065461195,196.72901437652254L230.21689248408848,196.57334428145282L230.27268366998987,196.12101860699477L230.43712080898263,195.9301014313624L230.61917626785043,195.87135762622069L230.7924225667805,195.79499063068084L230.89813219736902,195.69806322211082L231.04201469398686,195.49539653614767L231.215261041026,195.3044783384609L231.38850733995332,195.19873887177212L232.06387431201688,194.88151998875497L232.19894769680604,194.70822405918778L232.31346643922325,194.3998154895273L232.3721939957361,194.20595825232044L232.3721939957361,193.93573241235265L232.38981226750252,193.53332976368404L232.2547388827104,193.3688435776388L232.05212878147063,193.407027887886L231.91999176729018,193.56270224249232L231.79372749432673,193.4745847350487L231.6968270236755,193.292474918356L231.62048119539668,193.06043137396892L231.514771612917,192.92531714188897L231.36207995636164,192.92531714188897L231.20645188108824,192.98406250529086L231.0537602245331,192.92531714188897L230.88051392560305,192.98406250529086L230.73663138087613,192.9928742782731L230.589812465538,193.07218039646233L230.5222757971992,192.92531714188897L230.46648461129485,192.74320648314188L230.27268366998987,192.7138337420887L230.09943737106255,192.63746463694343L229.93793655456966,192.4553534606743L229.73532645332966,192.26149287983213L229.6472350945046,192.1381268969035L229.494543437949,192.01182344508425L229.29193333670946,191.90608090264914L228.98361365299024,191.44492484419902L228.86028575063528,191.32743250273182L228.58132986922556,191.30099673620467L228.38752887981445,191.3861787132746L228.24364638319662,191.48310981482916L228.02048163958193,191.46254868215016L227.84723529254302,191.5124828342058L227.66517988178407,191.62703763576604L227.47431531109055,191.61822575440613L227.30106896405164,191.635849564546L227.11607718268692,191.6945955619159L226.96338547802247,191.65641066478844L226.79013917909242,191.5682916023054L226.6550657943003,191.48310981482916L226.5111832495736,191.3391817569862L226.40547366709393,191.21287738810776L226.26159112236724,191.06013704848598L225.92390763633534,190.58722808890928L225.63614259499082,190.2112493010295L225.480514567824,190.0761316130756L225.31901375133384,190.01151001876838L224.8756206347132,190.1055050128225L224.74054724992152,190.15543983654823L224.4615913204052,190.2318106703272L224.32651793561308,190.26118407573216L224.1150987225451,190.34636681954947L223.97121617781818,190.36692816309213L223.8449519529638,190.2229986760182L223.92423415185158,190.01151001876838L224.19144455082392,189.4798492961202L224.347072577988,189.21254926247508L224.3764363802975,189.0656808112198L224.30889966385007,188.87475153964562L224.25017210733722,188.64269858357534L224.31770882378464,188.46058068802645L224.31770882378464,188.25790072989287L224.35588173792576,188.11396838692707L224.42341840626432,187.94947399011693L224.43222756620185,187.78791673325753L224.43222756620185,187.16224725873195L224.4615913204052,186.93900276379063L224.5085733944809,186.71869521436201L224.58785559336593,186.58357303424077L224.74935640985882,186.43082600320372L224.96077562292726,186.283953628037L225.17513120660396,186.1605807042424L225.32782286315955,185.99608319200186L225.64495165870744,185.68764968090807L225.82700716568434,185.54371369545984L226.0501719092988,185.3527779176391L226.5111832495736,185.06196730848643L226.54935616371176,185.2059039815556L226.68442959661252,185.27346598603202L226.9046579215094,185.28521591824352L227.1072680227494,185.26465357206848L227.18361385102548,185.15009183157557L227.17480473919977,184.9767802360961L227.18361385102548,184.63896861587068L227.271705209851,184.4480311163636L227.46256978054453,184.2923433052224L227.60938869588244,184.14840536423205L227.75327119250028,184.06027995683496L227.90596289716473,184.15721787660226L227.9940542078782,184.2923433052224L228.04984539378256,184.41865606176844L228.08801830792095,184.6007811452012L228.079209196095,184.8034682930566L228.0615909243288,184.94740533690793L228.00286336781596,185.120716983091L227.88834462539876,185.26465357206848L227.91477200899317,185.48496426752536L227.9940542078782,186.4690127823307L228.0410362819539,186.62175975640923L228.11738211023317,186.75688188624127L228.21428258088395,186.8920038864592L228.31999221147294,186.97718935387616L228.493238510403,187.1416852910408L228.6077572528202,187.32380548898266L228.76338527998405,187.4677389236225L228.94544073884913,187.42955251479478L229.08051412364102,187.34436742046188L229.1392416801541,187.1416852910408L229.31248797908438,186.86262954113505L229.50335259788676,186.3720770880953L229.5796984261633,186.1987675844311L229.6472350945046,186.07245706143868L229.73532645332966,185.8815222802675L229.8498451957446,185.67002487637959L230.07007356875033,185.3997775050223L230.16697403940134,185.29402837853223L230.4841028830583,185.09134217414575L230.57219419377452,184.70653100229083L230.69552209612675,184.53321863909366L230.77480429501406,184.27471825555466L230.8012317267153,184.0220922639901L230.94805059394457,183.81059093288366L231.04201469398686,183.59027653873335L231.07137849629657,183.40814959709658L231.13891521274695,183.20545954559213L231.2358156833982,183.07914528476135L231.40906198232824,182.98220630384014L231.62929035533398,183.0321445510285L231.83190045657398,183.14670873679142L231.98752848373783,183.16727152147064L232.2077568567438,183.15552138682563L232.28410268502262,182.98220630384014L232.27529352508532,182.78245291538997L232.38981226750252,182.5503860022903L232.44853982401537,182.25075446025141L232.51607654046325,182.09800077603782L232.504331009917,181.94524680224964L232.55424940649232,181.7219908071666L232.5542494546039,181.442919699361L232.5924223687423,181.08747024772657L232.8713782982611,180.70264329467875L232.94772412653742,180.5205109562295L232.99764257122183,180.28843852447434L233.11216131363904,180.0299268612311L233.22668005605624,179.932984750527L233.32358052670702,179.82722968108843L233.31477136676972,179.6715344221416L233.37056255267385,179.53640251742834L233.3999263549863,179.40420806671082L233.37056255267385,179.23969918994234L233.3617534408454,179.02818726793373L233.43809926912445,178.80492419385058L233.58198181385137,178.76673440624754L233.77578275515611,178.75792139831918L233.99601112815913,178.69035478384137L234.11346624118528,178.59341132994183L234.20743034122756,178.44946477416332L234.16925742708963,178.15275797163562L234.27496705767817,178.044063136876L234.40123128253254,177.86192556054004L234.43059508484203,177.50646249860412L234.60384138377208,177.2185658003163L234.68899637198615,177.10105668818983L234.7947059544656,177.007049279465L235.02667985801781,177.07461708574297L235.04723450039273,176.91010404476407L235.08540741453066,176.70740001084317L235.2292899111485,176.50469552262487L235.33499954173726,176.29317733327252L235.32619038180246,176.09047191330643L235.2204807993228,175.98471236960245L235.1323894404975,176.16979146525915L234.9679522533961,176.28436403853456L234.89160642511956,176.02290332229728L234.76827857087392,175.86132612576029L234.60384138377208,175.69681082132212L234.56566846963415,175.54404635609583L234.65082345784822,175.43534838946016L234.8534335109789,175.51466852213002L234.88279731329112,175.35896596561378L234.7947059544656,175.1856363796893L234.91216106749175,175.06224898226293L235.03548896984626,175.0034930344641L235.20873526877676,174.75377980950861L235.14119860043502,174.58926245499282L235.35261781350346,174.31016982520862L235.4495182841547,174.13683818253202L235.54641875480547,174.0310763096591L235.63157374302205,173.89593598513198L235.43190001239122,173.8195522290672L235.28508109705285,173.7314170726198L235.12358032866905,173.60802763679908L234.97969778394213,173.46407308241658L234.8328788686067,173.29073976220664L234.74772392849923,173.09684106540152L234.7183601261895,172.9616992916718L234.7007418544233,172.81774366583193L234.7858968426399,172.70316658551417L235.10302568629686,172.7413589625047L235.1529440828724,172.6062166332663L235.05604361222117,172.4710740922493L235.1118347981228,172.2977387342824L235.1793715145734,172.1449683376087L235.1999261569481,171.90406060219078L235.08540741453066,171.76010325410383L234.88279731329112,171.85705416158737L234.7858968426399,171.67196594811682L234.75653304032767,171.5191944341375L234.7389147685642,171.34585719595293L234.72716928612704,171.13432647921508L234.72716928612704,170.66131847096497L234.7858968426399,170.3910270046801L234.93858849919548,170.28526051737666L235.0178706980803,170.153052245087L235.1793715145734,170.04434749783854L235.2674628252896,169.853379383099L235.4113453700163,169.73879830500005L235.45832739598313,169.59189924214252L235.5640370265719,169.45968987395813L235.69030129953535,169.33335631472903L235.8459293266992,169.23640245567327L235.80482004194982,169.06306050870148L235.83418379615273,168.9102842517308L235.96044806911618,168.63117303523927L235.99862098325457,168.45782981990675L236.02798478556406,168.25510591288838L235.93989342674172,167.81146204510674L235.93108431491328,167.62048877426832L235.93108431491328,167.45595757954607L235.9692572290512,167.30317833274324L235.9692572290512,167.10926575780366L235.93989342674172,166.80958182415924L235.99862098325457,166.67736797423657L235.93989342674172,166.55103012647237L235.83418379615273,166.72437739246982L235.62276458308475,166.8213341741012L235.54641875480547,166.67736797423657L235.57578255711792,166.54221582266118L235.63157374302205,166.35711574954374L235.72847421367328,166.1279436592552L235.8253746843243,165.9545951092077L235.93108431491328,165.79006052356817L235.98981187142613,165.64609252586658L236.0162392550178,165.5109385906374L236.13369436804396,165.19361984158877L236.2394039986325,164.83810386396115L236.2012310844941,164.6529998425599L236.06615769970495,164.55897859032274L235.95163895728774,164.3944411176521L235.99862098325457,164.2592850987604L236.13369436804396,164.22990330183177L236.26876780094472,164.36505937109837L236.27757691277338,164.19170697831976L236.27757691277338,163.74804064130655L236.17186728218462,163.60406888081457L236.16305817035618,163.4512822566054L236.29813155514535,163.37488883248682L236.21884935626053,163.18096668697916L236.4978052857764,162.94884717668793L236.70041538701912,162.55512385870134L236.70922449884483,162.34357021829726L236.80612496949857,162.19078111510345L236.96175299666265,162.1408307472282L237.17317225783995,161.9498438187366L237.32586391439554,161.8440662168104L237.32586391439554,161.6413254783038L237.2583271979447,161.3710035796256L237.1819813696684,160.71576289976633L237.2583271979447,160.35141140263488L237.2583271979447,160.16629664760197L237.12325381315554,159.7431755449236L237.14380845552773,159.5521825504387L237.27888184031963,159.3876344215535L237.49030110149693,159.1966405705379L237.7105294263938,158.97332405034726L237.88377577343022,158.7529452432977L237.95131244177173,158.5795801450859L238.02765827005055,158.43559862952424L238.01003999828458,158.2416639395317L238.03940380059703,158.00952927592775L238.09519498649843,157.83616244077314L238.18328629721464,157.67454894170828L238.28018681597496,157.56876533201662L238.60612477146037,157.53938095299776L238.70302524211138,157.40421276438593L238.8380986269035,157.19264466399346L239.24038245877432,156.8752913457125L239.41362875770437,156.78713738878454L239.4429925600141,157.0104605080494L239.79829426970014,156.84590673730185L240.12716864390336,156.79889127189352L240.5676253418062,156.7107372228679L240.91411798777267,156.56675210354672L241.15490100315333,156.4785977742754L241.45441157504433,156.31698123508045L241.64527614574058,156.19944173477398L241.8185224446679,156.03782462361852L242.22374259904086,155.62349540399072L242.73467243210916,155.31495079682855L242.97545539938073,155.20034819324107L243.21623841475866,155.12100782981915L243.36893007131425,155.09456099048435L243.5421764183534,155.08280687934365L243.69486807490875,155.03579027114188L243.7741502737963,154.84184655158933L243.686058914971,154.553868539223L243.66844064320776,154.36286207344818L243.67724980314506,154.09251354671454L243.8211322997629,153.9485231998134L244.0237424010029,153.89856726962887L244.19698869993294,153.77514660564754L244.22635250224243,153.52242749836938L244.17643405755803,153.3226024156471L244.10889738921674,153.1110223324387L244.16762494572959,152.97584583776285L244.26452541638355,152.870055331795L244.31150749045923,152.72606249962996L244.32031660228495,152.51154194383744L244.29388921869304,152.36754832929628L244.19698869993294,152.21473847946245L244.01493328917422,152.07074430337303L244.0325515609402,151.90617911960157L244.2146069716964,151.77981630035777L244.38785331873555,151.712226827312L244.50530843176148,151.5505994728872L244.64038181655337,151.4918258095925L244.74609144714213,151.3654622388917L244.75490055896785,151.17444713078987L244.696173002455,150.81886374048375L244.77251883073382,150.5191143394497L244.74609144714213,150.28695461349247L244.8106917448722,150.07536531739686L238.87627154104143,147.2452951487365L238.8850807009792,146.90732452770973L238.8850807009792,145.9845090703413L238.91444445517982,145.09694832613422L239.03777235753478,145.27034688515403L239.08769080221896,145.48195128852828L239.2110186564621,145.57011960957516L239.40481959776685,145.54073016626606L239.59568421656945,145.4937070875261L239.72194844142405,145.42611129893928L239.83646718384102,145.22332361349135L239.86583098615074,145.02053525505L239.84821271438705,144.7883564912453L239.97154061673928,144.65610241709155L240.1154231133571,144.68255328216898L240.3004149428334,144.77072267505153L240.33858785697157,144.9059154817594L240.48247040170122,145.09694832613422L240.67333497239474,145.04110800999217L240.70269877470446,145.24095735633819L240.7614263312173,145.511340758017L240.85832680187127,145.35851548919902L240.91411798777267,145.14691068926146L240.93467263014736,144.94412209508653L240.91411798777267,144.80011241422397L240.99340018666044,144.59732274821948L241.15490100315333,144.6737363122783L241.27235611617925,144.49151923048208L241.492584489185,144.44155636796083L241.65702162817774,144.2593385909684L241.73336745645406,144.06830330181896L241.80090417290444,143.94192578427317L241.90661380349297,143.76852370391543L242.01232338597265,143.62451147790225L242.0974783741865,143.48931596742477L242.23255175897862,143.24831468437293L242.33826138956715,143.1131183887062L242.44397097204705,143.01612960322075L242.59959899921068,142.90150630092035L242.70530862979945,142.78688279498073L242.8403820145886,142.66050277722013L242.9842645593185,142.5546961013914L243.19568377238647,142.6046603692643L243.38948476179803,142.71928419935227L243.56273106072808,142.7486749143775L243.6097130866949,142.61347762013838L243.5216217759787,142.21964037475286L243.58915844432,142.05505094846552L243.686058914971,141.91985219374357L243.78295938562496,141.69941880048486L243.79176854555976,141.4966194086983L243.74478647148408,141.3232107410981L243.7242318291121,141.1292276073204L243.7535956314216,140.87058247578943L243.7535956314216,140.66778044076824L243.71542271728345,140.48555201380458L243.7066135573457,140.29156626860384L243.6566951607706,139.94474186349944L243.8886690162135,139.94474186349944L244.0237424010029,140.0887624243295L244.2057978598707,140.1387286270786L244.37023504697208,140.14754621931834L244.5434813458994,140.10051915881962L244.7049821623923,140.04173531996395L244.86941930138505,139.99470822864464L245.00449268617695,139.96531624262133L245.19829367558805,139.95355943473731L245.57121370514938,139.85950503706505L245.96762474769434,139.87714025034683L246.1702348008248,139.79190338046078L246.4286360879687,139.80953861270115Z\" stroke=\"#000\" fill=\"#FFF\" strokeWidth=\"0.5\"></path>\r\n        <path id=\"TransNzoia\" ref={(item) => countyRefs.current[25] = item} d=\"M157.33011460533112,199.68377111587682L157.27138704881827,200.59720543969345L157.41526959354496,200.58839418244636L157.84985355022764,200.58839418244636L158.63680289409717,200.55902343280354L158.86877674954007,200.5384638414301L159.4178794486404,200.6177649733841L159.67628073578408,200.67356941886572L159.87008167708632,200.6941289401413L160.3898206219858,200.77930405726627L160.9653507527869,200.5208414143656L161.55262636602492,200.27118942589402L161.8227731356062,200.3181827967501L162.4687763534664,200.45328856200467L162.7653505066396,200.98196193593944L163.05605196670467,201.47245137912782L163.80482839643287,202.21552466022422L163.939901781225,202.3300691657352L163.62277293756802,202.8411126678419L163.7079279257821,203.0320192076259L163.83419215063623,203.15831109259716L163.90172886708683,203.2934138820156L164.06616605418844,203.34040615143428L164.18068479660292,203.44613861244937L164.32456729322348,203.59886316702446L164.53598655440078,203.79270565910917L164.7973241640443,203.99535880032104L164.98818878284715,204.08053180643253L165.1819897241519,204.07172078508228L165.36404518301697,204.13927175755745L165.64300106442647,204.31255447096237L165.78688360915362,204.45646708871135L165.9307661538803,204.58275762590048L165.98068455045836,204.32136547652635L166.0658395386722,203.98361082841393L166.2214675658363,203.8778787461253L166.57676932363142,203.8220756769981L166.75882478249923,203.8103276898653L166.9144528096631,203.86025672428326L167.39308246981295,203.67816242648814L167.6250563252563,203.68697342566895L167.77774798181144,203.77214662830306L168.12424062777814,203.7045954703982L169.13435466715282,203.09075962198088L169.26942805194494,203.4079574463472L169.56893862383572,204.06290981126944L170.37644261007995,205.17015385353227L170.62603478539518,205.56370792389933L170.7229352560464,205.6988083051642L171.06942785390652,206.2656411066599L171.5304392422904,206.99694014426657L171.79177690004303,207.07330046389126L172.07073282956185,207.09385900074352L172.31151579683365,207.12322836142215L172.38786162510996,207.23776872333974L173.11901978307492,208.49770669958932L173.1395744254496,208.64161501651674L173.27171143963028,208.74734344316363L173.41853035496865,208.97935843134576L173.4860670714188,209.12326622647765L173.83255966927663,209.24074188704566L174.18786142707154,209.3846494750759L174.3317439718012,209.4521978982581L174.6782365696588,209.58729460415475L174.99536541331577,209.740012475776L175.36241270165692,209.96027838340274L175.62081394069196,210.12474333674163L175.80286939955977,210.25102884483871L176.00547950079954,210.36556675537963L176.6896555846888,210.7972858105024L176.89226568593108,210.90301275657959L177.7379425863137,211.22312995190043L177.91999804517832,211.2789301302555L178.15197190062167,211.3670356464357L178.5072736584168,211.48157271801693L178.72750203142255,211.5696780702095L178.91249386089885,211.62547812306582L179.0682837769316,211.6542261122036L179.26779557058512,211.81049920961803L179.28541384234836,212.03957261218792L179.26779557058512,212.21284590428718L179.14153134573053,212.28920354575035L178.36339111368966,212.45366600233422L178.38043971945194,212.65436482190637L178.44854610190396,212.8090218780909L178.51608277024525,213.00285205029374L178.5748103748674,213.13794563496248L178.7418983057696,213.43686487265697L178.7865823757727,213.63079008405737L178.6423470432087,213.73411818996402L178.44854610190396,213.81928549019426L178.16078106055897,214.0131143946137L178.0756260723424,214.19519591139527L178.48965538665334,214.2921101687217L178.3428364713152,214.38902436863327L178.21950861707205,214.45657062007717L178.3428364713152,215.06154867113008L178.38100938545313,215.19664054874988L179.1532768281677,215.34935297854503L178.86257541621194,215.91908664270233L178.621792400834,216.48588159506056L177.91118888524102,216.10116602497638L177.74675174624826,215.92789691893614L177.6322329557247,216.0248101678821L177.55588712744589,216.17752189593264L176.63973718811326,217.7663027308157L176.5722004716631,217.95719039536996L176.46649084107435,217.8632149517395L176.39895417273556,217.66058022116457L176.23745335624244,217.53430052993326L176.10237997145055,217.36103281396055L176.05246152676614,217.17895476302618L175.9673065866616,217.00568674294067L175.92913367252322,216.84122877931674L175.85278784424395,216.7266954752708L175.70890529951726,216.62097233573928L175.54446811241587,216.53286966989359L175.3418580592852,216.4946918420286L175.1979755145553,216.38015830747983L175.07171124159458,216.25387768458504L174.98655630148733,216.13053367540275L174.92782874497448,215.95726459930322L174.83092822621393,215.79280562953141L174.50499027072874,215.78399534627005L174.37872599776802,215.6870819113502L174.02342423997015,215.551990429289L173.85017794104238,215.60191557472407L173.69748628448724,215.6870819113502L173.58003117146154,215.83979394352963L173.3509936866269,215.91908664270233L173.16600185715083,216.04243075703383L173.10140151131145,216.18633215877603L172.86061854403965,216.40952590994215L172.7049904687667,216.48588159506056L172.50238036752717,216.5240594248865L172.34087959914314,216.5240594248865L172.19406068380772,216.4565140056768L171.99438695317644,216.4565140056768L171.77122225767107,216.3889686079936L171.52163008235289,216.40071561048518L171.31021086928445,216.33317019080667L171.12815541041937,216.25387768458504L170.96371827142707,216.26562469635218L170.75229901024954,216.30380257524905L170.52032515480664,216.40952590994215L170.20319631114944,216.5064388853967L170.0299500122194,216.4770712995288L169.8860674674927,216.40952590994215L169.72163032850017,216.4565140056768L169.34871029893884,216.58279452743204L169.1079272835609,216.58279452743204L168.90531718232137,216.61216209524105L168.74087999521953,216.60041505909544L168.60580661042786,216.5064388853967L168.45311495387227,216.5446167106516L168.27986865494222,216.55342700272274L168.11712540753433,216.52309441421352L167.99186364281695,216.62235301809804L167.97259256508391,216.7909961521108L167.8364755383243,216.8794065304804L167.64561096762804,216.9763192419669L167.49879205229286,217.13196681550042L167.47236466870072,217.3316654209406L167.46061913815447,217.4873126777889L167.38427330987565,217.62240264068984L167.3079274815991,217.82503741503683L167.43125538395134,218.1128371010252L167.36665503811219,218.29491423775758L167.2587113411339,218.387208064773L167.1676157290285,218.45369107745927L167.03778071201805,218.57390302436812L166.9144528096631,218.66200466924812L166.81061940611585,218.71469819460322L166.64812454867047,218.68761255249797L166.52502237664908,218.55710902158478L166.35220175162954,218.458195726211L166.16256671847532,218.4030403068133L165.95551629182023,218.2965999099853L165.7881344111438,218.11565108043493L165.74871069501523,217.9777475125197L165.76926533738992,217.82503741503683L165.66355575491048,217.69875779337914L165.49911856780864,217.58422505194451L165.32587226887858,217.55485769626023L165.1144530077013,217.62240264068984L164.90303379463285,217.6312128782113L164.50662275208856,217.52549028756187L164.41265865204582,217.4197676814606L164.25703062488196,217.43738812824913L164.12195724009007,217.4873126777889L163.96926553542562,217.42857788101992L163.80482839643287,217.46675550355934L163.69911876584433,217.61065572079707L163.33500789622076,217.75749254815435L163.09422488084283,217.6899476073462L162.90042393953786,217.80448028018552L162.79471430894932,217.95719039536996L162.7559888077244,218.1129563309176L161.7757911096396,218.32428151913865L161.2854159670526,218.42119343656762L161.1297878917792,218.47699118930666L161.2443066341939,218.198002251991L160.43680264795262,218.45937084567478L160.1872105207433,218.52691549490277L160.2341925948192,218.7677265382589L159.6586624640181,218.8910686968834L159.43549772040342,218.94980301263064L159.07138685077985,218.94099288812987L158.99504102250353,219.084891871706L158.93631346599068,219.21998063073664L158.83941294723058,219.38149969861695L158.77187627888907,219.57532235419077L158.6661666483003,219.6810437430872L158.29324661873898,219.71041075275872L157.9937360468482,219.93066339359513L157.7617621914053,220.03638458011264L157.0893315899532,220.3741045805562L156.4051555060612,220.6912671642155L155.964698760052,220.93207539457455L155.6064606316454,221.10533973068215L153.2779128210675,221.8277620541568L152.66420977612825,221.92173549496746L152.73174644446976,221.74847193882417L152.74936471623323,221.59576494482525L152.75817387617099,221.26979379917623L152.56730930547747,220.66190026016676L152.47921794665194,220.47982546886857L152.4704088348235,220.2683835847534L152.35589004430017,220.09511853070347L152.20026201713313,219.9600304119013L152.11510707702837,219.79557515551966L151.98884280406492,219.46079080527542L151.98884280406492,219.26696802898752L152.02701571820603,219.12306914086557L151.98003364413012,218.9586131367051L151.8919423334139,218.83527107210682L151.85376941927598,218.66200466924812L151.76861443106168,218.4476239329237L151.73925067685832,218.247926635266L151.66290484858223,218.1040269355596L151.6041772439603,217.91901287889988L151.71869603448386,217.77511296115588L151.85376941927598,217.62240264068984L151.99765191589336,217.43738812824913L152.17089826293272,217.34341240760816L152.25018046182026,217.18776497471362L152.20026201713313,216.98512946391145L152.1239161888568,216.85297575096223L152.0093974464396,216.74725273685996L151.87432406165044,216.5916048175456L151.70988687454883,216.4770712995288L151.59536813213163,216.3713480546307L151.41331267326382,216.31261287969286L151.18133881782364,216.30380257524905L150.79667325771607,216.40952590994215L150.65279076109823,216.42714645937846L150.47954446216818,216.34198044562228L149.68084958775262,215.8985292815956L149.48704864644765,215.78399534627005L149.3049931875828,215.64009360297175L149.19928355699403,215.5138123810482L148.62081710369375,214.735565639254L148.31249737186226,214.30092057914516L147.504993385621,213.19374513091364L146.87073574641613,212.40667676033596L146.4772610744801,211.8486781334702L146.38916971565754,211.646036027135L146.2452872190397,211.5109412064134L145.53174728472914,210.51828383418618L145.27334604569432,210.18348083137394L145.07954505628004,210.02782649733155L145.10890885859249,209.86629830832703L145.20580932924372,209.65484288695296L145.39961027054574,209.17319341531294L145.49357437058802,208.91180979145753L145.5728566175851,208.72972203601768L145.38786478810857,208.69154232126456L145.20580932924372,208.69154232126456L145.0237538703759,208.64161501651674L144.61853371600523,208.40372569189853L144.47465117127854,208.38316734287386L144.3307686265489,208.315618426906L144.15752232762156,208.248069527578L143.9842760286915,208.13352997359567L143.50270999793293,207.757604629527L143.35001834137734,207.6518754312321L143.11804448593443,207.431606041164L142.75099719759305,207.01749869220896L142.63647845517585,206.85303017677467L141.92587493958558,205.92789126466096L141.64691905817585,205.51377946872782L141.7702468643099,205.45797707320102L141.94349321134905,205.4491661893661L142.23419467141412,205.36105707934604L142.4338683539363,205.28469582094402L143.0798715717965,205.1114143495624L143.28248167303605,204.98512430399708L143.41755505782794,204.83240132423106L143.56143755444577,204.70611101977946L143.7523021732486,204.62093845716942L143.90793020041224,204.60037955306572L144.05181274514212,204.57100965714343L144.34838689831508,204.46527803675332L144.48346033121356,204.35073537862857L144.6273428278339,204.24500363370836L144.94740804209937,204.10109078984655L145.05311767268813,203.98361082841393L145.2351731315532,203.8778787461253L145.32032807166092,203.72515451162042L145.4847652587623,203.6194222245735L145.6198386435517,203.50487884283194L145.69618447183075,203.36977626924607L145.73435738596868,203.20530336192724L145.7842758306531,203.07020048234142L145.8312578566199,202.8969161503154L145.96633124141204,202.73244265258162L146.5624160145851,202.58852821479502L146.93827241475492,202.54153567663656L147.25540125841167,202.4446135703999L147.4668204714801,202.35943950960205L147.93957734230366,202.36825064515367L148.1304419611065,202.3388802551557L148.35360665661165,202.27132840998885L148.53566211547673,202.26251726787444L148.73827221671945,202.23314690211382L148.94969142978744,202.21552466022422L149.14055600048096,202.17440610254846L149.34316610172095,202.15678385268447L149.516412400651,202.1068541237055L149.68965874769037,202.13622451804764L149.90107796075858,202.13622451804764L150.05670598792244,202.09804297042385L150.2299522868525,202.08923186465995L150.44137154803025,202.1479727027929L150.65279076109823,202.19496538301496L150.8348462199633,202.13622451804764L150.9875378765189,202.01286873045666L151.18133881782364,202.04223914610878L151.36339427668872,201.97468714646027L151.58655902030318,202.03049099989641L151.91249697578883,202.05986141154747L152.22962581944557,201.78084201489628L152.37350831606318,201.6956675176027L152.49977258902686,201.569374213617L152.58492757724093,201.35790611225747L152.74936471623323,201.16406004973845L152.75817387617099,200.99077316582532L152.84626523499333,200.85860503831998L152.96078397741053,200.77930405726627L153.03712980568957,200.66475816694393L153.08704820226512,200.34755360251341L153.12522111640305,200.19188812384866L153.7976517178554,199.97160642339887L157.35947840764334,199.08753867023415Z\" stroke=\"#000\" fill=\"#FFF\" strokeWidth=\"0.5\"></path>\r\n        <path id=\"UasinGishu\" ref={(item) => countyRefs.current[26] = item} d=\"M182.06475638635516,215.64645266934156L181.9810089893797,216.0248101678821L181.79895353051188,216.73550570991642L181.85474471641623,217.0820421645074L182.08671857185914,217.140777077677L182.90596808864962,217.24649985227288L183.51967113358864,217.34341240760816L183.71347207489066,217.36103281396055L184.35653887403328,217.4785024811775L184.23321101979036,217.58422505194451L184.1744834632775,217.7663027308157L184.11575585865535,217.98655773235163L184.00123711623814,218.18919209073084L183.8779092619925,218.35364874758756L183.85735461962054,218.544535783804L184.11575585865535,218.61208040107857L184.6648586058618,218.6208905896957L185.11706083431068,218.61208040107857L185.31967093555045,218.67962499306157L185.31967093555045,218.9028155807973L185.32848004737912,219.04671459455253L185.43418967796765,219.18180338182614L185.4929172344805,219.37268959492724L185.52228098868113,219.71041075275872L185.48410807454275,219.892486291736L185.4253805180299,220.03638458011264L185.40776224626666,220.2390166629939L185.3490346897538,220.44164847890698L185.25213421909984,220.66190026016676L185.193406662587,220.8351647937034L185.11706083431068,220.9908091147755L185.0407150060314,221.18169343659417L185.17578839082353,221.22868029524483L185.3490346897538,221.2110602125698L185.6279906192699,221.24923704830843L185.80123691819995,221.39313430643296L185.88639190641402,221.60457494476518L185.88639190641402,221.9716588835791L185.89813738885118,222.23008555989213L185.94511946292687,222.86734073542647L185.9539285747553,223.0787798423392L185.97448321713,223.29021867955126L186.03321077364285,223.51927717526218L186.19471159013597,223.67491933230042L186.22407539244568,223.86580111892522L186.19471159013597,224.00088654634436L185.94511946292687,224.26224725376034L185.86877363465055,224.42376210221923L185.78068227582503,224.7438548527708L185.6456088910361,224.61757982319466L185.4929172344805,224.76147462616194L185.7630640040618,224.9053693791991L185.68671817578274,225.29006705130112L185.63679973109834,225.47507410075616L185.58100854519398,225.79222866668434L185.66616353341055,225.97429868274028L185.7425093616871,226.20629086720646L185.81885518996614,226.3883605394766L185.99210148889347,226.48526851416574L186.12717487368536,226.6291621231809L186.11836576185692,226.85821702895984L186.08019284771854,226.99330057787145L185.83060072051217,227.00504698842064L185.43418967796765,226.98449080564126L185.23451594733638,226.98449080564126L183.58720780193016,226.93750520358557L182.77970381568616,226.93750520358557L182.6064575167561,226.9463149776559L182.16306444824477,226.9463149776559L181.92228143286684,226.95512479949414L181.63451634341027,227.0226665790382L181.70205305986065,227.2634674328831L181.84593560458757,227.54244376534197L182.59764840492744,228.79342821892863L183.83679997724562,230.55536703543774L183.98361884447195,230.78441814983074L184.2508292915536,231.23664668209847L184.56795813521057,231.7270494518546L184.8204866330284,232.15284753899948L184.98198744951856,232.46999320222972L184.80874110248214,233.5565080939642L184.69422236006494,234.16436730129078L184.5503398634471,234.73111405611087L184.40645731871768,235.3859548100115L184.2508292915536,236.03785759635616L184.0893284750607,236.47245870011548L184.12750138920183,236.7044415088626L184.1069467468269,236.96285246723912L184.06877383268852,238.0229227084085L184.1069467468269,238.9156107772864L184.31836595989535,238.9743401697985L184.52978517296333,239.17695652955632L184.61787653178612,239.4353656296706L184.69422236006494,240.0050395370308L184.7529499165778,240.33979597235336L184.96436917775532,240.63050528173565L184.99373293195572,241.34112700131814L185.2609433309285,241.38811023618624L185.1464245885113,241.58191590647678L184.98198744951856,241.8315140327557L184.93500537544287,242.11928574291676L185.06126964840632,242.18682394686184L185.17578839082353,242.27491729192138L185.25213421909984,242.4657861015381L184.97317828958398,242.495150548193L184.83810490479186,242.37181992564797L184.64724033409834,242.53332429687995L184.46224850462204,242.70657433960096L184.40645731871768,242.87982431107613L184.41526643054613,243.0530742601058L184.52978517296333,243.20870546335848L184.65604944592678,243.3320357947874L184.85865954716678,243.43774752092887L185.01135120372192,243.60218791725345L185.03190584609683,243.75488249917365L185.07888792017252,243.91051345432558L185.2609433309285,243.93987780305702L185.40776224626666,244.03678006338188L185.53109014861866,244.1601101655493L185.7248910899234,244.31574103015333L186.05082904540632,244.71803178267888L186.14772956416914,244.87366241376358L186.17709331836977,245.0263566240583L186.29161206078697,245.16143218515654L186.47366751965205,245.1907964075052L186.54120423610266,245.34349047006071L186.4354946055139,245.49912094898622L186.3679578890633,245.63125996584665L186.13892040423184,245.68117910993598L185.91575566061715,245.68117910993598L185.68671817578274,245.72816188304256L185.7630640040618,245.8720465414769L185.8100460781377,246.01886752379073L185.84821899227563,246.20092554739986L185.90694654878848,246.32425515107596L186.00384701943972,246.48869451364598L186.097811119482,246.6707523751893L185.89813738885118,246.8058275029065L185.90694654878848,246.97907598838498L185.89813738885118,247.1347059814788L185.88639190641402,247.27859021257507L185.8599644747128,247.44009293225764L185.7425093616871,247.60453201024177L185.46355343216828,248.144831436283L185.55164479099335,248.2887154662548L185.58981770513174,248.46196350855487L185.41657140620146,248.60584746426437L185.24332505916482,248.85544196089353L185.5986268169604,249.44272281658257L185.71314555937738,249.67469858100858L185.88639190641402,249.82739145123293L186.08019284771854,249.9712751089547L186.22407539244568,249.9712751089547L186.37676704900105,249.88611946559882L186.56175887847712,249.82739145123293L186.82896927744991,249.80977304114614L187.081497775265,249.7686634319129L187.22538031999193,249.75985420212535L187.38981750709354,249.84794625441853L187.61885499192772,249.8567554830871L187.8009104507928,249.9918299079249L187.6276641037564,250.11515868922285L187.36926286472135,250.23261471348837L187.03157937868968,250.83751274612453L186.85833303165055,251.04893329488252L186.84071475988708,251.32789089972368L186.5030312738554,251.7331133167484L186.84952391982188,251.74192252368076L187.36926286472135,251.72430415783404L187.54250916364867,251.7536680686336L187.79210129085777,251.70374940523524L188.54381409119765,251.67438544458435L188.9460978749596,251.42479192962247L189.15751713613713,251.28090855031772L189.14870797619938,251.5510569140454L189.19862642088356,251.85937825455088L189.55392817868142,252.03262543542635L189.65963776116132,252.20587263000718L189.76534739174986,252.29102797430278L189.86224786240086,252.39673809543152L190.01493951895623,252.53181208918323L190.12945826137343,252.6580769135619L190.22635878013375,253.3980470825794L190.25572253433415,253.68581310555305L189.5245643763692,255.29201612087508L189.48639146223127,255.9967480538222L189.4276639057182,257.64993063518006L188.66714199354988,257.0744001189848L188.24430351930414,256.78369838076605L188.0710572203741,256.61045189534224L187.9066200332727,256.54291510181L187.84201973554218,256.8130622131197L187.82146509316772,256.97749951219765L188.0035205039262,257.25645568296466L188.04169341806437,257.40914745627543L187.9066200332727,257.62056686233507L187.78329217902933,257.8613499723198L188.12978477688694,258.0845148285434L187.96534758978555,258.7951185937915L187.61885499192772,258.9213828962287L187.13728896116913,258.9771740939242L187.03157937868968,259.77586902092327L186.92586974810115,260.0929978783418L186.67627762089478,260.15172543633616L186.59112263267775,260.3748901833669L186.32097586309646,260.42187225780685L186.17709331836977,260.42187225780685L185.8100460781377,260.29560798361615L185.63679973109834,260.142916324303L185.3783984920633,260.11355252126674L185.18459750265197,260.10474340920695L184.88802334947627,260.10474340920695L184.14511966096484,260.2779897116134L183.86616373144625,260.21926215416164L184.03060091854763,260.10474340920695L184.24202013161607,260.0078429355581L184.4916122588254,259.8727695450498L184.36828440457975,259.66135027061534L184.2214654892441,259.51746776141846L183.41396150299988,259.5350860348928L183.24071520406983,259.546831518444L182.34805622961176,259.546831518444L181.45246093265428,259.4792948433989L181.25865994324045,259.4499310379369L180.77709396059095,259.179784232075L180.5656747475225,259.07407458335007L180.33663721458174,258.99772874045993L180.1252180015133,258.9390011717982L179.940226172037,258.8714644403634L179.59373357417962,258.77750031759746L178.68932911728461,258.0169781280276L178.58361948669585,257.8143679202892L178.7392475138597,257.6998491107527L178.8743209467582,257.72627651029256L179.08574015982617,257.7086582279284L179.25898645875668,257.40914745627543L179.42048727524957,257.32399245234785L179.63190648831755,257.36216539549486L179.78753451548187,257.24764656408155L180.1252180015133,256.3021318389258L180.21037298972738,256.1876128960294L180.21037298972738,256.0055572267852L180.3454463745195,255.65025490429613L180.45115595699895,255.31257080326387L180.2984643004438,255.22447927080995L180.0752995568289,255.2362248248311L179.88443498613265,255.1569424655456L179.76697987310695,254.9866321769546L179.71118868720532,254.82219462116876L179.5673061424759,254.67831173658413L179.36469608934522,254.64894791100477L179.05637635751668,254.55204715178184L178.82440250207378,254.43752811531033L178.3164090877233,254.16738060860217L177.96991644175387,253.97357909974468L177.9963438734576,253.77390474936044L178.00808935589453,253.20424543527068L178.1137989864833,252.97520701985255L178.24887237127245,252.71386833769665L178.3046635571768,252.5611759731503L178.28704528541084,252.37618335864036L178.26649064303888,251.89755136600613L178.24887237127245,251.6861310385889L178.24887237127245,251.48351981946246L178.621792400834,251.53050210906343L178.81559334213603,251.63621232306747L178.96828504680047,251.66557628505382L179.1532768281677,251.67438544458435L179.43223275768673,251.83001434740706L179.44985102944997,251.5510569140454L179.44104191762403,251.21337148137013L179.3147776446608,251.0988520465708L179.1708950999339,250.88743146327863L179.07399462928015,250.7318024259196L179.02701260331332,250.57910974722395L178.23712688883552,250.82870352927662L178.01689851582955,250.54093657269638L177.9023797734153,250.40586225076967L177.83484305696447,250.2414238892799L177.70857883211033,250.08873110877542L177.48835045910437,249.90373787375643L177.32391327200253,249.87731028540762L176.83353812941823,250.27959707935247L176.69846474462656,250.18269590431726L176.5633913598374,250.06817631261404L176.3813359009696,250.00063908668184L176.1992804421045,249.9536567024911L176.08182532907858,249.87731028540762L175.9673065866616,249.7510450203344L175.83223320186949,249.64533454141932L175.717714459455,249.53081486156398L175.60025929832,249.36637629450271L175.27432134283458,248.86425120266557L175.13924795804246,248.6821940277737L175.03353832745393,248.50894604701907L174.910210473211,248.32688876872686L174.78394620024733,248.16244989174947L174.66942745783012,247.98039255781893L174.41689891190595,247.61334122204065L174.37872599776802,247.46945707567988L174.2436526129759,247.37549187875928L173.97644221400333,246.97026676669614L173.58003117146154,246.42115693822132L173.28345697017653,245.98950334992603L173.0426739547986,245.6136414290704L172.72554511114163,245.1408772140267L172.56991708397754,244.85310743038502L172.49357125569873,244.7385867718844L172.35849787090933,244.48899037261648L172.19406068380772,244.22764809892567L172.1000965837652,244.0543986583185L171.27203795514652,242.67720995589053L171.18394659632372,242.5157056403722L171.12815541041937,242.37181992564797L171.0312549397686,242.17801463537324L170.97252738325574,242.01357368630931L170.79047192438793,241.56136076704888L170.67595318197073,241.3616822003417L170.61722562545788,241.21485962887505L170.54968895711886,241.0827192768192L170.48215224066848,240.90946848496873L170.33826969594156,240.58939485252588L170.15621428518307,240.4836824302559L170.05931376642275,240.3779699300816L169.43386523904655,239.4353656296706L169.23125513780383,239.10941778804317L169.08737264118645,238.90680138920482L168.68215243870668,238.10808052988673L168.8084167116674,237.88784470865687L168.9728538987688,237.66467221993514L169.12554555532438,237.50316570417317L169.20189138360342,237.34753210951328L169.37513768253348,236.9158686897298L169.44267439898135,236.7220604499927L169.44267439898135,236.55761697720527L169.57774778377325,236.53118852729165L169.5483839814608,236.3667450026624L169.57774778377325,236.07896852925143L169.60711153797365,235.91452476466117L169.62766622845788,235.69428737957503L169.68345736625292,235.33603424930945L169.80091252738794,234.81627277488246L169.89487662743022,234.5373043742993L169.72163032850017,234.5960346266183L169.58655689560192,234.74873311170185L169.43386523904655,234.83682832563966L169.24300066835008,234.91317751530465L169.02864508467314,234.90436801663714L168.84658962580852,234.88381247061125L168.69389796925293,234.9719076921257L168.50890613977663,234.9601616480762L168.36502359504993,234.83682832563966L168.2710594950072,234.71055849792802L168.09781319607714,234.67238387916095L167.94218516891306,234.58722507028253L167.79830262418363,234.5960346266183L167.47236466870072,234.54905043533648L167.35490955567502,234.469764646403L167.19340873918213,234.41397092114812L167.04658982384376,234.32587553084804L166.99960779787716,234.19079591203194L166.83517061077555,234.0380971315253L166.82636145084052,234.20254198719527L166.6237513977071,234.8456378744412L164.86486088049492,234.12325605467913L164.6622507792522,234.02928755809387L164.06616605418844,233.7767470904497L163.74610083992002,233.7767470904497L163.55523622111764,233.7884931827361L163.39960819395355,233.7884931827361L162.8828056677744,233.84428703021678L162.72717759250145,233.83547745076197L162.4687763534664,233.87365218082232L162.3131482781905,233.8824617590841L162.11053822506005,233.91182690572538L161.92848276619497,233.92357299239592L161.61135392253777,233.9617477105712L161.08280586581282,233.99992242361176L160.10205558063853,234.08508135818218L159.696835378159,234.1056369609205L159.0801959626083,234.1731768224385L158.50466587991627,234.2113515071652L157.905644736132,234.27008177772672L157.55034297833686,234.28770086136356L157.38590579123547,234.30825644955485L157.21559586291391,234.30825644955485L156.99243111929923,234.33468509514643L156.38753723429772,234.37579626334187L156.09683582234175,234.38460577800234L155.79145246112193,234.42278043463998L155.4625781350278,234.45214557390258L155.25996803378825,234.46095508623318L154.80776580533916,234.41397092114812L155.06029430315675,234.1056369609205L156.88672153681978,231.9678456955491L156.8191848203719,231.8357014492285L156.57840180499124,231.60371468839278L156.91608529102314,231.6712551693262L157.05115867581208,231.74760523209272L157.38590579123547,232.14110137648206L157.5415338183991,232.229197462444L157.95556313270754,232.36427803897863L158.1963461480882,232.19983208765896L158.70433956243846,231.78578025513045L158.85115847777683,231.70062055481333L159.16828732143358,231.55379349813535L159.5823166357418,231.54498384420015L159.82309965111972,231.43926831048051L160.05213713595413,231.49799917854918L160.22538343488418,231.40990284740508L160.32228390553541,231.29537759617057L160.44854817849887,231.21902740045638L160.5337031667127,231.07513656317542L160.61004899498903,230.91068979986687L160.71575857746848,230.8049740052307L160.8508319622606,230.69925811845272L161.04463295167193,230.6111615123924L161.2560521647399,230.54362080033428L161.49683518012057,230.49663590254517L161.6583359485046,230.3821102404921L161.7376181954985,230.23821897566702L161.8227731356062,230.12075659520735L163.0736702384679,231.29537759617057L163.21755273508575,231.22783701737114L163.32326236567428,231.14267718209123L163.39960819395355,230.9782304622171L163.5082541951508,230.79616432562935L163.59340913525557,230.57298631489908L163.77546459412338,230.36155435059283L163.76665548229494,230.03559638633863L163.93109262128723,230.12075659520735L164.11314808015504,230.1706781148866L164.37154936729917,230.21766307391542L164.47725894977862,230.41147582205974L164.6123323826771,230.46727037906595L164.88247915225838,230.34393500817302L165.0175525370505,230.37036404539077L165.17024419360564,230.47608002203503L165.32587226887858,230.53481111161759L165.47856392543417,230.48782626029424L165.66355575491048,230.49663590254517L165.82505652329155,230.47608002203503L166.01004835276785,230.48782626029424L166.3359863082535,230.24702862670804L166.47105974115175,230.15893186171323L166.5474055694308,230.03559638633863L166.65311515191047,229.89170487257945L166.78818853669986,229.72725733220068L166.9408802413643,229.72725733220068L167.1053173803566,229.85352956480665L167.31673664153413,229.9474995462253L167.4518100263258,229.87114894206107L167.4518100263258,229.70670138791746L167.52815585460235,229.5833656859399L167.68378388176916,229.4864590054668L167.79830262418363,229.360186582938L168.0009127254259,229.3220111920269L168.21233193849434,229.292645480405L168.3474053232835,229.21629467120783L168.4912878680102,229.11057815213414L168.65572505511204,229.01367123395957L168.8289713540421,229.07240272168872L168.98166301059746,229.08121241474143L169.11673639538935,229.0430369796214L169.2606189401165,228.9872420982747L169.31934649662935,228.81398424098956L169.15490930952774,228.62017022050318L169.25180982828783,228.41754627577126L169.30760096608287,227.8977710180494L169.30760096608287,227.1871159609978L169.26942805194494,225.16672896174126L169.0961817530149,225.19609515937287L168.875953428118,225.19609515937287L168.77905290935792,224.80846069738743L168.74087999521953,220.97025233400444L168.5588245844608,220.92326536385386L168.36502359504993,220.88508846313994L168.17415902435346,220.86453167098165L168.0390856395643,220.91151860748118L167.91282136660084,220.97025233400444L167.86583934063424,221.12295982305875L167.46061913815447,219.96884048762308L167.42244622401358,219.816132064512L167.2580090369122,218.3918261710643L167.37546419804698,218.29491423775758L167.41363711218787,218.06291272806757L167.3079274815991,217.82503741503683L167.39308246981295,217.61065572079707L167.46061913815447,217.4873126777889L167.47236466870072,217.32285516839602L167.49879205229286,217.13196681550042L167.64561096762804,216.9763192419669L167.81885726655833,216.89115349953707L167.9715489231137,216.79424074041518L167.99210356548838,216.62097233573928L168.1154314678406,216.5240594248865L168.27986865494222,216.55342700272274L168.45311495387227,216.5446167106516L168.60580661042786,216.5064388853967L168.74087999521953,216.60041505909544L168.90531718232137,216.61216209524105L169.1079272835609,216.58279452743204L169.35751941076728,216.58279452743204L169.8567037132923,216.40071561048518L170.13565964280815,216.51524913130973L170.29128766997496,216.48588159506056L170.52032515480664,216.40952590994215L170.75229901024954,216.30380257524905L170.96371827142707,216.26562469635218L171.12815541041937,216.25387768458504L171.31021086928445,216.33317019080667L171.52163008235289,216.40071561048518L171.77122225767107,216.3889686079936L171.99438695317644,216.4565140056768L172.19406068380772,216.4565140056768L172.40841626748443,216.5240594248865L172.59928088628726,216.51524913130973L172.80189093941794,216.4388934592544L172.99275555822328,216.2832452606031L173.10140151131145,216.18633215877603L173.16600185715083,216.04243075703383L173.58003117146154,215.83979394352963L173.69748628448724,215.6870819113502L173.85017794104238,215.60191557472407L174.02342423997015,215.551990429289L174.37872599776802,215.6870819113502L174.50499027072874,215.78399534627005L174.66942745783012,215.78399534627005L174.85148286858885,215.80161596045102L174.92782874497448,215.95726459930322L174.98655630148733,216.12172340967467L175.07171124159458,216.25387768458504L175.1979755145553,216.38015830747983L175.3418580592852,216.4946918420286L175.49454971584032,216.5240594248865L175.65898685483307,216.58279452743204L175.82342404193446,216.6973279269729L175.92913367252322,216.84122877931674L175.9673065866616,216.9968764739234L176.0436524149377,217.17014450278137L176.10237997145055,217.36103281396055L176.23745335624244,217.53430052993326L176.39895417273556,217.67820064383812L176.45768172924863,217.85146804785523L176.5633913598374,217.9689373403686L176.63973718811326,217.7663027308157L177.55588712744589,216.17752189593264L177.6322329557247,216.0248101678821L177.74675174624826,215.92789691893614L177.91118888524102,216.10116602497638L178.621792400834,216.48588159506056L178.86257541621194,215.91908664270233L179.1532768281677,215.34935297854503L179.37350520117388,215.42864595667442L179.57611530241343,215.5138123810482L179.71118868720532,215.60191557472407L179.9783990861754,215.69589224778582L180.23092763210207,215.551990429289L180.36306464628274,215.3611001012593L180.5098835616211,215.34054267205454L180.67138433000196,215.38753106420774L180.86518527130693,215.40808853576058L181.60515258920964,215.56080077279114L182.06616392948445,215.64009360297175Z\" stroke=\"#000\" fill=\"#FFF\" strokeWidth=\"0.5\"></path>\r\n        <path id=\"ElgeyoMarakwet\" ref={(item) => countyRefs.current[27] = item} d=\"M195.41924497631317,199.23796099741176L195.4031933942981,199.31663323587452L195.53826677908728,199.3753754082163L195.62342176730135,199.5192934780064L195.66453105205073,199.65440010616888L195.82603186854385,199.60740653395493L195.86420478268224,199.7895066357188L195.74087688032728,200.0391595347873L195.62342176730135,200.22125900724933L195.50009386494935,200.32699402476317L195.57643969322567,200.5208414143656L195.54707593902504,200.66475816694393L195.5852488531632,200.85860503831998L195.64397640967604,201.08769636560714L195.52945766725884,201.20224187465627L195.54707593902504,201.3755284713758L195.65278552150448,201.56056307174168L195.7027039661889,201.7426603622755L195.65278552150448,201.9159462296886L195.5588214214622,202.03049099989641L195.50890302488665,202.17440610254846L195.39438428246945,202.3300691657352L195.41200255423314,202.54153567663656L195.4031933942981,202.73244265258162L195.38557512253215,202.88810505038512L195.45311183898252,203.0232081648667L195.62342176730135,203.10838174599556L195.71151307801733,203.46669769363643L195.68214932381443,203.59886316702446L195.68214932381443,203.80151665072034L195.74968604026458,204.1304607881837L195.7702406826395,204.48583696140022L195.74968604026458,204.67674119490113L195.7203222379551,204.84121224782345L195.75849515209347,205.0056831498784L195.74087688032728,205.20833451998578L195.7702406826395,205.42860741010327L195.95229609339526,205.50496858847106L195.8377773509808,205.66943864530862L195.7966680662314,205.92789126466096L195.77904979446794,206.13935211832575L195.77904979446794,206.29501064034187L195.69095843564287,206.41836249886364L195.5852488531632,206.59164238255204L195.60580349553788,206.806039164654L195.52945766725884,206.96757080549605L195.4031933942981,207.26713800611384L195.38557512253215,207.44922760680083L195.470730110746,207.59313697003802L195.39438428246945,207.7282353995656L195.22113793543053,207.7282353995656L195.13304662471705,207.8339645415538L195.04789163650025,207.96025196969322L194.88345444939864,207.9896211522353L194.79829950929388,208.1129715380892L194.76893570698417,208.28624935875575L194.71020815047132,208.45071617928178L194.51934357977507,208.48889595713905L194.44006138089003,208.72091135570616L194.42244310912383,208.8941884041119L194.31673347853507,209.0850866142117L194.16110545137144,209.1996254213074L194.21102389605585,209.37290190542697L194.2961788361606,209.54617823470184L194.30792436670663,209.7488230952277L194.2198330078843,209.93384646468914L194.16110545137144,210.11593273943492L194.05539582078268,210.25102884483871L194.0172229066443,210.41255666813672L194.1346780677793,210.5388419351227L193.97024088067792,210.63575844599222L193.92032243599078,210.8090332686195L193.7881854218101,210.99111848897007L193.59438448050787,211.02048702305547L193.45050193577845,211.14383493936185L193.32423766281772,211.32885660364008L193.14218225205877,211.31710918544508L192.93957215081923,211.32885660364008L192.8044987660271,211.51094115829662L192.73696204957946,211.68421499147095L192.78688049426364,211.8486781334702L192.76632585188918,212.06894099498345L192.64299794953695,212.39492942358385L192.53728836705727,212.51240260727707L192.47856076243556,212.63574929093937L192.41983320592226,212.8090218780909L192.34348737764344,212.96467340672822L192.34348737764344,213.10857745110812L192.44038784829445,213.25248141379694L192.54609747888298,213.38757478746334L192.57546128119566,213.52266804739855L192.56371575064918,213.67538203497173L192.41983320592226,213.77229665039323L192.44038784829445,213.9161999713433L192.4315787364685,214.08947117517727L192.5167336765735,214.30092057914516L192.37285117995566,214.38902436863327L192.4697516506069,214.50355926268546L192.39046945171913,214.71500813270913L192.14087727640367,214.9763820161439L192.19079572108785,215.1085371899248L192.22896863522624,215.29355421859452L192.23777779516377,215.64890389374796L192.334678265815,215.85154098390333L192.4022149341563,216.0806086859082L192.3816602917816,216.2832452606031L192.44038784829445,216.4946918420286L192.41102409409382,216.6797074052203L192.3640420200179,216.8617860272866L192.25833243753846,217.02624397141997L192.12325905274656,217.09085238109492L191.97937650801987,217.13196681550042L191.99699477978584,217.41095743334316L192.02635853398647,217.6312128782113L191.97937650801987,217.80448028018552L191.95882186564495,217.9689373403686L191.83255759268422,218.1216473141696L191.81493932091803,218.27729387624174L191.92945806333546,218.4476239329237L191.96763097747362,218.66200466924812L191.89128514919707,218.77653671928564L191.87366687743088,218.92043583307407L191.83255759268422,219.0937020373578L191.87366687743088,219.39324655099253L191.92064895150656,219.5841324962997L191.96763097747362,219.7280309755699L192.0850861386084,219.816132064512L192.41102409409382,220.0187643865201L192.41983320592226,220.18028270945075L192.55490663882074,220.25957352314418L192.71053466598482,220.3741045805562L192.65180710947175,220.5473693774805L192.56371575064918,220.70007720567625L192.5842703930241,220.91151860748118L192.50792456474505,221.05835279371695L192.6811708636751,221.18169343659417L192.7487075801257,221.3461474879034L192.73696204957946,221.49004462565856L192.60482503539583,221.6251316578494L192.4315787364685,221.8453820807582L192.334678265815,222.07737889358992L192.3816602917816,222.29762880815065L192.4315787364685,222.7116979572807L192.47856076243556,222.89377066000702L192.3640420200179,223.01123681042375L192.39046945171913,223.17275269150608L192.3640420200179,223.3841914306351L192.26714154936712,223.5780100777169L192.1702410787134,223.79825834796839L192.09389525043707,224.00088654634436L192.02635853398647,224.31804331782283L191.96763097747362,224.48249474781713L191.95001270570992,224.62638969129387L191.95001270570992,224.83782694450048L191.88247603736863,225.04045413597893L191.73859349264194,225.19609515937287L191.70042057850083,225.3869755622976L191.83255759268422,225.51325013572574L191.86192139499371,225.72468651125527L191.99699477978584,225.79222866668434L192.03516769392422,225.9273128665203L192.14087727640367,226.07120683967236L192.1996048810256,226.2151007183529L192.14087727640367,226.35018465755263L192.27595070930215,226.48526851416574L192.32586910587997,226.81123140047924L192.334678265815,227.15775002933L192.20841399285428,227.3691848353079L192.23777779516377,227.53363401442616L191.89128514919707,227.7832441181493L191.86192139499371,227.97705883120153L191.89128514919707,228.1297612240965L191.70042057850083,228.21492215638764L191.46844672306065,228.22666850436914L191.35392798064345,228.34119518586138L191.1601269912294,228.45572181142325L190.98688069230207,228.48508757795963L190.90172575219435,228.6025507518631L190.92815313578922,228.7846184671505L190.98688069230207,228.9960518425667L190.98688069230207,229.1986752465689L191.0749720511244,229.3220111920269L191.10139943471654,229.465903040895L191.0749720511244,229.6009850826244L191.1131449652628,229.74487671851304L191.0749720511244,229.9005145840518L191.01624449461156,230.07377166595674L190.83418903574648,230.21766307391542L190.73728856509274,230.3821102404921L190.6991156509548,230.53481111161759L190.64038809444173,230.69925811845272L190.53467846385297,230.85195879758163L190.5434875756814,231.2572025011409L190.60221518030357,231.66244551935853L190.64038809444173,231.80633603076592L190.73728856509274,231.92967069893166L190.91053486402302,232.06475142772783L191.13076323702876,232.19983208765896L191.28639126419284,232.35253188577187L191.25702746188335,232.5551526558205L191.32456417833077,232.71959838965873L191.35392798064345,232.93983800495673L191.30400953595904,233.17182360917147L191.20710906530508,233.39206286157724L191.0925903228906,233.5770637351819L190.98688069230207,233.72095322960155L190.8429981475722,234.0380971315253L190.813634393372,234.22016107497808L190.87236194988486,234.43158999597682L190.94870777816118,234.6430187621931L190.91053486402302,234.83682832563966L190.82244350520045,234.98952668515813L190.85180730750994,235.1833360684376L190.94870777816118,235.31841522872745L191.1131449652628,235.40357377850992L191.22766370768,235.52984335926772L191.3627370924719,235.84698530142046L191.31281864778475,235.98206416488875L191.3627370924719,236.18468237276966L191.47725583488636,236.37555445877163L191.77676640677987,236.51944259160354L191.91183979156926,236.61634678845599L192.12325905274656,236.66333065843617L192.30531446350506,237.24181865472963L192.25833243753846,237.3768969198788L192.39046945171913,237.79975031053087L192.55490663882074,237.91427299948566L192.64299794953695,238.13744532076367L192.75751669195142,238.24315848896953L192.82505340840203,238.41641051417434L192.97774506495716,238.5984718473572L192.92195387905304,238.72474017103468L192.95131768136525,238.9156107772864L192.85441716260516,239.05949780266894L193.01591797909555,239.14759187557001L193.1627368944337,239.20632122920878L193.23908272271,239.32084344792503L193.24789183453845,239.4647303079316L193.26844647691337,239.6174264805671L193.32423766281772,239.7525038063013L193.32423766281772,239.92575508618884L193.29781027922286,240.09900628384713L193.33598319336375,240.32217721761268L193.45050193577845,240.49542822969255L193.63255739464603,240.99462566766954L193.54740240643218,241.12970249474432L193.38296526743943,241.22660540583473L193.41232902164006,241.40866538463825L193.38296526743943,241.66707294257142L193.51803865222882,241.80214953841912L193.57676620874167,241.95778120891214L193.66192114884643,242.11928574291676L193.8058036935763,242.16039596370976L193.9320679665368,242.236743519403L193.97904999250363,242.4481674421743L194.14348717960502,242.60086243318207L194.51934357977507,242.80347687312528L194.60449856799164,242.92974380083135L194.7395719527808,242.89157008804682L194.92162736353953,242.95910821515662L195.04789163650025,243.04426491870743L195.37382964009498,243.23806981054122L195.41200255423314,243.0824386178712L195.57643969322567,243.24687914798628L195.7702406826395,243.2938621176373L195.90531406742866,243.4289382354453L195.9992781674714,243.57282354635564L196.36632540770643,243.66091660510486L196.4896533100582,243.7372638925344L196.56893550894597,243.93987780305702L196.4896533100582,244.0925722703319L196.45148039592027,244.25701242724205L196.5953629406472,244.46843537251777L196.50139884060445,244.61232035428873L196.4632258783572,244.79437889470208L196.36632540770643,244.94120024445104L196.33696165350307,245.11444935836434L196.33696165350307,245.30531695887083L196.24006118285183,245.41102823560507L196.1431606640915,245.55491298472054L196.13435155226307,245.75752607192118L196.17252446640146,245.95132988772332L196.22244291108586,246.4710760060755L196.20188826871367,246.72948069362812L196.2106973805394,246.9614574967549L196.17252446640146,247.24922610738875L196.18426999694748,247.46064781356682L196.10498774995085,247.61334122204065L196.12554244043463,247.7689709933667L196.01983280984587,247.91285511381966L196.01983280984587,248.05673919931965L195.96991436516146,248.25054216139563L195.96991436516146,248.44140866188894L196.0668148358127,248.5970382670032L196.20188826871367,248.7790954182929L196.3457707653315,249.17257367480457L196.42211659360783,249.29883904769878L196.4896533100582,249.46327763131424L196.51901706426156,249.62477973220464L196.51901706426156,249.8362006320545L196.58655378070944,250.15626827825136L196.5953629406472,250.38530746362014L196.51901706426156,250.60847374850678L196.36632540770643,250.7229932559613L196.30759785119358,250.87568590570186L196.12554244043463,250.91385906338832L195.93174145102353,251.00195092895817L195.7966680662314,251.08710644407347L195.63516724973852,251.26035378662175L195.52945766725884,251.48351981946246L195.33565667784774,251.62740316313472L195.1712195388552,251.79184123293322L195.1712195388552,251.96508842740485L195.25050173774275,252.1383355872085L195.18296502129215,252.2822188210371L194.15229633954277,252.57879432232588L194.03777754901648,252.6580769135619L193.41232902164006,252.6580769135619L193.1627368944337,252.6169674030478L192.89259007674355,252.6580769135619L191.71803885026702,252.64633133244087L191.30400953595904,252.59934905459323L190.93989866633524,252.6580769135619L190.12945826137343,252.6580769135619L190.02374867889398,252.5406212400385L189.87105702233862,252.41729283175675L189.76534739174986,252.29102797430278L189.6390831187864,252.16476309911567L189.5245643763692,251.96508842740485L189.19862642088356,251.85937825455088L189.14870797619938,251.5510569140454L189.15751713613713,251.28090855031772L188.9460978749596,251.42479192962247L188.54381409119765,251.67438544458435L188.16795769102782,251.65676707732445L187.79210129085777,251.70374940523524L187.2165711600569,251.7331133167484L186.84952391982188,251.74192252368076L186.5030312738554,251.7331133167484L186.84071475988708,251.32789089972368L186.88769683396276,251.03131491400336L187.03157937868968,250.83751274612453L187.36926286472135,250.23261471348837L187.6276641037564,250.11515868922285L187.8009104507928,249.9830206809479L187.61885499192772,249.8567554830871L187.38981750709354,249.84794625441853L187.13728896116913,249.7510450203344L186.82896927744991,249.80977304114614L186.5999317926155,249.82739145123293L186.4560492478886,249.84794625441853L186.32978497492536,249.91548349498612L186.18590247830753,249.9712751089547L185.98329237706776,249.90373787375643L185.83940983233833,249.7892182368353L185.71314555937738,249.67469858100858L185.50172634630917,249.278284227909L185.24332505916482,248.85544196089353L185.41657140620146,248.60584746426437L185.6456088910361,248.42379021447215L185.55164479099335,248.2887154662548L185.46355343216828,248.144831436283L185.7425093616871,247.61334122204065L185.877582746479,247.39311030926024L185.89813738885118,247.1816885778628L185.90694654878848,246.97907598838498L185.89813738885118,246.8058275029065L186.097811119482,246.6707523751893L185.90694654878848,246.32425515107596L185.84821899227563,246.20092554739986L185.7630640040618,245.8720465414769L185.6749726452365,245.75752607192118L185.91575566061715,245.68117910993598L186.13892040423184,245.68117910993598L186.35914877723758,245.64300562461477L186.4854130501983,245.4492017386355L186.5030312738554,245.2289699275987L186.29161206078697,245.16143218515654L186.17709331836977,245.0263566240583L186.14772956416914,244.88247171957656L186.0420199335806,244.7004132129196L185.84821899227563,244.46843537251777L185.73370024985843,244.30399529092483L185.52228103679295,244.151300894262L185.40776224626666,244.03678006338188L185.27268886147476,243.94868707843673L185.08769703199846,243.9193227783897L185.03190584609683,243.75488249917365L185.01135120372192,243.60218791725345L184.88802334947627,243.44949328274123L184.65604944592678,243.3320357947874L184.52978517296333,243.20870546335848L184.41526643054613,243.0530742601058L184.40645731871768,242.87982431107613L184.46224850462204,242.70657433960096L184.64724033409834,242.53332429687995L184.97317828958398,242.5039598529166L185.24332505916482,242.4657861015381L185.17578839082353,242.27491729192138L185.06126964840632,242.18682394686184L184.93500537544287,242.11928574291676L184.98198744951856,241.8315140327557L185.1464245885113,241.58191590647678L185.2609433309285,241.38811023618624L184.99373293195572,241.34112700131814L185.01135120372192,241.13851187754048L184.97317828958398,240.88891331005814L184.96436917775532,240.61875943840283L184.7529499165778,240.33979597235336L184.6648586058618,239.81123306052925L184.61787653178612,239.4353656296706L184.5415307035098,239.16521068749898L184.34772976220484,238.98314960428436L184.1069467468269,238.9156107772864L184.06877383268852,238.0229227084085L184.1069467468269,237.21245383212707L184.1069467468269,236.97166195481938L184.12750138920183,236.7044415088626L184.1363105491364,236.4519032604071L184.2508292915536,236.03785759635616L184.56795813521057,234.73111405611087L184.69422236006494,234.16436730129078L184.92619626361716,232.93102844493006L184.98198744951856,232.46999320222972L184.8204866330284,232.15284753899948L184.65604944592678,231.8914956967885L184.56795813521057,231.7270494518546L184.2508292915536,231.23664668209847L183.8779092619925,230.57298631489908L183.62538071606832,230.25583832554938L183.4345161453748,229.9592458094262L183.25246073461608,229.72725733220068L182.71216714734464,228.95787639387743L182.64463043089404,228.7758087631614L182.54772996024303,228.5819947114731L182.22179200475762,228.16793680666436L181.84593560458757,227.54244376534197L181.70205305986065,227.2634674328831L181.63451634341027,227.0226665790382L181.92228143286684,226.95512479949414L182.16306444824477,226.9463149776559L183.01167771923815,226.93750520358557L183.24071520406983,226.96393457287087L183.58720780193016,226.93750520358557L184.98198744951856,226.97568098495296L185.193406662587,227.05203252826902L185.43418967796765,226.98449080564126L185.83060072051217,227.00504698842064L186.03321077364285,227.04322275833516L186.14772956416914,226.95512479949414L186.11836576185692,226.7730555911308L186.13892040423184,226.5616202248874L185.81885518996614,226.3883605394766L185.7425093616871,226.20629086720646L185.66616353341055,225.97429868274028L185.58100854519398,225.79222866668434L185.68671817578274,225.483883981485L185.68671817578274,225.29006705130112L185.7630640040618,224.9053693791991L185.4929172344805,224.76147462616194L185.6456088910361,224.61757982319466L185.78068227582503,224.7438548527708L185.877582746479,224.4149522256081L185.94511946292687,224.24169081040694L186.10955665002848,224.1066054919277L186.26224830658361,223.91572397633416L186.21526623250793,223.78063849312002L186.12717487368536,223.5985665871837L185.98329237706776,223.48110077720156L185.97448321713,223.29021867955126L185.9539285747553,223.0787798423392L185.94511946292687,222.84678415174L185.89813738885118,222.23008555989213L185.88639190641402,221.9716588835791L185.88639190641402,221.60457494476518L185.80123691819995,221.39313430643296L185.6279906192699,221.24923704830843L185.29030713324073,221.19050345542416L185.07888792017252,221.1435165874357L185.15523374844906,220.91151860748118L185.31967093555045,220.5091924011764L185.38720760389197,220.31537071737728L185.4929172344805,219.88367621240388L185.51347187685542,219.69866396869585L185.50172634630917,219.53714517912454L185.50172634630917,219.37268959492724L185.43418967796765,219.18180338182614L185.32848004737912,218.98798031009585L185.3108617756127,218.8059038740198L185.3108617756127,218.65025776971154L185.11706083431068,218.61208040107857L184.6648586058618,218.6208905896957L184.11575585865535,218.61208040107857L183.84854545968278,218.55628269022762L183.8779092619925,218.35364874758756L184.00123711623814,218.18919209073084L184.11575585865535,217.98655773235163L184.2038472174777,217.65177003322813L184.31836595989535,217.51668009286402L184.3859026763455,217.3904002501687L184.0394100303763,217.4197676814606L183.71347207489066,217.36103281396055L183.51967113358864,217.29348776897078L183.1643693757935,217.2846775145012L182.08671857185914,217.140777077677L181.85474471641623,217.0820421645074L181.79895353051188,216.73550570991642L181.9810089893797,216.0248101678821L182.06616392948445,215.64009360297175L181.60515258920964,215.56080077279114L180.86518527130693,215.40808853576058L180.67138433000196,215.38753106420774L180.5098835616211,215.34935297854503L180.36306464628274,215.3611001012593L180.23092763210207,215.551990429289L179.9783990861754,215.69589224778582L179.71118868720532,215.60191557472407L179.57611530241343,215.5138123810482L179.3147776446608,215.40808853576058L179.1033584315926,215.34054267205454L178.38100938545313,215.19664054874988L178.3428364713152,215.06154867113008L178.21950861707205,214.45657062007717L178.3428364713152,214.38902436863327L178.48965538665334,214.2921101687217L178.0756260723424,214.19519591139527L178.16078106055897,214.0131143946137L178.44854610190396,213.81928549019426L178.6423470432087,213.73411818996402L178.7862295879354,213.62839315333227L178.7392475138597,213.43456378751983L178.5748103748674,213.13794563496248L178.51608277024525,213.00285205029374L178.44854610190396,212.8090218780909L178.38100938545313,212.65630706217672L178.36339111368966,212.45366600233422L179.14153134573053,212.28920354575035L179.26779557058512,212.21284590428718L179.28541384234836,212.03957261218792L179.26779557058512,211.81049920961803L179.06518551745444,211.6548465841114L178.91249386089885,211.62547812306582L178.72750203142255,211.5696780702095L178.5072736584168,211.48157271801693L177.7379425863137,211.22312995190043L176.89226568593108,210.91476020654392L176.6896555846888,210.7972858105024L175.36241270165692,209.96027838340274L174.99536541331577,209.740012475776L174.6782365696588,209.58729460415475L173.83255966927663,209.24074188704566L173.4860670714188,209.12326622647765L173.41853035496865,208.97935843134576L173.27171143963028,208.74734344316363L173.1395744254496,208.64161501651674L173.11901978307492,208.49770669958932L172.38786162510996,207.23776872333974L172.31151579683365,207.12322836142215L172.07073282956185,207.09385900074352L171.79177690004303,207.07330046389126L171.5304392422904,206.99694014426657L171.06942785390652,206.2656411066599L170.7229352560464,205.6988083051642L170.62603478539518,205.56370792389933L170.37644261007995,205.17015385353227L169.56893862383572,204.06290981126944L169.26942805194494,203.4079574463472L169.13435466715282,203.09075962198088L171.4834571682145,204.21563366041605L172.64626291225386,204.78247260206464L173.24528405603814,205.06148572967777L173.3686119583931,205.12903620821785L173.79145038452953,205.3228764554608L174.04397893045393,205.45797707320102L174.4756264684188,205.58132972445193L175.17742087218335,205.90145865334225L175.65898685483307,206.18046951062286L175.82342404193446,206.1599108400502L175.9673065866616,206.03362175579193L176.02603414317446,205.8603412265537L176.05246152676614,205.6870604323477L176.16991668790115,205.55489699871677L176.23745335624244,205.3816158687219L176.27562627038083,205.24651517578909L176.3813359009696,205.12903620821785L176.39014501279803,204.9469435751185L176.41950881510752,204.773661674663L176.49585464338656,204.59156856571062L176.63092802817596,204.35954638169494L176.81298348704377,204.45646708871135L177.00678442834578,204.47702601469973L177.1301123307005,204.57100965714343L178.3164090877233,206.5828315225248L178.48965538665334,206.52702955657122L179.035821715142,206.30382147036926L179.34414144697053,206.00718911649892L179.68182493300196,205.72817795877575L180.10466335913884,205.3992376926106L180.4217922027956,205.1114143495624L180.59503850172587,204.9675024267591L181.2116779172734,204.47702601469973L181.57578878689742,204.1686417475415L181.96045434700477,203.86025672428326L182.18361909061923,203.71634351496442L182.41265657545387,203.484319767564L182.84724053213677,203.13775196348857L183.26126984644475,202.79118320084996L183.60776244430213,202.5591578744137L183.9160821761334,202.25370617327886L184.31836595989535,201.90713506340347L184.74120443414063,201.56056307174168L185.10825167437315,201.24336074285523L185.5398992604471,200.88503865557405L185.90694654878848,200.56783464397608L186.77317809154556,199.88643075940377L187.81265593322996,199.08753867023415L188.10042097457722,198.93187161453156L188.42635897817195,198.95243142290371L188.65833283361212,198.95243142290371L188.81396086077893,198.79676419617036L189.18688089033753,198.6734050897373L189.48639146223127,198.70277633286008L189.6772560329248,198.71158767554815L189.89161166471058,198.83494674356066L190.120649149545,199.07579024911897L190.24691342250844,199.14334379960536L190.3996050790638,199.1815262394647L190.87236194988486,199.26963953566684L191.12195407709123,199.24907978019334L191.31281864778475,199.15509226240647L191.43027380891976,198.94068294077474L191.5271742795735,198.78795281148024L191.6886750479548,198.66165662901344L191.85311223505641,198.5471087891016L192.00580389161155,198.5089261519453L192.14087727640367,198.39437812068923L192.23777779516377,198.24752160787125L192.4022149341563,198.18290464179694L192.55490663882074,198.16234470396606L192.7956896060923,198.08597917635186L193.37415610750213,197.83632231163176L194.14348717960502,197.5455448008617L194.46942513509066,197.469178883232L194.62505321036383,197.45155596856665L194.91281825171086,197.40162440307387L195.09487371057594,197.38400147849035L195.38557512253215,197.41043584033395L195.41200255423314,197.60428777771955L195.4031933942981,198.02723643379096L195.29748376370935,198.33563552719338L195.30629292364438,198.48836622103443L195.33565667784774,198.71158767554815L195.27986554005247,198.88487776766166L195.43255719660783,199.17271493044956Z\" stroke=\"#000\" fill=\"#FFF\" strokeWidth=\"0.5\"></path>\r\n        <path id=\"Nandi\" ref={(item) => countyRefs.current[28] = item} d=\"M164.06616605418844,233.7767470904497L165.32587226887858,234.3170660143903L166.6237513977071,234.8456378744412L166.82636145084052,234.20254198719527L166.8850890554627,234.07627183431572L166.99960779787716,234.19079591203194L167.04658982384376,234.32587553084804L167.19340873918213,234.41397092114812L167.35490955567502,234.469764646403L167.47236466870072,234.54905043533648L167.79830262418363,234.5960346266183L167.9715489231137,234.5960346266183L168.09781319607714,234.68119338480497L168.2710594950072,234.71055849792802L168.36502359504993,234.83682832563966L168.4912878680102,234.98071718877338L168.69389796925293,234.9719076921257L168.84658962580852,234.88381247061125L169.02864508467314,234.90436801663714L169.24300066835008,234.91317751530465L169.44267439898135,234.82801882468237L169.58655689560192,234.74873311170185L169.75099408270353,234.58722507028253L169.80091252738794,234.81627277488246L169.68345736625292,235.33603424930945L169.62766622845788,235.69428737957503L169.60711153797365,235.91452476466117L169.57774778377325,236.07896852925143L169.48084731312224,236.48126820135508L169.44267439898135,236.7220604499927L169.37513768253348,236.9158686897298L169.20189138360342,237.34753210951328L169.12554555532438,237.50316570417317L168.9728538987688,237.66467221993514L168.8084167116674,237.88784470865687L168.69389796925293,238.11688998666367L168.85539873763423,238.454584678157L168.93468098463086,238.58085305479824L169.08737264118645,238.90680138920482L169.23125513780383,239.10941778804317L169.34871029893884,239.30028818432953L169.4925927955594,239.50290435719222L169.87725835566425,240.1107521435522L169.9829679381437,240.25463869012734L170.05931376642275,240.3779699300816L170.15621428518307,240.4836824302559L170.33826969594156,240.58939485252588L170.48215224066848,240.90946848496873L170.54968895711886,241.15906703913757L170.79047192438793,241.56136076704888L171.0312549397686,242.17801463537324L171.27203795514652,242.67720995589053L172.1000965837652,244.0543986583185L172.19406068380772,244.22764809892567L172.35849787090933,244.48899037261648L172.49357125569873,244.7385867718844L172.56991708397754,244.85310743038502L172.80189093941794,245.26714344471944L172.9076005700067,245.41102823560507L173.28345697017653,245.98950334992603L173.39797571259373,246.20973478171325L173.5242399855572,246.49750379126482L173.685740753941,246.5650413570206L173.97644221400333,246.97026676669614L174.0615971541108,247.1229603077107L174.2642072553508,247.38430109407798L174.66942745783012,247.98039255781893L174.68704572959655,248.16244989174947L174.8221191143855,248.21236885413657L174.910210473211,248.32688876872686L175.03353832745393,248.50894604701907L175.13924795804246,248.6821940277737L175.27432134283458,248.86425120266557L175.50629519827748,249.2224925572316L175.57383191472536,249.3839947160445L175.717714459455,249.53081486156398L175.84104231369793,249.68350776377483L176.0348432550029,249.8185822703002L176.1992804421045,249.9536567024911L176.4106996551725,250.0094483134359L176.5633913598374,250.06817631261404L176.82472896948093,250.28840630268252L176.99797531652007,250.1738866796992L177.32391327200253,249.87731028540762L177.48835045910437,249.90373787375643L177.71738794393877,250.0975402863307L177.83484305696447,250.2414238892799L177.9023797734153,250.40586225076967L178.01689851582955,250.54093657269638L178.23712688883552,250.82870352927662L179.02701260331332,250.57910974722395L179.07399462928015,250.7318024259196L179.16208598810545,250.86687668929292L179.3147776446608,251.0988520465708L179.44104191762403,251.21337148137013L179.44985102944997,251.5510569140454L179.41167811531182,251.79184123293322L179.16208598810545,251.67438544458435L178.96828504680047,251.66557628505382L178.81559334213603,251.63621232306747L178.65996531497194,251.5305021571726L178.51608277024525,251.46296506090246L178.24887237127245,251.48351981946246L178.24887237127245,251.6861310385889L178.26649064303888,251.89755136600613L178.26649064303888,252.36737415809597L178.3046635571768,252.5611759731503L178.24887237127245,252.71386833769665L178.1137989864833,252.97520701985255L178.00808935589453,253.166072377709L177.91118888524102,253.27178235382408L177.9963438734576,253.62708535505504L177.9963438734576,253.77390474936044L177.96991644175387,253.97357909974468L178.3164090877233,254.16738060860217L178.82440250207378,254.43752811531033L179.05637635751668,254.55204715178184L179.36469608934522,254.64894791100477L179.5673061424759,254.67831173658413L179.71118868720532,254.82219462116876L179.76697987310695,254.9866321769546L179.88443498613265,255.1569424655456L180.0752995568289,255.2362248248311L180.28671881800665,255.22447927080995L180.45115595699895,255.31257080326387L180.3454463745195,255.65025490429613L180.21037298972738,256.0055572267852L180.10466335913884,256.3138773365538L180.0077628884876,256.639815682284L179.78753451548187,257.24764656408155L179.63190648831755,257.36216539549486L179.40286900348337,257.31224691274485L179.25898645875668,257.42089299537395L179.14153134573053,257.64112151779574L179.0064579609416,257.71746739318206L178.8067842303103,257.7086582279284L178.58361948669585,257.8143679202892L178.68932911728461,258.0169781280276L178.94185761509948,258.22839743654816L178.99764880100383,258.3810891527765L179.1797042598689,258.4310076153757L179.59373357417962,258.77750031759746L179.940226172037,258.8714644403634L180.28671881800665,258.98891957875094L180.3924284004861,259.08288369678166L180.5656747475225,259.07407458335007L180.7888394430281,259.179784232075L181.1147774466226,259.37358520077765L181.25865994324045,259.4499310379369L181.45246093265428,259.4792948433989L182.13370064593482,259.5350860348928L182.34805622961176,259.546831518444L182.72097625917309,259.546831518444L182.86485880389978,259.7582507480563L182.92358636041286,259.8933241884211L182.46257497202896,260.17228007916464L182.14544617648107,260.3337808982123L181.98981810120813,260.3748901833669L181.74022597399903,260.60392766922115L181.68149841748618,260.7595557445539L181.49063384679243,261.34095862130164L181.40254248796987,261.5142049256296L181.3467513020655,261.7403060515944L181.2968328573811,261.87831581736776L181.3937333761412,262.1631445189114L181.43190629027958,262.3980548297702L181.5082521185584,262.51844633676836L181.55817051513395,262.7210564851021L181.6139617010383,262.88549371823433L181.74903513393633,263.15564058027593L182.22179200475762,264.4623296904667L182.01918190351762,264.6062123233154L181.48182468685468,264.81469538195944L181.25865994324045,264.89104134327647L181.13533208899753,264.9497689672848L181.0002587042054,265.06428784683675L180.59503850172587,265.44014475057793L179.7288069589688,266.02154857616097L178.3428364713152,265.9598844891083L178.16959017238491,265.93932981004497L177.9581709593167,265.7807651388524L177.60286920152157,265.64275515906894L176.63973718811326,264.8763594255433L175.27432134283458,265.50180876847264L175.09226588396677,265.53704536494087L174.61950901314594,265.5987093865961L174.39047152831404,265.63688236046926L174.21722522938398,265.65156428484886L173.16600185715083,265.8042561912766L172.73435427107938,265.84830192158023L172.73435427107938,265.2522162882236L172.7431633829051,264.86755025571534L172.7431633829051,264.20392818385466L172.73435427107938,263.9190993063718L172.64626291225386,263.55792459359293L172.59928088628726,263.23198643877225L172.46420745338878,262.6916927234367L172.47595298393503,262.5390009834645L172.2821520426303,262.47146430129357L172.12946038607492,262.33639089192064L171.73304934353018,262.1396535028542L171.4834571682145,262.06330766528095L171.28084706697496,262.0368802787074L171.13696457035712,261.99870736047615L171.02244582794015,262.10148058393764L170.84919952900964,262.13084438989915L170.65539853959854,262.13378076088446L170.52032515480664,262.05743492338894L170.38525177001725,262.1249715998304L170.2120054710872,262.1044169549041L170.03875912404806,262.20719022842127L169.83908544152587,262.27472690675927L169.59830242614794,262.3275817305161L169.38688321307995,262.49495531896736L169.15490930952774,262.54193740280806L168.93468098463086,262.3892456682503L168.72326172345356,262.2894088102078L168.3474053232835,262.02807111780635L168.21233193849434,261.9135523639886L167.96273981128502,261.75792432453795L167.76012971004525,261.61404177134256L167.61624716531855,261.52888682737233L167.0084169097056,261.1060483434757L166.80580680846583,260.98565685909654L166.72065186836085,261.18533054321887L166.75001562256148,261.4613501083951L166.7793794248737,261.6522146874816L166.78818853669986,261.8753794465103L166.67366979428516,262.06330766528095L166.48867796480863,262.20719022842127L166.4123321365298,262.35107274744706L166.39471386476635,262.50082806137993L166.35360458001696,262.6447106378817L166.23908583760226,262.88549371823433L166.07464865050065,263.0587400739245L165.9014023515706,263.15857695201197L165.61363731022357,263.2701593687337L165.4315818513585,263.40816923354896L165.26714466425688,263.57260645434326L164.9793796229094,263.94846308026604L164.82375159574553,263.63427046281583L164.71804196515654,263.5285607761107L164.6798690510186,263.3611871378697L164.46844983795017,263.3465052301211L162.82407806315268,263.3465052301211L162.54512218174273,263.34063248628377L162.3131482781905,263.3465052301211L162.1898204239476,263.246668345956L162.19862953577626,262.6447106378817L162.21624780753973,262.3745638126035L162.122283707497,262.09560784200545L161.8903098520541,261.98989819962827L161.7757911096396,261.9076796222408L161.58199012022556,261.84014290008975L161.34120715295694,261.71094224741205L161.2854159670526,261.8988704615228L160.79210440574775,261.92236152472907L160.11086469246698,262.31289982695245L159.917063751162,262.1572717769161L159.80254500874776,262.042753020579L159.5617619933671,262.06624403622834L159.64985335219217,262.22187213167336L159.4648615227161,262.23068124478004L159.02440477670416,262.34226363412455L158.72489420481338,262.4655915108141L158.34903780464333,262.4655915108141L158.14642775151265,262.50376448069665L157.96437229264484,262.34520000523196L158.05246365147036,262.03394390777555L157.8116806360897,262.0192620050246L157.52097917602464,262.1044169549041L157.33011460533112,262.09560784200545L156.6547476332703,261.96640718428L156.45507395074833,261.95172528169263L156.26127296133404,262.0045801023099L156.088026662404,262.02807111780635L155.56828771750747,262.0368802787074L155.29814094792619,262.05743492338894L154.71380170529665,262.06624403622834L153.84757016254252,262.09560784200545L153.5480595906488,262.09560784200545L152.93142017510104,261.9047432513696L152.58492757724093,261.75792432453795L152.56730930547747,261.54356868102826L152.70238269026663,261.40849529142787L152.63484597381603,261.2822310635308L152.70238269026663,261.1324757754251L152.90205642089768,260.7595557445539L153.42179531768534,260.01665204769245L153.53925043071104,259.86396038467115L153.65376922123755,259.68190491453805L153.46290460243472,259.6525411581049L153.28965830350467,259.68190491453805L153.09585736220265,259.83459658082313L153.01070237398608,259.94911537679565L152.88443814913444,260.0460158509792L152.71119180209507,260.2280712661426L152.57611841730318,260.2867988716702L152.4234267607476,260.32497178628756L152.28835337595842,260.43949052968225L152.01820655826828,260.69201902810056L151.8919423334139,260.8270924129064L151.66290484858223,261.03851167464586L151.54544968744722,261.1618395299472L151.43093094503024,261.32040397845736L151.35458511675097,261.5142049256296L151.2195117319618,261.61404177134256L151.02864716126828,261.54650509987374L150.86420997416667,261.5523778413435L150.69977278706506,261.60523265907943L150.526526488135,261.58174159686473L150.40319863388913,261.75792432453795L150.10368806199835,262.13378076088446L149.86290504661747,262.3657546511283L149.80417749010462,262.2365539868577L149.75719541602894,262.0809259390976L149.66029494537793,261.8753794465103L149.79536833017005,261.76379706615694L149.6984678595161,261.6199145128586L149.5633944747267,261.5670597431453L149.5545853147894,261.3732587469197L149.48704864644765,261.21175797528406L149.37252990403317,261.00033876031273L149.31380234752032,260.79772865869586L149.38133901585888,260.58630939743284L149.68084958775262,260.5569456431735L149.8540958866829,260.4688542840455L150.01559670317306,260.34552642888315L150.18003389027467,260.35433554080026L150.29455263269188,260.48059981464644L150.31510727506657,260.66265527388947L150.42081685754601,260.81534693046416L150.623426958786,260.7683648563802L150.7761186153416,260.71844645980406L150.97872871658114,260.58630939743284L151.18133881782364,260.48059981464644L151.27823928847465,260.30735351431224L151.43093094503024,260.1810892392842L151.59536813213163,260.11355252126674L151.70988687454883,259.96967001999485L151.90368781585107,259.78761455218097L152.13272534879457,259.66135027061534L152.2795442160209,259.69071407512104L152.4234267607476,259.7670599085491L152.56730930547747,259.7376961043495L152.6818280478917,259.64079562663323L152.64365513375378,259.46754931161047L152.74936471623323,259.37358520077765L153.12522111640305,259.1885933453094L153.46290460243472,259.2678755561441L153.65376922123755,259.344221394772L153.8270155201676,259.37358520077765L153.96208890495677,259.27668471732954L154.0589893756105,259.06526546990216L154.14414436382458,258.56314467336705L154.49063696168196,258.0727693406258L154.55817367813256,257.8613499723198L154.4994461216197,257.71746739318206L154.5493645181948,257.5530301016601L154.8195113358854,257.1801097923295L154.9340300783026,256.986308680326L155.07791257492045,256.82187133387055L154.99275763481546,256.3138773365538L155.01918501840737,256.12007613416L155.06029430315675,255.94682958252056L155.06029430315675,255.7941376394493L154.97220299244054,255.65906403112066L154.97220299244054,255.45645361970165L155.03973966078206,255.1569424655456L155.1366401314333,254.9866321769546L155.30988647847244,254.91909531159175L155.550669445744,254.62839317015005L155.63582443395808,254.5050650064811L155.75034317637528,254.3993551007468L155.964698760052,254.28189967105686L156.18492713305818,254.07928899588583L156.2700821212718,253.89723303875203L156.45507395074833,253.7827138892938L156.68411143557978,253.66819477593182L156.89553064864822,253.5889123130968L157.05115867581208,253.47439317895876L157.27138704881827,253.436220131469L157.50336090426117,253.4274109886689L157.694225523064,253.3305101242665L157.79993510554345,253.18662709749157L157.9731814044735,252.69624999105596L157.82929890785567,252.5406212400385L157.879217304431,252.35856500557537L158.05246365147036,252.02087989429123L158.09944567743696,251.80945954926514L158.14642775151265,251.6450215310163L158.2257099503977,251.42479192962247L158.31967405043997,251.07829727816704L158.42538363291965,250.769975590776L158.94512257781912,250.79053036735968L159.16828732143358,250.8198943604378L159.15654179088756,250.6642653092935L159.34153362036113,250.2208690974911L159.4266886085777,249.9918299079249L159.55295283342934,249.70406257122949L159.6586624640181,249.4251043965846L159.80254500874776,249.23130174591614L159.99634595004977,249.2606658035676L160.56306692091334,249.2224925572316L160.81265904812244,249.2694749917405L160.77448613398133,248.95234332506422L160.54251227854115,248.47077275583408L160.44854817849887,248.2299873076403L160.36045681967335,248.03912074075484L160.2753018795686,247.88349104089187L160.2077651631182,247.7219884452415L159.55295283342934,246.41234765933515L159.20646023557197,245.57546793862113L159.0332139366419,245.11444935836434L158.9832954919575,244.7004132129196L158.915758823616,244.28637670557495L158.87758586136852,243.90170417819897L158.82179472357348,243.56401426357442L159.11836887674644,243.66972588596448L159.37089742267335,243.81361116692204L159.66747162395563,243.01490051022466L159.696835378159,242.68895569037554L159.71445364992246,241.95778120891214L159.73500829229715,241.51437760095658L159.74381745223468,241.0827192768192L159.72619918046848,240.78320097135924L159.55295283342934,240.3985251327725L159.48541616509056,240.19590945886114L159.3973248062655,240.09019692490446L159.25344226153834,239.80242369465034L159.11836887674644,239.5616336520961L159.0801959626083,239.39719157318612L158.93631346599068,239.21513060975815L158.85115847777683,239.0712436963699L158.58101170819555,238.5691071444796L158.49292034937025,238.36649042861978L158.35784696458109,238.19323837787323L158.17579150571328,237.8966541231295L157.905644736132,237.64705333029306L157.83810801968139,237.49141980413998L157.48280626188625,237.24181865472963L157.41526959354496,236.99221736075566L157.3770966794068,236.61634678845599L157.38590579123547,236.44309380645163L157.21559586291391,236.37555445877163L156.46388306257404,235.74127134148725L156.24365468957103,235.62674786744924L155.81787989282293,235.37420878232658L155.61820616219188,235.16278054181066L155.29814094792619,234.92198706181998L154.94283919013105,234.67238387916095L154.75197461943753,234.49032022161472L155.4625781350278,234.45214557390258L155.79145246112193,234.42278043463998L156.09683582234175,234.38460577800234L156.38753723429772,234.37579626334187L156.68411143557978,234.355240679979L156.96306736509882,234.36405019526535L157.22440502285144,234.30825644955485L157.38590579123547,234.30825644955485L157.55034297833686,234.28770086136356L157.905644736132,234.27008177772672L158.09944567743696,234.2495261868068L158.33141953287713,234.24071666800666L158.50466587991627,234.2113515071652L159.0801959626083,234.1731768224385L159.4648615227161,234.1350021326166L159.6586624640181,234.12325605467913L160.11967385240473,234.1144465319913L160.59243072322556,234.04690665657043L161.07399670587506,234.02928755809387L161.92848276619497,233.92357299239592L162.15164750980944,233.9617477105712L162.3131482781905,233.8824617590841L162.70955932073548,233.8560330715803L162.85344186546217,233.86484265039383L163.00613352201754,233.82666791914747L163.17057070911915,233.8178583391429L163.39960819395355,233.7884931827361L163.55523622111764,233.7884931827361L163.74610083992002,233.7767470904497Z\" stroke=\"#000\" fill=\"#FFF\" strokeWidth=\"0.5\"></path>\r\n        <path id=\"Baringo\" ref={(item) => countyRefs.current[29] = item} d=\"M211.3271719568313,199.46055142200584L211.70302835700113,200.04797078239218L211.8381017899021,200.24181860229385L212.1082485594834,200.6941289401413L212.62798750438014,201.4812625751733L214.63647014880144,204.63856037936512L216.33076032017493,204.55338772615508L218.28345177869437,204.50345890119337L219.0146098885507,205.40804862776392L221.84527842037073,208.96173705211785L221.95979716278794,209.0938973207546L222.45898146531022,209.71945431357844L222.65278240661496,209.95146772831077L223.0756208808607,210.55939998514822L223.2870400939289,210.7502960651946L223.88312486710174,211.5021306412346L224.8756206347132,212.72385404036672L225.18394036654172,213.1849346601556L225.5686058785402,213.10857745110812L226.06779018106226,213.04984111529018L226.41428277892237,213.09976702376622L226.46420122360678,213.25248141379694L226.59927460839867,213.34939623583574L226.67562043667522,213.79285427549965L226.69323870844119,213.9837464184517L226.79013917909242,214.15701755035394L226.9252125638816,214.33028849820363L227.07790426854604,214.41839232001112L227.24234140753856,214.42720267553062L227.42439686640614,214.4830017271836L227.5594702511953,214.71500813270913L227.70335279592518,214.85010029240007L227.84723529254302,214.85010029240007L227.9940542078782,214.80311170043723L228.12912759267033,214.87065778215455L228.378719767986,214.917646306838L228.45506559626483,215.0909165029468L228.61950278336667,215.17608309931387L228.6576756975046,215.38753106420774L228.67529396926807,215.56080077279114L228.62831189519238,215.78399534627005L228.6077572528202,216.00425281958357L228.59894809288244,216.20688948508894L228.71346688340896,216.3596010020096L228.83092199643465,216.4946918420286L228.88671318233628,216.62978262390197L228.86028575063528,216.76487325171811L228.90802449280181,216.89825484844087L228.94544073884913,217.1025993839654L228.94544073884913,217.24649985227288L229.24495131074264,217.41095743334316L229.368279164986,217.4873126777889L229.51216170971543,217.4785024811775L229.68540800864275,217.51668009286402L229.8498451957446,217.49612292207118L230.01428238284598,217.44913505971647L230.15816487946654,217.49612292207118L230.30204742419323,217.58422505194451L230.43712080898263,217.99536790363118L230.58100335371228,218.18919209073084L230.71607673850122,218.3419018760304L230.88051392560305,218.47699118930666L231.09193313867127,218.63263744302967L231.30335235173948,218.8147140531927L231.50596245297925,218.88225852141878L231.7261908259852,218.8617015078299L231.95816468142834,218.91162570714923L232.0932380662175,218.9791701874468L232.2253750804009,219.084891871706L232.33108471098967,219.20823381537542L232.47790362632486,219.23760090048108L232.5924223687423,219.32570222377097L232.7069411111595,219.4696009528564L232.89193294063307,219.5665122597771L232.99764257122183,219.66048681911371L233.15914333960563,219.78676507158923L233.3323896385357,219.85430918204548L233.46746307143417,220.03638458011264L233.30302588433256,220.18028270945075L233.10335215370128,220.3065606098575L232.8243962241852,220.5091924011764L232.7069411111595,220.7881778383692L232.5718677263676,221.16407334961025L232.35163935336163,221.54877812738624L231.90824628485302,222.25064220729632L231.59992655302176,222.76162114659968L231.3209706235059,223.19330924192528L231.1976427692598,223.40474795963078L231.09193313867127,223.5486436526581L230.92749595156965,223.84818126985869L230.51346663726167,224.52948088131052L230.39894789484447,224.69393219360563L229.65898062505084,225.91556644697076L229.44462499326482,226.24446677403049L229.1186870377794,226.57043001376888L228.6077572528202,227.06084234597097L227.49193358285675,228.18849293140966L227.3392418781923,228.31182935322653L227.24234140753856,228.4381023305001L227.05147683684504,228.64072625757493L226.8195029814019,228.86977916281222L226.66387495423805,229.00486153842522L226.50237413774516,229.05478328650182L224.65539230981653,229.52463437050335L223.85669743540097,229.74487671851304L223.33695849050423,230.37036404539077L223.39274967640858,230.7168774359813L223.60416893758588,231.641889732431L223.78916076705946,232.37308761746175L223.83614279302606,232.60507370563073L223.94185242361505,233.0279338301734L224.0681166484694,233.48896813305228L224.08573492023515,233.65341326024318L223.94185242361505,234.04690665657043L223.86550659533873,234.22897059440928L223.18133046334015,235.77063635007505L223.09617552323243,235.90571524729364L223.028638806785,236.1053970175826L222.91118369375886,236.35793549819277L222.7291282348915,236.78959967515652L222.65278240661496,236.92467813049618L222.32684445112955,237.64705333029306L222.24756225224178,237.79975031053087L221.92162424864728,238.5133141491592L221.83353288982448,238.68656603714362L221.7395687897822,238.92735667582545L221.64266831913096,239.14759187557001L221.49878582251063,239.4353656296706L221.14348406471527,240.2252740756572L221.08475650820242,240.3779699300816L220.99666514938008,240.5336021715482L220.94968307530416,240.68629794839148L220.9584922352392,240.95645177213183L220.94087396347572,241.21485962887505L220.9115101611635,241.43802990805443L220.89095551879132,241.6788187060442L221.4694220202009,242.04293816526956L221.74837794971995,242.20737910249343L222.19177106633742,242.5039598529166L222.38263563703367,242.70657433960096L222.44136319354652,242.95910821515662L222.44136319354652,243.12942165348082L222.47072694774715,243.54345922162184L222.48834521951358,243.95749640175728L222.4795361076849,244.198283768738L222.5000907500596,244.36272388786904L222.35327183472145,244.48899037261648L221.99797007692632,244.85310743038502L221.7689325920917,244.99699234365667L221.86289669213443,244.35391462045084L221.0465835940645,244.7385867718844L220.89095551879132,245.05572085457015L220.8527826046502,245.1907964075052L220.82341885045003,245.35229976736042L220.97904687761388,245.47856599194625L221.1023747799686,245.54610369101326L221.49878582251063,245.68117910993598L221.7395687897822,246.06585026585194L222.00677923686385,246.4710760060755L222.11542518995202,246.57678704276967L222.4119993912343,246.8058275029065L222.48834521951358,246.93209337485615L222.6234186524116,247.27859021257507L222.69976448069087,247.4988211694896L222.90237453382156,247.5281853099025L223.1930759938864,247.60453201024177L223.4044952069546,247.67206944161615L223.46028639285646,247.86587257719336L223.5102048375436,248.00094742009682L223.46028639285646,248.1536406881336L223.38394056458014,248.4795819548813L224.0005799801279,248.66457558716368L224.08573492023515,248.8759967940258L224.1826353908864,249.2694749917405L224.2119991931961,249.45153200235504L224.19144455082392,249.63652535816493L224.19144455082392,249.80977304114614L223.98883444958165,250.34713427908534L223.98883444958165,250.5115725687538L223.92423415185158,250.70243847755114L223.80677899071657,250.86687668929292L223.7010694082369,250.98139615800994L223.54837775168153,251.10766121224768L223.35457676226747,251.21337148137013L223.20188510571234,251.3572548246158L223.0580026090945,251.42479192962247L222.93173833613105,251.5510569140454L222.76730114902944,251.66557628505382L222.68214620892445,251.85937825455088L222.42080855117183,251.97389758383719L222.2593077346787,252.00326153418075L222.04788852161073,251.83001434740706L221.651477479066,251.21337148137013L221.44005826599778,250.89624067945306L221.2873665613331,250.68482008874105L219.67823137817413,249.50145086388196L218.8149362060285,249.7128718017285L218.62113526472353,249.80977304114614L218.68867193306505,249.9536567024911L218.99699166489359,250.14452270911866L219.18785623558983,250.18269590431726L219.39046628872052,250.27078790402823L219.47855764754286,250.38530746362014L219.46681216510592,250.54974574478527L219.51673056168374,250.769975590776L219.51673056168374,250.98139615800994L219.54609436399346,251.12821597988676L219.32292962037877,251.24273541044698L217.88116794682082,251.6450215310163L217.41722018782843,251.7536680686336L217.08247312051435,251.8769966175943L217.0237455640015,252.3497558048623L216.97676348992582,252.60815825291775L216.8798630192748,253.37749236706267L216.83288094519912,253.54193012792868L216.83288094519912,253.68581310555305L216.72717136271922,254.49331944581928L216.6860620779728,254.70473923193475L216.55392506378917,255.07178729989974L216.4863883473413,255.283206943696L216.33956943200337,256.1024578375401L216.301396517865,256.39022326162535L216.24560533196063,256.6221974390397L216.21624157776,256.9686903921377L216.1575139731383,257.45906593689256L216.11053194717147,257.94944137776673L215.0622449455468,257.8525408556685L215.35000998689407,259.9990337753053L215.35881914683182,260.25743506893525L215.41754670334467,260.5275818407875L215.18557284790154,260.69201902810056L214.94478983252088,260.9592294273027L214.45441468993658,261.33508583183755L213.8583299167608,261.11485750349243L213.70563826020543,261.04144804527425L213.3973185764862,260.9592294273027L212.95392545986556,260.74781021400753L212.64560577614634,260.65384611395046L212.53108698561982,260.5745639149755L212.38720448900222,260.4013176152853L212.21395819007216,260.15172543633616L212.11705767131184,260.0283975786378L212.01134808883216,259.85515127239404L211.71183751693866,259.78761455218097L211.40351778511035,259.6995231875808L211.05702518725002,259.5761953234464L210.5578408847282,259.4117581194846L210.3170579174564,259.3060484755954L210.23190292924255,259.08288369678166L210.18198448455814,258.9008282493236L210.15262073035478,258.75694566995077L210.15262073035478,258.574890159451L210.06746574214094,258.35172538767716L209.99992907379965,258.0727693406258L209.89421944321066,257.8995229551271L209.4625718571392,257.91126844377976L209.142506642871,257.9788051949826L208.70204994497112,258.0169781280276L208.26746598828822,257.95825054220876L208.2116748023841,257.77619498434956L208.2292930741503,257.573584757693L208.29682974248885,257.4297021616857L208.2292930741503,257.2652648499242L208.25865682835047,257.09201840626235L208.10596517179533,256.77488925983783L208.07660136948562,256.5928336037101L207.91216423049332,256.49593302073606L207.7976454880761,256.3608594705928L207.53630783032327,256.35205029950924L207.1046602442491,256.16999460013176L206.84332258649624,256.80425304421647L206.58492129935235,257.48549333906885L206.86387722886843,257.7468311648794L206.98720508311408,257.8907137904934L207.42178908790606,258.36347087450656L207.99731917059808,259.0270925485453L208.26746598828822,259.3148576367204L208.5845947838361,259.6231773534433L208.71085905679956,259.69071407512104L208.81656868738833,259.83459658082313L208.8841053557269,259.96967001999485L208.90172362749308,260.17228007916464L208.86355071335493,260.35433554080026L208.80775952745057,260.51877272893125L208.71085905679956,260.69201902810056L208.69030441442487,260.8887563881963L208.63451322852052,261.1442212579842L208.566976560179,261.3556404747032L208.49943984373135,261.5053957653495L208.36436645893923,261.67276933100123L208.24984771652203,261.7931608705481L208.1617563576997,261.93117063736975L208.05604672711092,262.03394390777555L208.07660136948562,262.1925083252112L208.01787381297254,262.3305181016114L207.81526375983913,262.5243191273219L207.7301087716255,262.69756546613144L207.66257205517468,262.88843008973276L207.55686247269546,263.09691300178L207.48932575624758,263.28484127610545L207.37187064322165,263.38467816155884L207.18981518435385,263.48157872652774L206.98720508311408,263.6078430166928L206.94022305714748,263.7898985803859L206.82570431473027,263.9925088139575L206.6700762875662,264.03068175496026L206.51738458290174,264.15988249418564L206.51738458290174,264.41534757412154L206.3735020862839,264.51224813313706L206.1885102568076,264.5885940343129L206.0270094403147,264.6884310234701L205.8420176589475,264.48582072498897L205.65996220008242,264.10702763887L205.37219715873493,263.5432426848132L205.16077789755764,263.09691300178L204.86126732566686,263.246668345956L204.47660181366837,262.9148574814409L204.3708921830796,262.7974023338379L204.23581879829044,262.69756546613144L204.02439958522223,262.4655915108141L203.80417121221626,262.8561299071595L203.47529688612235,263.3905509535944L203.11118596838946,263.93965396249155L202.5914470716018,264.76477693154493L202.4270098845002,264.9820691300316L201.74577017121965,265.95401173737827L201.302377054599,266.42089677881177L201.22603122632017,266.2858231140611L201.05278492739262,266.0274213281649L200.68573763904874,265.53117261484584L200.5213004519469,265.53704536494087L200.27170832474053,265.7631468377479L200.1278257800136,266.10376729886553L199.8694245409788,266.1566222151642L199.8694245409788,268.6055687427439L199.61689599505166,269.0225362162054L198.9826383558468,270.10606531881695L198.44528113918682,270.1442384541543L197.88736928014941,270.33804054642457L196.68345425136317,270.6199346056312L196.62472669485032,270.3703409157603L196.63647222539657,270.20590274240504L196.61591758302166,269.10181882442646L196.95360106905355,268.32661171771673L196.17252446640146,267.1226928158394L195.81722270860632,266.69104414954865L195.7203222379551,266.4796244612807L195.43255719660783,266.1713041447288L195.20058329305584,266.00686664814157L194.97154580822394,265.23166161845114L195.056700796438,264.8381864688493L194.9891640799874,264.34193805254023L193.8821495218524,264.34781084688524L193.64136650647447,264.4241567419032L193.2772556368509,264.51518455460456L193.3536014651272,264.25091024739487L193.66192114884643,263.6871252596465L193.9320679665368,263.15564058027593L193.57676620874167,263.37586904569315L193.48867484991933,263.2407956023188L193.37415610750213,263.3318233705551L193.18035516619716,263.44340579378854L193.01591797909555,263.5784792467766L192.68998002361286,263.66950702598854L192.47856076243556,263.36705988174833L192.60482503539583,263.1644497436019L192.52554283651125,262.9383485499157L192.41983320592226,262.69756546613144L192.30531446350506,262.48908257656575L192.19079572108785,262.3980548297702L192.02635853398647,262.40980036245327L191.81493932091803,262.38043655485836L191.42146464898497,262.34520000523196L191.21885454774224,262.2835360680655L189.96795749298985,261.14715762862716L189.76534739174986,261.11485750349243L189.51575526454076,261.16771227123377L189.02538012195623,261.1324757754251L188.37937690409626,261.15303041801815L188.0035205039262,261.14715762862716L187.889001761509,261.04144804527425L187.7539283767171,260.89756550003506L187.63940963430264,260.7595557445539L187.48378160713582,260.61273682916914L187.00221557637724,260.0841887662661L187.03157937868968,259.77586902092327L187.13728896116913,258.9771740939242L187.61885499192772,258.9213828962287L187.96534758978555,258.7951185937915L188.12978477688694,258.0845148285434L187.78329217902933,257.8613499723198L187.9066200332727,257.62056686233507L188.07986633220276,257.3915291715712L188.0035205039262,257.25645568296466L187.82146509316772,256.97749951219765L187.86844711913432,256.5928336037101L188.04169341806437,256.639815682284L188.66714199354988,257.0744001189848L189.4394094362642,257.67929445578153L189.4570277080279,256.77488925983783L189.48639146223127,255.9967480538222L189.5245643763692,255.30376162621482L189.77415655168488,254.7341030562093L190.25572253433415,253.68581310555305L190.22635878013375,253.3980470825794L190.12945826137343,252.6580769135619L191.31281864778475,252.6580769135619L191.65931129375417,252.64633133244087L191.77676640677987,252.72267748683572L192.09389525043707,252.64633133244087L192.4697516506069,252.6580769135619L194.03777754901648,252.6580769135619L194.15229633954277,252.57879432232588L195.18296502129215,252.2822188210371L195.2886746518809,252.18531784074628L195.1712195388552,251.96508842740485L195.1917741812299,251.771286433866L195.52945766725884,251.48351981946246L195.63516724973852,251.26035378662175L195.7966680662314,251.08710644407347L195.93174145102353,251.00195092895817L196.12554244043463,250.91385906338832L196.30759785119358,250.87568590570186L196.39568921001592,250.69362925914416L196.55718997839995,250.60847374850678L196.5953629406472,250.39411663756522L196.58655378070944,250.15626827825136L196.53957175474284,249.93310190240865L196.4896533100582,249.47208681681852L196.39568921001592,249.2518565671651L196.2987887393649,249.08741797919606L196.27823409699022,248.93178849437942L196.20188826871367,248.7702862234528L196.07856036635872,248.5970382670032L195.99046900753638,248.43259946229784L195.96991436516146,248.27990626447237L196.01983280984587,248.05673919931965L196.01983280984587,247.91285511381966L196.12554244043463,247.7689709933667L196.10498774995085,247.61334122204065L196.18426999694748,247.46064781356682L196.17252446640146,247.27859021257507L196.20188826871367,247.1347059814788L196.22244291108586,246.94971186742788L196.20188826871367,246.72948069362812L196.22244291108586,246.4710760060755L196.22244291108586,246.23909899123635L196.154906194638,246.11283295554088L196.17252446640146,245.95132988772332L196.13435155226307,245.76633536193094L196.1431606640915,245.56665864527506L196.24006118285183,245.41102823560507L196.3457707653315,245.28476199378014L196.3457707653315,245.09389438524914L196.36632540770643,244.94120024445104L196.4632258783572,244.77676032777725L196.50139884060445,244.5947018286965L196.5953629406472,244.46843537251777L196.45148039592027,244.25701242724205L196.4896533100582,244.0925722703319L196.56893550894597,243.93987780305702L196.5307625948078,243.76662820447314L196.4133074817821,243.66091660510486L196.2106973805394,243.5933785869442L196.0668148358127,243.62274295648024L195.90531406742866,243.4201289016758L195.7702406826395,243.2938621176373L195.57643969322567,243.24687914798628L195.43255719660783,243.0824386178712L195.37382964009498,243.23806981054122L194.9891640799874,242.99728192189903L194.78655397874786,242.9003793844813L194.5956894080541,242.92974380083135L194.49878893740288,242.7858582279434L194.30792436670663,242.70657433960096L193.97904999250363,242.4481674421743L193.92032243599078,242.2661079823202L193.7382669771257,242.14865016614323L193.54740240643218,241.88143360085206L193.38296526743943,241.66707294257142L193.40351990981162,241.4468392357838L193.48867484991933,241.23541478643057L193.61493912288006,241.07097344739117L193.57676620874167,240.83018422592656L193.45931109571598,240.50423762714044L193.37415610750213,240.3985251327725L193.3066194391606,240.2047188633901L193.3066194391606,240.01384894612366L193.3536014651272,239.82004242619416L193.2772556368509,239.59980769103157L193.2567009944762,239.35901751260747L193.13337309212147,239.20632122920878L192.93957215081923,239.05949780266894L192.9601267931937,238.61902720041996L192.82505340840203,238.41641051417434L192.75751669195142,238.24315848896953L192.64299794953695,238.13744532076367L192.56371575064918,237.92601893257444L192.44038784829445,237.77038548991462L192.32586910587997,237.59713312982495L192.26714154936712,237.423880678303L192.3141236234428,237.28880243270567L192.22896863522624,237.0392011751563L192.19079572108785,236.865948376443L192.132068164575,236.66333065843617L191.91183979156926,236.6251562375492L191.88247603736863,236.49007765423352L191.6886750479548,236.49007765423352L191.46844672306065,236.37555445877163L191.3627370924719,236.18468237276966L191.3421824500972,235.91452476466117L191.28639126419284,235.66492236360114L191.22766370768,235.52984335926772L191.0925903228906,235.39476429439011L190.91053486402302,235.28905017607553L190.8429981475722,235.14516151098485L190.82244350520045,234.98071718877338L190.93989866633524,234.7986537233565L190.91934397585146,234.58722507028253L190.85180730750994,234.3934153405051L190.813634393372,234.2113515071652L190.91934397585146,233.8824617590841L190.98688069230207,233.72095322960155L191.18949079354184,233.45960289408524L191.25702746188335,233.27753845873247L191.32456417833077,233.12483918116243L191.35392798064345,232.93983800495673L191.32456417833077,232.71959838965873L191.28639126419284,232.5551526558205L191.29520037602128,232.37308761746175L191.15131787940368,232.20864167156768L190.91053486402302,232.06475142772783L190.73728856509274,231.9208610576361L190.6315789345042,231.81514567589232L190.58166053792866,231.50680878596393L190.5434875756814,231.37172776929688L190.59340602036582,231.21902740045638L190.5434875756814,231.0633904002334L190.52586935202453,230.91068979986687L190.57285137799136,230.76679883700123L190.68737012040856,230.60235187415026L190.73728856509274,230.3821102404921L190.83418903574648,230.2264727256836L191.01624449461156,230.07377166595674L191.0749720511244,229.9005145840518L191.1131449652628,229.74487671851304L191.0749720511244,229.3220111920269L190.97807158047362,229.1869289948352L190.98688069230207,228.9960518425667L190.92815313578922,228.85215971269378L190.91934397585146,228.68771146471715L190.97807158047362,228.48508757795963L191.1601269912294,228.45572181142325L191.30400953595904,228.37056096670398L191.43908292074843,228.24428800117664L191.65050213381642,228.22666850436914L191.9000943091321,228.13857100037984L191.86192139499371,227.97705883120153L191.89128514919707,227.7832441181493L192.09389525043707,227.68633670058517L192.23777779516377,227.53363401442616L192.19079572108785,227.39855078774485L192.2847598211306,227.24291127360524L192.35229653758097,227.0990181064416L192.32586910587997,226.95512479949414L192.32586910587997,226.7730555911308L192.29650535167661,226.59979607041097L192.19079572108785,226.29145252233323L192.1702410787134,226.10057291458455L192.04691317636116,225.9654888219186L191.9881856198483,225.77167237119266L191.83255759268422,225.72468651125527L191.83255759268422,225.50150369375496L191.70042057850083,225.3869755622976L191.73859349264194,225.18434870005004L191.88247603736863,225.04045413597893L191.95001270570992,224.87600309333908L191.96763097747362,224.48249474781713L192.0645314481244,224.30042350720151L192.0557223362987,224.0889856633927L192.1115135222003,223.90397744537808L192.1996048810256,223.77182858918897L192.22896863522624,223.61618645766873L192.32586910587997,223.51046726008775L192.37285117995566,223.2784720645655L192.3640420200179,223.02885673188115L192.47856076243556,222.89377066000702L192.4315787364685,222.7116979572807L192.3816602917816,222.29762880815065L192.34348737764344,222.094998897745L192.39046945171913,221.90411547524914L192.45800612006065,221.77783862880005L192.5842703930241,221.63394170457127L192.7281529377508,221.49004462565856L192.7487075801257,221.3461474879034L192.6811708636751,221.18169343659417L192.50792456474505,221.05835279371695L192.5842703930241,220.91151860748118L192.56371575064918,220.6912671642155L192.65180710947175,220.5473693774805L192.71053466598482,220.3741045805562L192.55490663882074,220.25957352314418L192.41983320592226,220.18028270945075L192.41102409409382,220.0187643865201L192.0850861386084,219.816132064512L191.96763097747362,219.7280309755699L191.87366687743088,219.41967690595013L191.87366687743088,219.27577813775375L191.83255759268422,219.0937020373578L191.88247603736863,218.85289137905514L191.95882186564495,218.66200466924812L191.92945806333546,218.4476239329237L191.81493932091803,218.27729387624174L191.83255759268422,218.1216473141696L191.95882186564495,217.9689373403686L191.97937650801987,217.80448028018552L192.02635853398647,217.6312128782113L191.99699477978584,217.41095743334316L191.97937650801987,217.13196681550042L192.1702410787134,217.06442168188278L192.334678265815,216.90877399974133L192.4491970082322,216.61216209524105L192.3816602917816,216.26562469635218L192.39046945171913,216.10116602497638L192.34348737764344,215.86035131176448L192.26714154936712,215.70763934627837L192.23777779516377,215.52262272654917L192.22896863522624,215.29355421859452L192.19079572108785,215.1085371899248L192.14087727640367,214.9763820161439L192.39046945171913,214.71500813270913L192.4491970082322,214.44482343326666L192.55490663882074,214.33909890657424L192.41983320592226,213.9837464184517L192.41983320592226,213.77229665039323L192.56371575064918,213.67538203497173L192.57546128119566,213.52266804739855L192.54609747888298,213.38757478746334L192.34348737764344,213.10857745110812L192.34348737764344,212.96467340672822L192.41983320592226,212.8090218780909L192.47856076243556,212.63574929093937L192.53728836705727,212.51240260727707L192.64299794953695,212.39492942358385L192.81624424846427,211.94265698670725L192.7487075801257,211.7605729400313L192.7956896060923,211.54912015598552L192.99829970733208,211.355288231156L193.26844647691337,211.31710918544508L193.45050193577845,211.14383493936185L193.59438448050787,211.02048702305547L193.7881854218101,210.99111848897007L193.92032243599078,210.8090332686195L193.92032243599078,210.6240109744752L194.1053142654671,210.68274822673055L194.1346780677793,210.5388419351227L194.0172229066443,210.41255666813672L194.05539582078268,210.25102884483871L194.16110545137144,210.11593273943492L194.30792436670663,209.76938130149068L194.2961788361606,209.54617823470184L194.2022147361181,209.33472235777225L194.2286421678216,209.16144582883948L194.35490639267346,209.03809633079896L194.44006138089003,208.83545044703408L194.4136339491863,208.63280428276934L194.53696185154126,208.50945433932324L194.71020815047132,208.45071617928178L194.76893570698417,208.28624935875575L194.79829950929388,208.1423406895314L194.86583617763517,208.00724264926507L195.056700796438,207.96025196969322L195.13304662471705,207.8339645415538L195.25050173774275,207.7487938419245L195.4413663084365,207.68124462873L195.46192095081096,207.50796612716172L195.39438428246945,207.34349822840497L195.43255719660783,207.19077779090657L195.53826677908728,207.01749869220896L195.60580349553788,206.79429138511605L195.5852488531632,206.5828315225248L195.68214932381443,206.43011030985895L195.77904979446794,206.30382147036926L195.77904979446794,206.13935211832575L195.7966680662314,205.92789126466096L195.8377773509808,205.66943864530862L195.95229609339526,205.50496858847106L195.81722270860632,205.46678800458787L195.7027039661889,205.39042680500825L195.73206776850157,205.21714541929236L195.74968604026458,205.01449411037413L195.7203222379551,204.81184245217878L195.77904979446794,204.60037955306572L195.74968604026458,204.42709716151745L195.7702406826395,204.20682269604754L195.71151307801733,203.99535880032104L195.66453105205073,203.6282332757621L195.7203222379551,203.50487884283194L195.66453105205073,203.2934138820156L195.64397640967604,203.09957070834247L195.45311183898252,203.0408302979156L195.39438428246945,202.8969161503154L195.38557512253215,202.75300184506227L195.42374803667008,202.58852821479502L195.38557512253215,202.39762098040381L195.5588214214622,202.03049099989641L195.65278552150448,201.9159462296886L195.7027039661889,201.77203083938454L195.69095843564287,201.616367104433L195.56763058139995,201.5223813537256L195.53826677908728,201.29916491370184L195.62342176730135,201.09650754005384L195.60580349553788,200.84685673548339L195.54707593902504,200.39454694484246L195.8377773509808,199.85705979745202L195.8377773509808,199.63384041449504L195.66453105205073,199.65440010616888L195.62342176730135,199.5192934780064L195.53826677908728,199.3753754082163L195.42374803667008,199.26082823293413L195.38557512253215,199.0669788844287L195.29748376370935,198.94068294077474L195.3268475660193,198.75858163689222L195.3268475660193,198.5089261519453L195.29748376370935,198.33563552719338L195.4031933942981,198.00961360066006L195.41038804352274,197.57390392100598L195.38414554519773,197.41070094618073L195.39438428246945,197.1137829929459L195.51771213671282,196.98748506168732L195.4031933942981,196.80538076722462L195.29748376370935,196.58509294595066L195.3268475660193,196.43823417092904L195.18296502129215,196.38242779051797L194.9891640799874,196.11220707408128L194.9421820540208,195.97709648315936L195.03908252467454,195.77443028091614L194.9598002776779,195.6305076831958L194.9421820540208,195.47777332732093L195.056700796438,195.35147364211826L195.1066191930131,195.13999469799552L195.2387562071965,194.98725969707522L195.25050173774275,194.78459176950588L195.31803845419063,194.6024840948337L195.56763058139995,194.3116985823773L195.60580349553788,194.1090294622713L195.47953922257443,194.03266130164047L195.50890302488665,193.8887365779372L195.62342176730135,193.74481162389108L195.64397640967604,193.5803257453677L195.7027039661889,193.407027887886L195.85539562274448,193.37765536859985L196.019832761737,193.33065925446272L195.85539562274448,193.16617277279914L195.8847594250567,193.02224694612585L196.01983280984587,192.96643890912546L196.04919656404923,192.83132456375478L195.8935685368824,192.75201827507922L195.82603186854385,192.59928006477702L195.8847594250567,192.4553534606743L195.8465865109158,192.2732420345324L195.7966680662314,192.1381268969035L195.92293233919509,191.95307761671108L195.8935685368824,191.7621534465997L195.8465865109158,191.62703763576604L196.01983280984587,191.5124828342058L196.12554244043463,191.35680561194016L196.154906194638,191.18350428837783L196.2987887393649,191.09832215342584L196.43386212415385,191.06013704848598L196.51020795243312,190.94264434141752L196.51901706426156,190.75171840989734L196.63647222539657,190.65478665840226L196.60710842308436,190.4432988471649L196.54838086657128,190.3169934854639L196.4632258783572,190.20243730503944L196.44267123598252,190.03794614772585L196.53957175474284,189.92338967025267L196.6746451395345,189.86464271500768L196.8273367960901,189.6061556906974L196.95685587723074,189.43154354992586L196.96842037128,189.2788409196325L197.22081146802316,189.05686872078172L197.30009366691093,188.91293742150742L197.4058032974997,188.7866302026605L197.52913115174533,188.7014462137913L197.5790260708261,188.5083834777525L197.72473880168855,188.45748218140517L198.04006093670455,188.37245900470526L198.0018880225664,188.2197146104806L198.1164067649836,188.1051561687375L198.18394348143147,187.91128775811129L198.28965311202023,187.82610301043457L198.44528113918682,187.78791673325753L198.44528113918682,187.63223408106893L198.53043607929158,187.47948860355808L198.55979988160152,187.3149932038835L198.56860904153882,187.1416852910408L198.70368242633094,187.07412447683885L198.8387558111201,187.02712566114116L198.84756492294878,186.85381726477695L198.80058289698172,186.6599464643593L198.8387558111201,186.4572629871458L198.9239107512251,186.2751413019108L199.070729666563,186.1312061490719L199.0883479383267,185.9285216220859L199.1558846547773,185.67883725496367L199.14948540188743,185.30849458394601L199.3673038678453,185.1677167269226L199.34968559608205,184.94740533690793L199.49350420312567,184.81254256312417L199.4348405842959,184.55378113533254L199.3379400655358,184.39809353764582L199.46420433849653,184.2159680834555L199.40547678198368,184.0426548659571L199.45539522667082,183.84877870735033L199.3673038678453,183.65783968732435L199.54055016677535,183.56971384260572L199.63745063742658,183.3963994912985L199.5493593267131,183.23483496084802L199.42603142435814,183.07033262784972L199.3878585102202,182.86764187719223L199.44384646446747,182.68618113966897L199.5912493824694,182.67770741921257L199.76371491039004,182.65613805939637L199.85767901043255,182.54157329759786L199.76371491039004,182.3682571228549L199.62864152559814,182.27131743408873L199.47301349843406,182.23312904375646L199.24397596549306,181.8483066892228L199.2527851254281,181.7043651496993L199.3878585102202,181.51048429244156L199.34968559608205,181.2989775038829L199.42603142435814,181.1638479233614L199.63476833371578,181.1324158273186L200.08965286587568,181.89530799603108L200.7239105531894,182.88820476868582L201.31999532636246,183.80177834153272L203.09063132601455,186.554198648806L204.3033555147383,188.41358245007683L204.44723801135888,188.65444808336107L205.32521508465925,190.0496955416337L205.56306172943118,190.4051135118747L205.87138141315063,190.90445918192646L206.84332258649624,192.43479250891997L208.32619354480107,194.73465907118128L208.40253937307762,194.89914324009885L208.82537779921404,195.5247685609719L209.2981346700376,196.24731750976144L209.7885098607312,197.0256681802374L209.93239235735177,197.23714368892L210.3845945857979,197.98905363345125L210.89552437075986,198.7791414742784L210.8837788883227,198.92306028765705Z\" stroke=\"#000\" fill=\"#FFF\" strokeWidth=\"0.5\"></path>\r\n        <path id=\"Laikipia\" ref={(item) => countyRefs.current[30] = item} d=\"M249.87300766472822,221.296223938575L250.0286356918923,221.63394170457127L250.08442687779666,222.16254224040023L250.17251818851287,222.29762880815065L250.33401900500303,222.3945386792502L250.527819946308,222.52962508864678L250.4397286355918,222.76162114659968L250.49845619210464,222.92313717998817L250.6805116028636,223.21386579025813L250.75979384986022,223.36657154010868L250.90367634647805,223.6837292885067L251.02700424883005,223.99207660370888L251.31770566078603,224.65575601186106L251.4028606490001,224.80846069738743L251.44103356314076,224.9934681642803L251.46158820551295,225.15498245269058L251.58491610786746,225.29006705130112L251.7963353209359,225.32824311911844L252.3953564647204,225.37816567759873L252.57741187547617,225.43396144754803L252.71248530837738,225.32824311911844L252.91509536150807,225.26070086656694L253.1353237345138,225.2137148952586L253.34674294758224,225.2049050515555L253.5199892946216,225.3194332801231L253.63450803703608,225.483883981485L253.65506267941055,225.66595420811024L253.79894517602838,225.7540526809202L254.01917354903435,225.7540526809202L254.1748015761982,225.39578539852272L254.25114740447748,225.27244732169802L254.4038391091417,225.2225247867147L254.559467136306,225.18434870005004L254.7426193020533,225.06028143521138L254.74152259517382,225.47507410075616L254.58883089050892,225.68651051361553L254.52129422216763,225.9273128665203L254.50073957979293,226.11819257688708L254.5124850622301,226.26208642480483L254.5124850622301,226.41772657210612L254.50073957979293,226.6291621231809L254.49193041985518,227.33100912034453L254.47137577748322,227.65697078508586L254.47137577748322,227.86840517759805L254.52129422216763,228.26484407109206L254.37741167744093,228.61136046229257L254.356857035066,228.82279394356732L254.28932036672472,229.00486153842522L254.0984557479219,229.01367123395957L253.91346396655467,228.9960518425667L253.8194998665124,229.31320145966893L253.8371180901695,229.465903040895L253.77839053365642,229.59217536038517L253.663871791239,229.75662299138972L253.67268095117674,229.97686517912516L253.69323559354893,230.15012220755588L253.67268095117674,230.34393500817302L253.52879840644732,230.45846068767304L253.31737919337888,230.46727037906595L253.1147690921391,230.50544559259933L253.02961410392527,230.6493367522175L252.97088654741242,230.8049740052307L252.8093857790284,230.87251464751847L252.75946733434398,231.05458072956378L252.71248530837738,231.31593341053093L252.63613948009834,231.47744337864427L252.43352937885857,231.40990284740508L252.3072651058951,231.56553968688064L252.2309192776188,231.709430203492L252.06648209051718,231.7270494518546L251.99013626223814,231.86213028455225L251.85506287744874,232.02657644510222L251.6818165785187,232.15284753899948L251.6142798620681,232.3261030993125L251.67300741858116,232.46118362692835L251.71118033272205,232.60507370563073L251.64364366438053,233.08666434854828L251.53793403379177,233.2687289095267L251.69062569034736,233.37444377016507L252.33662890820756,233.44198375884287L253.6168897652724,233.6034924488976L254.673985878723,233.72095322960155L255.19372482361973,233.76793750888893L255.75163663454828,233.84428703021678L256.782305364404,233.9617477105712L258.3033492368497,234.16436730129078L260.2736589671333,234.3934153405051L261.4775739959191,234.54905043533648L262.5082427257778,234.66357432513655L263.51835681326156,234.7986537233565L264.43157038198547,234.89555846959672L264.7281445832675,234.9425426051802L266.4312439145783,235.14516151098485L267.40318503981484,235.250875632178L267.57643138685125,235.2978597114189L267.92292398471136,235.31841522872745L268.4338537696706,235.37420878232658L269.10628437112564,235.46230385847227L270.47463658701304,235.62674786744924L274.09225441459375,236.01142915034058L274.95848595735083,236.09658750568693L275.7659899435946,236.23166630765726L275.7366261893915,236.3961099034993L275.4400519881094,236.60753733911662L275.390133543425,236.78079023064657L275.3431515174582,237.00102679941915L275.390133543425,237.18308895873997L275.47822490224735,237.36808749148057L275.3725152716588,237.50316570417317L275.38132443159657,237.84967048035864L275.29323307277105,237.98181202489647L275.2550601586329,238.21379370731034L275.1875234902916,238.34887157597413L275.0730046997678,238.44577523017296L274.87920375846306,238.6660107362317L274.8909492890093,238.8187072555644L274.87920375846306,238.99195899043448L274.814603460733,239.17695652955632L274.8410308443249,239.48528556202933L274.8703946466344,239.6174264805671L274.9291222031475,239.7525038063013L274.97610422911384,239.95511972456075L274.99665887148876,240.1283709083497L275.01427714325496,240.50423762714044L275.0524500573931,240.7743915804126L275.09355939024886,240.93589659974006L275.22569640443226,241.015180836921L275.4194973457345,241.09152861257425L275.5340160881517,241.16787637315605L275.61329828703947,241.31176251876238L275.70726238708176,241.4468392357838L275.8335266600425,241.8520691582717L275.89225421655533,242.08111195588128L275.8423357718709,242.22499772402608L275.8805086860093,242.36007418223255L276.07430967542314,242.4393581362659L276.2857288884916,242.57149804207546L276.2475559743532,243.0530742601058L276.26517424611666,243.19695969506347L276.4883389897311,243.46711190081413L276.5441301756355,243.5933785869442L276.74674027687524,243.63155223809363L276.9023683040393,243.7372638925344L276.92879568763396,244.20709308723409L276.92879568763396,244.55359178875742L276.9581594899437,244.7004132129196L276.911177415868,245.06453015705085L276.96990497238085,245.36404543270143L277.01688704645653,245.50793019541297L276.9405412181802,245.63125996584665L276.96990497238085,245.78689030721154L277.0256961582852,245.9395841879716L276.99633240408184,246.10402371958884L277.06386907242313,246.3066366380364L276.9493503300059,246.47988528398835L277.01688704645653,246.70011655926172L276.8730045017296,246.90272920328397L276.71737647456575,247.0466135424549L276.6615852886614,247.20224346855358L276.69975820279956,247.33438206114118L276.5940485722108,247.5281853099025L276.3708838767054,247.5751678737175L276.1800192579028,247.6338960971636L276.0449458731109,247.73079765525958L276.02439123073873,247.88349104089187L275.97740920477213,248.06554840435462L275.8511449318087,248.13308583109142L275.6984532752533,248.25054216139563L275.59274364466455,248.34744361921764L275.5340160881517,248.47077275583408L275.41068818579674,248.53831008965696L275.42830645756294,248.71155811040163L275.6221074469745,248.8172686907364L275.6015528046023,249.01107146411545L275.54576161869795,249.24011098259297L275.4400519881094,249.35756710761106L275.24625104680445,249.4339135825852L275.2756148010078,249.62477973220464L275.2374418868694,249.7892182368353L275.13173230438997,249.9536567024911L275.16990521852813,250.08873110877542L275.13173230438997,250.26197868048473L275.01427714325496,250.4440354322523L274.7940488183581,250.85806752089462L274.8234125725587,251.03131491400336L274.83222173249646,251.22218064577498L274.80285793018675,251.4071735570347L274.5532658029774,251.5305021571726L274.30367367577105,251.55986607478476L274.4093832582507,251.78009564040002L274.45636533232664,251.93572447576418L274.3624012322839,252.0414346392817L274.1979640451823,252.05905299862096L274.0834453027651,252.14714474189415L273.6018792720065,252.0414346392817L273.3904600589383,252.07079853924267L273.1672953153238,252.1559539446032L272.8501664716666,252.3497558048623L272.6974748151115,252.5406212400385L272.5418467879474,252.6845044104111L272.3597913290823,252.8107692143128L272.1953541419807,252.94584314866705L272.0602807571888,253.0691714883335L271.8488615441206,253.29233707145858L271.7343428017034,253.4274109886689L271.64625144288084,253.5507392697666L271.6579969734271,253.75335004112927L271.6198240592887,253.97357909974468L271.56109650277585,254.14682590759185L271.56990561460157,254.61077490304444L270.6860558000815,255.4652627476938L270.5803461694927,255.6091455488625L270.44527278470355,255.8323106627034L270.1956806574942,256.1876128960294L270.0782255444685,255.9292112840057L269.984261444426,255.69723700965787L269.84918801152776,255.63850935367006L269.6553870702228,255.72660086084466L269.41460405484486,255.80294681354934L269.3088944723652,256.02317552445413L269.23254864408636,256.92758106846526L269.1268390134974,257.0538454583208L268.77153725570224,257.24764656408155L268.58654542622594,257.3328015709285L268.35750794139426,257.3533562289233L268.17545248252645,257.4297021616857L268.05799736950075,257.5148571616776L267.8759419106357,257.56477564003376L267.76142316821847,257.65873980064185L267.7408685258438,257.82317703706866L267.5588131150878,257.84373173898774L267.43254884212433,257.9288867247744L267.27104802563144,258.0169781280276L267.0772470843292,258.0845148285434L266.6925815723307,258.1226877601594L266.51933522529157,258.13149692405796L266.30791601222336,258.16086069127243L266.1258605533583,258.26657036630917L265.8938866979154,258.32529794593336L265.68246748484717,258.36347087450656L265.53858494012,258.3810891527765L265.35359311064394,258.4486258932829L265.2772472823676,258.58369932209604L265.153919428122,258.70996363152005L264.9013908821976,258.7363910221948L264.78687213978037,258.8538461645053L264.57545292671216,258.9213828962287L264.3552245537062,258.9771740939242L264.2113420089793,259.0270925485453L264.0557139818154,258.99772874045993L263.88246768288536,259.00653785403864L263.2775737978807,259.015347015712L262.64037973995846,259.46754931161047L262.5464156399157,259.6026227093454L262.39078761275186,259.7582507480563L262.5464156399157,259.96086085971086L262.69029818464287,260.10474340920695L262.7960077671221,260.23981679688774L262.91052650953975,260.3161626262472L262.96044495422393,260.45123601218745L263.05440905426644,260.65384611395046L263.1982915989961,260.7859831281478L263.3627287379884,261.20588518587317L263.47724748040287,261.4026225500371L263.6416846675047,261.53182319810145L263.7973126946713,261.69626039346866L263.62406639574124,262.2541722612469L263.4596292086396,262.5096372231207L263.3627287379884,262.4039275720548L263.2482099955712,262.2982179715427L263.07496369664113,262.1778264220396L262.8635444835729,261.93704337913914L262.746089370547,261.84601568988535L262.5845885540541,261.66689658945114L262.4671334410284,261.5670597431453L262.3144417844728,261.4995230239087L262.1705592397461,261.35857689349706L261.9297762243682,261.00914787218164L261.80351195140474,260.7595557445539L261.85343039608915,260.60392766922115L261.78589367963855,260.430681369693L261.815257481951,260.23981679688774L261.58328362650786,260.35433554080026L261.51574691005726,260.5363910007507L261.43940108178117,260.69201902810056L261.3336914511924,260.8535198446268L260.9960079651605,260.77717401631844L260.64951536730314,261.1001756022078L260.5526148966492,261.2675491621007L260.51444198251124,261.4701592686365L260.3529411660181,261.6874512330103L259.33108159609696,262.9471576645537L259.29290868195903,263.09691300178L258.793724379437,263.399360069502L257.9274928366799,263.8662444565338L257.68670982129925,263.90441739550215L257.5310817941354,263.94846308026604L257.3783901375798,264.0629819029969L257.1845891962778,264.06004553025844L257.01134284923864,264.17456435857065L257.02308837978467,264.38598379404334L257.02308837978467,264.5533575048842L257.20514383864975,265.3637988131699L257.2345075928531,265.5987093865961L257.3020443093037,266.6616803272808L257.3314080635041,266.95531882127545L257.3695809776425,267.17261139534384L257.7836102919532,267.6277513229376L257.88931992254174,267.73052490845123L258.06256622146907,267.76869794596905L258.2446216803369,267.8832170666401L258.4090588674385,267.9184537290261L258.4854046957148,268.0623367232081L258.51476844991817,268.27669313338L258.65865099464486,268.4176397959543L258.7555514652961,268.5321589890893L258.81134265120045,268.65842377459563L258.87887936765105,268.8610347331155L258.87887936765105,268.99904509751093L258.97577983830183,269.1781650070849L258.9669706783643,269.31617541956285L258.9376069241639,269.45712228692776L258.793724379437,270.06201941046584L258.6380963522704,270.66398059321216L258.49421380754325,271.2806242574916L258.46485005334284,271.4920450471293L258.6204780805069,271.7475119050737L258.65865099464486,271.9882968821354L258.599923438132,272.199717888352L258.5235776098557,272.3817749452861L258.39731333689247,272.4405030280987L258.26223995210034,272.5785140893639L258.1565303215118,272.7341435704614L258.02439330733114,272.8545362050372L257.8394014778546,272.954374066365L257.61036399302316,273.05127549570443L257.9744749107556,273.8000598554983L257.7454373778123,274.357978198524L257.4547359658591,274.95700697734264L257.1464162821369,274.8248682222401L256.79111452434176,274.6574925057835L256.23320266530686,274.4225793363142L256.0423380946106,274.3256776805479L253.4994346041376,273.5710197971452L252.66256686369297,273.30967941405123L252.2309192776188,273.15992258989183L251.9607725080375,272.916200778712L251.87561751982366,272.68128825711767L251.71118033272205,272.7282707736881L251.16207763362218,273.0072293545908L251.04755889120474,272.72239792885705L250.61297493452184,271.56839146020303L250.42211036382855,271.0398395220212L250.5953566627586,270.9634931648424L250.45147411802895,270.59644344215263L250.37219191914392,270.28518546067613L250.66289337920648,270.20590274240504L250.92129461824152,270.20590274240504L251.06517716297094,270.0767013475783L251.15326852179373,269.95630918237623L251.31770566078603,269.84766258119936L251.5584886761667,269.73020683545855L251.62308902200584,269.5011681635813L251.76990788923513,269.45712228692776L251.85506287744874,269.31617541956285L251.8462537656203,269.1106279768167L251.7787170491697,268.9814267468586L251.64364366438053,268.8610347331155L251.5584886761667,268.7024696126429L251.54674319372953,268.54684094900045L251.47920647727892,268.3706575889213L251.36468773486172,268.2062197854494L251.27953274664787,268.10050977268816L251.2971510184111,267.9507539638199L251.37349684669016,267.82155288621476L251.37349684669016,267.6717971647386L251.05636800303319,267.48974114542824L250.88312170410313,267.4222042285988L250.75979384986022,267.3487945576754L250.527819946308,267.3018123976874L250.1343452743722,267.24308467632676L249.9493534930075,267.2254663556827L249.94054433306997,266.53541576925255L249.90237141893158,265.7484649122966L248.09356250514156,265.9158387554824L247.86158860158935,265.96869366485964L247.61199647438298,266.03623045621873L247.16860340587164,266.1713041447288L246.91901123055595,266.23296819286054L246.7751287339354,265.9921847202737L246.4961728044193,266.23884094574515L246.11150724431195,266.54128852345934L245.94707010531943,266.5706523911007L245.08083856256235,266.77326296133816L244.43777171531087,266.9406369310111L244.12064287165367,267.2783213184091L243.85930526201014,267.3869675821181L243.57154017255652,267.4515681175343L242.47333477435654,267.81568012563815L241.69519454231568,268.06527310418L241.52194824338562,268.1093189640553L241.06974601493926,267.1520566972012L240.80840835718413,266.5500977029275L240.5000886734647,265.8717930231755L239.94217681442979,265.81012894241474L238.453433114905,265.6662462093677L237.4991102133256,265.72791023615156L237.17317225783995,265.3960989837142L236.97937126842612,265.0202420897532L236.6534333129432,265.08777888886624L236.9235800825245,264.4094748276938L236.4713778540754,264.0864729812665L236.6827971152527,263.54030631268654L236.70922449884483,263.38174178960185L236.8824707977749,263.18794076575017L236.94119835428774,263.0146944032978L236.98818042836342,262.81208423910664L237.14380845552773,262.7504202950975L237.56664692977347,262.4274185893722L237.6929111546276,262.31289982695245L237.73989322870352,262.1778264220396L237.89258488525866,261.975216296985L237.96012160170926,261.80784272467764L238.1333679006393,261.71975140789687L238.28018681597496,261.71681503710414L241.2429923138668,261.5142049256296L240.5969891441157,260.0460158509792L239.31672828705064,260.5363910007507L239.03777235753478,260.59511855738367L238.50922430080914,259.6143682408839L238.4035146702206,258.72758190802824L237.73989322870352,257.3797836804303L235.1323894404975,258.4310076153757L235.02667985801781,258.1696698550567L234.98850689577057,257.9670596585132L234.80645148501208,257.32399245234785L234.55392293908767,256.5722789379419L233.57317265391362,255.5445450896392L233.2854076125691,255.22447927080995L233.17969798198033,255.0923419855942L232.8508236558862,254.7341030562093L232.35163935336163,254.1292075852731L232.23712061094693,254.34062738735457L232.02570139787895,254.80163993123952L231.87888248254058,255.10115116400138L231.80253665426403,255.30376162621482L231.4002528704998,256.2757043727498L231.26517943760132,256.17880377216017L231.27398859753907,256.3814141387999L230.8217863690902,256.5810880598247L230.30204742419323,256.7543345960758L229.3506608932223,257.9288867247744L229.29193333670946,258.0727693406258L229.46517968374883,258.16086069127243L230.407757054782,258.680599821121L230.23451075585194,258.80392775591525L230.1111828534997,258.8714644403634L229.44462499326482,258.88320997359466L229.2332057801966,259.08288369678166L229.27137869433477,259.3148576367204L229.09813239540472,259.344221394772L228.90726782471097,259.27668471732954L228.7428306376096,259.20033887770495L228.69584861164276,259.37358520077765L228.5607751787445,259.46754931161047L227.483124422919,259.8140419373113L226.89584880968096,259.8727695450498L226.68442959661252,259.27668471732954L226.47301033543522,259.3236667497179L225.96208055047373,259.4881039561418L225.78002509160865,259.5350860348928L225.77121597977998,259.7376961043495L225.3659957773002,259.86396038467115L224.92260270878887,259.9314971042858L224.58785559336593,260.01665204769245L224.53793714868152,260.210452994063L224.4821459627774,260.36314470082306L224.45278220857676,260.5275818407875L224.15327163668303,260.63329147156236L223.98883444958165,260.2280712661426L223.82733368120034,260.3337808982123L223.46028639285646,260.59511855738367L223.2106942656501,260.7008281880395L223.0580026090945,260.84471068468315L222.80547406317032,261.7256241494893L222.555881935961,261.7491151640063L222.32684445112955,261.69626039346866L222.35327183472145,261.52301403780837L222.45898146531022,261.00914787218164L222.53826366419776,260.84471068468315L222.72031912306284,259.83459658082313L222.8935654219929,259.80523282498L222.57643657833592,259.1328021502315L222.38263563703367,258.4779896575109L222.31509892058307,258.2195883210465L222.2886715369914,258.0463418964183L222.5088998618853,257.7468311648794L222.8465833479172,256.88940811742424L222.95229297850574,256.63100656068286L223.01982969495634,256.4871238503287L223.66289649409873,255.63850935367006L223.85669743540097,255.3977259059385L223.75979696474997,254.99544130795124L223.7010694082369,254.70473923193475L223.32521300806707,253.7357317126092L223.240058019853,253.56248484021077L222.68214620892445,252.66688606322526L222.44136319354652,252.29102797430278L222.31509892058307,252.1559539446032L222.2593077346787,252.00326153418075L222.48834521951358,251.9445336806053L222.67333704898715,251.85937825455088L222.76730114902944,251.66557628505382L222.93173833613105,251.5510569140454L223.0580026090945,251.42479192962247L223.20188510571234,251.3572548246158L223.35457676226747,251.21337148137013L223.54837775168153,251.10766121224768L223.7010694082369,250.98139615800994L223.80677899071657,250.86687668929292L223.9124886213051,250.71418403779074L223.98002533775593,250.54093657269638L223.98883444958165,250.38530746362014L224.0475620060945,250.18269590431726L224.12390783437354,250.00063908668184L224.1826353908864,249.8185822703002L224.19144455082392,249.62477973220464L224.2119991931961,249.44272281658257L224.1826353908864,249.2694749917405L224.08573492023515,248.8759967940258L224.0005799801279,248.66457558716368L223.38394056458014,248.4795819548813L223.46028639285646,248.1536406881336L223.5102048375436,248.00094742009682L223.46028639285646,247.86587257719336L223.4044952069546,247.67206944161615L223.1930759938864,247.60453201024177L222.90237453382156,247.5281853099025L222.7115099631278,247.46945707567988L222.6234186524116,247.27859021257507L222.48834521951358,246.93209337485615L222.4119993912343,246.78820900570665L222.23875309230425,246.6707523751893L222.0743159052024,246.5356772136883L221.96860632272296,246.4299661688515L221.49878582251063,245.68117910993598L221.03777443412673,245.49912094898622L220.82341885045003,245.35229976736042L220.87333724702512,245.12325865977928L221.03777443412673,244.74739608018882L221.86289669213443,244.35391462045084L221.7689325920917,244.99699234365667L221.95979716278794,244.8912809771173L222.0743159052024,244.78556963537687L222.20938928999453,244.6328753961982L222.36501736526748,244.47724463776532L222.5000907500596,244.37153320322676L222.4795361076849,244.18947449818086L222.48834521951358,243.95749640175728L222.47072694774715,243.54345922162184L222.47072694774715,243.34378155943435L222.43255403360922,242.89157008804682L222.37382647709592,242.6977650391359L222.19177106633742,242.5039598529166L221.74837794971995,242.20737910249343L221.4694220202009,242.04293816526956L221.1904660906821,241.8608784768387L221.01721979175204,241.76397572143048L220.89095551879132,241.6788187060442L220.9115101611635,241.43802990805443L220.94087396347572,241.21485962887505L220.97904687761388,240.70685313423022L221.00841067992633,240.5336021715482L221.08475650820242,240.3779699300816L221.14348406471527,240.2252740756572L221.49878582251063,239.4353656296706L221.64266831913096,239.14759187557001L221.7395687897822,238.92735667582545L221.83353288982448,238.68656603714362L221.92162424864728,238.5133141491592L222.24756225224178,237.79975031053087L222.32684445112955,237.67641811376674L222.37382647709592,237.5295940739272L222.65278240661496,236.92467813049618L222.7291282348915,236.78959967515652L222.91118369375886,236.35793549819277L223.16371219157395,235.82642982010202L223.240058019853,235.63555739289552L223.86550659533873,234.22897059440928L223.94185242361505,234.04690665657043L224.08573492023515,233.65341326024318L224.0681166484694,233.48896813305228L223.94185242361505,233.0279338301734L223.83614279302606,232.60507370563073L223.78916076705946,232.37308761746175L223.60416893758588,231.641889732431L223.39274967640858,230.7168774359813L223.36632229281372,230.57298631489908L223.36632229281372,230.34393500817302L223.5102048375436,230.15893186171323L223.85669743540097,229.74487671851304L224.65539230981653,229.52463437050335L226.50237413774516,229.05478328650182L226.66387495423805,229.00486153842522L226.8195029814019,228.86977916281222L227.05147683684504,228.64072625757493L227.35686014995576,228.32063912264869L228.1085729502954,227.57180969550092L228.6077572528202,227.06084234597097L229.1186870377794,226.57043001376888L229.42700676960771,226.26208642480483L229.65898062505084,225.91556644697076L230.39894789484447,224.69393219360563L230.51346663726167,224.52948088131052L231.07137849629657,223.61618645766873L231.3209706235059,223.19330924192528L231.59992655302176,222.76162114659968L231.90824628485302,222.25064220729632L232.35163935336163,221.54877812738624L232.5718677263676,221.16407334961025L232.7069411111595,220.7881778383692L232.8243962241852,220.5091924011764L233.10335215370128,220.3065606098575L233.30302588433256,220.18028270945075L233.50563598557483,220.133295591096L233.429290157296,220.36529447578738L233.39111719504876,220.576736299291L233.32358052670702,220.77643107366615L233.29421672439753,221.02898599435827L233.23842553849317,221.19050345542416L233.23842553849317,221.3461474879034L233.18850714191808,221.4812346205165L233.23842553849317,221.6251316578494L233.3999263549863,221.6544984145458L233.73760984101546,221.63394170457127L234.54511382725923,221.63394170457127L234.7770876827026,221.64275170277682L235.25865371346117,221.63394170457127L235.4994367288391,221.64275170277682L239.73075760136135,221.64275170277682L239.91574943083492,221.6544984145458L241.357511056284,221.6544984145458L241.59829407166467,221.64275170277682L241.8390770870426,221.6544984145458L242.07105094248573,221.6544984145458L242.24429728952487,221.64275170277682L242.4175435884522,221.64275170277682L242.4645256144188,221.46948789825316L242.60840815914844,221.49004462565856L242.74348154393783,221.3755142387974L242.93728248524258,221.337337428083L243.11933794410766,221.2874138764725L243.5216217759787,221.26979379917623L243.74478647148408,221.24923704830843L244.27333457631858,221.41369104195903L245.14837523090364,221.02898599435827L245.32162152983415,220.9614422569311L245.46550407456084,220.8557215890271L245.76501464645162,220.40347148121512L246.0527796877991,219.9218533160679L246.34348114786417,219.49896799615522L246.4961728044193,219.41086680409052L246.66941910334663,219.35506933816913L247.43875017545292,219.0643348810102L247.61199647438298,219.0085373094056L248.11118077690503,218.9292460066831L248.45767337476514,219.1318793046771L248.93923940552372,219.43142375588621L249.26811373161786,219.62230966164898L249.36207783166014,219.77795493912805L249.36207783166014,220.0451946522255L249.37382336220662,220.3065606098575L249.66158840355092,220.91151860748118Z\" stroke=\"#000\" fill=\"#FFF\" strokeWidth=\"0.5\"></path>\r\n        <path id=\"Nakuru\" ref={(item) => countyRefs.current[31] = item} d=\"M222.42080855117183,257.873095509251L222.2886715369914,258.0463418964183L222.31509892058307,258.2195883210465L222.38263563703367,258.4779896575109L222.57643657833592,259.1328021502315L222.8935654219929,259.80523282498L222.72031912306284,259.83459658082313L222.53826366419776,260.84471068468315L222.45898146531022,261.00914787218164L222.4119993912343,261.26461279143933L222.35327183472145,261.52301403780837L222.31509892058307,261.7256241494893L222.32684445112955,261.8695067047957L222.27692600644514,262.0133892150672L222.10367970751508,262.3745638126035L222.20938928999453,262.48908257656575L222.11542518995202,262.961839570441L221.93043340858503,263.19674988106107L221.8159146661676,263.64014320727694L222.00677923686385,263.63427046281583L222.04788852161073,264.80001351294055L221.9010696062751,265.6956100107184L221.8159146661676,266.4267695325081L220.90270104933734,266.26820480676906L220.94087396347572,265.886474949834L220.5650175633059,265.8248108684646L220.50629000679282,266.1947952034881L220.25669787958645,266.49724277133737L220.15098824899792,266.5941434568254L219.61363103233498,267.31062153449676L219.88084147941663,268.6877876984759L219.9190143935548,268.9814267468586L219.97774195006787,269.1488010677116L220.0658332607809,269.6098147202274L220.12162444668547,269.8124258461289L220.14217908906016,269.9798003269607L220.15098824899792,270.293994625352L220.18916116313585,270.5582702849853L220.4769262044806,270.93412916120076L220.72945475040729,270.90476520682284L220.94087396347572,271.183723036932L221.18165697885365,271.5507730527489L221.38133066137584,271.83854036614576L221.6896503932071,272.66954261649033L221.72782330734503,273.0365934483188L220.4681170926549,273.60332032081203L220.1979702749643,273.7912505967721L220.22733407727424,274.7103479972141L220.23907960782026,274.89240582443284L220.37121662200093,275.541354314523L220.43875329034222,275.8261871703299L220.70890010803282,277.1123417643284L220.7969914187488,277.4529677541941L221.00841067992633,277.6262172701875L221.05539270589293,277.4470949050822L221.13173853416924,277.31789190701767L221.24919364719517,277.30320974061647L221.36371238961215,277.3120190115357L221.59568629316436,277.37074768109704L221.75718706154566,277.4382855834504L221.89226049444665,277.4001119705951L222.09487054757733,277.2268625406249L222.60580038064813,277.25622686901806L222.77904667957569,277.9521615075529L223.21950337747853,279.64061513535773L224.0475620060945,278.7215082080475L224.92260270878887,278.5012752551443L225.09584900771938,279.32347901018505L225.47170540788898,279.37633498178053L226.0002534646144,279.4820470417644L226.4348374212973,279.2941145417114L227.30987812398894,279.08856346548276L227.3686056805018,279.3381611971019L227.42439686640614,279.51728440121036L227.49193358285675,279.6758525086554L227.58002489357023,279.8285477967018L227.77088946426375,279.9783067011923L228.11738211023317,280.21028632219986L228.2054734690555,280.3688547073457L228.24364638319662,280.53623254442374L228.21428258088395,280.7975770301776L228.23483722325886,281.0119383488238L228.31118305153518,281.20868108030635L228.493238510403,281.2967748779959L228.590138981054,281.82533801194745L228.64593016695835,282.04850935313846L228.66648480933304,282.21588790249575L228.64593016695835,282.35390192112897L228.63712105512968,282.56239123396807L228.5402205363696,282.76794420726526L228.5607751787445,282.9470690127979L228.63712105512968,283.0968291909188L228.76338527998405,283.18785992624623L228.80155819412244,283.3757944095959L228.87790402240148,283.5196818360149L228.90726782471097,283.6576963321666L228.9248860964774,283.91904312475947L229.00416829536198,284.14515231017964L229.08932328357878,284.33308733856165L229.05115036943812,284.68840230647146L229.07170501181258,284.83816327917145L229.24495131074264,285.02609871626186L229.33010625084762,285.1993517867827L229.3506608932223,285.3432400287925L229.28312422488102,285.48712828972265L229.33891541078538,285.71911162891735L229.44462499326482,285.9099840956993L229.368279164986,286.0832376663055L229.2625695825061,286.1948247745253L229.2332057801966,286.4209356143021L229.27137869433477,286.5853799829749L229.368279164986,286.70284028197136L229.38883385546956,286.87315781374025L229.33891541078538,287.0610945196388L229.50335259788676,287.3429998081556L229.43581588143616,287.4692699888801L229.368279164986,287.7012548444766L229.40645207912667,287.877446044172L229.38883385546956,288.05070079188505L229.3506608932223,288.2680034955459L229.47398879557454,288.37959145369297L230.23451075585194,288.33554358780106L230.8687683950568,288.2445113122462L231.34152526587764,288.14760603512855L231.66746326947236,287.97435122716064L231.7467454683599,288.6967364222189L231.7731728519518,289.02269138424714L231.86126421077734,289.88896993099826L231.87888248254058,290.13563959460174L232.2253750804009,290.6201700004268L232.46615809577884,290.90501556430877L233.50563598557483,290.80223617187954L234.0077566105963,290.7611244458632L234.3248854542535,290.678901013853L234.54511382725923,290.35588058341875L234.62145965553827,290.61136032312186L234.68018721205135,290.7611244458632L234.7947059544656,290.8316017220501L234.93858849919548,290.8697769135082L234.82406975677827,291.02835083285595L234.8328788686067,291.2016076976936L235.09421652635933,291.38661084279306L235.19111699701034,291.4923270288683L235.2204807993228,291.65971105865793L235.27627198522418,291.8270952024542L235.02667985801781,292.17361008031145L235.48769119829262,293.069265328039L235.88410224083736,293.80928466193365L236.1248852562178,294.2762028643639L235.37317245587815,294.73431224710515L235.00612516753404,294.9457476368135L235.32619038180246,295.5271960359663L235.4113453700163,295.70632941280684L235.48769119829262,295.9030826898798L235.73728332550195,296.82224579611244L235.78720177018613,296.9573307958522L235.96044806911618,297.6151373048237L236.06615769970495,298.06738049252755L236.1894855539481,298.48144818922265L236.24821315857002,298.7751137570308L236.37447738342416,299.21854952769695L236.41265029756255,299.4064961264884L236.75033378359421,300.7573676530792L236.86485252601142,301.1038970796477L236.9235800825245,301.3270858808144L236.52716903997975,301.87918565560835L236.55653284228924,302.24627413827244L236.5858965964926,302.4724010237655L236.62406955873985,302.68384458866956L236.4978052857764,303.1918975743989L236.26876780094472,304.02886652599113L236.13369436804396,304.44294738391L236.6152603988021,305.05379189720463L236.6152603988021,305.3239737878316L236.8824707977749,305.3445311199574L237.03809887304783,305.39739286315796L237.22015428380678,305.4120766916453L237.36403682853347,305.4737487274024L237.4991102133256,305.58828258814157L237.36403682853347,305.6617017777505L237.15261761546503,305.7909196269651L236.9705621566004,305.92013757516935L237.10563554138935,306.06403945970055L237.32586391439554,306.243182856565L237.54902865800977,306.1844473088811L237.7868752546699,306.3107287402898L237.9043304158049,306.4928091770348L238.1069404689356,306.8980856932111L238.16273165483994,307.05667239786874L238.23026837129055,307.18589133073647L238.18328629721464,307.72038886713966L238.34478711370775,308.0728058160543L238.47105138666848,308.1491629178029L238.64429768559853,308.16384699110324L238.70302524211138,308.53975945748164L238.65310679742697,308.7394633343795L238.6354885737701,308.9479779219267L238.57676096914793,309.23578723378296L238.57676096914793,309.4296182876134L238.50922430080914,309.5911443817297L238.25963217360004,310.7188947702343L238.239077483119,310.9685281282299L238.32716884194156,311.18879322334044L238.36534175607972,311.391437393351L238.39470555839216,311.799663381817L238.39470555839216,311.9494444346799L238.16273165483994,312.34886134802787L237.76925698290688,313.08602327837L237.53728312746352,313.4854432486714L237.452128187359,313.6528475451882L237.31705475445779,313.764450517897L237.19079052960342,313.6969013221056L236.7885066977326,314.2255479438474L236.17186728218462,314.9333500271059L236.0074301431921,315.45906428248077L235.8459293266992,316.093448391865L235.76664712781144,316.3107843298822L235.57578255711792,316.14631387419075L235.09421652635933,315.77919292877186L234.28671254011533,315.14481025906076L233.67888228450238,314.7013315316741L232.39862142743755,314.05814297722617L231.68801791184706,313.7115859334581L231.0537602245331,313.4413895365144L230.36958414064384,313.1330137832676L227.01036755209816,311.5559024316351L226.10596309520315,311.0801290657381L225.97382608101975,310.886295931435L225.6155879526159,310.21375554640167L224.98133026530218,309.077198376866L224.74054724992152,308.6014326676571L224.62602850750682,308.39291853587645L224.5085733944809,308.1432893081071L224.2589812672718,307.71157847613296L224.09748045078163,307.3944039007976L223.98002533775593,307.1917649057082L223.83614279302606,306.91276960527875L223.69226024829936,306.6895737537136L223.31640384812954,306.0170510894278L223.1431575491995,305.67932238992273L222.9405474479595,305.3151634758979L222.74087376543753,304.90108052997437L222.66159156654976,304.77480014809123L222.39438111947084,304.82766171553743L222.1800255357914,304.88052325107697L221.96860632272296,304.9598156810609L221.26681191896137,305.1947562939613L220.4504988208887,305.4825589994319L219.87203231947888,305.67051205954954L219.75751357706167,305.5207369464015L219.6518039464729,305.35921494388754L219.4110209792043,304.9451318914057L219.2553929039284,304.78067363874544L218.94707322020918,304.74249585682776L218.9764369744123,304.60740531530854L219.05278285079794,304.4928721095024L219.02635541909672,304.3519082379494L218.85310912016644,304.0494237041481L218.7738269212789,303.8849662981219L218.66811729069013,303.70288868122975L218.4684435600591,303.3181768171259L218.1689329881683,302.79837667273694L218.09258715988926,302.6251102430576L218.00449584917578,302.3754894739881L217.88116794682082,301.9408564602974L217.77545836434138,301.6471860634761L217.64919409138065,301.2624785917618L217.5904665348678,301.0422265517652L217.68736700551858,300.8689618156831L218.8824728743698,299.5885695804984L219.0146098885507,299.42411613233304L219.13206504968525,298.5548645408887L218.94707322020918,298.3463621893864L218.82374531785695,298.1701631529951L218.93826406027142,298.0262674428786L219.05278285079794,297.8618152790193L219.16142880388588,297.5769609786832L218.87072739193286,297.3948893442615L218.73565400714074,297.2598040616281L218.5624076601016,297.16876836356727L218.40971600354624,297.07773270523967L218.22766059279024,297.01019017978626L218.11020543165546,296.8281190405225L218.00449584917578,296.716527136018L217.8048221185445,296.64017481934707L217.69617611734725,296.543266153085L217.63157581961445,296.3788151594701L217.64919409138065,296.23492063810886L217.61102117723976,296.06753327006265L217.5434844607919,295.9236390055444L217.4377748783122,295.79736448464246L217.37023816186183,295.6387873215282L217.33206524772368,295.38330208130463L217.33206524772368,295.1953591205575L217.15881894879362,295.05733862734667L217.00612729223803,294.9751136536582L216.84169010513642,295.0514653829974L216.63908000389688,295.00741631997226L214.96534447489557,293.4980064203085L214.78328901603072,293.26307967781497L214.72456145951764,292.9870411184398L214.70400681714295,292.8137829807283L214.65702479117635,291.7947929776975L214.63647014880144,291.68026699492464L214.61885187703842,291.5158195047621L214.45441468993658,291.6127260335674L214.22537720510218,291.7331251452753L214.01102157331616,291.82415864513666L213.63810154375483,292.0267816639718L213.33859097186405,292.17067351881076L212.77187000099775,292.46726718095135L212.5487052573833,292.60234955063135L212.08769391710848,292.9165632198424L211.63549168866257,293.21315781221045L211.35653575914353,293.38347961996436L211.15392565790398,293.22784068445077L211.01885227311186,293.098631103531L210.7222780718298,292.88719741893414L210.57839557521197,292.7315588600353L209.7885098607312,293.19553831862373L208.5376127578695,294.16167567591873L208.25865682835047,294.4083496959047L208.1235834435613,294.49938423340194L207.54511694214898,294.9310646057925L207.28671565500485,295.0426555889363L206.75816759827967,294.7724880671945L206.63190337342826,294.61978477781156L206.64071248525397,294.42596928249213L206.60253957111559,294.26739310079006L206.48802082869838,294.10000722484415L206.26779245569537,293.84452374372967L206.1620828732157,293.6859479662813L205.69813511422058,293.12799693080416L204.8054761397625,291.9915429015366L204.09193625356102,292.0532107992924L204.00678131345603,291.4864539222732L204.53532937018122,291.41891301399073L205.9095543272888,291.3366893662514L206.49682994052682,291.841778037672L206.79634051242056,292.1119421519314L207.27790654317914,292.52012550298235L207.58622622689836,292.7961635170194L207.8651821564174,292.4790134897646L208.28802063066314,292.02971827184086L209.02798790045676,291.2074807975533L209.07496997453245,291.0136680939802L208.9516420721775,290.79342653636303L208.43190312728052,289.7215870694357L208.1235834435613,289.11078734600994L208.06485588704845,288.97570684142545L207.85343667398024,288.5704657331777L207.78589995752964,288.4265758934532L207.62439914103675,288.1182407830066L207.45996200204422,287.9009381964549L207.39242528559362,287.6043497556955L207.2191789866663,287.4633969716392L207.07529644193664,287.49863517311707L206.94022305714748,287.5221272938264L206.77578587004587,287.43990480767394L206.6700762875662,287.2637139282904L206.31477452977106,287.2137931772133L205.9095543272888,287.175618505223L205.72749886842394,287.175618505223L205.38981538239227,287.04053894099786L205.27529663997484,286.9113324457625L204.9199948821797,286.3299039486949L204.69976655728306,286.10379317804905L204.46779265373084,285.9393491234802L204.23581879829044,285.82482556975884L203.419505700218,285.39609695377834L202.9085758671497,285.06427311418196L202.78231164229533,284.9438769667382L202.63842909756863,284.8704646879552L202.18622686911954,284.68840230647146L202.04234432439262,284.6414184629025L201.87790718540032,284.5445143645874L201.91901647014697,284.3947535300699L202.1979723996658,283.537300709797L202.10988104084322,283.16730460298515L201.85147975369932,283.25539888868923L201.62831501008463,283.51380884622324L201.42570495695122,283.57841140286916L201.25245860991458,283.61071268589546L201.06159403921856,283.60190322288975L201.09976695335945,283.16730460298515L201.03223028501793,282.9793702353328L200.94707529680386,282.8178642012075L200.5888371683975,282.72977007648865L200.4449546236708,282.7150877085184L200.24234457054013,282.753261837673L200.15718958232333,282.90889486213143L200.08084375404724,283.278890686053L200.09846202581025,283.5108723754208L199.77252407032756,284.3624522176772L199.64625979736434,284.6590373974115L199.54055016677535,284.88221062061734L199.2704033971945,285.51649327669566L199.05898418412607,286.6118085293125L198.70368242633094,286.54426889423536L197.92554219428735,286.37688805085503L197.76110505529482,286.3299039486949L197.51151287997936,286.232999318582L197.27953902453646,286.38276104610554L197.0299468973301,286.6118085293125L196.8948734644316,286.785062557793L196.8273367960901,286.90545943992976L196.74218180787602,287.02585637197603L196.60710842308436,287.160935977429L196.44267123598252,287.2578409152824L196.2106973805394,287.3547458859026L196.04919656404923,287.4105396776115L195.99046900753638,287.56617503141655L196.05800572398425,287.7041913555502L196.09617863812514,287.8480808205072L196.12554244043463,288.2004634679258L196.07856036635872,288.45594113029017L195.98165989570793,288.73491130218275L195.85539562274448,288.9316588790712L195.74968604026458,289.0520566855821L195.66453105205073,289.21062954160925L195.47953922257443,289.3838851371172L195.3268475660193,289.49547355641437L195.16241037891746,289.7509524481457L195.11542835295086,289.9565103839181L195.04789163650025,290.07690870562146L194.9598002776779,290.3940557034849L194.83647242343204,290.71707618227L194.8452815352607,290.8316017220501L194.80710862112232,291.5158195047621L194.71020815047132,291.6303454109117L194.64267148213003,291.8006660916572L194.61330767981735,292.0120988657143L194.50759804922882,292.1853563747865L194.40188846674937,292.43496487076936L194.26681508195998,292.4202819995706L194.08475962309217,292.55830095702834L194.0172229066443,292.6552079025607L193.92032243599078,292.83727563311726L193.7881854218101,293.36292353726503L193.66192114884643,293.5038795762742L193.5092294922913,293.5596747097213L193.33598319336375,293.6712650169746L193.23027356277498,293.7681724227071L193.17154600626213,293.91206534031795L193.10400933792084,294.2057245729098L192.97774506495716,294.3026322533641L192.90139923668085,294.48470123168386L192.7281529377508,294.4553352792299L192.41983320592226,294.01778260126457L192.30531446350506,293.8004749163875L191.938267223273,293.550864973705L191.56534719371166,293.33355768049415L191.20710906530508,293.1133140167086L191.12195407709123,292.88719741893414L190.79601612160582,292.5259986345567L190.6991156509548,292.4055991773831L190.6227698226785,292.2088489173369L190.6697518486451,292.02971827184086L190.53467846385297,291.7272520329327L190.4671417474026,291.31907000983404L190.42015972143577,291.0048584029579L190.3996050790638,290.5350100237731L190.21754962019622,289.7920640608462L190.09128534723277,289.11078734600994L190.01493951895623,288.96983379219074L189.53337353630695,288.15641563061746L189.4775823504026,287.94498599331837L189.27497224916283,287.72474703013086L189.18688089033753,287.56617503141655L188.802215378342,286.9348245665101L188.505641177057,286.429745156646L188.2354944074757,285.95990462538623L188.15914857919938,285.7866510775165L187.96534758978555,285.501810782858L187.68639166026924,285.0349081700848L187.27236234595853,284.3859440940344L186.47366751965205,283.0821468553389L186.3679578890633,282.69746887739717L186.206457120682,282.6475488527422L185.8100460781377,281.9985894206054L185.40776224626666,281.2057446287601L185.11706083431068,280.8592425946001L184.85865954716678,280.42171086617344L184.67366771769048,280.0517179533676L184.52978517296333,279.896086138044L184.1069467468269,279.20895763351473L183.95425509027132,278.87126670651276L183.7898179031697,278.6833344835378L183.60776244430213,278.37500838001165L183.3464248346586,277.96390721909506L183.19373312999414,277.65851805025386L182.9823139169257,277.35606551300066L182.6152666766934,276.75409745508097L182.51836615793331,276.6102125043545L181.85474471641623,275.50024443886747L181.74903513393633,275.3358049208636L182.13370064593482,275.2007296602832L182.42440205789103,275.08914576511546L182.6534395908318,275.01867172805765L182.99112307686346,274.8835965484822L183.47268905951273,274.7103479972141L183.62538071606832,274.6428104177217L183.8779092619925,274.51654460170454L184.48280314699673,274.1465564457283L184.7823137188875,274.11425589177145L185.08769703199846,274.04084557492666L185.29911624506667,274.00854507507205L185.61918145933487,273.8969614216411L185.78068227582503,273.8587880740117L185.96567410530133,273.7853777897706L186.16534783593283,273.7295859818602L186.35914877723758,273.7971234038356L187.06975229282784,273.7853777897706L187.16665276347908,273.6473664573072L187.2929170364423,273.2949973604579L188.72586955006273,273.9351347717939L189.3718727198136,274.3873423598838L189.35131807743915,274.58995498093304L189.22505380447842,275.40334258832763L189.80352030588801,275.6441290661988L189.84169322002617,275.41802469739173L189.98557576475287,274.8454231332918L190.08247623540706,274.7397121773764L190.30270460841007,274.5282902309335L190.34381389315945,274.3168684137063L190.39079591912628,274.12893796589805L190.52586935202453,274.18472981256144L190.66094273681642,274.3021863346874L190.79601612160582,274.4636891289377L190.85180730750994,274.69566590772877L190.9575169380987,274.9070879192633L191.2482183500549,274.70153877234276L191.5741563055401,274.7573306766117L191.65931129375417,274.94526133883903L192.20841399285428,274.6428104177217L192.20841399285428,274.35504179209573L192.22015952340053,274.08489179276364L192.37285117995566,273.97918093339035L192.50792456474505,273.9116434901949L192.67236175184644,273.85291521821415L192.89259007674355,273.84410600679917L193.11281844974928,273.58570185751415L193.20090980857208,273.3155522163462L193.2772556368509,273.0365934483188L193.29781027922286,272.8633454500949L193.41232902164006,272.4111390100867L193.47986573809067,272.06464335023986L193.42994729340626,271.8238583461693L193.37415610750213,271.4391898318137L193.47986573809067,271.2600694170594L193.37415610750213,271.01634829735127L193.44169282395228,270.6845353690395L193.6824758393302,270.6551713762491L193.79699458174787,270.1354292911205L194.31673347853507,269.8564717892545L193.8821495218524,269.6744153547479L194.08475962309217,268.7024696126429L193.92032243599078,268.6055687427439L193.75882166760948,268.64961462647267L193.59438448050787,268.62905985161757L193.45931109571598,268.69072408129045L193.2772556368509,268.65842377459563L193.20090980857208,268.46462205332733L193.1627368944337,268.2443928402846L193.00710886726984,268.10050977268816L192.77807133432634,268.0182909134372L192.5167336765735,268.03297286585695L192.35229653758097,268.0917006295026L192.22015952340053,268.1151917262714L192.02635853398647,268.0564639612943L191.83255759268422,268.0623367232081L191.6886750479548,268.1093189640553L191.5359833913992,268.18272868659557L191.40091000661005,268.32073895427834L191.23647281950844,268.39414869215994L190.90172575219435,268.0564639612943L190.8606164193386,267.8832170666401L190.75490683685916,267.7334612885033L190.78427059105934,267.5660872051005L190.7666523192961,267.3722856864969L190.71673392272078,267.19610247249835L190.59340602036582,267.0522195901186L190.60221518030357,266.8642909120213L190.64919720627017,266.65580752442213L190.8811710617133,266.68517139466206L191.2482183500549,266.49724277133737L191.29520037602128,266.32105972932635L191.30400953595904,266.10376729886553L191.46844672306065,265.9921847202737L191.82374848085578,265.72791023615156L191.73859349264194,265.4430811254554L191.38035536423513,265.16999756252056L191.51542874902725,265.01730571560904L191.48606499482412,264.78533159592536L191.67986593612864,264.6884310234701L191.85311223505641,264.6267669860026L191.95882186564495,264.52986642146675L192.03516769392422,264.37130188010616L192.15262280694992,264.19218264407283L192.41102409409382,263.93965396249155L192.50792456474505,263.7898985803859L192.6312524671,263.70180716922715L193.01591797909555,263.5784792467766L193.18035516619716,263.44340579378854L193.37415610750213,263.3318233705551L193.48867484991933,263.2407956023188L193.57676620874167,263.37586904569315L193.9320679665368,263.15564058027593L193.66192114884643,263.6871252596465L193.3536014651272,264.25091024739487L193.2772556368509,264.51518455460456L193.64136650647447,264.4241567419032L193.8821495218524,264.34781084688524L194.9891640799874,264.34193805254023L195.056700796438,264.8381864688493L194.97154580822394,265.23166161845114L195.20058329305584,266.00686664814157L195.43255719660783,266.1713041447288L195.71151307801733,266.48256083825476L195.81722270860632,266.69104414954865L196.17252446640146,267.1226928158394L196.95360106905355,268.32661171771673L196.61591758302166,269.10181882442646L196.63647222539657,270.20590274240504L196.5953629406472,270.4143868410873L196.6746451395345,270.6169982161711L197.88736928014941,270.33804054642457L198.9826383558468,270.10606531881695L199.31151268194094,269.5540232473827L199.61689599505166,269.0225362162054L199.8694245409788,268.6055687427439L199.8694245409788,266.1566222151642L200.1278257800136,266.10376729886553L200.27170832474053,265.7631468377479L200.5124913401212,265.5458544901262L200.66811936728527,265.53998173999906L200.80025638146594,265.6838645093555L201.05278492739262,266.0274213281649L201.1584945098723,266.18892245079L201.302377054599,266.38859653771533L201.74577017121965,265.95401173737827L202.1010718809057,265.4548266731314L202.5914470716018,264.75596776224353L203.11118596838946,263.93965396249155L203.47529688612235,263.3905509535944L204.0449542275942,262.4802734148659L204.13010916770168,262.58598306779527L204.23581879829044,262.69756546613144L204.3708921830796,262.7974023338379L204.47660181366837,262.9148574814409L204.8700764856046,263.2554775095453L205.14022325518545,263.11159490832875L205.2841057999126,263.3523780220757L205.37219715873493,263.5432426848132L205.65996220008242,264.10702763887L205.8420176589475,264.48582072498897L206.0270094403147,264.6884310234701L206.1885102568076,264.5885940343129L206.3735020862839,264.51224813313706L206.5085754710733,264.3272561870177L206.5085754710733,264.1686916128061L206.6230942134905,264.0688546965948L206.7875314005919,264.0071907253704L206.9020501430091,263.87505357403904L206.98720508311408,263.6078430166928L207.18981518435385,263.48157872652774L207.37187064322165,263.38467816155884L207.48932575624758,263.28484127610545L207.7095541292506,262.7504202950975L207.8240728716678,262.54781014528487L208.01787381297254,262.3305181016114L208.07660136948562,262.1925083252112L208.05604672711092,262.03394390777555L208.1617563576997,261.93117063736975L208.28802063066314,261.7549879537277L208.50824895555706,261.4907139117507L208.566976560179,261.3556404747032L208.63451322852052,261.14715762862716L208.69030441442487,260.89756550003506L208.71085905679956,260.69201902810056L208.80775952745057,260.51877272893125L208.86355071335493,260.35433554080026L208.90172362749308,260.1605345964723L208.8841053557269,259.96967001999485L208.81656868738833,259.83459658082313L208.71085905679956,259.69071407512104L208.5845947838361,259.6231773534433L208.26746598828822,259.3148576367204L207.99731917059808,259.0270925485453L207.42178908790606,258.36347087450656L206.98720508311408,257.8907137904934L206.60253957111559,257.438511279855L206.84332258649624,256.80425304421647L207.0929147137026,256.1876128960294L207.53630783032327,256.35205029950924L207.93271887286528,256.5164876873688L208.06485588704845,256.5928336037101L208.10596517179533,256.77488925983783L208.238102185976,257.0744001189848L208.2292930741503,257.25645568296466L208.24984771652203,257.5442209839227L208.2116748023841,257.7468311648794L208.25865682835047,257.9200776083463L208.70204994497112,258.0169781280276L209.4625718571392,257.94944137776673L209.89421944321066,257.8995229551271L209.99992907379965,258.0727693406258L210.12619334676288,258.58369932209604L210.18198448455814,258.9008282493236L210.23190292924255,259.08288369678166L210.30824875752182,259.27668471732954L210.5578408847282,259.4117581194846L211.05702518725002,259.5761953234464L211.40351778511035,259.6995231875808L211.71183751693866,259.78761455218097L212.01134808883216,259.85515127239404L212.11705767131184,260.0283975786378L212.21395819007216,260.15172543633616L212.34903157486133,260.35433554080026L212.4929140714819,260.51877272893125L212.63679661620858,260.6421005833974L212.95392545986556,260.74781021400753L213.3973185764862,260.9592294273027L213.84952080493213,261.1089847141099L214.1842678722462,261.23524898862644L214.45441468993658,261.370322376234L214.68638854537699,261.1589031593044L214.94478983252088,260.9592294273027L215.18557284790154,260.69201902810056L215.41754670334467,260.5275818407875L215.27366415861502,259.40294900662417L215.1973183303387,258.8920190874153L215.0622449455468,257.8525408556685L215.74348465882736,257.9200776083463L216.11934105899718,257.94944137776673L216.1575139731383,257.45906593689256L216.18687777544778,257.20653724592245L216.33956943200337,256.1024578375401L216.49519745916723,255.283206943696L216.55392506378917,255.07178729989974L216.6860620779728,254.70473923193475L216.72717136271922,254.49331944581928L216.84169010513642,253.61827621385424L216.8798630192748,253.37749236706267L216.97676348992582,252.60815825291775L217.0237455640015,252.3497558048623L217.08247312051435,251.8769966175943L217.88116794682082,251.6450215310163L219.32292962037877,251.24273541044698L219.5343488334472,251.04893329488252L219.51673056168374,250.89624067945306L219.51673056168374,250.71418403779074L219.46681216510592,250.54974574478527L219.47855764754286,250.38530746362014L219.38165717689208,250.27078790402823L219.199601718027,250.18269590431726L218.99699166489359,250.14452270911866L218.68867193306505,249.9536567024911L218.62113526472353,249.80977304114614L218.8149362060285,249.7128718017285L219.66942221823933,249.50145086388196L219.82505029351228,249.60716131693846L220.09226069248484,249.80977304114614L220.32423454792524,249.9712751089547L221.2873665613331,250.68482008874105L221.44005826599778,250.89624067945306L221.651477479066,251.21337148137013L222.04788852161073,251.83001434740706L222.2593077346787,252.00326153418075L222.31509892058307,252.14714474189415L222.45017230537246,252.29102797430278L223.2106942656501,253.50375708289985L223.29878557636584,253.67700396483468L223.48965019516868,254.14682590759185L223.7010694082369,254.70473923193475L223.75979696474997,254.99544130795124L223.85669743540097,255.3977259059385L223.66289649409873,255.63850935367006L223.01982969495634,256.4871238503287L222.95229297850574,256.63100656068286L222.8465833479172,256.88940811742424L222.5088998618853,257.7556403299999Z\" stroke=\"#000\" fill=\"#FFF\" strokeWidth=\"0.5\"></path>\r\n        <path id=\"Narok\" ref={(item) => countyRefs.current[32] = item} d=\"M178.6717108455182,307.62347435186604L178.74805667379746,307.49425507225305L178.9213029727248,307.36797273417164L179.13272218579323,307.5236231010006L179.28541384234836,307.47076068194605L179.43223275768673,307.62934799073867L179.57611530241343,307.6058535327645L179.71118868720532,307.4502030871995L179.85507123193247,307.37971989742493L179.940226172037,307.20644889217317L180.03712664268824,307.05079882774237L180.21037298972738,306.980315810137L180.4217922027956,307.0096837465L180.5098835616211,306.8980856932111L180.76828480065592,306.8364130843572L181.0384316183463,306.8070452270259L181.19112327490166,306.636711603523L181.2704054737867,306.4928091770348L181.45246093265428,306.4223263974826L182.08671857185914,306.2196886446369L182.18361909061923,305.9876833286008L182.22179200475762,305.8144137788723L182.3069469448651,305.69987976509015L182.2893286730989,305.43557079099367L182.25115575896052,305.1947562939613L182.25115575896052,305.03617134974917L182.37448366131275,304.9598156810609L182.37448366131275,304.76011637421243L182.3069469448651,304.60740531530854L182.28051956127047,304.4018329374147L182.41265657545387,304.31960407355575L182.51836615793331,304.11109525307415L182.57709376255548,303.9055234594514L182.7708947038575,303.958384763086L182.9529501627253,303.8526622198027L183.03810510282983,303.71757231812967L182.99112307686346,303.54430504725474L183.13500557348107,303.52962137659716L183.29944276058268,303.2888095624323L183.4903073312762,303.2888095624323L183.645935358443,303.26531570441847L183.76926326079501,303.06855508942346L183.86616373144625,302.89528844846365L184.02179175861284,302.7836930632257L184.05115556092255,302.5370087843397L184.0775829445147,302.384299638994L184.30955684806645,302.3226286372281L184.41526643054613,302.2169070576776L184.5503398634471,302.17285637344014L184.52978517296333,302.02308423196246L184.72358616237466,301.91736282486005L184.83810490479186,301.764654195175L184.88802334947627,301.6236924653027L184.8292957448541,301.4474905013689L184.91445073307113,301.2477951047738L185.0407150060314,301.0804035497091L185.4723625921058,300.7045072755686L185.65735437347325,300.58410317727584L185.77187316399932,300.44901572992745L185.96567410530133,300.4636991068834L186.30042122072473,300.40202878689297L186.4560492478886,300.2669414679941L186.59112263267775,300.123044184814L186.73500517740763,300.1171708443088L186.8700785621968,299.993830398173L186.90825147633495,299.7853265293306L187.22538031999193,299.64142965190047L187.38981750709354,299.5063428151125L187.52195452127694,299.3859394630169L187.61004583199042,299.2625994791696L187.72456457440762,299.1891829148811L187.889001761509,299.0452864259338L188.0710572203741,298.84265686584683L188.2061306051662,298.6312175673789L188.05343894861062,298.5313713189112L187.9066200332727,298.4197784918346L187.69520082020426,298.27588255643235L187.54250916364867,298.18778304973887L187.33989906240913,298.1554799469674L187.15784360354405,298.14960661674235L186.96404266223908,298.1114301909211L186.8025418457462,298.0497606062167L186.46485835971703,298.0203941163834L186.30042122072473,297.9969009564304L186.0214652912057,297.8999916581106L185.8599644747128,297.7883991779898L185.48410807454275,297.6944266127835L185.3108617756127,297.62982052017344L184.88802334947627,297.45362210118526L184.5885127775855,297.22162780096454L184.41526643054613,297.0718594538415L184.2508292915536,296.95145749971886L183.17317848761923,296.09983609797257L182.99112307686346,295.9471319332581L182.80025845806085,295.8032377008734L182.50955704610487,295.5653719931223L182.33631074717482,295.4361610770143L182.23060111658606,295.1777394732064L182.16306444824477,294.96924045959986L181.6638801457225,293.6653918567572L181.5288067609306,293.2953821010874L181.48182468685468,293.1456164193121L181.25865994324045,292.6170324330097L181.13533208899753,292.2558340574083L181.0002587042054,291.95924065500253L180.97970406183322,291.80360269680506L181.28802374555266,291.68907666180337L182.23060111658606,291.41891301399073L182.7708947038575,291.25446569762215L185.56045390282202,290.45278666483733L185.7425093616871,290.3852460339823L186.11836576185692,290.26484761661044L188.89911584899278,289.46023509806855L189.91803904830545,289.15777191249055L190.09128534723277,289.11372387215516L190.21754962019622,289.7920640608462L190.2645316942719,290.1297665195364L190.42015972143577,291.0048584029579L190.53467846385297,291.7272520329327L190.6315789345042,292.2793266068207L190.6991156509548,292.4055991773831L190.79601612160582,292.5259986345567L191.20710906530508,293.1133140167086L191.56534719371166,293.33355768049415L191.938267223273,293.550864973705L192.09389525043707,293.6565820685997L192.41983320592226,294.01778260126457L192.7281529377508,294.4553352792299L192.90139923668085,294.48470123168386L192.97774506495716,294.3026322533641L193.10400933792084,294.2057245729098L193.17154600626213,293.91206534031795L193.23027356277498,293.7681724227071L193.33598319336375,293.6712650169746L193.5092294922913,293.5596747097213L193.66192114884643,293.5038795762742L193.7881854218101,293.3687966898203L193.8058036935763,293.19847489277674L193.85572213826072,293.1133140167086L193.89389505239865,292.88719741893414L194.0172229066443,292.6552079025607L194.1053142654671,292.5318717662782L194.24919681019378,292.4261551768111L194.40188846674937,292.43496487076936L194.50759804922882,292.1853563747865L194.61330767981735,292.0120988657143L194.64267148213003,291.8006660916572L194.71901731040634,291.6303454109117L194.80710862112232,291.5158195047621L194.854090695198,290.8844596920941L194.82766326349724,290.7464416744451L194.90400913988242,290.5614389524536L195.04789163650025,290.07690870562146L195.11542835295086,289.9565103839181L195.16241037891746,289.7509524481457L195.3268475660193,289.49841008680283L195.47953922257443,289.3838851371172L195.66453105205073,289.21062954160925L195.74968604026458,289.0520566855821L195.85539562274448,288.9316588790712L195.98165989570793,288.73491130218275L196.07856036635872,288.45594113029017L196.12554244043463,288.2004634679258L196.09617863812514,287.8157790876497L196.0374510816123,287.66308010710407L196.04919656404923,287.4105396776115L196.2106973805394,287.3547458859026L196.44267123598252,287.2578409152824L196.60710842308436,287.160935977429L196.74218180787602,287.02585637197603L196.8273367960901,286.90545943992976L196.8948734644316,286.785062557793L197.00939225495517,286.6382371261381L197.22081146802316,286.41212612033496L197.4058032974997,286.3093484213718L197.76110505529482,286.3299039486949L197.92554219428735,286.37688805085503L198.22211639557236,286.4444276476146L199.05898418412607,286.6118085293125L199.2704033971945,285.51649327669566L199.54055016677535,284.88221062061734L199.64625979736434,284.6590373974115L199.77252407032756,284.3624522176772L200.09846202581025,283.5108723754208L200.08084375404724,283.278890686053L200.15718958232333,282.90889486213143L200.24234457054013,282.753261837673L200.4449546236708,282.7150877085184L200.5888371683975,282.72977007648865L200.94707529680386,282.8178642012075L201.03223028501793,282.9793702353328L201.09976695335945,283.16730460298515L201.06159403921856,283.60190322288975L201.25245860991458,283.61071268589546L201.42570495695122,283.57841140286916L201.62831501008463,283.51380884622324L201.78394308535758,283.27301774858546L202.080517238531,283.27301774858546L202.1979723996658,283.537300709797L201.91901647014697,284.3947535300699L201.87790718540032,284.5445143645874L202.04234432439262,284.6414184629025L202.18622686911954,284.68840230647146L202.63842909756863,284.8704646879552L202.73532956821964,285.0202257471824L202.9085758671497,285.06427311418196L203.419505700218,285.39609695377834L204.0831271417353,285.742603607245L204.25637344066263,285.89236509002137L204.49715645604329,285.95403159033526L204.64103900076998,286.0538726725889L204.7379394714212,286.1948247745253L204.92880404211746,286.41212612033496L205.16077789755764,286.73220538813445L205.27529663997484,286.9113324457625L205.38981538239227,287.04053894099786L205.72749886842394,287.175618505223L205.9095543272888,287.175618505223L206.31477452977106,287.2137931772133L206.6700762875662,287.2637139282904L206.77578587004587,287.43990480767394L206.93141394531904,287.5280003122815L207.2191789866663,287.4633969716392L207.39242528559362,287.6043497556955L207.4305981997345,287.87450953128945L207.63320830097427,288.1241138620483L207.85343667398024,288.5704657331777L208.06485588704845,288.97570684142545L208.1235834435613,289.11078734600994L208.8841053557269,290.6436623945455L208.89291451566464,290.7992996266731L209.07496997453245,291.01073149819683L209.02798790045676,291.2074807975533L208.28802063066314,292.02971827184086L207.8651821564174,292.4790134897646L207.58622622689836,292.7961635170194L207.27790654317914,292.52012550298235L206.79634051242056,292.1119421519314L206.49682994052682,291.841778037672L205.90074521546035,291.3366893662514L204.53532937018122,291.41891301399073L203.97741751114654,291.3954205472991L204.09193625356102,292.0532107992924L204.44723801135888,292.02090854456173L204.61167519846026,292.09725930041026L204.8054761397625,291.9915429015366L205.69813511422058,293.12799693080416L206.1620828732157,293.6859479662813L206.26779245569537,293.84452374372967L206.60253957111559,294.26739310079006L206.64071248525397,294.42596928249213L206.63190337342826,294.61978477781156L206.75816759827967,294.7724880671945L207.28671565500485,295.0426555889363L207.54511694214898,294.9310646057925L207.69193585748735,294.8165370836831L207.8916095881184,294.681453418949L208.1235834435613,294.49938423340194L208.25865682835047,294.4083496959047L208.5376127578695,294.16167567591873L209.7885098607312,293.19553831862373L210.57839557521197,292.7315588600353L210.7222780718298,292.88719741893414L211.01885227311186,293.098631103531L211.35653575914353,293.38641619648115L211.63549168866257,293.21315781221045L212.08769391710848,292.9165632198424L212.5487052573833,292.60234955063135L212.77187000099775,292.46726718095135L213.33859097186405,292.17067351881076L213.63810154375483,292.0267816639718L214.02276710386218,291.8182854825004L214.25180458869409,291.71844231657104L214.61004271710067,291.5393120310028L214.65702479117635,291.7801101452999L214.70400681714295,292.8137829807283L214.72456145951764,292.9870411184398L214.77154353359356,293.2513333781785L214.96534447489557,293.4980064203085L216.63908000389688,295.00741631997226L216.84169010513642,295.0514653829974L217.00612729223803,294.9751136536582L217.15881894879362,295.05733862734667L217.33206524772368,295.1777394732064L217.33206524772368,295.3598092144505L217.3614290500334,295.57711841321395L217.4377748783122,295.79736448464246L217.5434844607919,295.9236390055444L217.61102117723976,296.06753327006265L217.64919409138065,296.23492063810886L217.63157581961445,296.3788151594701L217.69617611734725,296.543266153085L217.8048221185445,296.64017481934707L218.01624133161295,296.7224003774833L218.13076007402992,296.86629522941706L218.22766059279024,297.01019017978626L218.40090689172052,297.0718594538415L218.5624076601016,297.16876836356727L218.73565400714074,297.2598040616281L218.85310912016644,297.37139625577527L219.16142880388588,297.5769609786832L219.05278285079794,297.8618152790193L218.93826406027142,298.0262674428786L218.82374531785695,298.1701631529951L219.13206504968525,298.5548645408887L219.0146098885507,299.42117947260147L218.8824728743698,299.5885695804984L217.68736700551858,300.8689618156831L217.5904665348678,301.0363531829581L217.64919409138065,301.2624785917618L217.77545836434138,301.6471860634761L217.88116794682082,301.9408564602974L218.00449584917578,302.3754894739881L218.09258715988926,302.6251102430576L218.1689329881683,302.79837667273694L218.29519726113153,303.0039471870132L218.33337017526992,303.1067325081623L218.4684435600591,303.33579719150475L218.66811729069013,303.70288868122975L218.7738269212789,303.87028264729605L218.85310912016644,304.0494237041481L219.02635541909672,304.3519082379494L219.05278285079794,304.4928721095024L218.9764369744123,304.60740531530854L218.94707322020918,304.74249585682776L219.2553929039284,304.78067363874544L219.4110209792043,304.9451318914057L219.6518039464729,305.35921494388754L219.75751357706167,305.5207369464015L219.87203231947888,305.67051205954954L220.4504988208887,305.4825589994319L221.96860632272296,304.9598156810609L222.1800255357914,304.88052325107697L222.39438111947084,304.82766171553743L222.66159156654976,304.7865471296018L222.74087376543753,304.91576431586475L222.88475626205513,305.1741989798709L222.9405474479595,305.3151634758979L223.1431575491995,305.67932238992273L223.31640384812954,306.0170510894278L223.69226024829936,306.6895737537136L223.83614279302606,306.91276960527875L224.2589812672718,307.71157847613296L224.5085733944809,308.1432893081071L224.62602850750682,308.39291853587645L224.74054724992152,308.6014326676571L224.98133026530218,309.077198376866L225.6155879526159,310.21375554640167L225.97382608101975,310.886295931435L226.07953566349943,311.11830835023096L226.13532684940378,311.49716485942236L226.164690651716,311.88776987936785L226.2116726776826,312.33417687434996L226.31738230827136,313.5089385641224L226.41428277892237,314.4135116451672L226.47301033543522,315.0537648776626L226.48181949537297,315.2564144087085L226.51999240951113,315.55010997693745L226.57871996602398,316.1257550811083L226.63744752253683,316.7718901805864L226.66387495423805,317.2711785353263L226.1470723799498,317.8497678874733L223.92423415185158,320.24051449308854L223.7774152365132,320.33743757543874L223.41330436688963,320.7985575036447L222.88475626205513,321.37716263741504L222.344462722893,321.9528333477769L221.8540875803085,322.50207265918016L221.06420186582795,323.3391533283901L220.92031927299195,323.47426171582805L220.4211350185792,324.0176334868722L219.5079214498553,324.9663373190999L219.35229337458213,325.1396307726638L219.0146098885507,325.4803440827782L217.88997710675858,326.6845973811805L217.7549036738601,326.8138350704974L217.3790472736905,327.2044862350382L216.8593083768999,327.76256164439656L216.75359874631135,327.86242804162094L216.50400661910498,328.1238434838781L216.31314204841124,328.34120057415555L216.0048223165827,328.6584252357578L215.7728484611398,328.86403429191677L215.62015680458444,329.0725809998589L213.53239196127538,331.2667513407958L213.32097274820694,331.410681077735L213.21232674700968,331.6074832296121L212.67496953034697,332.1655809308105L212.47235942910697,332.391758192265L212.30792229011467,332.54743891259295L212.74250624679712,332.82942724033467L212.8276611869021,332.9939207916785L212.86877047165171,333.1966006955281L212.91575254572763,333.36990699131053L213.00090748583216,333.5138395820896L213.080189732829,333.6871464038041L213.15653556110556,333.9427010438541L213.29160894589722,334.26875449723747L213.4266823306864,334.674119618506L213.5118373189007,334.96786349603076L213.5999286296169,335.1352978773058L213.7320656437971,335.34679431245456L213.82896616255766,335.54947883021697L213.94642127558336,335.7169141673935L214.03157621569085,335.8902247047795L214.04038537562565,336.319096161492L214.09030377220392,336.4835952957554L214.04038537562565,336.6422196836759L213.94642127558336,336.8449068047655L213.8113478907942,336.9506567347365L213.75262028617203,337.4265329779951L213.5999286296169,337.37365772193033L213.4443006024528,337.43534549935185L213.34740013179908,337.60865901187714L213.27105430352276,337.8554110348705L213.23288138938437,338.00816256457875L213.13598091873064,338.17266444764084L212.99209837400372,338.2108524310627L213.06844420228276,338.41648030091665L212.98328926217505,338.53691970925456L212.84821582927702,338.58685800061494L212.67496953034697,338.58685800061494L212.53108698561982,338.63385882254937L212.7513153586258,338.76017359258503L212.76012451856081,338.933489444778L212.6661604185183,339.2507464073902L212.5487052573833,339.438751020173L212.41656824320262,339.5063152386683L212.36664984662752,339.6414439138838L212.48116858904473,339.80888613888936L212.47235942910697,339.97632870369966L212.33728604431508,340.0350805905972L212.24332194427257,340.1643347338124L212.4429956749036,340.54622315364145L212.53108698561982,340.9193002176695L212.61624197383412,341.04561794405197L212.72195160442266,341.1425595883512L212.74250624679712,341.3393808493218L212.60743286200545,341.4892002754738L212.72195160442266,341.6625210733562L212.7131424444849,341.8505304475359L212.81004291513887,341.9562859042748L212.96273457169423,342.0796673733993L213.0302712881421,342.2764905992895L213.06844420228276,342.42337386436765L212.91575254572763,342.5085662335226L212.7513153586258,342.69070197515805L212.6661604185183,342.9227786447218L212.50172323141692,342.89340184392756L212.36664984662752,342.793520665836L212.2227673019006,342.793520665836L212.11705767131184,342.98447000008696L212.02015720065833,343.0902267463688L212.058330114799,343.2459243588602L212.21395819007216,343.4662516514709L212.24332194427257,343.60138596826795L212.2521311042101,343.77471071058926L212.29911313017692,343.9098455304253L212.29030401834848,344.04791821362556L212.14642147362133,344.12136122864524L212.00253892889464,344.0919839962857L211.93500226055335,344.3475660715258L211.82929262996458,344.51501677785484L211.69421924517542,344.5649582434594L211.63549168866257,344.7382848671569L211.64430080048828,344.9204249941817L211.52097294624537,345.17013391012944L211.6061278863499,345.3199595727874L211.63549168866257,345.5021008759971L211.4622453897323,345.5637940276964L211.43288158741984,345.7958780228574L211.34772664731508,345.90163804353597L211.10694363193716,346.13666069644154L210.94250644483554,346.2541722555112L211.05702518725002,346.3540572461859L211.27138077092968,346.43631551287507L211.27138077092968,346.6772152234795L211.16567118845,346.92692900785477L211.0482160754243,347.0415038059569L211.14511654607531,347.1972082503164L210.96306108720773,347.32059690553604L210.80743306004342,347.4410478628L210.6547414034883,347.5908773591447L210.73989634359327,347.73483144568127L210.90433353069466,347.71720440096067L211.06877071779627,347.7113287362192L211.2214623743514,347.81709100266266L211.31836284500537,348.06387023529334L211.35653575914353,348.3370908439981L211.35653575914353,348.5339277735015L211.56795497221196,348.49573550495126L211.73239215931335,348.3958480759411L211.82929262996458,348.516300566836L211.84691090173055,348.68375915105474L212.00253892889464,348.86590741518637L211.9438113723818,349.0363045545831L212.02896636059563,349.17144734657995L212.14642147362133,349.291900920372L212.28149485841345,349.3829756718475L212.24332194427257,349.53574642134794L212.24332194427257,349.7619651548978L212.32847693248914,350.02343950911467L212.33728604431508,350.18502515416895L212.28149485841345,350.34367323245715L212.2697493759763,350.5228871031423L212.36664984662752,350.7344187836984L212.32847693248914,350.91657142447065L212.19340354769724,351.10166245542723L212.058330114799,351.2162428123246L211.91444761817843,351.14866978836056L211.75001043107704,351.1721734406142L211.70302835700113,351.34551315729493L211.71183751693866,351.5423570362405L211.56795497221196,351.6980696524786L211.38589956145324,351.6158063101651L211.25082612855476,351.71275954871084L211.31836284500537,351.9419220913264L211.44462711796632,352.1358293428473L211.47105450156073,352.30329507773513L211.6560463310343,352.4002490684846L211.8381017899021,352.51189320992984L212.01134808883216,352.55302528983134L211.91444761817843,352.7616240511178L211.50922741569912,352.92027701326185L211.56795497221196,353.11124853618617L211.71183751693866,353.09362037335126L211.7235830474849,353.2816542729518L211.68247371462917,353.5166972769588L211.8087379875899,353.6312809695448L211.9056384582434,353.77230725450045L211.98198428651995,354.02791807985136L211.9438113723818,354.2306444719419L211.8762747040405,354.40692867479044L211.74120127114202,354.56264670822196L211.81754714752765,354.7242412439237L211.9056384582434,355.0768122308273L211.8087379875899,355.4763945222843L211.74120127114202,355.67912455012936L211.84691090173055,355.9053601015849L211.7793741852804,356.0434522309022L211.61787341689637,357.00128946210316L211.5385912180086,357.13056899975186L211.68247371462917,357.3009832486623L211.58850961458666,357.4743360453203L211.37709040151844,357.6565038291754L211.28899904269315,357.80635182860067L211.2801899308647,358.0032113764091L211.25963528849252,358.1706893162043L211.11575274376287,358.1765657264689L210.99242488951995,358.5526578679672L211.03059780365834,358.96694897309146L211.21265321441683,359.0580345564674L211.24201701672632,359.42825446919903L211.2302714861803,360.0541064280883L211.2302714861803,361.0501912623992L209.99111991386462,361.0354996403501L209.95294699972396,361.5320777195852L209.96175615966126,362.04335083582487L200.05147995173456,356.4812352831616L197.92554219428735,355.26778881180326L196.75099096781105,354.6184702333816L195.87595026511917,354.11899799343576L195.65278552150448,354.00441356839286L195.0772554388127,353.6753516484421L194.54577096336993,353.35216710826637L193.92032243599078,353.02604577610646L192.19079572108785,352.04768960519584L188.52325944882296,349.9646811644252L185.0994425625447,348.0051131796651L183.4345161453748,347.0767576273722L182.4038474155161,346.5185738558541L181.0002587042054,345.74299805946913L179.8932441460704,345.1025655367637L179.34414144697053,344.80585291967327L174.61950901314594,342.11491926538463L173.70629544442227,341.6801469391918L170.50270688304317,339.87057550383486L170.36763349825128,339.72663377804605L170.06812292636027,339.62088080472535L169.6159206979114,339.37118680081966L168.63517041274008,338.79836180550893L167.28737283922442,338.03753786001795L165.85442032560422,337.2003446202402L164.0544205236422,336.1810346224557L162.9591514960507,335.54360392631975L162.65083176422218,335.3291695887625L158.6661666483003,333.12316590187476L158.50466587991627,333.04091896892817L157.17448657816703,332.2948250281198L156.6547476332703,331.97758980545564L155.876607449336,331.5546109591817L154.41429113340587,330.73215693748176L153.5010775165731,330.2034397719816L152.88443814913444,329.8597749472426L148.8909638732746,327.5892642177094L147.92783185986673,323.7062958228951L147.19667370189882,321.0100270762458L146.83256283227524,319.3212173068402L146.697489399377,319.09212825321407L146.43615174162437,319.14793195183864L146.27465097324034,319.10975047378054L146.1014046743103,319.0245764698886L146.05148622962588,318.85129155766583L146.04267711779744,318.6427625527162L145.99569504372153,318.4694780973946L145.84006701655744,318.360808362327L145.72554827414024,318.26388670814146L145.62864775538014,318.1610911576252L145.54349281527516,318.037736554269L145.38786478810857,317.9848703789436L145.21461844107216,317.8967600533057L145.17644552693127,317.6676735278087L145.17644552693127,317.48264237564035L145.0707359444516,317.3534144202638L144.9268533997249,317.2153756283099L144.82995292907367,317.08027391376373L144.66845211258078,316.97747927393124L144.5803608018673,316.8629367467401L144.43647825713788,316.7807011126456L144.19569524175995,316.719024455897L143.89618466986622,316.4253264399383L143.82864800152743,316.2990364611336L143.99308514051995,315.95834783933384L144.05181274514212,315.77919292877186L144.15752232762156,315.54423607488656L144.17514059938503,315.3621447533606L144.06062185696783,315.1888645483851L144.02244894282944,314.88929586632753L143.8697572862743,314.616160252626L143.66714718503454,314.3371513163474L143.66714718503454,314.0493321696351L143.53207380024242,313.53243393152417L143.32946369900287,313.2974807666212L143.28248167303605,313.15650908954194L143.32946369900287,312.8393232565865L143.45572797196633,312.5808760438818L142.61886018341238,311.6704406772207L142.25181294317736,310.9773387508893L142.33990425389356,310.6307889573209L142.20483086910167,310.54855694333014L142.1167395583882,309.7644179831308L142.75099719759305,309.1506191382957L143.17677204244728,308.7747052239613L143.66714718503454,308.2930668076128L144.64789747020586,307.37971989742493L144.82114381724523,307.2886791637713L145.0413721421421,307.26224801427816L145.28215515752004,307.35916231417167L145.46714698699634,307.46195030450195L145.6403932859264,307.532433481791L145.77253030010706,307.5618015174398L145.98394951317528,307.54711749895125L146.14838670027666,307.5559279291326L146.2922692450038,307.57648553725676L147.26421041834942,307.3738463156916L149.79536833017005,306.75711981900776L150.29455263269188,306.67195303510675L151.08443834716968,306.43113676735123L151.26649375792863,306.40764252893354L152.05637952051552,306.1844473088811L153.70075124720415,305.7674254783333L154.34675441695526,305.67051205954954L154.59634659227095,305.54129435043455L156.4726922225118,305.080222697722L156.6371293615041,305.0302978022581L157.86747182199406,304.71312831581275L158.41657452109393,304.58391132931047L159.07138685077985,304.44882086331114L159.6292986617084,304.2667426609369L159.81135412057347,304.22269147192264L160.6188581068177,304.0582339515907L160.9653507527869,303.94370110613477L161.22668836243042,303.8908398069116L161.86975520968213,303.7322560043636L162.45703082292016,303.5766091173556L162.92978769374122,303.69407845155865L163.05605196670467,303.76162338049556L163.42016283632825,303.8086111347224L164.83549712629156,304.146336161666L165.02636169698508,304.20213427342907L165.56665523614765,304.31373055039876L165.81624741146584,304.37540219257374L166.6149422377723,305.03617134974917L166.8938981672884,305.27698557505244L167.0759536261562,305.42088696047796L167.41363711218787,305.7468680468304L167.5399013370395,305.8144137788723L168.81722582349585,306.8452234762586L169.68345736625292,307.5852959209164L170.6084165136317,308.3459294964844L171.08998249628144,308.7306528391542L171.31021086928445,308.9244833182677L171.85931356838455,309.33270273066745L172.53174416983666,309.8848286018095L173.28345697017653,310.54562009338207L173.49487618324474,310.64253641213475L173.6387587279744,310.62785210578863L173.78264127270108,310.50156720658447L173.93826929986517,310.30773480947266L174.15849767287114,310.29598738039687L174.28476189772528,310.1462080151608L174.41689891190595,309.9435655030304L174.61950901314594,309.9230075874688L174.8133099544507,310.00230242658967L174.89846494266453,309.8848286018095L175.14805706987113,309.77910220694935L175.29487598520927,309.69687064845897L175.3888400852518,309.5294707833917L175.57383191472536,309.51478658316154L175.72652357128095,309.4472393088049L175.82342404193446,309.3473869137628L175.98786122903607,309.30920806945215L176.10237997145055,309.2211030611531L176.2462625161802,309.06251421907416L176.45768172924863,309.09188248791276L176.66029183048818,308.9655988889989L176.87171104355662,308.89511503252936L176.8511564011817,308.7394633343795L176.97742067414538,308.66310594990205L176.99797531652007,308.4898335154666L177.12130317076299,308.4222867286126L177.27693124603616,308.31656131780085L177.4677958167324,308.2343305231934L177.66159675803442,308.172657454977L177.8054793027611,308.1109843623852L177.74675174624826,307.93771257481455L177.94055268755324,307.79380900332364L178.15197190062167,307.86429237316065L178.16078106055897,307.71157847613296L178.3428364713152,307.61466396613537L178.51608277024525,307.5618015174398ZM178.6717108455182,307.62347435186604L178.56600121492966,307.726262509525L178.70107459972155,307.83198748347684ZM162.66703546885242,333.7269123959205L162.66845003598837,333.7341448923835L162.8416963349157,333.62546090166967L162.64202265239373,333.5990242346926Z\" stroke=\"#000\" fill=\"#FFF\" strokeWidth=\"0.5\"></path>\r\n        <path id=\"Kajiado\" ref={(item) => countyRefs.current[33] = item} d=\"M242.13858765893633,324.54338481980346L242.4175435884522,324.74604937002664L242.61721727097438,324.68143167424284L242.94609164517738,325.2130602878356L242.97545539938073,325.3746053919187L243.10759246167072,325.58314573389964L243.18687466055803,325.82399561900695L243.31020251480118,325.87980236993957L243.4364667877644,325.82399561900695L243.7242318291121,325.80343520075166L243.8886690162135,325.93854633952697L244.0531062033151,326.0883436128871L244.24397077400863,326.20289459349266L244.3790441587978,326.3321317440622L244.50530843176148,326.48192952533486L244.66680920014505,326.6229158242501L244.9751289319736,326.8725795139699L245.11901147670073,326.95775904163156L245.27463950386732,327.06349922293884L245.4772496051071,327.13105546085797L245.6886688181753,327.21329790800945L246.02341593359574,327.35722238104734L246.20840776307205,327.35722238104734L246.34348114786417,327.3865947624592L246.513791076183,327.3836575336036L246.73695581979723,327.44533949985856L246.85147456221443,327.58045251568115L247.0159117012072,327.5510800842758L247.19796716007204,327.54226838520617L247.40938637314025,327.4688373936731L247.58263272017962,327.56576629903043L247.77643366148436,327.5158332439712L247.92912531803995,327.5217077085757L248.07300786276664,327.4159671033114L248.22863588993073,327.4835235978147L248.41069134879854,327.5128959636574L248.55457384541592,327.5510800842758L248.69845639014306,327.5275821734854L248.84233893486999,327.53051940605246L248.93923940552372,327.43065330063723L249.18002242090165,327.24854470292996L249.36207783166014,327.21329790800945L249.45016919048294,327.3425361931785L249.84364386241873,327.5070214995085L250.05506307548717,327.5217077085757L250.53662910624575,327.5070214995085L250.65408421927145,327.73318916589045L250.79796676399815,327.9123612973186L250.95065842055374,327.9975415541274L251.27953274664787,328.1003454542831L251.42341529137457,328.2207729498339L251.54674319372953,328.2971416816451L251.74054413503177,328.2883299244629L251.82569907513653,328.44106753170166L252.01950006455036,328.4175694358738L252.20155547530658,328.4322557151139L252.3748018223455,328.4028831104285L252.5098752071376,328.44694204439884L252.64494859192678,328.5144991549945L252.7888311366537,328.56736995930925L252.94152279320906,328.6378643557521L252.76827649428174,328.76416700530973L252.48051140482517,330.3121202770492L252.36599266240796,330.8907725690201L252.20155547530658,331.85422078846796L252.54804812127577,332.28013818112174L252.70073977783113,332.22726557761274L252.87398607676118,332.05102380383664L253.04723237568874,331.93940415012827L253.18230580858972,331.795473703633L253.54935304882179,331.5634230265063L253.76958142182798,331.39011968183326L253.9340186089296,331.3137488034226L254.07790110554743,331.2285659385593L254.25114740447748,331.09344847365514L254.36566619500377,330.9495191599065L254.55065797636826,330.9054592257847L254.71215879286115,330.9436445138192L254.8384230658246,330.8525872996228L255.00286020481735,330.77915411963784L255.20253393544817,330.7556555260163L255.36697112254978,330.7615301619145L255.57839033561822,330.84671265879297L255.53140830965162,331.0699498118296L256.1363021946531,331.39011968183326L256.9467425515056,331.8953438103794L256.7441324502661,332.32126131933717L256.66778662198976,332.52100256498295L256.68540489375323,332.66199657544826L256.8116691667167,332.8499889141895L256.79111452434176,333.0027329302663L256.67659578192456,333.0908545973898L256.55033150896384,333.28765991299235L256.43581276654663,333.3992809910173L256.32129402412966,333.4903403366627L256.2625664676166,333.61371126572834L256.2919302218197,333.7782060488356L256.30073938175474,333.9221391552353L256.27137557944525,334.3128158326967L256.2155843935409,334.4567497301434L256.05114720643905,334.50962346014967L255.97480137816297,334.7593052737506L255.96305589572557,334.9296767482183L256.00122880986396,335.06773658501663L256.11868392288966,335.2028591661486L256.2801846912737,335.4613550667594L256.48279479251323,335.61704044198564L256.7617507220323,335.67872713887755L256.879205835058,335.54360392631975L257.0025337374102,335.61116548605344L257.29323514936596,336.0870353737496L257.73369189537516,336.7127195136602L257.86876528016705,336.93009423823787L257.73369189537516,337.0182192874605L257.61917315296046,337.11809440539207L257.77186480951605,337.3207824940532L258.0332024672689,337.6439092631276L258.4090588674385,337.5381585952001L258.6498418828164,337.8730362029845L258.92879776422615,338.2255401320583L259.9389118517099,339.60031774808374L260.41754151186,340.22308673604414L260.58197865085253,340.49334619989634L260.74641583795415,340.66960277845175L261.71835701129976,341.97097413149544L261.94739449613144,342.3293685538097L262.1206407950617,342.5849456852666L262.32325089630126,342.7641439060573L262.5346701093697,343.06672525277133L263.1131366107793,343.84227809554955L263.28638290970935,344.0684822460919L263.46843836857715,344.2799983122966L263.69160311219184,344.41513383284376L263.844294768747,344.46801301684184L264.02635022761206,344.5649582434594L264.25832408305496,344.6736545488592L264.4227612701568,344.7030319692975L264.5167253701993,344.5796469348653L264.8837726104314,344.37106789375844L265.1157465139836,344.43276022408776L265.22145609646327,344.6031488171879L265.2097106140261,344.82935490885626L265.153919428122,345.0643747520102L265.1627285399504,345.27589314436204L265.22145609646327,345.4844742759013L265.32716572705203,345.57848283375716L265.526839409574,345.6284249367788L265.66191284247225,345.7723758290886L265.53858494012,345.94570473172763L265.38295691295616,346.27179900758097L265.4886664954356,346.39812415841084L265.63254904016276,346.359932820382L265.7676224249519,346.43631551287507L265.66191284247225,346.6860286170648L265.56794874242996,346.83585682752505L265.47985738360717,346.94161808731906L265.34478399881505,347.235399950392L265.40351155532835,347.4234208772442L265.3066110846771,347.59675306392575L265.12455562581204,347.77008554579504L264.89258177036913,348.01980243985633L264.9601184387104,348.21370080083386L265.0658280692992,348.3517801602848L264.9806730810826,348.4927975981095L264.98948224102014,348.8247771299516L265.18034681171366,348.9334786750335L265.0863827116714,349.0980001893953L264.89258177036913,349.28014932949725L265.03646426698697,349.37122406849846L265.20090145408835,349.4241062240499L265.38295691295616,349.51224322249L265.526839409574,349.6180076922483L265.6061216565706,349.88829537210324L265.8733320555407,350.23496989560914L265.88507758608694,350.4846939474288L265.8733320555407,350.7109152054072L265.9232505002278,350.884254020489L265.77936795549795,351.08697266626575L265.7881770673264,351.27500202661116L265.77936795549795,351.42190026636945L265.70008575661336,351.5394190242631L265.47985738360717,351.5482329642283L265.526839409574,351.69219371396184L265.6736583249094,351.85672053375424L265.70008575661336,352.1299533734761L265.90269580974405,352.4325671066315L266.143478825122,352.7528100306724L266.2403792957755,352.8673926586555L266.2491884557105,353.02604577610646L266.4136256428121,353.16119502608L266.548699027604,353.25227392672804L266.86582787126076,353.41092783459084L266.8452732288863,353.64303312259017L267.00090125605016,353.80168778723464L267.2299387408848,353.93096212207456L267.45310348449925,353.8927674481206L267.655713585739,353.8193161023186L267.9141148728829,353.87807716404376L268.12553408595136,353.8340063276818L268.30758949670985,353.8193161023186L268.47202668381146,353.83988246670526L268.8097101698406,353.831068282398L268.9447835546325,353.87220102227354L269.1473936558723,353.91039573473665L269.3852403006415,353.96915691018705L269.55848659957155,354.089617346386L269.6935599843637,354.20126378457974L269.8374425290906,354.35991948773534L269.91672472797813,354.53620401947336L270.0517981127673,354.7007365790112L270.2250444116976,354.7830029601622L270.3101993999114,354.8946503531734L270.40709987056243,355.0415550579955L270.60970997180493,355.0856265023775L270.80938370243643,355.0915026839448L271.0413575578766,355.5674760683521L271.2527767709448,355.78489690669676L271.32912259922364,355.92005070643796L271.37904104390805,356.12571998784114L271.44657771224956,356.4665445266419L271.4935597863257,356.65164813236936L271.56109650277585,356.81030873054704L271.7049789993937,356.83381401534973L272.3509822172539,357.19814699248855L272.48605560204305,357.2480960185583L272.6593019009731,357.17464159923315L272.91770318811723,357.224590610402L273.1203132893572,357.39794323875094L273.56370635786857,357.4743360453203L275.3225968750835,357.6418128538706L275.47822490224735,357.7005767234521L275.5839345328361,357.8151664030743L275.6015528046023,358.1471836314377L275.8511449318087,358.1677511112391L276.42080227328074,358.18244218531265L276.62341237452324,358.30290899121303L278.2971479035216,359.52815536606L279.0077514191146,360.03941499817284L279.2778981886959,360.2215888129805L279.76827333128017,360.5800611042276L279.9327105183818,360.6799635044416L280.1147659772496,360.7563596027128L280.3849127468309,360.8915220296947L280.3085669185516,361.2059225061604L280.951633717694,361.4703725906815L281.02797954597327,361.2617507722646L281.0867071024861,361.1324643696468L281.6534281214588,361.36459244580453L282.16435790641776,361.55558444175875L282.78099732196824,361.81122066939287L283.38589120696975,362.04628918964704L283.6472288647253,362.15794700907867L283.8087296331064,362.2637282698038L283.91443926369516,362.43709228576796L284.0876855626252,362.50467500081345L284.193395193214,362.61045670381856L284.24331358978907,362.74562246087555L284.20514067565114,362.93367958679863L284.27267739210174,363.1070452085212L284.4253690486569,363.183443726947L284.59861534758693,363.2157661673975L285.1477180947934,363.17756688171426L285.29160059141395,363.2745343339231L285.68507526334747,363.7652504393275L286.2253688506189,364.20307769038766L286.49551562019997,364.40583080730187L286.67757107906755,364.4969229244576L287.7258580806897,364.81427713957925L287.92846818192925,364.84366187931255L288.119332752623,364.828969507968L289.46713027802934,364.64090755045436L289.90171428282133,364.58801520300875L290.04559677943917,364.5791998395578L290.36272562309614,364.6761691366585L290.7855640973419,364.83484643689246L291.23776632579074,364.98470866952647L291.4198217365465,365.02290889382334L291.61362272596057,365.00233954349676L291.79567813671633,365.09343245224454L291.9395606814462,365.2932495559751L292.0364611520972,365.4930671606994L292.0834432261729,365.81630277440274L292.2008983391986,365.89858113302114L292.6237367653355,366.0484455612859L292.8938835830256,366.2306341220416L292.70008259361157,366.27471204862377L292.5180271828558,366.25414234298637L292.31541708161603,366.31291295298263L292.14217078268575,366.38931482250916L292.00709739789386,366.4862865392655L291.9013877673051,366.6008896502814L291.71933230844,366.8859289544386L291.58425892364835,367.0299183327206L291.4579946506876,367.2238636305159L291.2084025234783,367.46776530378554L291.07332913868913,367.7028520669668L290.93825575389724,367.8762290246448L290.75620029503216,367.9967116026153L290.5535901937926,368.09956269886635L290.57414483616435,368.2817564911966L290.59469947853904,368.61969780734734L290.6798544667529,368.83127926912687L290.6710453068183,369.08987972480304L290.68866357858155,369.2926466106803L290.61231775030546,369.60120612790394L290.6798544667529,369.8333612918418L290.50660816782556,369.9714793293013L290.43907145137496,370.1507392520273L290.3803438948621,370.5004444369683L290.1982884359943,370.6738283140636L290.29518890664826,370.85896752899447L290.1894793241686,370.99708756192535L289.9956783828636,371.0411684704531L289.813622923999,370.9882714028597L289.69910418158156,370.91480326188935L289.53466699447995,370.9823939159601L289.3144386214742,371.1028818475393L289.1793652366848,371.3056546103675L289.12063768017197,371.4790405602747L288.93858222130416,371.41732684570957L288.7359721200646,371.41732684570957L288.51574379516774,371.3879394256382L288.3718612504406,371.59952931388216L288.16925114920105,371.61716183803173L288.0253686525805,371.7200183273358L287.7933947490312,371.432020584537L287.5438026218219,371.47022429130544L287.40872923703273,371.63773311391554L287.2824649640693,371.76409969965107L287.2354829381027,371.9609968939698L287.1092186651392,372.0579763210858L286.9359723662119,372.01389475937117L286.76272601917253,372.0903028434378L286.94771784864884,372.34009909622796L287.3705563228946,372.83675560095475L287.9372772937579,373.47741843830363L288.2367878656489,373.83301833193974L288.91802757892924,374.6088791608631L289.1588105943099,374.8968903857033L289.32324778141174,375.0702855457555L290.3920894254086,376.2987588785015L292.8733289406507,379.12022031279014L293.08474815371915,379.37592135621725L293.4136224798133,379.7462487532292L294.07724396943945,380.55157138617597L294.65277405213146,381.23345837173997L296.14445417037405,382.9440867272593L296.24135464102505,383.0704752294538L296.3676189139885,383.2027425261781L296.6348293129586,383.5231244822101L297.0400494673315,383.98459500934683L297.64494340044234,384.6959129594527L298.0501635548153,385.16327100922456L298.18523693960447,385.3043609553869L298.4641928691235,385.6453296081681L298.89584045519746,386.1332708428678L299.09845055643723,386.43015267971515L299.2716968553673,386.7593698499937L299.4831160684357,387.1062256020562L299.64755325553733,387.45602287542636L299.76207199795454,387.74997174212626L299.85897246860577,388.03510349676924L300.00285501333246,388.3143575803092L300.2142742264009,388.68473865646246L300.38752052533096,388.9581166923437L300.6106852689452,389.15212764466327L300.9747961866781,389.5519098133748L301.0511420149546,389.72534560924066L301.0893149290953,389.86350664655436L301.3976346128147,390.8130052548157L301.6501631587389,390.9570481483315L301.86158237180734,390.98644472837856L302.3813213167066,391.0246602756697L302.4870308991865,391.15400540179473L302.5809949992288,391.34214427060834L302.7278139145644,391.6655093632817L302.80415974284324,391.9124439197966L302.7542412981561,392.60033863212266L302.62210428397543,392.77378344848205L302.62210428397543,393.11479513432937L302.64853171567665,393.2853017360803L302.7542412981561,393.67335315851096L302.8217780146067,393.86150024108144L303.1506523888097,394.214277655798L303.04494275822117,394.8257637728343L302.92748764519524,395.4225570516703L302.8423326569814,395.79886343534577L302.81296890277804,395.9811377105474L302.7542412981561,396.2457304970368L302.7072592721895,396.51032453106404L302.60154964160074,396.98365697614156L302.5428220850879,397.3217540434333L302.4077487002987,398.0038344142342L302.3607666262228,398.2125761884483L302.27561168611805,398.5301004109514L302.25505704374314,398.75060437900555L302.2168841296052,398.91524795504546L301.0893149290953,399.74729350157367L301.0423328550196,400.1824318958403L300.4668027723278,404.92213948817977L300.40807521581473,405.26322651178475L300.1467375580594,407.2245200350941L300.108564643921,407.65383851260816L299.9940459015038,408.57423870428L299.95587298736586,408.97416217933113L299.694535329613,409.07414351074954L299.2716968553673,409.07414351074954L299.204160187026,409.25352232017116L299.14836900112164,409.44172368999796L299.14836900112164,410.7915007009862L299.1366234705754,411.1179227887527L299.14836900112164,411.47963616612293L299.14836900112164,411.8031218710055L299.1366234705754,412.12955045439253L299.1366234705754,413.3500005392556L299.11900519881215,413.49410385831544L299.11900519881215,413.6705574317402L299.08083228467376,413.8587752860476L298.9252042093981,414.01758468241087L298.63743916805356,414.15286712953275L298.4348291149229,414.23521313504943L298.16468229723273,414.2499178070549L298.04135444298663,414.1381624863153L297.9532630841643,413.979352752295L297.7917622676714,413.8264252780564L297.6361342405073,413.70878912421404L297.4540787816395,413.6529120414183L297.3101962850217,413.5029265004456L297.11639529560784,413.3823502374936L296.97251279899,413.3823502374936L296.7787118095787,413.3588232040489L296.5672925965107,413.4117590328766L296.4527738540935,413.48234028972206L296.32650958113004,413.5852714766576L296.14445417037405,413.49704473885197L295.8361344385428,413.5117491923239L294.96109378396,413.57644877175017L294.67332869450365,413.5852714766576L294.16239890954444,413.6176212795557L291.35228506820795,413.6911437203273L291.2671300799914,413.51763095565764L291.2172116834158,413.2029567734942L291.14086580703065,412.8029999587375L291.0850746211263,412.40010552593685L290.80611873971657,410.68857528614035L290.77675493740685,410.4709621704959L290.68866357858155,410.009272634979L290.5829539961021,409.29763193757617L290.47724436551334,408.70950661706365L290.4478806113127,408.5124861111734L290.4302623395465,408.32428814774323L290.3803438948621,408.0861010689845L290.11313349588977,407.8949641055369L289.8517958381369,407.6920656704971L289.46713027802934,407.46564367779376L289.12063768017197,407.2156984343908L288.82406347888696,407.01280260983526L288.2074240633392,406.6040729002689L285.9552220810376,405.0809211336701L285.57936568086757,404.84862963704495L283.72357469300164,403.62544077694366L283.2331995504146,403.32258827523873L282.66354216083323,402.9521108815426L281.856038174589,402.52283071452223L281.1747984613087,402.07003208206237L280.28801227617964,401.6378187557689L279.962074320694,401.46728656300195L279.7506550595167,401.2908744828669L279.39241693111035,401.14092469109664L278.95196023321023,400.9086503617282L277.67169937614517,400.19713258857576L277.4778983867311,400.06188647081296L277.08442371479805,399.8678382804928L276.27691977666314,399.41212172780575L275.2756148010078,398.86232674675796L274.23613695932045,398.26843679950485L272.3979642432207,397.2394345870215L271.6080785287427,396.8043193897429L270.5803461694927,396.22221109953045L269.85799717146506,395.79886343534577L268.67463678505146,395.13738900049395L267.7702323281562,394.6170346117219L264.73989011381354,392.92665050260024L261.57447446657034,391.1304880497744L261.1986180664005,390.9100137088332L259.78328382454606,390.1192524512413L258.13891204974834,389.18446288121277L257.9157473061339,389.09039682695914L254.74152259517382,387.2914121373417L252.28964683413164,385.9157543669228L250.4602832779667,384.87521344441814L249.08312190214156,384.1139248992923L247.54445980604146,383.2321353184434L247.11281221996728,382.996993514232L246.0439705759702,382.37975055794413L243.7242318291121,381.2246408430981L241.32814730208338,379.8726308410289L240.28866946039648,379.2701138943246L239.41362875770437,378.7792872035484L235.95163895728774,376.80426174219053L235.73728332550195,376.6161672008085L235.3144448993653,376.4427680337104L233.50563598557483,375.40238251996016L232.49552189809106,374.829295827885L232.2253750804009,374.6852901819164L231.26517943760132,374.13278168590534L230.9098776798062,373.94763356829213L230.1963377936047,373.54795051048677L227.61819780770838,372.0844253102883L220.03646950658072,367.80570273717814L218.73565400714074,367.097505295487L218.53598027650946,366.94763868002786L218.1689329881683,366.78014106652654L217.56403910316385,366.4422084831153L216.9268450452414,366.0807693154878L216.2837782460988,365.7017009101846L215.66713883055127,365.36377337636634L212.57806905969574,363.6124522324002L212.46355031727853,363.49197699865533L211.97317517469128,363.2657191276387L211.42407247559413,362.9630635767098L210.42276749993607,362.3930166642712L209.96175615966126,362.0580426542333L209.95294699972396,361.5320777195852L209.99111991386462,361.0354996403501L211.2302714861803,361.0501912623992L211.2302714861803,360.0541064280883L211.24201701672632,359.42825446919903L211.21265321441683,359.0580345564674L211.03059780365834,358.96694897309146L210.98067935897348,358.8082840534756L211.03059780365834,358.67606351919926L210.98067935897348,358.5291520679085L211.05702518725002,358.3704880431694L211.11575274376287,358.1765657264689L211.25082612855476,358.2059478807027L211.2801899308647,358.00908777407L211.28899904269315,357.80635182860067L211.3947086732819,357.67119475908964L211.57676413214972,357.497841528095L211.68247371462917,357.3009832486623L211.52097294624537,357.11881628825313L211.66485544286274,356.9924749307189L211.66485544286274,356.7192257637165L211.74120127114202,356.24618369734014L211.7793741852804,356.0434522309022L211.84691090173055,355.9053601015849L211.74120127114202,355.67912455012936L211.9056384582434,355.0768122308273L211.8381017899021,354.77418867352725L211.74120127114202,354.56264670822196L211.8762747040405,354.40692867479044L211.9438113723818,354.2306444719419L211.98198428651995,354.02791807985136L211.9056384582434,353.77230725450045L211.8087379875899,353.6312809695448L211.68247371462917,353.5372635652457L211.7235830474849,353.33747692122614L211.71183751693866,353.09362037335126L211.56795497221196,353.11124853618617L211.50041830387045,352.92027701326185L211.91444761817843,352.7616240511178L212.01134808883216,352.5442112916208L211.8381017899021,352.51189320992984L211.47105450156073,352.30329507773513L211.44462711796632,352.12701538894726L211.28899904269315,351.903728290509L211.25082612855476,351.71569751863944L211.37709040151844,351.6158063101651L211.58850961458666,351.71275954871084L211.71183751693866,351.5423570362405L211.70302835700113,351.34551315729493L211.75001043107704,351.1721734406142L211.91444761817843,351.14866978836056L212.058330114799,351.2162428123246L212.19340354769724,351.10166245542723L212.32847693248914,350.91657142447065L212.36664984662752,350.74029465522426L212.2697493759763,350.5228871031423L212.28149485841345,350.34367323245715L212.33728604431508,350.18502515416895L212.31966777255184,350.0116878176797L212.24332194427257,349.7619651548978L212.24332194427257,349.53574642134794L212.28149485841345,349.3829756718475L212.14642147362133,349.291900920372L212.02896636059563,349.17144734657995L211.9438113723818,349.0363045545831L212.00253892889464,348.86590741518637L211.8381017899021,348.68375915105474L211.82929262996458,348.516300566836L211.73239215931335,348.3958480759411L211.56795497221196,348.49573550495126L211.35653575914353,348.5339277735015L211.35653575914353,348.3370908439981L211.31836284500537,348.06387023529334L211.2214623743514,347.81709100266266L211.06877071779627,347.7113287362192L210.90433353069466,347.71720440096067L210.7516418741393,347.66726111886555L210.79862390010612,347.4469235575301L211.14511654607531,347.1972082503164L211.0482160754243,347.0415038059569L211.16567118845,346.92692900785477L211.27138077092968,346.6772152234795L211.31836284500537,346.474506883784L211.2038441025884,346.39812415841084L211.05702518725002,346.3540572461859L210.94250644483554,346.2541722555112L211.10694363193716,346.13666069644154L211.34772664731508,345.90163804353597L211.43288158741984,345.7958780228574L211.4622453897323,345.5637940276964L211.66485544286274,345.4932875995838L211.59731877452145,345.3199595727874L211.52097294624537,345.17013391012944L211.64430080048828,344.93511374329967L211.63549168866257,344.7382848671569L211.69421924517542,344.5649582434594L211.82929262996458,344.51501677785484L211.93500226055335,344.3475660715258L211.97317517469128,344.1448629924697L212.02015720065833,344.01560329419766L212.14642147362133,344.12136122864524L212.29030401834848,344.04791821362556L212.29911313017692,343.9098455304253L212.2521311042101,343.77471071058926L212.24332194427257,343.60138596826795L212.21395819007216,343.4662516514709L212.07007564534547,343.3017405545032L212.02896636059563,343.06672525277133L212.1346759430753,342.9697816127883L212.2227673019006,342.793520665836L212.36664984662752,342.793520665836L212.50172323141692,342.89340184392756L212.63679661620858,342.9609685333977L212.72195160442266,342.81702208999184L212.76012451856081,342.65251219792816L212.91575254572763,342.5085662335226L213.06844420228276,342.42337386436765L213.0302712881421,342.2764905992895L212.96273457169423,342.0796673733993L212.81004291513887,341.9562859042748L212.7131424444849,341.8505304475359L212.72195160442266,341.6625210733562L212.60743286200545,341.4892002754738L212.74250624679712,341.34525610135086L212.72195160442266,341.1425595883512L212.61624197383412,341.04561794405197L212.53108698561982,340.9193002176695L212.4429956749036,340.5491607550214L212.32847693248914,340.3523411332943L212.24332194427257,340.1643347338124L212.33728604431508,340.0350805905972L212.47235942910697,339.97632870369966L212.48116858904473,339.80888613888936L212.36664984662752,339.6414439138838L212.41656824320262,339.5063152386683L212.5487052573833,339.438751020173L212.6661604185183,339.2507464073902L212.76012451856081,338.933489444778L212.76012451856081,338.76311113948833L212.53108698561982,338.63385882254937L212.67496953034697,338.58685800061494L212.84821582927702,338.58685800061494L212.98328926217505,338.53691970925456L213.06844420228276,338.41648030091665L212.99209837400372,338.2108524310627L213.13598091873064,338.17266444764084L213.23288138938437,338.00816256457875L213.3092272176607,337.69678466357925L213.36795477417354,337.56165872850994L213.4443006024528,337.43534549935185L213.5999286296169,337.37365772193033L213.75262028617203,337.4265329779951L213.8113478907942,336.9506567347365L213.94642127558336,336.8449068047655L214.04038537562565,336.6422196836759L214.09030377220392,336.4835952957554L214.04038537562565,336.319096161492L214.03157621569085,335.8960996287699L213.94642127558336,335.7169141673935L213.82896616255766,335.54360392631975L213.7320656437971,335.34679431245456L213.5999286296169,335.1352978773058L213.5118373189007,334.96786349603076L213.4266823306864,334.674119618506L213.2798634153512,334.2540673735509L213.15653556110556,333.9427010438541L213.080189732829,333.6871464038041L213.00090748583216,333.5138395820896L212.91575254572763,333.36990699131053L212.85702498921478,333.18191372306194L212.8276611869021,332.9939207916785L212.74250624679712,332.82942724033467L212.30792229011467,332.54743891259295L212.47235942910697,332.391758192265L212.67496953034697,332.1655809308105L215.62015680458444,329.0725809998589L215.83157601765265,328.8346615739345L216.31314204841124,328.34120057415555L216.50400661910498,328.1238434838781L216.75359874631135,327.86242804162094L216.8593083768999,327.76256164439656L217.3790472736905,327.2044862350382L217.7549036738601,326.8138350704974L217.88997710675858,326.6845973811805L219.0146098885507,325.4803440827782L219.35229337458213,325.1396307726638L219.5079214498553,324.9663373190999L220.4211350185792,324.0176334868722L220.73826386223595,323.6769243630744L220.94968307530416,323.50363303017735L221.09356562003086,323.3068448786928L221.8540875803085,322.50207265918016L222.53826366419776,321.7413621362706L222.88475626205513,321.37716263741504L223.92423415185158,320.24051449308854L226.0971539352654,317.8967600533057L226.20286356585393,317.81158678600775L226.45245569306053,317.51201235444296L226.66387495423805,317.29173750183884L226.63744752253683,316.7718901805864L226.57871996602398,316.1257550811083L226.51999240951113,315.55010997693745L226.48181949537297,315.2564144087085L226.47301033543522,315.0537648776626L226.41428277892237,314.4135116451672L226.34674611058108,313.8114412920303L226.164690651716,311.88776987936785L226.13532684940378,311.50303864447847L226.0971539352654,311.147677059392L227.01036755209816,311.5559024316351L230.36958414064384,313.1330137832676L231.0537602245331,313.4413895365144L231.68801791184706,313.7115859334581L232.39862142743755,314.05814297722617L233.67888228450238,314.7013315316741L234.28671254011533,315.14481025906076L235.09421652635933,315.77919292877186L235.57578255711792,316.14631387419075L235.7578379678739,316.3049103953805L235.6814921395976,316.7366463618374L235.27627198522418,318.19046128614065L235.05604361222117,318.9188432512955L234.61265049560097,320.4960391331362L234.12227535301372,321.1656924482918L233.60253645622606,321.8206638225133L233.98720196822455,321.9528333477769L234.97969778394213,322.1378708811064L237.0674626272512,322.5549407533269L237.52847401563508,322.637180024006L238.1069404689356,322.7576019194977L239.0583269999065,322.93676647375366L239.25212794121148,323.01313176078486L239.89519478846296,323.0983085093815L241.1460918432158,323.33034194528904L241.71281281407914,323.45663883439136L241.80971328473288,323.55650155833115L241.8596317294173,323.7914730101942L241.9741504718345,323.97063909085307L241.86844088935504,324.234982940203L242.32064311780118,324.4611442534922Z\" stroke=\"#000\" fill=\"#FFF\" strokeWidth=\"0.5\"></path>\r\n        <path id=\"Kericho\" ref={(item) => countyRefs.current[34] = item} d=\"M183.86616373144625,260.21926215416164L184.14511966096484,260.2779897116134L184.88802334947627,260.10474340920695L185.18459750265197,260.10474340920695L185.3783984920633,260.11355252126674L185.63679973109834,260.142916324303L185.8100460781377,260.29560798361615L186.17709331836977,260.42187225780685L186.32097586309646,260.42187225780685L186.59112263267775,260.3748901833669L186.67627762089478,260.15172543633616L186.92586974810115,260.0929978783418L187.18720740585354,260.32497178628756L187.63940963430264,260.7595557445539L187.7539283767171,260.89756550003506L187.889001761509,261.04144804527425L188.0035205039262,261.14715762862716L188.37937690409626,261.15303041801815L188.8785612066181,261.13834851670543L189.03418923378217,261.16771227123377L189.22505380447842,261.12366661540375L189.39830015151483,261.18533054321887L189.5921010928198,261.15303041801815L189.75653827992141,261.1589031593044L189.96795749298985,261.14715762862716L191.21885454774224,262.2835360680655L191.42146464898497,262.34520000523196L191.81493932091803,262.38043655485836L192.02635853398647,262.40980036245327L192.16143196688745,262.4362277509635L192.30531446350506,262.48908257656575L192.41983320592226,262.69756546613144L192.52554283651125,262.9383485499157L192.60482503539583,263.1644497436019L192.47856076243556,263.36705988174833L192.6312524671,263.70180716922715L192.50792456474505,263.7898985803859L192.41102409409382,263.93965396249155L192.15262280694992,264.19218264407283L192.03516769392422,264.37130188010616L191.95882186564495,264.52986642146675L191.79438467854357,264.64144890179784L191.59471094791206,264.72660397712434L191.44789208068573,264.80001351294055L191.51542874902725,265.01730571560904L191.38035536423513,265.16999756252056L191.73859349264194,265.4430811254554L191.82374848085578,265.72791023615156L191.46844672306065,265.9921847202737L191.30400953595904,266.10376729886553L191.29520037602128,266.32105972932635L191.2482183500549,266.49724277133737L190.8811710617133,266.68517139466206L190.64919720627017,266.65580752442213L190.60221518030357,266.8642909120213L190.59340602036582,267.0522195901186L190.71673392272078,267.19610247249835L190.7666523192961,267.3722856864969L190.77546147923363,267.571959964336L190.75490683685916,267.7334612885033L190.8606164193386,267.8832170666401L190.90172575219435,268.0564639612943L191.00743533467403,268.2003470227114L191.14250871946592,268.2884386597733L191.23647281950844,268.39414869215994L191.40091000661005,268.32073895427834L191.5359833913992,268.18272868659557L191.6886750479548,268.1093189640553L191.83255759268422,268.0623367232081L192.02635853398647,268.0564639612943L192.22015952340053,268.1151917262714L192.35229653758097,268.0917006295026L192.5167336765735,268.03297286585695L192.75751669195142,268.0124181517687L192.99829970733208,268.10050977268816L193.1627368944337,268.2443928402846L193.20090980857208,268.46462205332733L193.2772556368509,268.65842377459563L193.45931109571598,268.69072408129045L193.59438448050787,268.62905985161757L193.75882166760948,268.64961462647267L193.92032243599078,268.6055687427439L194.04658670895424,268.6877876984759L194.0172229066443,269.04309095157L193.8821495218524,269.6744153547479L194.31673347853507,269.8564717892545L193.79699458174787,270.1354292911205L193.6824758393302,270.6551713762491L193.44169282395228,270.6845353690395L193.37415610750213,271.01634829735127L193.47986573809067,271.2600694170594L193.37415610750213,271.4391898318137L193.42994729340626,271.8238583461693L193.47986573809067,272.06464335023986L193.41232902164006,272.4111390100867L193.34479235329877,272.70477949091384L193.29781027922286,272.8633454500949L193.2772556368509,273.0365934483188L193.20090980857208,273.3155522163462L193.11281844974928,273.58570185751415L192.89259007674355,273.84410600679917L192.67236175184644,273.85291521821415L192.50792456474505,273.9116434901949L192.37285117995566,273.97918093339035L192.22015952340053,274.08489179276364L192.20841399285428,274.35504179209573L192.20841399285428,274.6428104177217L191.65931129375417,274.94526133883903L191.5741563055401,274.7573306766117L191.2482183500549,274.70153877234276L191.0749720511244,274.8248682222401L190.91934397585146,274.8835965484822L190.8606164193386,274.7397121773764L190.79601612160582,274.4636891289377L190.66094273681642,274.3021863346874L190.52586935202453,274.18472981256144L190.39079591912628,274.12893796589805L190.34381389315945,274.3168684137063L190.30270460841007,274.5282902309335L190.08247623540706,274.7397121773764L189.98557576475287,274.8454231332918L189.87986613416433,275.25945802807087L189.79471119405935,275.63531977759123L189.22505380447842,275.40334258832763L189.35131807743915,274.58995498093304L189.3718727198136,274.3873423598838L188.72586955006273,273.9351347717939L187.50433624951074,273.3918988438023L187.2929170364423,273.2568240516467L187.2429985917579,273.4388813663917L187.16665276347908,273.6473664573072L187.06975229282784,273.7853777897706L186.35914877723758,273.7971234038356L186.16534783593283,273.7295859818602L185.96567410530133,273.7853777897706L185.78068227582503,273.8587880740117L185.61918145933487,273.8969614216411L185.29911624506667,274.00854507507205L185.06126964840632,274.0173542890022L184.7823137188875,274.11425589177145L184.48280314699673,274.1465564457283L183.8779092619925,274.51654460170454L183.47268905951273,274.7103479972141L182.99112307686346,274.8835965484822L182.6534395908318,275.01867172805765L182.42440205789103,275.08914576511546L182.13370064593482,275.2007296602832L181.74903513393633,275.3358049208636L181.85474471641623,275.50024443886747L182.19242820244767,276.0669738491162L182.32750158723707,276.39291699834735L182.51836615793331,276.6102125043545L182.6152666766934,276.75409745508097L182.9823139169257,277.35606551300066L183.15556021585599,277.6820095062581L183.3464248346586,277.96390721909506L183.60776244430213,278.37500838001165L184.289002205692,279.51141152379137L184.52978517296333,279.896086138044L184.55914897527327,280.1045740691867L184.39471178817143,280.2425872540088L184.23321101979036,280.2866340622484L184.12750138920183,280.3776640907043L184.059964672751,280.51274092643865L183.9043366455869,280.68599172112573L183.70466296306495,281.032493547548L183.62538071606832,281.185189420493L183.4903073312762,281.2967748779959L183.35817031709553,281.3878051015373L183.14381473341882,281.44947081170443L183.01167771923815,281.62859495030864L182.94414100278755,281.81652859442335L182.80025845806085,281.8781943291726L182.7503400614828,282.07200106870243L182.64463043089404,282.24818905709674L182.6152666766934,282.4067583650565L182.54772996024303,282.5535817981158L182.42440205789103,282.6915959499283L182.26877403072422,282.7444524450826L182.08671857185914,282.72977007648865L181.95164518706702,282.68278651079805L181.62570723158456,282.7826265774864L181.5288067609306,282.9177043070444L181.32619665969105,282.9940526145978L180.87399443124468,282.9705608369457L180.7976486029654,283.0968291909188L180.70955724414307,283.2054787826224L180.3542554863452,283.60190322288975L180.15164543321453,283.58722081714143L180.06649044500045,283.74579074701904L179.940226172037,283.90436070490927L179.62309732838025,284.07174021480097L179.47040567182466,284.0541213124522L179.28541384234836,284.06880373902936L179.09454927165484,284.1539617877548L178.94185761509948,284.265548155613L178.68051995734686,284.33602381672995L176.83353812941823,285.3226845684261L176.804174327106,285.0495906417899L176.707273856455,284.91451203392285L176.49585464338656,284.70308476201944L176.22570787380528,284.5738792630783L176.1111891313883,284.4534832541473L175.92913367252322,284.3037225102316L175.7470782136554,284.3624522176772L175.54446811241587,284.4035630144583L176.49585464338656,282.1277939294487L176.91869306952321,281.0853497986367L176.7571923011394,281.17050711582067L176.62211891635025,281.2292362898741L176.45768172924863,281.2586008563326L176.28443543031835,281.2586008563326L175.899769870211,281.1763800183761L175.7646964854216,281.07066749790056L175.65898685483307,280.95614565850775L175.5151043582125,280.9297175651924L175.33304889934743,280.9590821561991L175.13924795804246,280.8886071801148L174.910210473211,280.9649550554336L174.707600371971,281.05598524585093L174.5431631848694,281.14701545841945L174.37872599776802,281.182252921022L174.16730678469958,281.16169771405424L173.90890549755568,281.0178112969929L173.7356591986254,281.1088415002618L173.53304909738563,281.16169771405424L173.33924815608088,281.1675706645788L173.11901978307492,281.1382060572087L172.9281552123814,281.243918596869L172.84006385355883,281.67264192097787L172.73435427107938,281.8781943291726L172.59928088628726,282.08961986842087L172.53174416983666,282.21588790249575L172.3291340685969,282.50953476652927L172.34087959914314,282.65342182757786L172.2527882403208,282.7973089002187L172.15588776966683,282.9793702353328L171.99438695317644,283.0850833224031L171.9151047542889,283.27301774858546L172.1000965837652,283.37873087921326L172.35849787090933,283.46682522025634L172.49357125569873,283.53436423878827L172.41722542742218,283.6694422688291L172.24397912849213,283.8074568273339L171.97383231080175,283.8984877563985L171.73304934353018,283.9425349690225L171.5509938846651,284.02475650939033L171.37774758573505,284.0629307875643L171.2045012386959,284.0159470353114L170.96371827142707,284.0922955940639L170.7229352560464,284.14515231017964L170.55849806894457,283.980709237588L170.5320706853529,284.21269146797886L170.49096135249715,284.4006265356705L170.3969972524544,284.59737115495255L170.41461552421788,284.8528457416729L170.52032515480664,284.98792432299683L170.67595318197073,285.01141624565935L170.878563283213,285.06427311418196L171.07823701384427,285.2551451739044L171.09879165621646,285.448953839722L171.00189118556523,285.59284219826304L170.99308202562747,285.83950807915625L171.13696457035712,286.01569815137515L171.28084706697496,286.0832376663055L171.42472961170165,286.20363431016574L171.4364751422479,286.4062530763881L171.34838378342533,286.5501418928143L171.37774758573505,286.7380783904749L171.50401181058942,286.90545943992976L171.64789435531634,287.0464119495723L171.74185845535885,287.1903010818748L171.6860672694545,287.36355540844744L171.5304392422904,287.46046041495475L171.42472961170165,287.58966715772266L171.42472961170165,287.8245886726565L171.60972144117818,287.97435122716064L172.06192366962432,288.36490886302073L172.15588776966683,288.47943337975744L172.32032495676822,288.7642766203229L172.49357125569873,288.8729282577572L172.69618135693827,288.97570684142545L172.83125474173016,289.07261241286426L172.94577348414737,289.1871372286358L173.10140151131145,289.24880449446175L173.22472941366368,289.30753519813675L173.0720377571081,289.4661081580979L172.84006385355883,289.59531584852596L172.73435427107938,289.759762096079L172.8195092111839,290.01524124562746L172.83125474173016,290.2207993904923L172.8195092111839,290.3705632842257L172.68737219700347,290.5056445560178L172.52293505801094,290.6201700004268L172.37905251328152,290.74056858535874L172.22342448611744,290.83747481324764L172.07073282956185,290.91382520372355L171.92685028483515,291.0342239767566L171.79177690004303,291.19279800005586L171.6860672694545,291.2808947499038L171.54218472472735,291.36605493098034L171.38655669756372,291.50113668902526L171.33076551165937,291.66852072479963L171.2514833127716,291.82415864513666L171.08998249628144,291.90931901407305L170.84919952900964,292.0062256985493L170.4439793265301,292.22646833777844L170.3470788558766,292.36742369956124L170.07986845690652,292.35861400807914L169.7040120567367,292.38210656752585L169.04919972704806,292.51718893724643L168.84658962580852,292.4966328818976L168.63517041274008,292.54068151223896L168.27986865494222,292.51718893724643L168.1154314678406,292.58766666915426L167.95099428073877,292.6317153162923L167.77774798181144,292.69338337823183L167.64561096762804,292.564174089541L167.56632876874346,292.4055991773831L167.39308246981295,292.2705168704516L167.23158165332006,292.31456545929046L167.0759536261562,292.39091630798185L166.92326196960084,292.39678943638853L166.69128806604863,292.37623343947587L166.50923265529286,292.39972600064544L166.34479546819125,292.4643306158669L166.153930897495,292.39678943638853L165.9689390680212,292.3057557216326L165.76926533738992,292.16480039591346L165.72815605264054,291.96217721394333L165.76926533738992,291.8094758109762L165.86322943743266,291.6743938838492L165.76926533738992,291.5246292138693L165.81624741146584,291.28383130074934L165.9307661538803,291.12232062257453L166.1040124528106,291.0635895058836L166.03647573636,290.8697769135082L165.91314788211707,290.7229492708118L165.89259323974215,290.4381039112059L165.96012990808367,290.2442917960623L165.9689390680212,290.0534163152706L165.8074382515283,289.98000276549794L165.757519854953,289.8419852344907L165.73990158318657,289.6452370328229L165.34349054064228,289.6011889115578L165.19960799591513,289.6716658706332L165.1144530077013,289.827302515558L165.05572545118844,290.0093681732941L165.03810717942224,290.1884974205244L164.9588249805372,290.39992878457906L164.81494243580778,290.71707618227L164.65050529681525,290.678901013853L164.5859049509761,290.5585024100331L164.64169613688046,290.3617536636413L164.78557868160715,290.18262429614754L164.84430623812,290.0240509024912L164.82375159574553,289.8449217687532L164.7092328533281,289.68341204835417L164.60352322273934,289.55714084577403L164.53598655440078,289.4367428111493L164.50662275208856,289.28697945278134L164.41265865204582,289.10491429382296L164.30694902145729,288.9316588790712L164.25703062488196,288.74078439442457L164.23941235311577,288.5322908762579L164.18949390843136,288.29736876356566L164.1983030683691,288.15347906668364L164.27758526725688,287.9831607690468L164.25703062488196,287.79522345452415L164.2482214649442,287.6043497556955L164.32456729322348,287.46046041495475L164.26583973671063,287.32538071649424L164.23941235311577,287.175618505223L164.3333764531585,287.0082372997545L164.29520353902012,286.84966574608933L164.2188577107438,286.6558561759723L164.3627402073614,286.50609431010105L164.32456729322348,286.29172939221087L164.26583973671063,286.1360947199755L164.15132099429343,285.95403159033526L164.27758526725688,285.77196861879014L164.3627402073614,285.5987151782138L164.43027692381202,285.40490641810214L164.5859049509761,285.2375262059354L164.4978136402599,285.0877650425798L164.37154936729917,284.8322903136054L164.18068479660292,284.75594157876L164.06616605418844,284.8293537827537L163.88117422471214,284.82348081735114L163.68150049408086,284.75594157876L163.46714491040416,284.761814542904L163.4407174787002,284.62086304855944L163.48769955277612,284.4094359721087L163.46714491040416,284.20681846580106L163.53468157874272,284.0776131664277L163.71967340821925,284.06880373902936L163.78721012466985,283.8984877563985L163.7960192364983,283.73991780133434L163.87236506477439,283.3405566799662L163.8929197071493,283.04690915630886L163.86355595294594,282.8501654115721L164.0162476095013,282.66223121784805L163.97807469536292,282.45961476883684L164.0162476095013,282.2834266749191L163.93109262128723,282.1101751278395L163.737291679985,281.8547026263247L163.7079279257821,281.68732419760977L163.69911876584433,281.51407293810325L163.63158204939646,281.36431343034707L163.5464271092892,281.2057446287601L163.44952663863796,281.05011229708L163.33500789622076,280.9649550554336L163.229298265632,280.82400511423873L163.06486107853038,280.6948010636505L162.83288722308998,280.6771823788046L162.82407806315268,280.47750347809847L162.86225102539993,280.2807611253303L162.75654139481117,280.18973116767194L162.68900467836056,280.03703569221705L162.66845003598837,279.86378518656835L162.34251208050296,279.54958532474666L162.3043391663648,279.3381611971019L162.15164750980944,278.6833344835378L162.13109286743475,278.38675415105536L162.13109286743475,278.20763142990154L162.08411079335906,277.9962080236685L162.1017290651223,277.79946685287854L162.07236526281258,277.62034441882633L162.13109286743475,277.4001119705951L162.1017290651223,277.21218037712754L162.122283707497,277.01543959478175L162.3131482781905,276.68655960387616L162.44822166298263,276.64544963309527L162.58329509588089,276.5867211026712L162.89161477960283,276.413471972507L163.03549732432998,276.29307850979586L163.19993446332228,276.1051473547299L163.39960819395355,275.9671354747944L163.56404538105494,275.78214085734743L163.84300131057398,275.5472271885366L164.06616605418844,275.3446142043466L164.18949390843136,275.18604755733594L164.27758526725688,274.95994338701075L164.30694902145729,274.76320349378295L164.32456729322348,274.560590808823L164.3627402073614,274.3344868994159L164.35393109553297,274.14362004040436L164.4009131214998,273.9703717200443L164.4978136402599,273.6767305822048L164.48900448032487,273.4212629079627L164.5447956662265,273.1423041395808L164.55654119677274,272.99842015561234L164.5447956662265,272.84279060930055L164.55654119677274,272.6372421900716L164.59471411091363,272.23201834112916L164.64169613688046,272.029406510329L164.78557868160715,271.5390274319898L164.85311534994867,271.3276066284053L164.92065206639654,271.1925322601349L165.03810717942224,271.0780127035683L165.23778091005352,270.978175118991L165.36404518301697,270.81373686416384L166.01004835276785,270.64929859707166L166.38296838232918,270.59644344215263L166.65311515191047,270.52596990789533L166.80580680846583,270.4525599911965L166.8850890554627,270.3321677696377L166.97905315550497,270.1647932163785L167.4899829404642,269.22514725434536L167.63386543708202,268.99904509751093L167.7219567959071,268.8404800017918L167.8834576124002,268.46462205332733L168.06844944187378,268.2678839405653L168.25931401257003,268.2590747959362L168.37676912559596,268.4029578379745L168.4619240657007,268.58207763444136L168.63517041274008,268.5703320564493L168.8289713540421,268.5703320564493L168.9904721705352,268.5996959776407L169.19308222366567,268.6672329227999L169.38688321307995,268.7435791178421L169.5219565978689,268.71127880936143L169.68345736625292,268.6202507037633L169.87725835566425,268.65842377459563L170.0211408522846,268.62905985161757L170.25311475583385,268.6143779385705L170.40580641238944,268.6819148847608L170.61722562545788,268.7024696126429L170.77285365262446,268.5380318018937L170.94316362905238,268.5527137137808L171.17513748449528,268.6055687427439L171.4159204998732,268.62905985161757L171.54218472472735,268.75532464984633L171.6655126270823,268.83167080386994L171.80939517180946,268.9755539794167L172.0120052249399,269.0812640877396L172.17644241204152,269.1781650070849L172.21461532617968,269.32204818921747L172.3291340685969,269.6391786269096L172.35849787090933,269.821235053812L172.43484369918565,270.0855105580835L172.6080899981157,270.18828436697686L172.76371802527956,270.2176483422746L172.91640972994423,270.1677296041543L173.08084686893676,270.1794752034654L173.23353852549212,270.36153175023344L173.41853035496865,270.42319605531225L173.60939492566172,270.5582702849853L173.75327747038887,270.6874717587582L173.79145038452953,270.88127398642047L173.84136882921393,271.0192847364753L173.9646966834573,271.1220586699385L174.04397893045393,271.27475142526225L174.21722522938398,271.41569864230587L174.34936224356466,271.48323582024994L174.4580082447619,271.57720064004076L174.4080898000775,271.7944943552641L174.4580082447619,271.9236960497509L174.58133609900756,272.029406510329L174.75458239793784,272.13218063993173L174.94838338734894,272.2085271244563L175.44756764176464,272.1938450964186L175.62962310062971,272.1644810894268L175.85278784424395,272.1615446454978L176.02603414317446,272.2143999165203L176.22570787380528,272.2525731624166L176.3813359009696,272.34360169188864L176.52521844569628,272.3083648371709L176.63973718811326,272.40526616815384L176.74544677059316,272.5550228120992L176.84234724124394,272.73707996886895L177.03614823065823,272.7517620092236L177.2563765555551,272.71358873387766L177.48835045910437,272.58438688475815L177.75556085807693,272.47867628717796L177.97872560169162,272.4199482009166L178.29585444534837,272.28193722142936L178.3722002736274,272.13218063993173L178.28704528541084,271.92956883932084L178.09324434410883,271.09269470809943L178.14316278879323,270.9282563798539L177.9963438734576,270.7080265352172L177.9023797734153,270.4819239762888L177.82309757452754,270.2323303303244L177.76730638862318,269.9798003269607L177.75556085807693,269.8182986672783L177.74675174624826,269.263320350102L177.5646962873834,269.2398292251627L177.45898665679465,269.1282463299606L177.1976489990418,269.2310200234004L176.08182532907858,269.2310200234004L175.62962310062971,268.4411309003066L175.6501777430044,268.2884386597733L175.5151043582125,268.2443928402846L175.43875852993597,268.03297286585695L175.33304889934743,267.93607206066L175.24495754052214,267.81568012563815L175.08345677214106,267.83036207524833L175.03353832745393,267.98011786697174L174.910210473211,268.04765481848335L174.75458239793784,267.8890898275879L174.4286444424522,267.2636393760584L174.3405530836269,267.1138836804407L174.04397893045393,266.5500977029275L173.6475678398001,266.5500977029275L173.1395744254496,266.5324793921599L173.0426739547986,266.39740571616943L172.83125474173016,266.14194028575366L172.73435427107938,265.93932981004497L172.93696437231893,265.8248108684646L173.16600185715083,265.8042561912766L174.21722522938398,265.65156428484886L174.39047152831404,265.63688236046926L174.61950901314594,265.5987093865961L175.09226588396677,265.53704536494087L175.29487598520927,265.5458544901262L175.52391347004095,265.3872898593518L176.63973718811326,264.8763594255433L177.04495734248667,265.19348865409256L177.20939452958828,265.33443496983136L177.4501775449662,265.52529981666135L177.9023797734153,265.86885664748394L178.16959017238491,265.93932981004497L178.35458200186122,266.0156757760694L178.81559334213603,265.98337559248904L179.7288069589688,266.02154857616097L179.87268950369548,265.93052068258004L180.045935802626,265.8394927946589L180.18100918741766,265.719101109934L180.59503850172587,265.44014475057793L181.0002587042054,265.06428784683675L181.13533208899753,264.9497689672848L181.25865994324045,264.89104134327647L181.48182468685468,264.81469538195944L182.01918190351762,264.6062123233154L182.23060111658606,264.48582072498897L181.83712644465254,263.4052328134587L181.65507103389405,262.87962097524286L181.59634342927188,262.7357383900719L181.2968328573811,261.87831581736776L181.40254248796987,261.57586885537336L181.46127004448272,261.43198630512376L181.72260770223556,260.66265527388947L182.28051956127047,260.3337808982123L182.46257497202896,260.17228007916464L182.92358636041286,259.8933241884211L182.77970381568616,259.546831518444L183.24071520406983,259.546831518444L183.41396150299988,259.5350860348928L184.2214654892441,259.51746776141846L184.36828440457975,259.66135027061534L184.4916122588254,259.8727695450498L184.24202013161607,260.0078429355581L184.03060091854763,260.10474340920695Z\" stroke=\"#000\" fill=\"#FFF\" strokeWidth=\"0.5\"></path>\r\n        <path id=\"Bomet\" ref={(item) => countyRefs.current[35] = item} d=\"M178.6717108455182,307.63522158170497L178.51608277024525,307.5618015174398L178.33402735948675,307.61466396613537L178.16959017238491,307.72038886713966L178.15197190062167,307.87016597266364L177.94055268755324,307.79380900332364L177.7379425863137,307.9406493758773L177.8054793027611,308.1109843623852L177.4677958167324,308.231393716757L177.27693124603616,308.31656131780085L177.14185781313768,308.41347625097865L176.99797531652007,308.4957071860258L176.97742067414538,308.66310594990205L176.84234724124394,308.7306528391542L176.88052015538506,308.89511503252936L176.66910094231662,308.9626620690373L176.44887256931088,309.0977561808337L176.2462625161802,309.06251421907416L176.131743773763,309.1741137757281L176.02603414317446,309.29746071610873L175.82342404193446,309.3473869137628L175.697159768971,309.44430247981916L175.54446811241587,309.53534444462235L175.3888400852518,309.5294707833917L175.29487598520927,309.69687064845897L175.14805706987113,309.77910220694935L174.8896558308361,309.8818917164359L174.8133099544507,310.00230242658967L174.61950901314594,309.9230075874688L174.4756264684188,309.85252329880865L174.3611077260016,309.9729339379565L174.28476189772528,310.1462080151608L174.15849767287114,310.29598738039687L173.98525132583177,310.2754294177659L173.87073258341456,310.3576613329441L173.78264127270108,310.50156720658447L173.6387587279744,310.62785210578863L173.4860670714188,310.6072940985275L173.31282077248875,310.5103778021746L172.53174416983666,309.8848286018095L171.8681227283223,309.24166088397124L171.3395746715969,308.93329377618653L170.6084165136317,308.3459294964844L170.10629584049866,307.9171549207517L169.68345736625292,307.5852959209164L169.23125513780383,307.2005753166739L168.9434900964593,306.915706435965L168.8084167116674,306.8452234762586L167.5399013370395,305.8144137788723L167.4899829404642,305.6851959116809L167.0759536261562,305.42088696047796L166.8938981672884,305.27698557505244L166.6149422377723,305.03617134974917L166.153930897495,304.6602668315416L165.96012990808367,304.46350461080004L165.81624741146584,304.37540219257374L165.04691633936,304.1933240668635L164.84430623812,304.1316524889876L164.48900448032487,304.06410741805274L162.45703082292016,303.5766091173556L162.48639462522988,303.4180256443436L162.43060343932552,303.20658116912256L162.51575837943324,303.0039471870132L162.65964092415993,302.8130602353245L162.83288722308998,302.7161485037119L162.9767697678169,302.8659212148717L163.04430643615842,302.7161485037119L163.06486107853038,302.28738808788506L163.02668816439223,302.1111854910197L162.96796060787938,301.9467298575941L162.89161477960283,301.7822744189426L162.9092330513663,301.5913887425906L163.10303399267127,301.5179712380757L163.31445325384857,301.49447765621375L163.4583357504664,301.5473382556522L164.00743844956628,301.8938691443L164.82375159574553,301.0187330295144L165.98068455045836,299.6649230055202L166.23908583760226,299.3918127814727L166.07464865050065,299.05409638848397L166.01885746459652,298.7193172679567L165.37285429484564,297.52410145074043L165.1614350817772,296.89859817869365L164.77676952166985,296.2055544515933L164.15132099429343,294.8693959438242L164.1983030683691,294.681453418949L164.35393109553297,294.50232082423753L164.5447956662265,294.3877935213145L164.76796040984118,294.2732662764684L165.15262592183944,294.2204075565086L165.28769935474065,294.01778260126457L165.19079883597783,293.7388065626606L165.04691633936,293.594913753362L164.97057051108368,293.4510210335859L164.85311534994867,293.32474795305086L164.86486088049492,293.10744087057356L164.6123323826771,292.79029037878036L164.55654119677274,292.6463981523676L164.50662275208856,292.4525843077744L164.50662275208856,292.22646833777844L164.57415946853916,292.05908391948134L164.53598655440078,291.8535242679933L164.60352322273934,291.63621856904666L164.69161458156486,291.4335958248458L164.90303379463285,291.2368463470292L164.89128826408682,291.0195411894276L164.81494243580778,290.79342653636303L165.03810717942224,290.1884974205244L165.05572545118844,290.0093681732941L165.1144530077013,289.827302515558L165.19960799591513,289.6716658706332L165.34349054064228,289.6011889115578L165.73990158318657,289.6481735648797L165.74871069501523,289.82142944746283L165.78688360915362,289.9565103839181L165.9689390680212,290.0534163152706L165.96012990808367,290.2442917960623L165.89259323974215,290.4381039112059L165.94251163631725,290.58786793198664L165.85442032560422,290.70239341340414L166.02766662453428,290.83747481324764L165.99830282222183,290.9872390699481L165.91314788211707,291.148749660856L165.78688360915362,291.3131968592328L165.76926533738992,291.53050232137207L165.8368020538378,291.69788637711065L165.757519854953,291.8623339892175L165.71053778087708,292.0737667686929L165.84561116566647,292.2470243218978L166.17154916926097,292.4055991773831L166.3359863082535,292.4643306158669L166.50923265529286,292.39972600064544L166.69128806604863,292.37623343947587L166.92326196960084,292.39678943638853L167.13468118266906,292.36155057187017L167.34610039573727,292.2793266068207L167.4899829404642,292.3380580144327L167.59569252294364,292.4290917414281L167.64561096762804,292.57004722220125L167.63386543708202,292.75798802483166L167.89520309483714,292.6552079025607L168.1154314678406,292.58766666915426L168.27986865494222,292.51718893724643L168.4619240657007,292.54068151223896L168.63517041274008,292.54068151223896L168.84658962580852,292.4966328818976L169.04919972704806,292.51718893724643L169.22244602597812,292.4966328818976L169.45441988141852,292.43496487076936L169.7040120567367,292.38210656752585L169.92424038163085,292.36155057187017L170.13565964280815,292.38210656752585L170.3470788558766,292.36742369956124L170.4439793265301,292.22646833777844L170.6084165136317,292.13249812631284L171.0312549397686,291.9298749713063L171.23386504100813,291.8564608256613L171.33076551165937,291.66852072479963L171.38655669756372,291.50113668902526L171.54218472472735,291.36605493098034L171.6860672694545,291.2808947499038L171.79177690004303,291.19279800005586L172.02375075548593,290.94906386068646L172.2821520426303,290.80810931050877L172.45539834156034,290.6730278782191L172.5904717263495,290.58199484657086L172.71379962870446,290.4821521265122L172.86942765586855,290.3705632842257L172.83125474173016,290.2207993904923L172.8195092111839,290.01524124562746L172.73435427107938,289.7538890294972L172.86061854403965,289.59237931705604L173.03386484297016,289.5130927873507L173.14838358538736,289.3838851371172L173.24528405603814,289.2165025961184L173.10140151131145,289.24880449446175L172.94577348414737,289.1871372286358L172.83125474173016,289.07261241286426L172.69618135693827,288.97570684142545L172.49357125569873,288.8729282577572L172.32032495676822,288.7642766203229L172.15588776966683,288.47943337975744L172.06192366962432,288.36490886302073L171.60972144117818,287.97435122716064L171.4364751422479,287.80990606320796L171.46290252584004,287.59847673566077L171.5304392422904,287.46046041495475L171.6860672694545,287.36355540844744L171.73304934353018,287.160935977429L171.59797591063216,286.96418964795527L171.42472961170165,286.8291101824364L171.34838378342533,286.62649107746466L171.37774758573505,286.4737927279653L171.44528425407657,286.31815796040013L171.4159204998732,286.1566502353502L171.21331039863367,286.0597456614807L171.07823701384427,285.9393491234802L170.97252738325574,285.8277621100697L170.96371827142707,285.6545086377244L171.06061874207808,285.5076838091768L171.1575192127293,285.33736705372115L171.0312549397686,285.2022882729971L170.878563283213,285.06427311418196L170.67595318197073,285.01141624565935L170.48215224066848,284.93506746736045L170.3969972524544,284.7941159438759L170.3969972524544,284.59737115495255L170.51151604297797,284.33602381672995L170.57024359949105,284.1304698801536L170.73174436787508,284.14515231017964L171.0312549397686,284.07174021480097L171.1956921268702,284.0100740847959L171.38655669756372,284.0541213124522L171.60972144117818,283.99539166086197L171.8211406542464,283.91904312475947L172.08835105321896,283.8838053374659L172.29096115445873,283.8133297742183L172.40841626748443,283.6635692763917L172.37905251328152,283.4580158091637L172.1000965837652,283.37873087921326L171.92685028483515,283.25539888868923L171.99438695317644,283.0674644722817L172.15588776966683,282.97643376917813L172.2527882403208,282.78849950650306L172.34087959914314,282.65342182757786L172.3291340685969,282.50953476652927L172.5405533297744,282.18652325841856L172.64626291225386,282.00446233650104L172.76371802527956,281.8547026263247L172.84006385355883,281.67264192097787L172.9281552123814,281.243918596869L173.11901978307492,281.1382060572087L173.33924815608088,281.1675706645788L173.53304909738563,281.16169771405424L173.7356591986254,281.1088415002618L173.90890549755568,281.0178112969929L174.0615971541108,281.1088415002618L174.20547969883796,281.1763800183761L174.37872599776802,281.182252921022L174.5431631848694,281.14701545841945L174.71640948379672,281.05011229708L174.8896558308361,280.97082795475694L175.13924795804246,280.8886071801148L175.33304889934743,280.9590821561991L175.5151043582125,280.9297175651924L175.65898685483307,280.95614565850775L175.7646964854216,281.07066749790056L175.899769870211,281.1763800183761L176.28443543031835,281.2586008563326L176.50466375521523,281.243918596869L176.7366376587645,281.185189420493L176.91869306952321,281.09415919860123L176.44887256931088,282.1277939294487L175.54446811241587,284.4035630144583L175.7470782136554,284.3624522176772L175.92913367252322,284.3037225102316L176.1111891313883,284.4534832541473L176.22570787380528,284.5738792630783L176.49585464338656,284.70308476201944L176.707273856455,284.91451203392285L176.804174327106,285.0495906417899L176.82472896948093,285.3520494916038L178.68051995734686,284.3418968212575L179.06518551745444,284.20681846580106L179.2208135446183,284.07174021480097L179.41167811531182,284.05705778809227L179.62309732838025,284.07174021480097L179.940226172037,283.90436070490927L180.0752995568289,283.73698128042196L180.1633909156517,283.57841140286916L180.3542554863452,283.6195221010239L180.59503850172587,283.35230260546905L180.7976486029654,283.090956256612L180.8828035430704,282.9617513906724L181.07660453248445,282.985243167719L181.3350057715195,282.9940526145978L181.5288067609306,282.9177043070444L181.62570723158456,282.7826265774864L181.95164518706702,282.68278651079805L182.08671857185914,282.72977007648865L182.26877403072422,282.7444524450826L182.42440205789103,282.6915959499283L182.51836615793331,282.59175590949064L182.6064575167561,282.4713606641555L182.62701215913057,282.2834266749191L182.7503400614828,282.07200106870243L182.80025845806085,281.8781943291726L182.9323954722413,281.81652859442335L183.01167771923815,281.62859495030864L183.14381473341882,281.44947081170443L183.30825187241112,281.4024874148341L183.4638799476843,281.31145713955675L183.62538071606832,281.185189420493L183.70466296306495,281.032493547548L183.7898179031697,280.8915436291723L183.88671837382094,280.7535302114652L183.97187336203478,280.580279338036L184.1069467468269,280.4305202026232L184.2214654892441,280.2866340622484L184.39471178817143,280.2425872540088L184.56795813521057,280.09870118311323L184.85865954716678,280.42171086617344L184.95556001781756,280.6331355259251L185.11706083431068,280.8592425946001L185.3108617756127,281.25272795247605L185.77187316399932,282.04850935313846L186.21526623250793,282.6915959499283L186.47366751965205,283.0821468553389L187.03157937868968,283.99539166086197L187.26355323413281,284.3947535300699L187.68639166026924,285.0349081700848L187.81265593322996,285.3755414898915L187.96534758978555,285.501810782858L188.12097566506122,285.8277621100697L188.2354944074757,285.95990462538623L188.802215378342,286.9348245665101L189.0635530360944,287.36942847173805L189.15751713613713,287.58966715772266L189.27497224916283,287.72474703013086L190.01493951895623,288.96983379219074L190.09128534723277,289.11078734600994L186.11836576185692,290.26484761661044L185.56045390282202,290.45278666483733L182.7708947038575,291.25446569762215L181.55817051513395,291.6127260335674L181.28802374555266,291.68907666180337L181.01787697597138,291.7507445312557L180.97089490189546,291.90638245576685L181.13533208899753,292.2558340574083L181.25865994324045,292.6170324330097L181.31738754786238,292.74624175038645L181.47007920441774,293.1368066989489L181.6638801457225,293.6653918567572L181.72260770223556,293.8004749163875L181.96045434700477,294.44946205070977L182.0279910153463,294.61391159310887L182.057354817656,294.81066389381374L182.16306444824477,294.96924045959986L182.23060111658606,295.1777394732064L182.33631074717482,295.4361610770143L182.50955704610487,295.5653719931223L182.6534395908318,295.68577311775243L182.7327217897191,295.8061743571617L182.99112307686346,295.9471319332581L183.17317848761923,296.09983609797257L183.41396150299988,296.3230193180594L183.63712624661457,296.46104061633L183.9160821761334,296.68422421464163L184.06877383268852,296.83692890744703L184.2508292915536,296.95145749971886L184.41526643054613,297.0718594538415L184.5885127775855,297.22162780096454L184.88802334947627,297.45362210118526L185.3108617756127,297.62982052017344L185.48410807454275,297.6944266127835L185.66616353341055,297.73553959575077L185.8599644747128,297.79427244971L186.03321077364285,297.9146748938369L186.30042122072473,298.0115841991257L186.61755006438148,298.02920408213555L186.8025418457462,298.0497606062167L186.96404266223908,298.1114301909211L187.15784360354405,298.14960661674235L187.33989906240913,298.1554799469674L187.50433624951074,298.1701631529951L187.9066200332727,298.4197784918346L188.05343894861062,298.5313713189112L188.1385939368247,298.6752673887689L188.05343894861062,298.86321347290493L187.88019264968057,299.05409638848397L187.72456457440762,299.1891829148811L187.61004583199042,299.2625994791696L187.52195452127694,299.3859394630169L187.23418943182037,299.6473029780105L187.04332486112685,299.7471497895209L186.88769683396276,299.7765165339927L186.84071475988708,300.002640451488L186.62929554681887,300.123044184814L186.46485835971703,300.2581314026089L186.28280294895853,300.4225855580141L186.11836576185692,300.4167122083591L185.94511946292687,300.4695725060945L185.77187316399932,300.44901572992745L185.65735437347325,300.58410317727584L185.45474432034257,300.71919072031153L185.27268886147476,300.82197476905344L185.166979230886,300.9658725790608L185.0407150060314,301.0804035497091L184.92619626361716,301.23017493152605L184.8204866330284,301.4328069998614L184.88802334947627,301.6236924653027L184.83810490479186,301.764654195175L184.72358616237466,301.91736282486005L184.52978517296333,302.02308423196246L184.5503398634471,302.17285637344014L184.41526643054613,302.2169070576776L184.30955684806645,302.3226286372281L184.0775829445147,302.36961606296313L184.02179175861284,302.7836930632257L183.86616373144625,302.89528844846365L183.76045414896635,302.9951369918702L183.76045414896635,303.168403729115L183.67529916075273,303.27999935328825L183.29944276058268,303.2888095624323L183.13500557348107,303.52962137659716L182.99112307686346,303.54430504725474L183.03810510282983,303.71757231812967L182.9529501627253,303.8526622198027L182.7708947038575,303.9495745687695L182.57709376255548,303.9055234594514L182.45376586020052,304.3078570755511L182.25996491889828,304.37540219257374L182.3069469448651,304.60740531530854L182.37448366131275,304.76598986436676L182.36567450137818,304.96275242951776L182.23941027652359,305.18007248418184L182.2893286730989,305.4385075476252L182.3069469448651,305.6117767118805L182.26877403072422,305.7674254783333L182.15425528830974,305.85259180075025L182.16306444824477,306.0464188072757L182.06616392948445,306.24905639803285L181.84593560458757,306.29604488157565L181.45246093265428,306.4223263974826L181.2498508314145,306.49868272731L181.15295036076054,306.6895737537136L181.0002587042054,306.8246659600427L180.76828480065592,306.8364130843572L180.43060131462403,306.9303903496045L180.21037298972738,306.980315810137L180.03712664268824,307.05079882774237L179.940226172037,307.20644889217317L179.85507123193247,307.37971989742493L179.71118868720532,307.4502030871995L179.57611530241343,307.6058535327645L179.43223275768673,307.5941063531704L179.28541384234836,307.47076068194605L179.13272218579323,307.5236231010006L178.9213029727248,307.36797273417164L178.71869287148525,307.32098394527793L178.75686578562318,307.49425507225305ZM178.6717108455182,307.63522158170497L178.70107459972155,307.83198748347684L178.56600121492966,307.726262509525Z\" stroke=\"#000\" fill=\"#FFF\" strokeWidth=\"0.5\"></path>\r\n        <path id=\"Kakamega\" ref={(item) => countyRefs.current[36] = item} d=\"M164.45241528674092,217.45818997349062L164.50662275208856,217.52549028756187L164.90303379463285,217.6312128782113L165.1144530077013,217.62240264068984L165.32587226887858,217.55485769626023L165.49911856780864,217.58422505194451L165.66355575491048,217.69875779337914L165.76926533738992,217.82503741503683L165.74871069501523,217.9777475125197L165.78688360915362,218.1128371010252L165.951320796255,218.29491423775758L166.153930897495,218.40063637046396L166.35360458001696,218.45937084567478L166.51804176711858,218.55628269022762L166.64430604008203,218.67962499306157L166.80580680846583,218.70899216352635L166.9408802413643,218.63263744302967L167.2580090369122,218.38301601934347L167.42244622401358,219.816132064512L167.46061913815447,219.96884048762308L167.86519462362753,221.12064454904748L167.91371798557338,220.9685888670019L168.02208687536563,220.91844278544067L168.17412679091035,220.86506150954656L168.35621448322127,220.88508846313994L168.73207088339086,220.9614422569311L168.77905290935792,224.80846069738743L168.86714426818025,225.19609515937287L169.0961817530149,225.19609515937287L169.26942805194494,225.16672896174126L169.30760096608287,227.8977710180494L169.25180982828783,228.41754627577126L169.15490930952774,228.62017022050318L169.22244602597812,228.80223792226747L169.289982742426,228.92851063776442L169.1754639519022,229.03422728516975L168.9904721705352,229.08121241474143L168.83778046587076,229.07240272168872L168.6439795245658,229.02541754227872L168.50890613977663,229.09295871975218L168.21233193849434,229.292645480405L168.0009127254259,229.3220111920269L167.79830262418363,229.360186582938L167.68378388176916,229.4864590054668L167.49879205229286,229.62154103579482L167.4430008663885,229.89170487257945L167.2580090369122,229.91813395794588L167.1053173803566,229.85352956480665L166.9408802413643,229.72725733220068L166.78818853669986,229.72725733220068L166.6824789542202,229.85352956480665L166.60613312594364,229.96805547037647L166.48867796480863,230.09139102749828L166.4123321365298,230.21766307391542L166.23027672577382,230.30575977002334L166.1040124528106,230.4496510440825L165.94251163631725,230.49663590254517L165.59601903845987,230.49663590254517L165.38459982539166,230.50544559259933L165.17024419360564,230.47608002203503L164.97057051108368,230.36155435059283L164.78557868160715,230.37036404539077L164.5447956662265,230.4202854669912L164.37154936729917,230.21766307391542L164.11314808015504,230.1706781148866L163.93109262128723,230.12075659520735L163.80482839643287,229.9856748394468L163.77546459412338,230.36155435059283L163.59340913525557,230.57298631489908L163.5082541951508,230.79616432562935L163.39960819395355,230.9782304622171L163.32326236567428,231.14267718209123L163.09422488084283,231.31593341053093L161.8227731356062,230.1325028501854L161.7376181954985,230.23821897566702L161.6583359485046,230.36155435059283L161.5261989343212,230.49663590254517L161.34120715295694,230.50544559259933L161.21787925060198,230.57298631489908L161.05344206350037,230.6111615123924L160.8508319622606,230.69044848328684L160.71575857746848,230.8049740052307L160.61004899498903,230.91068979986687L160.5337031667127,231.07513656317542L160.43680264795262,231.21902740045638L160.32228390553541,231.29537759617057L160.22538343488418,231.40990284740508L160.06094624778257,231.47744337864427L159.87008167708632,231.43926831048051L159.71445364992246,231.45982411341123L159.55295283342934,231.55379349813535L159.37970653450202,231.54498384420015L159.16828732143358,231.55379349813535L158.85115847777683,231.70062055481333L158.70433956243846,231.78578025513045L158.1963461480882,232.19983208765896L157.96437229264484,232.36427803897863L157.5797067325375,232.24681667613703L157.38590579123547,232.14110137648206L157.05115867581208,231.74760523209272L156.91608529102314,231.6712551693262L156.57840180499124,231.60371468839278L156.82799393219761,231.84451104526187L156.88672153681978,231.9678456955491L155.07791257492045,234.09682743769125L154.9134754359277,234.27889134373618L154.74022908889128,234.45214557390258L154.94283919013105,234.67238387916095L155.29814094792619,234.92198706181998L155.61820616219188,235.16278054181066L155.81787989282293,235.37420878232658L156.07040839064052,235.57682739481876L156.24365468957103,235.62674786744924L156.46388306257404,235.74127134148725L157.21559586291391,236.37555445877163L157.36828751946905,236.55761697720527L157.41526959354496,236.99221736075566L157.48280626188625,237.24181865472963L158.17579150571328,237.8966541231295L158.46355654706053,238.3576810264658L158.85115847777683,239.0712436963699L159.04202304847036,239.4060009489955L159.11836887674644,239.5616336520961L159.25344226153834,239.80242369465034L159.3973248062655,240.09019692490446L159.48541616509056,240.29281265659515L159.62048954987995,240.5512209163345L159.72619918046848,240.78320097135924L159.74381745223468,241.0827192768192L159.73500829229715,241.51437760095658L159.71445364992246,241.95778120891214L159.696835378159,242.68895569037554L159.66747162395563,243.01490051022466L159.4648615227161,243.54345922162184L159.32097897798917,243.61099719927745L159.37089742267335,243.81361116692204L159.11836887674644,243.66972588596448L158.78362176132623,243.3907645186469L158.82179472357348,243.63155223809363L158.83941294723058,243.90170417819897L158.89814055185252,244.1424915746918L158.9832954919575,244.7004132129196L159.0332139366419,245.11444935836434L159.10955976492073,245.35229976736042L159.55295283342934,246.41234765933515L159.5823166357418,246.58559627083042L159.74381745223468,246.7970182784322L159.93761839353692,247.17287935938177L160.04332802412569,247.39311030926024L160.17840140891758,247.7219884452415L160.36045681967335,248.03912074075484L160.54251227854115,248.47077275583408L160.76567702215561,248.93178849437942L160.79210440574775,249.16376448533396L160.56306692091334,249.2224925572316L160.33109306547271,249.24011098259297L159.99634595004977,249.2606658035676L159.80254500874776,249.23130174591614L159.6586624640181,249.4251043965846L159.55295283342934,249.70406257122949L159.38851569443705,250.0094483134359L159.34153362036113,250.2208690974911L159.13892351912136,250.7229932559613L158.94512257781912,250.79053036735968L158.42538363291965,250.769975590776L158.31967405043997,251.07829727816704L158.2051553080255,251.20456226875885L157.9937360468482,251.1840075030989L157.82048974791815,251.21337148137013L157.65605256081676,251.27209938655895L157.50336090426117,251.4071735570347L157.32130549350268,251.36606403555393L157.13631366402888,251.27209938655895L157.05115867581208,251.08710644407347L156.87791237688475,250.9344138361234L156.72228434971817,250.83751274612453L156.57840180499124,250.9344138361234L156.41690103660744,250.98139615800994L156.35817343198528,251.1840075030989L156.2231000471961,251.27209938655895L156.04104463643762,251.26035378662175L155.88541656116445,251.19281671593828L155.74153406454684,251.17519833827487L155.64463354578652,251.32789089972368L155.4625781350278,251.38661879655567L155.18362220550898,251.29852692565078L155.0309305489534,251.51288378685825L154.8195113358854,251.6185939549993L154.72261081712531,251.7536680686336L154.71380170529665,251.89755136600613L154.34675441695526,252.0120706902263L154.23223567453806,251.93572447576418L154.06779853554553,251.923978933317L153.865188434306,251.9445336806053L153.62440541892806,251.90636057123646L153.44234996006026,251.83882350522376L153.19275783285389,251.8476326629494L152.99895689154891,251.8858058230371L152.84626523499333,252.0120706902263L152.9431657056473,252.27047323510712L152.96078397741053,252.52300289013561L152.951974817473,252.69624999105596L152.96078397741053,252.85775143357534L153.01951153392338,253.09853540394658L153.03712980568957,253.3305101242665L152.91380190333484,253.46558403648376L152.7405556044048,253.47439317895876L152.57611841730318,253.3305101242665L152.52913639133635,253.13670846408567L152.4234267607476,253.05155319627622L152.2795442160209,253.04274400202405L152.08574327471888,253.0133801328605L151.9330516181633,253.17488152276377L151.76861443106168,253.24241849138886L151.62473193444112,253.195436242366L151.48084938971442,253.18662709749157L151.34577600492526,253.27178235382408L151.30760309078437,253.41566541671054L151.22832084379024,253.5331209379082L151.08443834716968,253.63883092465605L150.86420997416667,253.5331209379082L150.65279076109823,253.57129398187703L150.6028723164111,253.75335004112927L150.53533564807253,253.92659688307882L150.38264394340808,254.12039839995717L150.13305181619876,254.12039839995717L149.92163260313055,254.1380167224115L149.7278316618283,254.1292075852731L149.52522156058876,254.1086528835786L149.3519752616587,254.00294294206515L149.2080927169318,253.85906000629151L149.1699198027909,253.66819477593182L148.8234272049333,253.85025077075193L148.6325625861307,253.91778774429434L148.4593162872004,254.03230683173265L148.30368826003655,253.95596077473866L148.13925107293494,254.00294294206515L147.95719561406736,254.0998436981073L147.504993385621,254.1086528835786L147.622448546756,254.243726651488L147.622448546756,254.4463372982513L147.43745671727947,254.45514643301885L147.22603745610218,254.4169734190137L147.09096407131028,254.45514643301885L147.0058091312053,254.56085633389435L146.9089086605543,254.70473923193475L146.77383522765308,254.8310037532773L146.59177981689731,254.8603676227505L146.4273426297957,254.71648474248192L146.3128238873785,254.581411027764L146.0720408720008,254.64894791100477L145.8312578566199,254.67831173658413L145.69618447183075,254.72529392343102L145.5229381729007,254.75465774722528L145.3027097998945,254.72529392343102L145.10890885859249,254.71648474248192L144.94740804209937,254.67831173658413L144.72424329848513,254.67831173658413L144.5421878877264,254.69593005084224L144.38949623117105,254.6577570443186L144.19569524175995,254.6577570443186L143.9842760286915,254.69593005084224L143.72293837093866,254.75465774722528L143.57024671438353,254.7722760604216L143.15621740007282,254.9073497547918L142.95360729883282,254.9455227538706L142.7128242834549,255.01305961787372L142.38688632796948,255.18630627968858L142.1930853866645,255.25384313161996L141.95523874189507,255.31257080326387L141.89651118538222,255.50343573125178L141.88770202544492,255.7559646633562L141.71445572651714,255.8704836369063L141.5412094275871,255.9292112840057L141.39439051224917,256.1024578375401L141.16535302741727,256.16999460013176L140.9421882838028,256.1406308052898L140.78068751541878,256.1964220679645L140.66323235428422,256.3314956309562L140.53109534010332,256.4489508903194L140.4899860553537,256.25514970327697L140.4341948694523,256.090712290319L140.481176943528,255.9086566101781L140.55752277180432,255.68842788305474L140.38427642476518,255.6091455488625L140.27856684228573,255.44764444354652L140.05833846928226,255.27439781457318L140.2521394105845,255.13932415750998L140.29031232472266,254.95726831032735L140.39602195531143,254.7722760604216L140.4341948694523,254.61077490304444L140.2697576823507,254.581411027764L140.11706602579557,254.45514643301885L140.0377838269078,254.29364523379394L139.94381972686506,254.17618974544888L139.7500187855601,254.18793530924935L139.52979041255708,254.25253578775718L139.35654411362702,254.3699912684682L139.28900739717642,254.53149245742046L139.1921069265254,254.71648474248192L139.03941526997005,254.82219462116876L138.80744141452715,254.82219462116876L138.42277585441934,254.69593005084224L138.34643002614325,255.02480517372945L138.22897491311733,255.14813328750168L138.04691945424975,255.10115116400138L137.97057362597343,254.8985406232068L137.79732732704292,254.8310037532773L137.70923596822058,255.01305961787372L137.84430935300998,255.1774971499438L137.91184606946058,255.33018910908518L137.759154412905,255.44764444354652L137.60352633763205,255.5533542652034L137.58590811397494,255.7735829638326L137.430280038702,255.91746573551774L137.2100517138049,255.82350148877114L136.73729479487497,255.7941376394493L136.55523938411625,255.8117559394878L136.54643022418122,255.6003363736305L136.55523938411625,255.43883531544884L136.74904032542122,255.34193461410405L136.64333069483246,255.16868797203523L136.23811054045927,255.03361430447254L136.03550043921973,254.9455227538706L135.80646295438783,254.92790444304094L135.71837159556253,254.76346692790844L135.7565445097007,254.581411027764L136.07367335335766,254.59022016155447L136.24691965228772,254.581411027764L136.440720641702,254.53149245742046L136.67269449714217,254.3611820849661L136.82538615369754,254.23491751515303L136.9604595384892,254.18793530924935L137.02799625494004,254.06167067252716L136.9604595384892,253.89723303875203L136.92228662435127,253.7357317126092L136.9780778102529,253.5507392697666L136.6609489665957,253.36868317565356L136.5170664699781,253.30995540740005L136.29683809697212,253.2835279274266L136.09422799573258,253.3305101242665L135.96796372276913,253.40685622562938L135.65083492722124,253.44502927419518L135.46877946835616,253.48320236947154L135.32489692362924,253.5801031715769L135.18101442700868,253.63883092465605L135.01657723990706,253.7357317126092L134.84333094097974,253.79152307726284L134.63191167980244,253.82088692440112L134.3999378243593,253.72398614406626L134.22669152542926,253.57129398187703L134.3529557502834,253.48320236947154L134.48802918318188,253.41566541671054L134.623102567974,253.32170098056363L134.7669851127007,253.166072377709L134.95784968339422,252.8694970120878L134.8609492127432,252.69624999105596L134.72881215045345,252.52300289013561L134.3999378243593,252.23230013990775L134.38231955259334,252.07960774271558L134.24724616780395,251.9445336806053L134.3235919960805,251.78009564040002L134.420492466734,251.67438544458435L134.47628365263563,251.4923290290361L134.59373876566133,251.28090855031772L134.72881215045345,251.14583435859427L134.42930162666903,250.58791891886472L134.22669152542926,250.7229932559613L134.1209818948405,250.82870352927662L133.99765404059758,251.00195092895817L133.81266221112128,251.08710644407347L133.65116139462816,251.17519833827487L133.516088009839,251.28971776208576L133.35165082273738,251.6450215310163L133.13142244973142,251.8476326629494L132.77318432132483,252.03262543542635L132.59112891056907,252.0972261012845L132.45605552577695,252.1765086864381L132.24463626459965,252.22349093795475L132.28280917874054,252.03262543542635L132.36209142573466,251.8681874601742L132.42669172346746,251.69494019790383L132.51478308229002,251.5393113181347L132.52359219411846,251.39542795906252L132.50597392235522,251.20456226875885L132.5823197506313,250.94322300365326L132.55295599643114,250.7406116438857L132.51478308229002,250.58791891886472L132.51478308229002,250.42348064617136L132.37970964939177,250.19444152093604L132.28280917874054,250.0094483134359L132.21527251039902,249.84794625441853L132.38851880932907,249.7510450203344L132.611683552944,249.65414377267194L132.84072103777544,249.61597054868335L132.90825775422604,249.44272281658257L132.93762150842645,249.2694749917405L132.86127568015036,249.1344004233618L132.87008484008788,248.8172686907364L132.89063948245985,248.66457558716368L132.92881239660073,248.50013680027953L132.99634906493952,248.32688876872686L132.92881239660073,248.17419554447898L132.77318432132483,248.04792994604594L132.4854192799803,247.78658945996722L132.43843725401348,247.61334122204065L132.59112891056907,247.48120269413965L132.64985646708192,247.3461277304951L132.84072103777544,247.25803532467222L132.72620229535823,247.10534182064868L132.70564765298627,246.9614574967549L132.42669172346746,246.68249805863084L132.1477357939484,246.4299661688515L132.04202621146896,246.2302897574199L131.93631658088043,246.11283295554088L131.7160882078747,246.01886752379073L131.80124319609104,245.8720465414769L131.94806211142645,245.77808106566835L132.04202621146896,245.67236986655288L132.12130841035673,245.52554873590887L132.1594813244949,245.39340969105137L132.1770995962611,245.23777922694978L132.18884507869825,244.98818303994202L132.20646335046172,244.8442981721444L132.24463626459965,244.70922252193628L132.22701799283618,244.48899037261648L132.22701799283618,244.1013815427507L132.2534454245374,243.8811491517962L132.37970964939177,243.75488249917365L132.54414683649338,243.67853521475746L132.98753995311358,243.3907645186469L133.13142244973142,243.3907645186469L133.6599705545657,243.18815040471796L133.78329840880883,243.12942165348082L133.97709935011358,242.98553614783722L133.93892643597542,242.8328412961657L133.82440769355821,242.72712942141078L133.68933430876632,242.65078195587924L133.55426092397693,242.5157056403722L133.38101462504687,242.32190041760455L133.2165774379455,242.18682394686184L132.89063948245985,242.02531948777118L132.57351063880287,241.78453085040528L132.42669172346746,241.7346112221452L132.2740000669121,241.70818320943272L132.1594813244949,241.6112804170143L132.05377169390613,241.45564861142913L131.92750742094267,241.3499363793337L131.7454520101869,241.38811023618624L131.55165102077262,241.3793008590312L131.3989593642175,241.40866538463825L131.18754015114905,241.3793008590312L131.00548469228397,241.23541478643057L130.88802957925827,241.10033799623847L130.78231994866974,240.95645177213183L130.62962829211415,240.7743915804126L130.4563819931841,240.58939485252588L130.32130860839493,240.41614388390838L130.42701823898346,240.23408347948694L130.62962829211415,240.11956150199947L130.75295619446638,239.95511972456075L130.9643754075346,239.781868410551L131.15817634883956,239.70552036719428L131.27269513936608,239.60861706185207L131.33142269587893,239.23274941831554L131.39015025239178,239.012514320147L131.4668679199151,238.81784986692318L131.8213796215441,238.68693120084131L131.97448949501836,238.74235900433524L132.1770995962611,238.72474017103468L132.42669172346746,238.61902720041996L132.59985055910784,238.30224979284054L132.74675693773315,238.23434903549546L132.8994485942883,238.13744532076367L133.08641753667735,238.05560405567476L133.2825270180565,237.9451559583275L133.4779150956981,237.9348283460337L133.75855183098406,237.94421321809853L133.9386604378899,238.00289572509968L134.11179704688607,238.17429520644535L134.2558839131682,238.272486703547L134.37971427238608,238.3844182504882L134.5024740482445,238.44875437144984L134.70825750807853,238.53974239097712L134.8609492127432,238.5221235472867L134.9960225975351,238.46339407779945L135.11261346936158,238.38835764376748L135.29738726604137,238.30144845247014L135.5455791627826,238.26151720144182L135.68807417798075,238.28265727044302L135.86188682334796,238.27169575512957L136.0208235895734,238.16756126974784L136.08541888390414,238.08752519398902L136.24691965228772,237.92601893257444L136.3731464959667,237.7705972758114L136.51877330305024,237.6555010984859L136.6730124055075,237.6351439531841L136.84056151521872,237.57407250971113L136.99949828144418,237.53022635295946L137.15132410918295,237.66467221993514L137.23941546800825,237.85847989584352L137.5091003371333,238.31937488255195L137.524395828372,238.5389816088911L137.5477351517277,238.72474017103468L137.6916176964544,238.79227903516326L137.84430935300998,238.80108842615087L138.00874654011136,238.79227903516326L138.21135664135136,238.83045315737857L138.4022212120476,239.02132370555944L138.60483131328715,239.17695652955632L138.8837872428062,239.23274941831554L139.08639729593688,239.3120340218969L139.2596436429758,239.39719157318612L139.41233529953138,239.2533046858347L139.52979041255708,239.080053080305L139.55915421486657,238.8774366644382L139.53778738590245,238.67519770682807L139.6531183149093,238.5691071444796L139.8332251898678,238.46000964797923L140.03212228691677,238.29134865773517L140.18449372584746,238.25180056327537L140.86584245552376,238.78053313205422L141.03027964262515,238.77172374054626L141.20352594155565,238.78053313205422L141.5206547852124,238.84807198529745L141.64691905817585,238.98314960428436L141.6557281700043,239.4060009489955L141.64691905817585,239.59980769103157L141.68509197231424,239.7525038063013L141.67334644176776,239.89639049356288L141.69390108414268,240.05202293749937L141.8201653571059,240.17829074539532L141.95523874189507,240.29281265659515L142.10793039845066,240.36035117714707L142.23419467141412,240.137180266379L142.21364002903942,239.93750095144358L142.12554867021663,239.73488502336681L142.1930853866645,239.54107840237978L142.23419467141412,239.38838219715856L142.38688632796948,239.41774683117876L142.53957798452484,239.35020808752358L142.66584225748852,239.21513060975815L142.83908855641562,239.13878244521783L143.00352574351723,239.26211411332437L143.11804448593443,239.36782688935966L143.3206545871742,239.4735396820697L143.3588275013151,239.12703660188717L143.4058095272817,238.95378488594966L143.51151915787068,238.79227903516326L143.71412925911022,238.69537547893827L143.89618466986622,238.58085305479824L144.06943101690536,238.63664603912815L144.06943101690536,238.88624610137106L144.19569524175995,239.03306960054064L144.40711445482793,239.05949780266894L144.5627425301011,239.11822717102055L144.74479794085983,239.12703660188717L144.93566255966243,238.9655307832015L145.0707359444516,238.90680138920482L145.21461844107216,238.98314960428436L145.34969187397041,238.9156107772864L145.5053199011345,238.64545543409002L145.6668207176274,238.67482017854923L145.87823993069583,238.62783659583053L145.92815832727092,238.454584678157L146.03386795785968,238.32831625474856L146.15719586021442,238.15506418443405L146.3598059133451,238.0493509885365L146.37155144389158,237.8966541231295L146.33044215914447,237.72340182923978L146.2658418133028,237.54133997259044L146.46551554393386,237.4826103307259L146.62114357109795,237.4826103307259L146.76502611582737,237.423880678303L146.9089086605543,237.5295940739272L146.8883540181796,237.36808749148057L146.90009950061653,237.21245383212707L147.06160031710965,237.03039168943207L147.14969162782313,236.78959967515652L147.28476506072434,236.5693629595778L147.44920219971664,236.41372886192175L147.60189385627223,236.41372886192175L147.70760348686076,236.5106330914368L147.87204067396237,236.51944259160354L148.00711405875154,236.38436396274003L148.19797862944802,236.25222176189598L148.40058873068756,236.33738005094483L148.612007943756,236.24047576759347L148.74708132854516,236.117142968904L148.83223631676174,235.94388970846921L148.97905523209738,235.8851597699269L149.10238308634302,235.7207158530306L149.12293772871521,235.4916688460363L149.19047444516536,235.26849465674528L149.26682027344464,235.15397100247455L149.41070281817156,235.02770126267114L149.5839491171016,234.95135210270297L149.71021339006234,235.0100822719178L149.80417749010462,234.87500292295258L149.930441714959,234.78984422125356L150.02734223371954,234.68119338480497L150.1124971738268,234.54905043533648L150.25637971855372,234.45214557390258L150.29455263269188,234.2495261868068L150.41200774571757,234.14381165466992L150.5470811305097,234.0380971315253L150.47954446216818,233.82666791914747L150.5764449328194,233.66222284539552L150.81429152947953,233.61523850031506L150.940555802443,233.45960289408524L151.0756291872351,233.31571326493685L151.2488755342713,233.17182360917147L151.41331267326382,233.06610867095063L151.5660043298194,233.07491827474473L151.73925067685832,232.960393692026L152.05637952051552,232.71078877439524L152.3059716477219,232.57570837201126L152.5585001455397,232.5551526558205L152.70238269026663,232.4993585473713L152.51739086079033,232.31435694442962L152.37350831606318,232.19983208765896L152.25018046182026,232.02657644510222L152.36469920423474,231.70062055481333L152.5585001455397,231.61252434034208L152.76991935860815,231.4480779198887L152.90205642089768,231.21902740045638L153.03712980568957,231.11331168524248L153.18394872102522,231.04577110670007L153.32783121764305,231.05458072956378L153.47171376237247,230.98704008740862L153.5480595906488,230.87251464751847L153.69194213537548,230.76679883700123L153.78884260602945,230.6317174299829L153.7976517178554,230.45846068767304L153.81820636023008,230.30575977002334L153.92391599081884,230.1706781148866L153.90336134844392,230.00623076041884L153.83582463199605,229.8623392776476L153.85637927436824,229.68908199885584L154.00907093092337,229.56280972955457L154.06779853554553,229.38074255646583L154.02962562140738,229.17811925754492L154.15295347565325,229.11938784378617L154.2116810321661,228.95787639387743L154.28802686044241,228.79342821892863L154.38492733109342,228.65834572337462L154.58753743233592,228.5614386211826L154.77840200302944,228.50564362679012L154.96339383250597,228.38818045269286L155.01037590658166,228.15031735220424L155.12489464899613,227.99467834689602L155.25996803378825,227.88015149498074L155.41559606095188,227.96531251873586L155.55947860567903,227.9183271185808L155.79145246112193,227.88015149498074L156.01168083412767,227.93594663873986L156.16437249068326,227.9183271185808L156.34936432015957,227.79205385949228L156.64593852144185,227.6187951181931L156.81037566043415,227.69808302724397L156.96306736509882,227.79205385949228L157.12750450409112,227.8038002288706L157.2625779369896,227.83022954575816L157.44463334774832,227.8038002288706L157.58851589247502,227.64816103857473L157.77350772195132,227.48371194182775L157.9261993785069,227.30164315918904L158.03190896098636,227.1371938604595L158.17579150571328,227.12838404573526L158.3402286928149,226.98449080564126L158.40776536115618,226.79067519995704L158.42538363291965,226.6291621231809L158.3402286928149,226.47352207629504L158.26388286453857,226.27383287390853L158.09944567743696,226.05065057046198L158.09944567743696,225.89794676834828L158.1376185915749,225.7423062039071L158.33141953287713,225.37816567759873L158.38721071878172,225.25189097668448L158.51347499174494,225.17553880702079L158.6661666483003,225.2225247867147L158.82179472357348,225.1079965062521L158.95686810836537,225.18434870005004L159.06257769084482,225.0110879169107L159.2446331497099,224.79965078877808L159.3591518921271,224.64694609687493L159.55295283342934,224.65575601186106L159.70564453809402,224.61757982319466L159.74381745223468,224.76147462616194L159.87008167708632,224.69393219360563L160.00515506187844,224.58821349729885L160.1872105207433,224.6087699066119L160.40743889374926,224.5705937094171L160.5806851926793,224.48249474781713L160.77448613398133,224.4443185276472L160.9653507527869,224.55003729637014L161.15915169408913,224.5206709610321L161.29422507888103,224.58821349729885L161.39112554953203,224.7438548527708L161.53500809425896,224.9171159020276L161.67008147905062,224.9934681642803L161.83158229554124,225.02283438577808L161.96665568033336,224.93473561288135L162.11053822506005,224.9053693791991L162.21624780753973,224.80846069738743L162.41004874884425,224.5705937094171L162.71836848067278,224.72329845664456L162.73598675243625,224.87600309333908L162.82407806315268,225.00227801672003L162.9767697678169,225.03164428511735L163.15001606674696,224.97291174426942L163.1793798209476,224.78203101857372L163.35262616798695,224.67631241457582L163.59340913525557,224.78203101857372L163.737291679985,224.82020717747736L163.78721012466985,224.68512228021663L163.7079279257821,224.5206709610321L163.80482839643287,224.37677599311667L163.96926553542562,224.22407099332602L164.42146776387426,224.0889856633927L164.6123323826771,224.0889856633927L164.82375159574553,224.20351454619856L164.98818878284715,224.02144301355008L164.9793796229094,223.8393713207033L165.0087434252216,223.63674296330066L164.9793796229094,223.43411445352103L165.0645346111262,223.20211917084686L164.9793796229094,223.0406033613696L164.9294612263343,222.82622756594733L164.9294612263343,222.6265348946016L164.83549712629156,222.46208191949611L164.65050529681525,222.30643882463775L164.47725894977862,222.2594521777654L164.30694902145729,222.20071888953584L164.2188577107438,222.02745558000018L164.09259343778058,221.81601540094871L163.9604564235999,221.6544984145458L163.87236506477439,221.44305783069385L163.72848256815655,221.337337428083L163.5464271092892,221.2874138764725L163.39960819395355,221.296223938575L163.26747117977288,221.16407334961025L163.08247935029635,220.87334170441497L163.02668816439223,220.72063401560763L163.05605196670467,220.5855463460742L163.14120690680943,220.33592756917062L163.08247935029635,220.10392860004674L163.05605196670467,219.88367621240388L162.7859051490143,219.57532235419077L162.61265885008424,219.48722119864405L162.48639462522988,219.32570222377097L162.5539312935714,219.1318793046771L162.621468010022,218.7677265382589L162.7477322348734,218.38301601934347L162.75654139481117,218.15982478716438L162.79471430894932,217.95719039536996L162.90042393953786,217.80448028018552L163.09422488084283,217.6899476073462L163.33500789622076,217.75749254815435L163.69911876584433,217.61065572079707L163.81363750826154,217.46675550355934L163.96926553542562,217.42857788101992L164.12195724009007,217.4873126777889L164.26583973671063,217.43738812824913L164.42146776387426,217.4197676814606Z\" stroke=\"#000\" fill=\"#FFF\" strokeWidth=\"0.5\"></path>\r\n        <path id=\"Vihiga\" ref={(item) => countyRefs.current[37] = item} d=\"M157.13631366402888,251.2515446226378L157.32130549350268,251.36606403555393L157.50336090426117,251.4071735570347L157.65605256081676,251.29852692565078L157.82929890785567,251.21337148137013L157.9937360468482,251.1840075030989L158.18460066565103,251.20456226875885L158.2257099503977,251.42479192962247L158.14642775151265,251.6450215310163L158.00254520678322,252.08841689798854L157.82929890785567,252.5406212400385L157.95556313270754,252.6580769135619L157.91739021856915,252.84894228567904L157.84985355022764,253.0133801328605L157.79993510554345,253.18662709749157L157.694225523064,253.3305101242665L157.50336090426117,253.38923793945463L157.22440502285144,253.436220131469L157.05115867581208,253.47439317895876L156.89553064864822,253.5801031715769L156.68411143557978,253.66819477593182L156.45507395074833,253.7827138892938L156.19373629299275,254.06167067252716L155.93533500584886,254.29364523379394L155.75034317637528,254.3993551007468L155.63582443395808,254.5050650064811L155.550669445744,254.62839317015005L155.4332143327183,254.7722760604216L155.27171356433428,254.9073497547918L155.14544929137105,254.9748866207596L155.01918501840737,255.2362248248311L154.97220299244054,255.45645361970165L154.97220299244054,255.65906403112066L155.06029430315675,255.7941376394493L155.06029430315675,255.94682958252056L155.01918501840737,256.12007613416L154.99275763481546,256.3138773365538L155.07791257492045,256.82187133387055L154.9516483500688,256.9686903921377L154.79895664540413,257.20653724592245L154.5493645181948,257.5530301016601L154.52000076399463,257.6881035730295L154.56698278996123,257.873095509251L154.49063696168196,258.0727693406258L154.14414436382458,258.56314467336705L154.06779853554553,258.99772874045993L153.96208890495677,259.27668471732954L153.84757016254252,259.3618396687722L153.6449600612998,259.344221394772L153.41298620585962,259.2473209107915L153.1545849187155,259.179784232075L152.74936471623323,259.37358520077765L152.64365513375378,259.46754931161047L152.6818280478917,259.6143682408839L152.56730930547747,259.7376961043495L152.4234267607476,259.7670599085491L152.2795442160209,259.69071407512104L152.13272534879457,259.66135027061534L151.90368781585107,259.78761455218097L151.71869603448386,259.96086085971086L151.62473193444112,260.0841887662661L151.43093094503024,260.1810892392842L151.2870484484124,260.3161626262472L151.18133881782364,260.48059981464644L150.97872871658114,260.58630939743284L150.78786414588762,260.70963729986585L150.63223611872377,260.7683648563802L150.47954446216818,260.81534693046416L150.31510727506657,260.65384611395046L150.29455263269188,260.48059981464644L150.18003389027467,260.35433554080026L150.01559670317306,260.34552642888315L149.7660045759667,260.5070271983443L149.62212203123977,260.58630939743284L149.38133901585888,260.58630939743284L149.31380234752032,260.79772865869586L149.37252990403317,261.00033876031273L149.48704864644765,261.2000124445706L149.54577620296072,261.33508583183755L149.5545853147894,261.55825058281965L149.6984678595161,261.6199145128586L149.7865592183416,261.7491151640063L149.6045037594738,261.87831581736776L149.27562943337966,261.9047432513696L149.11119224627805,261.64340557517653L148.95850058972246,261.3791315364018L148.81461804499577,261.18239417257263L148.6325625861307,261.1001756022078L148.23615154358595,261.18533054321887L148.1128236893403,261.3115948183303L148.0335414423464,261.49365028246785L147.86029514341612,261.7256241494893L147.61070301620953,261.7696698077829L147.19667370189882,261.73443330999373L146.85018105593235,261.29691291686703L146.70629855931452,261.3321494611585L146.4772610744801,261.45254099627226L146.04267711779744,261.5083321841804L145.10890885859249,261.0943028609388L144.9268533997249,261.07081179966656L144.55099699955508,260.9034382412652L144.23386815589788,260.7008281880395L144.06062185696783,260.66265527388947L143.92554847217866,260.6421005833974L143.76404765568554,260.6714643857212L143.57024671438353,260.71844645980406L143.3676366131408,260.74781021400753L143.21494495658567,260.7595557445539L143.18558115427572,260.60392766922115L143.00352574351723,260.60392766922115L142.90662527286645,260.34552642888315L142.75099719759305,260.25743506893525L142.5307688726964,260.35433554080026L142.3281587714564,260.51877272893125L142.1930853866645,260.59511855738367L142.06975748431228,260.73900110217943L142.1930853866645,261.1001756022078L142.07856664425003,261.21175797528406L142.06094837248384,261.3938133898523L141.96404785372374,261.6786421206678L141.92587493958558,261.831333787567L141.78199244296502,262.0515621333962L141.78199244296502,262.33639089192064L141.4736727111365,262.5713011633789L141.30042641220643,262.63002873325354L141.0596433968285,262.6682016565348L140.76894198487275,262.5683647921239L140.74251455317153,262.3892456682503L140.74251455317153,262.23068124478004L140.85703334369782,261.98989819962827L140.78949662724722,261.7726062267054L140.59569568594247,261.73443330999373L140.34610351062702,261.78728808079325L140.11706602579557,261.8900613489235L139.87628301041468,261.7549879537277L139.49161749841642,261.61110540058695L139.50042661024486,261.3791315364018L139.79700081152714,261.00033876031273L139.5385995243828,260.7683648563802L139.50042661024486,260.5745639149755L139.67367295728423,260.498218086483L139.85572836804,260.39250845527874L139.9702471104572,260.03720669075744L140.10532054335795,259.8933241884211L140.184602742243,259.6026227093454L140.16404809987125,259.4117581194846L140.16404809987125,259.25613007201537L140.32848523886355,258.9683649321737L140.33729439879858,258.7863094797598L140.47236778359047,258.54552639605555L140.61625032831716,258.4985443067515L140.60744116837986,258.3429162244179L140.53109534010332,258.16086069127243L140.53990450004085,258.0169781280276L140.57807741417923,257.873095509251L140.60744116837986,257.48549333906885L140.60744116837986,257.31224691274485L140.55752277180432,257.1125730665497L140.53109534010332,256.87178982838066L140.4430040293871,256.6221974390397L140.65442324245555,256.35205029950924L140.83647865321427,256.16999460013176L140.99210672848722,256.12007613416L141.2123350533841,256.1406308052898L141.3767722404857,256.12888525834165L141.5001001428377,255.97619338086744L141.67334644176776,255.8792927624631L141.87595654300776,255.72660086084466L141.89651118538222,255.50343573125178L142.01983903962787,255.29201612087508L142.38688632796948,255.20686096364793L142.56013262689953,255.08059647844163L142.74218808576438,255.02480517372945L142.9154343846949,254.9866321769546L143.4351733295914,254.81338544089104L143.61722874035013,254.76346692790844L144.19569524175995,254.6577570443186L144.5421878877264,254.70473923193475L144.7330524584229,254.67831173658413L145.10890885859249,254.71648474248192L145.3027097998945,254.72529392343102L145.5053199011345,254.75465774722528L145.6668207176274,254.76346692790844L145.8312578566199,254.67831173658413L146.01331331548772,254.66656617756973L146.25409633086565,254.59902934339314L146.4273426297957,254.75465774722528L146.55360690275938,254.85155844273626L146.73566231351515,254.8310037532773L146.93827241475492,254.6577570443186L147.03517288540866,254.53149245742046L147.2084192324453,254.42578260210243L147.56372094213384,254.4463372982513L147.63125765858172,254.28189967105686L147.622448546756,254.1292075852731L147.7839493151373,254.1292075852731L147.9483865022387,254.09103456067643L148.10107815879405,254.0234976456693L148.31249737186226,253.96476991322194L148.57383502961784,253.96476991322194L148.70890841440678,253.88842385162792L149.12293772871521,253.69462229431196L149.24626563106972,253.9089785573309L149.41070281817156,254.0411159696194L149.7278316618283,254.12039839995717L150.37383483157964,254.12039839995717L150.53533564807253,253.9089785573309L150.6028723164111,253.7445408528491L150.69977278706506,253.57129398187703L150.9200011600683,253.56248484021077L151.09324745899835,253.63883092465605L151.2400663743365,253.51256622505718L151.30760309078437,253.37749236706267L151.4896585015431,253.2541640172212L151.64235015809822,253.195436242366L151.79797823337162,253.23360929881474L151.97122453230168,253.12789931869472L152.06518863234396,253.0221892792687L152.238434931274,253.04274400202405L152.4234267607476,253.05155319627622L152.52913639133635,253.13670846408567L152.57611841730318,253.3305101242665L152.77872851854545,253.46558403648376L152.96959308923897,253.40685622562938L153.04887528812674,253.26297320961433L152.96078397741053,252.79021448664662L152.96078397741053,252.51125735541999L152.951974817473,252.29102797430278L152.855074346822,252.08841689798854L152.98133861978545,251.90636057123646L153.20156694468233,251.8476326629494L153.44234996006026,251.83882350522376L153.5950416166154,251.93572447576418L153.81820636023008,251.93572447576418L154.13533520388683,251.923978933317L154.34675441695526,252.0120706902263L154.52000076399463,251.9533428372472L154.73141997706261,251.80945954926514L154.8195113358854,251.6185939549993L154.96339383250597,251.5393113181347L155.25996803378825,251.29852692565078L155.41559606095188,251.3572548246158L155.64463354578652,251.32789089972368L155.74153406454684,251.17519833827487L155.88541656116445,251.19281671593828L156.04104463643762,251.26035378662175L156.2231000471961,251.27209938655895L156.35817343198528,251.1840075030989L156.41690103660744,250.98139615800994L156.57840180499124,250.9344138361234L156.89553064864822,250.9725869909129Z\" stroke=\"#000\" fill=\"#FFF\" strokeWidth=\"0.5\"></path>\r\n        <path id=\"Bungoma\" ref={(item) => countyRefs.current[38] = item} d=\"M143.54088291207086,207.8045953272189L143.72293837093866,207.9308828292755L143.9842760286915,208.13352997359567L144.14871321579312,208.248069527578L144.32195951472318,208.3068077215209L144.47465117127854,208.38316734287386L144.61853371600523,208.4125363913972L144.79178001493574,208.49770669958932L145.01494475854997,208.63280428276934L145.5053199011345,208.72091135570616L145.49357437058802,208.91180979145753L145.39961027054574,209.17319341531294L145.20580932924372,209.65484288695296L145.10890885859249,209.86629830832703L145.07954505628004,210.02782649733155L145.27334604569432,210.18348083137394L145.53174728472914,210.51828383418618L145.9575221295836,211.11740322731868L146.1014046743103,211.3082986091813L146.87073574641613,212.40667676033596L147.504993385621,213.19374513091364L148.31249737186226,214.30092057914516L148.62081710369375,214.735565639254L149.19928355699403,215.5138123810482L149.3049931875828,215.64009360297175L149.48704864644765,215.78399534627005L149.68084958775262,215.8985292815956L150.47954446216818,216.34198044562228L150.65279076109823,216.42714645937846L150.79667325771607,216.40952590994215L151.1519750155112,216.30380257524905L151.39275803089186,216.30380257524905L151.79797823337162,216.5240594248865L151.92130608761727,216.66796042179442L152.06518863234396,216.7854305087644L152.17089826293272,216.9381415121448L152.25018046182026,217.17895476302618L152.17089826293272,217.34341240760816L151.99765191589336,217.43738812824913L151.85376941927598,217.62240264068984L151.71869603448386,217.77511296115588L151.60512529211587,217.91977565272813L151.66153247358466,218.10342866899018L151.7379487824544,218.24332502882908L151.77016832365302,218.44850237363121L151.85376941927598,218.66200466924812L151.8919423334139,218.83527107210682L151.98003364413012,218.94099288812987L152.02701571820603,219.084891871706L151.99765191589336,219.23760090048108L151.98884280406492,219.44023385676132L152.11510707702837,219.79557515551966L152.20026201713313,219.9600304119013L152.35589004430017,220.08630841282803L152.4704088348235,220.2977505500362L152.47921794665194,220.47982546886857L152.56730930547747,220.66190026016676L152.69063715972038,221.04660609376015L152.76991935860815,221.3755142387974L152.73174644446976,221.74847193882417L152.66420977612825,221.92173549496746L153.2779128210675,221.8277620541568L155.6064606316454,221.10533973068215L155.964698760052,220.93207539457455L156.4051555060612,220.6912671642155L157.0893315899532,220.3741045805562L157.9937360468482,219.93066339359513L158.29232632983258,219.71028810775462L158.664152539091,219.68157666434902L158.77187627888907,219.57532235419077L158.83941294723058,219.38149969861695L159.07138685077985,218.94099288812987L159.43549772040342,218.94980301263064L159.6586624640181,218.8910686968834L160.2341925948192,218.7677265382589L160.1872105207433,218.52691549490277L160.43680264795262,218.45937084567478L161.2443066341939,218.198002251991L161.1297878917792,218.47699118930666L161.2854159670526,218.42119343656762L161.7757911096396,218.32428151913865L162.75654139481117,218.1128371010252L162.7477322348734,218.38301601934347L162.6978138382981,218.55628269022762L162.621468010022,218.75597969370645L162.5539312935714,219.1318793046771L162.48639462522988,219.32570222377097L162.61265885008424,219.48722119864405L162.77415966657713,219.5665122597771L162.9092330513663,219.6810437430872L163.03549732432998,219.816132064512L163.0736702384679,219.98939737746815L163.08247935029635,220.15091577388793L163.13239779498076,220.3447376272029L163.06486107853038,220.55617942563435L163.03549732432998,220.77643107366615L163.26747117977288,221.16407334961025L163.39960819395355,221.296223938575L163.5464271092892,221.2874138764725L163.69911876584433,221.32559069706943L163.86355595294594,221.43131110611145L163.9604564235999,221.64275170277682L164.09259343778058,221.81601540094871L164.1983030683691,221.98927889722395L164.30694902145729,222.1919089164433L164.48210363654152,222.26174674907486L164.65291910074234,222.30957972585884L164.83549712629156,222.46208191949611L164.9294612263343,222.6265348946016L164.9294612263343,222.82622756594733L164.9793796229094,223.0406033613696L165.0719864543762,223.20018233852358L164.9793796229094,223.43411445352103L165.0087434252216,223.63674296330066L164.98088487667565,223.8425071460964L164.98999501039134,224.01561560369868L164.82145705556673,224.2023903661921L164.60964584532076,224.08622561108928L164.4183325080976,224.08622561108928L164.1063095383288,224.17733522371157L163.96965714772773,224.22744550565267L163.80482839643287,224.38558587133554L163.71001761520233,224.516718270227L163.78745399232912,224.6807152063801L163.73734811256804,224.81965699726683L163.59340913525557,224.78203101857372L163.35262616798695,224.67631241457582L163.1793798209476,224.78203101857372L163.15001606674696,224.97291174426942L162.9767697678169,225.03164428511735L162.82407806315268,225.00227801672003L162.73598675243625,224.87600309333908L162.71836848067278,224.72329845664456L162.41004874884425,224.5705937094171L162.21624780753973,224.82020717747736L162.11053822506005,224.9053693791991L161.96665568033336,224.93473561288135L161.83158229554124,225.02283438577808L161.67008147905062,224.9934681642803L161.53500809425896,224.9171159020276L161.4101153303211,224.76869668751283L161.30303423881583,224.59702336663074L161.1545556378369,224.51955828192297L160.95268493333424,224.5474789911914L160.7744373989383,224.44009163490404L160.5918947339569,224.48089886179318L160.39862973381173,224.5794036275977L160.1872105207433,224.6087699066119L160.01396422181597,224.58821349729885L159.8319087629484,224.71448859259567L159.74360827161013,224.7622534429069L159.70280462727192,224.62050230049226L159.56321317192146,224.6548662444312L159.35919495023518,224.64842299634995L159.2446331497099,224.79965078877808L159.06257769084482,225.0110879169107L158.95974867181508,225.18321076477625L158.82015721646508,225.11018760136525L158.6633852868838,225.2218700566658L158.5130560531809,225.17676753274247L158.38420242429265,225.2583816464692L158.34903780464333,225.34879945681394L158.1376185915749,225.7423062039071L158.10252445251945,225.8882013862326L158.1049154524842,226.0340654377649L158.26388286453857,226.27383287390853L158.3402286928149,226.47352207629504L158.42538363291965,226.6291621231809L158.41657452109393,226.7730555911308L158.34903780464333,226.96393457287087L158.27228713392014,227.04554633789448L158.17903722117558,227.12684721402024L158.03079373190258,227.1459768276786L157.91739021856915,227.32219931315097L157.8108195701243,227.4424855849654L157.58851589247502,227.64816103857473L157.44463334774832,227.8038002288706L157.2625779369896,227.83022954575816L157.12750450409112,227.8038002288706L156.96306736509882,227.79205385949228L156.81037566043415,227.69808302724397L156.65356404041836,227.61465176296724L156.46388306257404,227.71570256421796L156.16437249068326,227.9183271185808L156.01168083412767,227.93594663873986L155.79145246112193,227.88015149498074L155.55947860567903,227.9183271185808L155.41559606095188,227.96531251873586L155.257206204878,227.88007441789424L155.12809090777046,227.99246048127208L155.01093075481822,228.15267031757637L154.96339383250597,228.38818045269286L154.77840200302944,228.50564362679012L154.58753743233592,228.5614386211826L154.38492733109342,228.65834572337462L154.29123259680978,228.78633503749143L154.2116810321661,228.95787639387743L154.15295347565325,229.11938784378617L154.03539309878056,229.19044488369425L154.06886738695766,229.37934805701443L154.00907093092337,229.56280972955457L153.85637927436824,229.68908199885584L153.83582463199605,229.8623392776476L153.90336134844392,230.00623076041884L153.9254059938355,230.1732180259776L153.82259198500947,230.29995003497893L153.79629069672797,230.63710472969984L153.66478439965545,230.79013929865167L153.54523319862892,230.87143890138822L153.47350247801478,230.986214766918L153.33482313293484,231.0531673313087L153.1937527397779,231.04599381904916L153.0359451544266,231.112946367801L152.90205642089768,231.21902740045638L152.76991935860815,231.4480779198887L152.55295835039078,231.6174810143392L152.36406747682486,231.6963892232792L152.24690732387535,232.0335420373928L152.3855867170646,232.2009227430796L152.51739086079033,232.31435694442962L152.70598388770327,232.50220770043325L152.55534939846802,232.55481298415282L152.3059716477219,232.57570837201126L152.05637952051552,232.71078877439524L151.73925067685832,232.960393692026L151.5660043298194,233.07491827474473L151.41331267326382,233.06610867095063L151.2488755342713,233.17182360917147L151.07309900613927,233.3189003481669L150.9200011600683,233.4801585424416L150.81429152947953,233.61523850031506L150.5764449328194,233.66222284539552L150.48103230025322,233.82143050440476L150.54585303625754,234.04183128669754L150.43176857937465,234.12739863033045L150.29953433565333,234.24408132158575L150.25732935432643,234.45291329401067L150.11198355552983,234.54850537685297L150.02425229720575,234.6860008570887L149.930441714959,234.78984422125356L149.80688832282158,234.87194696160017L149.71021339006234,235.0100822719178L149.5839491171016,234.95135210270297L149.40760143156945,235.0245575952477L149.27018154820985,235.15679756436327L149.19928355699403,235.24206614355825L149.15230153102743,235.40357377850992L149.11201905819576,235.61315465169503L149.10424055063163,235.71687207285336L148.97978481447444,235.8854127887L148.8319936037317,235.95282907785304L148.74708132854516,236.117142968904L148.612007943756,236.25222176189598L148.40058873068756,236.33738005094483L148.19797862944802,236.25222176189598L148.00711405875154,236.38436396274003L147.87204067396237,236.51944259160354L147.70760348686076,236.5106330914368L147.60189385627223,236.41372886192175L147.44920219971664,236.41372886192175L147.28476506072434,236.5693629595778L147.15184092506297,236.79293822386725L147.06627758239893,237.02889441457907L146.91070791220386,237.2026202524557L146.8873724376183,237.3685672578493L146.90811509238483,237.52932835507838L146.76384420681075,237.42263257390613L146.62114357109795,237.4826103307259L146.46551554393386,237.4826103307259L146.2658418133028,237.54133997259044L146.33044215914447,237.72340182923978L146.37155144389158,237.8966541231295L146.3584355108428,238.04791198106494L146.16138057922421,238.15162860929036L146.03386795785968,238.32831625474856L145.92815832727092,238.454584678157L145.8761694851246,238.6313175831055L145.6668207176274,238.67482017854923L145.5053199011345,238.64545543409002L145.34969187397041,238.9156107772864L145.21461844107216,238.98314960428436L145.0707359444516,238.90680138920482L144.93566255966243,238.9655307832015L144.74470191405794,239.1263917688359L144.56322353007386,239.1175554438505L144.40485474601178,239.0590999238105L144.19569524175995,239.03306960054064L144.06943101690536,238.88624610137106L144.0702498907351,238.63655645613824L143.89513626504504,238.5807212782943L143.71412925911022,238.69537547893827L143.51151915787068,238.79227903516326L143.4058095272817,238.95378488594966L143.3676366131408,239.08886251212968L143.31903767098402,239.47408251906265L143.11804448593443,239.36782688935966L143.00352574351723,239.26211411332437L142.84789771635315,239.13878244521783L142.66584225748852,239.21513060975815L142.53957798452484,239.35020808752358L142.38688632796948,239.41774683117876L142.23419467141412,239.38838219715856L142.1930853866645,239.54107840237978L142.12554867021663,239.6673463394696L142.15491247252635,239.84059770813548L142.25181294317736,240.022658306897L142.22244914086787,240.17829074539532L142.12554867021663,240.30162201071107L142.06975748431228,240.47487303232793L141.94349321134905,240.2840032541598L141.7908015547937,240.15773548240594L141.69390108414268,240.05202293749937L141.67334644176776,239.89639049356288L141.68509197231424,239.7525038063013L141.64691905817585,239.59980769103157L141.6557281700043,239.4060009489955L141.64691905817585,239.20632122920878L141.64691905817585,238.94497549883354L141.4736727111365,238.83926254739316L141.20352594155565,238.78053313205422L141.03027964262515,238.77172374054626L140.86584245552376,238.78053313205422L140.184602742243,238.25196789409938L140.0331259016832,238.2915820933497L139.830062511611,238.46193534650112L139.6531183149093,238.5691071444796L139.5385995243828,238.67482017854923L139.558791516449,238.87835448051266L139.53122860151257,239.07800585657165L139.4135273596769,239.2523282233334L139.25783395153712,239.39685181286885L139.08639729593688,239.3120340218969L138.8837872428062,239.23274941831554L138.60483131328715,239.17695652955632L138.41396674259363,239.02132370555944L138.21135664135136,238.83045315737857L138.00874654011136,238.79227903516326L137.84430935300998,238.80108842615087L137.6916176964544,238.79227903516326L137.5477351517277,238.72474017103468L137.52718050935277,238.56029769945084L137.5095622375893,238.3195068516029L137.23941546800825,237.85847989584352L137.15132410918295,237.66467221993514L136.9986324526276,237.5295940739272L136.82538615369754,237.5795142365586L136.67269449714217,237.63530738730216L136.5170664699781,237.65586275117823L136.37318392525117,237.77038548991462L136.24691965228772,237.92601893257444L136.01788216745626,238.16681010907382L135.86225414028922,238.2725232199606L135.68900784136213,238.28133267243965L135.54512529663248,238.26077734711427L135.2955331694261,238.30188799651648L135.11347771056103,238.38704574753422L134.9960225975351,238.46339407779945L134.8609492127432,238.5221235472867L134.70825750807853,238.53974239097712L134.38231955259334,238.38704574753422L134.25605527963262,238.2725232199606L134.11217278301206,238.1756195162016L133.93892643597542,238.00236736728488L133.75687102521692,237.94363780737396L133.54545181214849,237.9348283460337L133.2841141543961,237.94363780737396L133.07269489321834,238.06109691687388L132.8994485942883,238.13744532076367L132.7469853622042,238.23430073182698L132.59985055910784,238.30175015789004L132.4381290637923,238.136109993383L132.38453793077565,237.85385370786497L132.24463626459965,237.34753210951328L132.26519090697457,237.16547004304954L132.30951035417615,237.01958856324856L132.40026433987555,236.9158686897298L132.43455634724978,236.86595491959815L132.70564765298627,236.81015509283884L132.9464306683642,236.79840916753335L133.16959541197866,236.74261587205532L133.37220546510935,236.53999802688136L133.34284171090894,236.31976108821004L133.2165774379455,236.117142968904L133.0345219790804,235.9615086926454L132.84072103777544,235.5856368736062L132.629301824707,235.1246059817146L132.50597392235522,234.92198706181998L132.37970964939177,234.74873311170185L132.24463626459965,234.78984422125356L132.10956287981048,234.67238387916095L132.0155987797682,234.49912973278234L131.86877986442983,234.3170660143903L131.724897367812,234.1819863433154L131.4459414382934,233.83547745076197L131.5134781066347,233.69158801497625L131.6103786253948,233.547698553597L131.6955335655025,233.37444377016507L131.77481576438754,233.1630140084811L131.8423524808377,233.0191242729814L131.78362492432484,232.845869109465L131.6955335655025,232.74015409335087L131.58982393491374,232.58451794356586L131.5633965513191,232.44943747796603L131.55165102077262,232.27618199763583L131.5633965513191,232.06475142772783L131.5340327490096,231.88268605421626L131.55165102077262,231.6800647708854L131.78362492432484,231.63308012958407L131.86877986442983,231.49799917854918L131.94806211142645,231.27482178017172L131.93631658088043,231.08394623314L131.94806211142645,230.86370501836774L131.99504413739328,230.70806780142624L132.10075376798204,230.52600147070805L132.18884507869825,230.33218881127885L132.18884507869825,229.93868988454383L132.29455470928679,229.85352956480665L132.40907345170126,229.77424237559433L132.56176510825685,229.74487671851304L132.67922022128255,229.6009850826244L132.86127568015036,229.54519033011223L133.0139673367055,229.45709331377086L133.16959541197866,229.38074255646583L133.65116139462816,229.1869289948352L133.90075352183476,229.02541754227872L133.63941591219123,228.69652122009018L133.57187919574062,228.51445338894496L133.50434247929275,228.24428800117664L133.41037837925023,228.0416637315837L133.70695258053252,227.66871716135836L133.62179764042776,227.33100912034453L133.63060675225347,227.1489402154064L133.50434247929275,226.99330057787145L133.38101462504687,226.47352207629504L133.29292326622453,226.29145252233323L133.2165774379455,226.10938276997075L133.20776832611682,225.9273128665203L133.35165082273738,225.8862002991034L133.516088009839,225.98310849509346L133.6599705545657,225.97429868274028L133.82440769355821,225.9948549591245L134.04463606656418,225.9273128665203L134.2384370078662,225.80103853450527L134.45866538087216,225.84802432982613L134.5555658515234,225.71294008076666L134.60254792559908,225.483883981485L134.61135703742775,225.26070086656694L134.59373876566133,225.04045413597893L134.37057402204687,224.65575601186106L134.25605527963262,224.50305116748095L134.12979105477825,224.39733242316242L133.95654470773889,224.31804331782283L133.5630700358056,224.1741481621447L133.3986328968133,224.27105713681547L133.2664958826299,224.4149522256081L133.10205869552829,224.48249474781713L132.831911925947,224.42376210221923L132.66747473884539,224.30042350720151L132.55295599643114,224.13597188553555L132.38851880932907,223.97152013358647L132.24463631271146,223.78063854123587L132.0919446080443,223.61618645766873L131.8599707526041,223.6455529211482L131.49585983487123,223.6661094238324L131.27269513936608,223.5486436526581L131.15817634883956,223.4135579274883L131.310868053504,223.25204223849857L131.5340327490096,223.11695631608137L131.64855153953567,222.9818703033062L131.6779152937363,222.7880510370083L131.83060695029167,222.58835832750316L131.94806211142645,222.50025851082748L132.08313549621835,222.66471145438905L132.18884507869825,222.5766116714961L132.19765423863282,222.26826219595588L132.29455470928679,222.16254224040023L132.49422843991783,222.11555555924417L132.70564765298627,222.17428892096646L132.82310276601197,222.25064220729632L132.9464306683642,222.13611226670633L133.10205869552829,222.03920222052136L133.23713208031995,221.9716588835791L133.41918753918503,221.93348218993668L133.70695258053252,221.77783862880005L133.55426092397693,221.67211845681356L133.49553336746408,221.54877812738624L133.5924338381153,221.3755142387974L133.45736045332615,221.24923704830843L133.37220546510935,221.1347065183354L133.34284171090894,220.97906236255722L133.43974218155995,220.77643107366615L133.63941591219123,220.63253339968054L133.6599705545657,220.41228158420088L133.94773559591044,220.00701757383092L134.1209818948405,219.82494219516298L134.31478283614547,219.7280309755699L134.52620209732277,219.6810437430872L134.6906392363153,219.6340564505609L134.82277625049596,219.57532235419077L134.96959516583138,219.57532235419077L135.16926889646265,219.29633510467522L135.2279964529755,219.12306914086557L135.23680561291303,218.92043583307407L135.2074418106033,218.75597969370645L135.2074418106033,218.61208040107857L135.2661693671164,218.43000358641433L135.4100519118433,218.13045747876197L135.4599703084184,217.9689373403686L135.44822482598124,217.74574558913756L135.39243364007712,217.55485769626023L135.51576149432276,217.4197676814606L135.68019868142437,217.36103281396055L135.7565445097007,217.2259426497798L135.8739996227264,217.07323189935926L136.03550043921973,216.98512946391145L136.14121006980827,216.80305101972976L136.2850925664261,216.60041505909544L136.38199303707984,216.42714645937846L136.43191148176425,216.27443500276107L136.6051577806943,215.9866322264753L136.6609489665957,215.85154098390333L136.75784943724966,215.70763934627837L136.79602235138782,215.54318013344047L136.79602235138782,215.34935297854503L136.83419531363506,215.13790496533687L136.86355906783842,214.98519234187887L136.92228662435127,214.85010029240007L136.9310957842863,214.63865164365393L136.9780778102529,214.4741913746583L137.10434208321635,214.14820718028193L137.23941546800825,213.59902505927164L137.2306063561798,213.44631099929921L137.1894970233211,213.27303910530514L137.1806879114954,213.11738792607883L137.1894970233211,212.40667676033596L137.2100517138049,212.24221420641982L137.24822462794305,212.06894099498345L137.2775883821464,211.8486781334702L137.3157612962848,211.67540448428275L137.3157612962848,211.52856223902663L137.35393421042272,211.37584617121792L137.36274337036048,211.1732034441377L137.41266176693557,211.02929761586358L137.42147092687333,210.8648335980922L137.53598966929053,210.4624833772804L137.60352633763205,210.327387461539L137.65344478231623,210.13355398164873L137.75034525296724,209.98964711768767L137.75034525296724,209.78700258451704L137.85605488355623,209.5755470505651L137.91184606946058,209.37290190542697L138.01755565194003,209.22899435407177L138.21135664135136,208.98816909610895L138.334684495597,208.92062046027468L138.4315850143571,208.81489215889582L138.63419506748778,208.4419054821018L138.68117714156347,208.21870039761282L138.73990469807654,208.0278010517193L138.83680516873005,207.8721444823382L139.01005146765783,207.7194246582731L139.239088952492,207.6518754312321L139.93207419631904,207.7194246582731L140.41364022707762,207.8045953272189L140.61625032831716,207.79578459062034L140.85703334369782,207.89270290408987L141.36796312865704,207.8633337017628L141.4912909829029,207.68124462873L141.52946389704084,206.12173043691627L141.5881914535537,205.51377946872782L141.92587493958558,205.92789126466096L142.63647845517585,206.85303017677467L142.75099719759305,207.01749869220896L142.83908855641562,207.12322836142215L143.11804448593443,207.431606041164Z\" stroke=\"#000\" fill=\"#FFF\" strokeWidth=\"0.5\"></path>\r\n        <path id=\"Busia\" ref={(item) => countyRefs.current[39] = item} d=\"M131.45768692073034,223.6661094238324L131.63974237959815,223.70428578736326L131.8599707526041,223.6455529211482L132.0919446080443,223.61618645766873L132.21527251039902,223.72190564875729L132.2740000669121,223.84818126985869L132.38851880932907,223.97152013358647L132.51478308229002,224.0889856633927L132.5999380223975,224.23288087799634L132.74675693773315,224.3385997536497L132.84072103777544,224.47368487367783L132.99634906493952,224.49130466969962L133.22538654977393,224.46193832613608L133.3986328968133,224.27105713681547L133.53370628160246,224.1741481621447L133.95654470773889,224.31804331782283L134.12979105477825,224.39733242316242L134.25605527963262,224.50305116748095L134.38231955259334,224.66456587836439L134.45866538087216,224.82020717747736L134.5819932832244,225.0110879169107L134.61135703742775,225.25189097668448L134.623102567974,225.42515161288708L134.5819932832244,225.60722188904276L134.45866538087216,225.80984835385897L134.2178823654915,225.80103853450527L134.08280898070257,225.93612272888197L133.89194441000905,225.97429868274028L133.71869811107854,225.95374240442246L133.5630700358056,225.9948549591245L133.35165082273738,225.8862002991034L133.19895916618202,225.9273128665203L133.2165774379455,226.10938276997075L133.29292326622453,226.30026232196198L133.38101462504687,226.47352207629504L133.50434247929275,226.99330057787145L133.63060675225347,227.1489402154064L133.62179764042776,227.33100912034453L133.70695258053252,227.66871716135836L133.41037837925023,228.0534100401864L133.50434247929275,228.22666850436914L133.57187919574062,228.51445338894496L133.63941591219123,228.69652122009018L133.90075352183476,229.02541754227872L133.65116139462816,229.1869289948352L133.14981879836682,229.39019887335704L132.86067286662183,229.5453192240374L132.6777437851797,229.60180323890475L132.56176510825685,229.74487671851304L132.40907345170126,229.77424237559433L132.19765423863282,229.92988017443272L132.18884507869825,230.33218881127885L132.10075376798204,230.52600147070805L131.97448949501836,230.76679883700123L131.93631658088043,230.9782304622171L131.94806211142645,231.26601211675234L131.84937494573774,231.53715928970888L131.78706485831958,231.634091498276L131.5562868155714,231.67563382111118L131.53320901610778,231.83718739651218L131.5633965513191,232.06475142772783L131.55165102077262,232.27618199763583L131.5633965513191,232.44943747796603L131.58982393491374,232.58451794356586L131.6955335655025,232.74015409335087L131.78362492432484,232.845869109465L131.8423524808377,233.0191242729814L131.60156946545976,233.5653176821619L131.45768692073034,233.7767470904497L131.5633965513191,233.97936681323793L131.724897367812,234.1819863433154L131.86877986442983,234.3170660143903L132.0155987797682,234.49912973278234L132.1104914916807,234.67321577978794L132.24721012922964,234.7917105241953L132.37785237754224,234.7522122653601L132.49330367681773,234.90716691667006L132.629301824707,235.1246059817146L132.84072103777544,235.5856368736062L133.0345219790804,235.9615086926454L133.2165774379455,236.117142968904L133.34284171090894,236.31976108821004L133.38101462504687,236.53999802688136L133.2841141543961,236.65452116229898L133.16078625204113,236.7514253176268L132.9464306683642,236.79840916753335L132.70564765298627,236.81015509283884L132.43843725401348,236.865948376443L132.31217298105025,237.02158225157885L132.26519090697457,237.16547004304954L132.24463626459965,237.34753210951328L132.40026433987555,237.90546358547923L132.43843725401348,238.13744532076367L132.5999380223975,238.30188799651648L132.42666401232714,238.61927391449248L132.1770995962611,238.73354961185146L131.9568712232549,238.74235900433524L131.82179783846323,238.68656603714362L131.4664960806681,238.8187072555644L131.39015025239178,239.012514320147L131.33142269587893,239.23274941831554L131.27269513936608,239.59980769103157L131.15817634883956,239.70552036719428L130.9643754075346,239.781868410551L130.75295619446638,239.95511972456075L130.62962829211415,240.11956150199947L130.4740002649503,240.2047188633901L130.3594815225331,240.45725428395733L130.4857458917147,240.61875948651272L130.62962829211415,240.7743915804126L130.78231994866974,240.95645177213183L130.88802957925827,241.10033799623847L131.00548469228397,241.23541478643057L131.18754015114905,241.3793008590312L131.3989593642175,241.40866538463825L131.5340327490096,241.3793008590312L131.6779152937363,241.38811023618624L131.92750742094267,241.3499363793337L132.05377169390613,241.4468392357838L132.16829043632333,241.6112804170143L132.28280917874054,241.70818320943272L132.42669172346746,241.7346112221452L132.58231979874063,241.79334021856397L132.89063948245985,242.01357368630931L133.0345219790804,242.1016670687203L133.20776832611682,242.18682394686184L133.38101462504687,242.32190041760455L133.67758882632916,242.63903617221672L133.83321685349597,242.72712942141078L133.9682902382849,242.8622056690678L133.95654470773889,243.0237098522257L133.78329840880883,243.12942165348082L133.6599705545657,243.18815040471796L133.3310961803627,243.314417171277L132.77318432132483,243.48766694632485L132.55295599643114,243.67853521475746L132.36209142573466,243.76662820447314L132.23582715277394,243.91051345432558L132.22701799283618,244.1131272871577L132.22701799283618,244.48899037261648L132.24463626459965,244.7004132129196L132.20646335046172,244.8442981721444L132.18884507869825,244.98818303994202L132.18884507869825,245.2289699275987L132.1594813244949,245.39340969105137L132.12130841035673,245.52554873590887L132.03321705153144,245.67236986655288L131.93631658088043,245.77808106566835L131.80124319609104,245.86323725329694L131.6103786253948,246.01886752379073L131.30205889356625,246.20973478171325L131.1288125946362,246.16275210077484L130.88802957925827,246.12457865135354L130.57970989553905,246.09521443537747L130.3389268801584,246.04529533175915L130.0717164811856,245.96013912627913L129.81918793526165,245.9014107220587L129.62832336456813,245.9014107220587L129.44626790570032,245.9307749490631L129.17612113611904,245.9395841879716L128.9735110348795,245.98950334992603L128.7709009336395,245.98950334992603L128.61820927708413,245.96013912627913L127.83713272254113,245.96013912627913L127.61690434953539,246.03648604654927L127.42603977884164,245.9983125878283L127.29977550587819,245.9395841879716L127.16470212108902,245.91022000957878L126.98264666222121,245.91022000957878L126.84757327743182,245.9689484127912L126.48052603719975,246.0276768092986L126.26910677602245,245.9395841879716L126.06943309350027,245.8162545408024L125.83745918994828,245.77808106566835L125.5966762226767,245.89260148249383L125.2707382190847,246.57678704276967L125.16209221788472,246.7206714679171L125.0387643636418,246.8058275029065L124.70988998943858,246.87336507824776L124.21951484685155,246.9409025971574L123.77905814895166,247.0554227629309L123.59406631947513,247.1347059814788L123.61462096185005,247.316763580708L123.62343012178462,247.53699452286935L123.57644804770894,247.79833512011126L123.57644804770894,248.03912074075484L123.51772049119609,248.183004747795L123.42082002054508,247.95983769482962L123.28868300636441,247.87468178505466L122.96861779209871,247.76016178392155L122.84528988974398,247.68087870050144L122.71021650495459,247.5751678737175L122.62212514612952,247.46945707567988L122.58395223199136,247.25803532467222L122.48998813194885,247.0554227629309L122.3431692166107,246.94971186742788L122.12294089171655,246.6325789623756L121.77644824574713,246.49750379126482L121.40059184557731,246.3829835075833L121.41233737612356,246.52686793669656L121.39178273374887,246.70011655926172L121.35360981961071,246.86455580675633L121.00711717364379,247.46064781356682L120.91902586292804,247.59572275019718L120.8514891464772,247.78658945996722L120.70760660175029,247.9715833034186L120.62245166164575,248.13308583109142L120.3904778062024,248.47077275583408L120.20842234733755,248.66457558716368L120.09390360492034,248.7585405820342L119.90010261550651,248.85544196089353L119.36274544695516,249.1549552476383L119.32163616220578,249.45153200235504L119.3421908045807,249.8185822703002L119.33338164464294,250.0094483134359L119.3421908045807,250.1738866796992L119.31282700226802,250.34713427908534L119.28346324806785,250.48220861176253L119.20711741978857,250.68482008874105L119.09259862926501,250.85806752089462L118.99569815861128,250.96377777561005L119.02506196092372,251.15464357185692L118.82245185968372,251.7331133167484L118.81364274785528,251.9151697282686L118.88117941619657,252.0502437949406L118.99569815861128,252.18531784074628L119.11021690102848,252.41729283175675L119.06323487506165,252.96346149072852L119.13077154340317,253.51256622505718L119.20711741978857,253.6476400656913L119.20711741978857,253.87961471254147L119.10140778920004,254.28189967105686L119.02506196092372,254.43752811531033L118.91054321850652,254.59022016155447L118.68737847489183,254.7722760604216L118.68737847489183,254.5050650064811L118.77546983371712,254.33181825174444L118.60222348667799,254.29364523379394L118.42897718774793,254.3611820849661L118.19700333230458,254.581411027764L118.0824845898901,254.75465774722528L117.90042913102229,254.76346692790844L117.72718283209224,254.91909531159175L117.49520892854298,254.9748866207596L117.20744388719572,255.13051497935126L117.26323507310008,255.38891677753074L117.27498060364633,255.62089105161184L117.27498060364633,255.8117559394878L117.22506215896169,255.9556387076499L117.04300670009411,256.246340579759L116.88737867293003,256.55466064594265L116.71413237399997,257.3533562289233L115.75393673120061,260.84471068468315L115.28117986037955,261.53769593956423L115.07856975913978,261.7696698077829L114.61755837075589,262.10148058393764L114.48248498596399,262.1866355831808L114.34741160117483,262.1396535028542L114.08020120220203,262.11909885787355L111.28770558451993,262.13378076088446L110.32750994172056,258.8156732412355L110.03680852976709,257.84373173898774L109.47889667072968,256.04373019680764L109.41135995427908,255.9086566101781L109.431914596654,255.70604618431653L109.51706958486784,255.53279958628139L109.96927181331694,254.9455227538706L111.52848859990058,252.84013308959192L113.07008711471849,250.78172119808085L114.21233821638293,249.23130174591614L114.32979332940863,249.0198806556483L114.41494831762247,248.8378235250971L114.579385456615,248.66457558716368L114.76144091548281,248.49132760152457L114.73207711317059,248.26816061378895L114.82016847199566,248.1536406881336L114.9053234602095,247.88349104089187L115.09031524157695,247.84531771022884L115.3399074168924,247.77778025078644L115.52196282765112,247.68087870050144L115.62767245823989,247.5663586613344L115.68640001475273,247.40191957241314L115.61886334641144,247.26978099561285L115.68640001475273,246.90272920328397L115.74219120065436,246.73828996730572L115.98297421603502,246.68249805863084L116.08868384662355,246.55623212862128L116.0798746866858,246.34481007418952L116.1474114031364,246.151006405824L116.2531209856163,245.98950334992603L116.44692197502741,245.89260148249383L116.5819953598193,245.79569954860196L116.55263155750708,245.64300562461477L116.50271316093153,245.4873752387336L116.5144586433687,245.27595274338256L116.68770494229875,245.20841495931333L116.8492057587921,245.17905073802126L117.1399072188542,245.1996057075437L117.28378971547477,245.05572085457015L117.60972771906654,244.8325524461252L117.61853683089498,244.6798582220614L117.76535574623335,244.5947018286965L117.92685651461443,244.46843537251777L118.07073905934408,244.30399529092483L118.29390380295854,244.1424915746918L118.45834099006015,243.97805142469062L118.41723170531077,243.7959925625934L118.47595926182362,243.66972588596448L118.60222348667799,243.51703127477188L118.71674222909519,243.411319615841L118.84300650205591,243.18815040471796L118.91935233033496,242.95910821515662L118.92816149027249,242.77411249615537L118.91054321850652,242.59205313049853L118.82245185968372,242.2161884133544L118.79308810548059,242.0517474796789L118.77546983371712,241.89024296688729L118.73729691957601,241.70818320943272L118.64039640081592,241.54374206839177L118.55230509010266,241.3616822003417L118.54349593016514,241.16787637315605L118.50532301602675,240.92708721231412L118.37024963123508,240.74502705471428L118.2175579746795,240.63050528173565L118.0824845898901,240.47487303232793L118.01494787343995,240.3104314127288L118.00613876161128,240.08138751764133L118.01494787343995,239.92575508618884L118.00613876161128,239.77305904395914L118.05312078757788,239.637981725912L118.09129370171604,239.49409493566424L118.06192994751564,239.32965282562685L118.03256614520296,239.08886251212968L118.02375703337725,238.83045315737857L118.15883041816664,238.6660107362317L118.30271291478425,238.56029769945084L118.3996134335473,238.3958551970378L118.57285973247463,238.36649042861978L118.64920556075367,238.23434903549546L118.79308810548059,238.10808052988673L119.05442571512413,237.84967048035864L119.1894991480251,237.7410207148048L119.32163616220578,237.66467221993514L119.47726418936963,237.63530738730216L119.41853663285679,237.45324552989035L119.38036371871863,237.1361052134949L119.40972747292199,236.97166195481938L119.41853663285679,236.76023481106125L119.3891728305473,236.51944259160354L119.38036371871863,236.33738005094483L119.4567095469979,236.13476194315632L119.65931964823744,236.02904813063958L119.59178293178707,235.84698530142046L119.40972747292199,235.7207158530306L119.88248434374304,234.91317751530465L119.82375678722997,234.41397092114812L119.85312058953969,233.99111284900025L120.39928691803107,232.69023306847635L120.58427874750737,232.74896365955257L120.80450712051083,232.6226928946444L121.03648097595374,232.5375334623958L121.18036352068043,232.38189724376772L121.39178273374887,232.17927634262645L121.69129330564238,231.92967069893166L121.8821578763359,231.85332068911205L122.05540417526595,231.7564148310803L122.23745963413103,231.5655396387686L122.46943348957393,231.60371468839278L122.68966186258012,231.5655396387686L122.64267978850421,231.38347396628086L122.77775322140246,231.30418721047812L122.92163571802303,231.1514868016244L122.99798154629934,230.9488649464958L123.15360962157251,230.84314916772166L123.23876456168,230.69044848328684L123.3738379464694,230.64052706719747L123.54708424539945,230.7756084695131L123.74088523481055,230.6610829342846L123.9317498055068,230.72862366302206L124.1637236609472,230.69044848328684L124.29879704573887,230.45846068767304L124.44267959046601,230.4496510440825L124.59537124702138,230.49663590254517L124.7891722364352,230.5935422356004L124.9242456212246,230.52600147070805L125.1063010319831,230.55536703543774L125.25899273664754,230.4496510440825L125.35589320729878,230.31456946679077L125.58786706274168,230.3997295802244L125.78754079337295,230.4496510440825L125.94316882053681,230.35274470359414L126.11641511946686,230.21766307391542L126.33664349247033,230.08258132282793L126.55980823608479,230.06496196065945L126.71249989264015,229.9856748394468L126.83876416560338,229.92988017443272L126.98264666222121,229.91813395794588L127.06780165043801,229.79479831421267L127.1353383187768,229.65090665955842L127.11772004701311,229.4776492790846L127.11772004701311,229.3220111920269L127.09716540463842,229.13994383782807L127.12652920695086,228.9197008909801L127.20287503522741,228.7758087631614L127.16470212108902,228.5819947114731L127.07954713287518,228.35000490606453L127.05899249050026,228.15031735220424L127.16470212108902,228.0152344388327L127.32913930819063,227.93594663873986L127.45246716243378,227.99467834689602L127.75197773432728,227.83022954575816L128.0602974661556,227.53363401442616L128.26290751928627,227.48371194182775L128.46258124991755,227.33100912034453L128.7033642652982,227.30164315918904L128.76209182181105,227.08139852178564L128.58003636294325,226.6849575742882L128.588845522881,226.46471228356776L128.51249969460468,226.24446677403049L128.53011796636815,225.98310849509346L128.56829088050608,225.80103853450527L128.5213088064304,225.60722188904276L128.56829088050608,225.3869755622976L128.65638219122252,225.26070086656694L128.59765463470944,225.13736271196174L128.66519135115982,224.80846069738743L128.69455510536045,224.5794036275977L128.7709009336395,224.45312845113506L128.80907384777765,224.27105713681547L128.86780145239982,224.0889856633927L129.03223859139234,223.98326670881383L129.35817659498684,223.88635759957538L129.56959580805528,223.86580111892522L129.75458763752886,223.8569911705237L129.907279294084,223.78944844479008L130.0423526788761,223.71309569419404L130.2244081377412,223.6837292885067L130.35067241070465,223.5985665871837L130.71478328032822,223.55745356618252L130.94675713577112,223.43411445352103L131.0994487923267,223.48110077720156L131.27269513936608,223.5486436526581Z\" stroke=\"#000\" fill=\"#FFF\" strokeWidth=\"0.5\"></path>\r\n        <path id=\"Siaya\" ref={(item) => countyRefs.current[40] = item} d=\"M126.48901363244136,246.0263907727452L126.84757327743182,245.9689484127912L126.98264666222121,245.91022000957878L127.16470212108902,245.91022000957878L127.29977550587819,245.9395841879716L127.42603977884164,245.9983125878283L127.62571350947269,246.03648604654927L127.82832356260337,245.97775765104524L128.15719793680682,245.96013912627913L128.61820927708413,245.96013912627913L128.7709009336395,245.98950334992603L128.9735110348795,245.98950334992603L129.44626790570032,245.9307749490631L129.62832336456813,245.9014107220587L129.83093346580768,245.9014107220587L130.0717164811856,245.96013912627913L130.32130860839493,246.05704098099264L130.591455377976,246.09521443537747L130.91739338156776,246.12457865135354L131.1288125946362,246.16275210077484L131.32261353594117,246.2302897574199L131.58982393491374,246.03648604654927L131.73664285024915,246.03648604654927L131.88933450680474,246.09521443537747L132.00385324922172,246.18037061864774L132.1477357939484,246.4299661688515L132.42669172346746,246.68249805863084L132.70564765298627,246.9614574967549L132.72620229535823,247.10534182064868L132.76437520949912,247.24041684186034L132.64104730714416,247.36374621001337L132.37970964939177,247.5751678737175L132.4854192799803,247.78658945996722L132.92881239660073,248.17419554447898L132.99634906493952,248.32688876872686L132.92881239660073,248.50013680027953L132.89063948245985,248.66457558716368L132.87008484008788,248.8172686907364L132.86127568015036,249.1344004233618L132.93762150842645,249.2694749917405L132.90825775422604,249.44272281658257L132.7849298518713,249.61597054868335L132.55295599643114,249.67469858100858L132.21527251039902,249.84794625441853L132.28280917874054,250.0094483134359L132.51478308229002,250.42348064617136L132.51478308229002,250.58791891886472L132.55295599643114,250.7406116438857L132.57351063880287,250.96377777561005L132.51478308229002,251.16638912524058L132.51478308229002,251.5393113181347L132.42669172346746,251.69494019790383L132.28280917874054,252.05905299862096L132.23582715277394,252.21468178402446L132.49422843991783,252.1559539446032L132.93762150842645,251.9445336806053L133.11967696729425,251.83001434740706L133.30466879677056,251.6861310385889L133.42799665101347,251.48351981946246L133.516088009839,251.28971776208576L133.65116139462816,251.17519833827487L133.98590851005133,251.00195092895817L134.15034569715272,250.79933958464673L134.37057402204687,250.60847374850678L134.7376213103912,251.13702514523334L134.61135703742775,251.26035378662175L134.45866538087216,251.5305021571726L134.3999378243593,251.69494019790383L134.26486443956765,251.89755136600613L134.39112871253064,252.07960774271558L134.3999378243593,252.23230013990775L134.7170666680163,252.51125735541999L134.84333094097974,252.6756952609127L134.9490405234592,252.85775143357534L134.87269469518037,253.00163455608433L134.77579422452914,253.15726318446747L134.623102567974,253.32170098056363L134.48802918318188,253.4274109886689L134.3235919960805,253.50375708289985L134.3999378243593,253.72398614406626L134.66127548211193,253.82088692440112L134.81396713866752,253.82969611206647L135.01657723990706,253.7357317126092L135.18101442700868,253.63883092465605L135.32489692362924,253.5801031715769L135.46877946835616,253.48320236947154L135.7095624837341,253.436220131469L135.95034545100566,253.40685622562938L136.07367335335766,253.34812845955483L136.30564720880056,253.2835279274266L136.5170664699781,253.30995540740005L136.6609489665957,253.36868317565356L136.78721323955915,253.44502927419518L136.8929228701479,253.56248484021077L136.9780778102529,253.89723303875203L137.02799625494004,254.06167067252716L136.9604595384892,254.18793530924935L136.82538615369754,254.23491751515303L136.440720641702,254.53149245742046L136.24691965228772,254.581411027764L136.07367335335766,254.59022016155447L135.8739996227264,254.5726018457988L135.72718075550006,254.581411027764L135.71837159556253,254.76346692790844L135.7859083120129,254.93671362254014L136.03550043921973,254.9455227538706L136.23811054045927,255.03361430447254L136.4495297535277,255.0923419855942L136.64333069483246,255.16868797203523L136.74904032542122,255.34193461410405L136.55523938411625,255.43883531544884L136.54643022418122,255.6003363736305L136.55523938411625,255.8117559394878L136.71967652310855,255.80294681354934L137.0661691690782,255.8117559394878L137.29814302452132,255.86167446319334L137.53598966929053,255.8323106627034L137.60352633763205,255.66787320600537L137.60352633763205,255.52399041059113L137.759154412905,255.44764444354652L137.91184606946058,255.33018910908518L137.84430935300998,255.1774971499438L137.72979061059277,254.9866321769546L137.79732732704292,254.8310037532773L137.92359155189752,254.92790444304094L138.1526290848385,255.25384313161996L138.24952955549202,255.13051497935126L138.3640482979065,254.9660774415168L138.4022212120476,254.78402161845196L138.59602215334985,254.75465774722528L138.80744141452715,254.82219462116876L139.02766973942357,254.82219462116876L139.1921069265254,254.71648474248192L139.28900739717642,254.53149245742046L139.35654411362702,254.3699912684682L139.54740868432054,254.25253578775718L139.7500187855601,254.18793530924935L139.94381972686506,254.17618974544888L140.0377838269078,254.29364523379394L140.11706602579557,254.45514643301885L140.26094857052226,254.581411027764L140.39602195531143,254.7458486145933L140.29031232472266,254.95726831032735L140.2227756563841,255.14813328750168L140.0377838269078,255.24503395419907L139.93207419631904,255.35074379091415L140.10532054335795,255.38891677753074L140.27856684228573,255.44764444354652L140.38427642476518,255.6091455488625L140.55752277180432,255.68842788305474L140.481176943528,255.9086566101781L140.4341948694523,256.090712290319L140.4899860553537,256.25514970327697L140.5017315859002,256.4372053936027L140.40483111524918,256.63100656068286L140.51054069772863,256.851235165645L140.55752277180432,257.1125730665497L140.60744116837986,257.31224691274485L140.60744116837986,257.48549333906885L140.57807741417923,257.873095509251L140.53990450004085,258.0169781280276L140.53109534010332,258.16086069127243L140.60744116837986,258.3429162244179L140.63680497069208,258.50735346959345L140.4899860553537,258.5249717470977L140.36665815300194,258.6218722477247L140.32848523886355,258.80392775591525L140.24039392814734,259.12399303689494L140.16404809987125,259.25613007201537L140.16404809987125,259.4117581194846L140.184602742243,259.6026227093454L140.10532054335795,259.8727695450498L139.9702471104572,260.03720669075744L139.8175554539016,260.12236168142675L139.85572836804,260.39250845527874L139.67367295728423,260.498218086483L139.49161749841642,260.5745639149755L139.5385995243828,260.7683648563802L139.7030367114844,260.8535198446268L139.7881916997012,260.9739113285067L139.66486379734647,261.1618395299472L139.52979041255708,261.31746755967464L139.46225369610647,261.4466682067495L139.2684527548015,261.6580874771305L138.98949682528564,261.8107791436153L138.85442344049352,261.85482480242683L138.64300422742554,261.9047432513696L138.30825711200487,262.05743492338894L138.08509236839063,262.13084438989915L137.76796352473343,262.1925083252112L137.36274337036048,262.20719022842127L137.02799625494004,262.35988190889526L136.59341229825714,262.659392542564L136.41135683938933,262.7592294092761L136.1911284663836,262.82676614443636L135.89161789449258,262.8561299071595L135.7565445097007,263.04405816761465L135.61266201308285,263.0675492369874L135.4863977401194,263.2026226727255L135.09292306818634,263.5050697512188L134.94023141163075,263.60197027230646L134.45866538087216,263.8221987732692L134.36176491022115,263.96608136402256L134.15915480897866,264.12170955101726L133.8420259653219,264.5680393720245L133.75687102521692,264.9497689672848L133.76568013704536,265.1376973963236L134.0064631524233,265.99805747216067L134.15034569715272,266.39740571616943L134.17970945135335,266.5500977029275L134.26486443956765,266.7321535788303L134.3235919960805,266.9024639209266L134.33240110790894,266.97880994228467L134.34414663845496,267.4016495260367L134.49683829501055,267.7921890355475L134.56437501146115,268.0124181517687L134.75523958215445,268.56152290912974L134.81396713866752,268.75532464984633L135.00776807997204,269.30736626515466L135.95034545100566,272.1116258223706L136.19993762632112,272.9103279321264L136.83419531363506,274.8454231332918L136.96926869842696,275.2300938674112L134.02408142418972,276.9655202827617L129.7428421069826,280.5597241638461L128.99406567725396,281.17050711582067L128.8002647359492,281.2879654732273L128.59765463470944,281.36431343034707L128.41559922395095,281.4230426351917L128.24235287691454,281.45534371869553L128.0309336638461,281.47002603469195L127.69325017781443,281.42597908846267L127.51119471894663,281.3731228369373L127.24104794936534,281.276219616567L127.11772004701311,281.19987167763236L126.99145582215897,281.1000320999508L126.75067280678104,280.83868740534126L126.61559942198892,280.580279338036L126.04887845112557,279.0797541586122L125.65540377918956,278.0549367347139L125.57612153219543,277.8670048676578L125.3265294049861,277.1916253682646L124.34577911981478,277.12115103160284L111.22016891617864,277.12115103160284L112.91445908755418,267.05515596843003L111.28770558451993,262.13378076088446L114.08020120220203,262.11909885787355L114.34741160117483,262.1396535028542L114.48248498596399,262.1866355831808L114.61755837075589,262.10148058393764L115.06976059920203,261.77847896833583L115.28117986037955,261.53769593956423L115.75393673120061,260.84471068468315L116.71413237399997,257.3533562289233L116.91674247523952,256.5252968095227L117.02245205771942,256.29332266754164L117.22506215896169,255.9556387076499L117.27498060364633,255.8117559394878L117.27498060364633,255.62089105161184L117.26323507310008,255.38891677753074L117.20744388719572,255.13051497935126L117.504018088478,254.9748866207596L117.71543730154622,254.92790444304094L117.82114693213498,254.83981293343393L117.93860204516068,254.76346692790844L118.0824845898901,254.7722760604216L118.19700333230458,254.581411027764L118.42897718774793,254.3611820849661L118.61103264661574,254.29364523379394L118.77546983371712,254.33181825174444L118.68737847489183,254.5050650064811L118.68737847489183,254.78402161845196L118.91054321850652,254.59022016155447L119.02506196092372,254.43752811531033L119.10140778920004,254.28189967105686L119.21592653161724,253.84144167947215L119.22767206216326,253.63883092465605L119.13077154340317,253.51256622505718L119.06323487506165,252.96346149072852L119.08378951743657,252.74323221595893L119.1219624315745,252.57879432232588L119.11021690102848,252.4055472475789L118.98688904678534,252.18531784074628L118.88117941619657,252.0502437949406L118.81364274785528,251.9151697282686L118.82245185968372,251.74192252368076L118.95752524447312,251.34844566169176L119.03387107275216,251.16638912524058L119.06323487506165,250.89624067945306L119.20711741978857,250.68482008874105L119.28346324806785,250.48220861176253L119.31282700226802,250.34713427908534L119.3421908045807,250.1738866796992L119.33338164464294,250.0094483134359L119.3421908045807,249.8185822703002L119.32163616220578,249.44272281658257L119.36274544695516,249.1549552476383L119.90010261550651,248.85544196089353L120.09390360492034,248.7585405820342L120.20842234733755,248.66457558716368L120.3904778062024,248.47077275583408L120.50793291922832,248.3063339175459L120.66062457578369,248.25054216139563L120.66943368761235,248.06554840435462L120.7575250464347,247.9422192333992L120.97775341944089,247.59572275019718L121.00711717364379,247.46064781356682L121.35360981961071,246.86455580675633L121.39178273374887,246.70011655926172L121.42995564788953,246.44171185757284L121.77644824574713,246.49750379126482L122.0847679775759,246.60321477462583L122.19928671999287,246.73828996730572L122.33436010478499,246.93209337485615L122.4987972918866,247.0554227629309L122.57514312016292,247.21986195256488L122.63387067667577,247.48120269413965L122.72783477671805,247.58691353812776L122.84528988974398,247.68087870050144L123.42082002054508,247.95983769482962L123.53827513357078,248.06554840435462L123.62343012178462,247.53699452286935L123.61462096185005,247.316763580708L123.59406631947513,247.1347059814788L123.78786726077738,247.0466135424549L123.99047736201965,247.01724937697517L124.29879704573887,246.93209337485615L124.7216355199846,246.89391998037087L124.90369097884968,246.8351916796742L125.0387643636418,246.8058275029065L125.16209221788472,246.7206714679171L125.2707382190847,246.57678704276967L125.52033034629108,246.07465950245046L125.57612153219543,245.9307749490631L125.83745918994828,245.77808106566835L126.06943309350027,245.8162545408024L126.26910677602245,245.9395841879716Z\" stroke=\"#000\" fill=\"#FFF\" strokeWidth=\"0.5\"></path>\r\n        <path id=\"Kisumu\" ref={(item) => countyRefs.current[41] = item} d=\"M152.58492757724093,261.53769593956423L152.58492757724093,261.75792432453795L152.93142017510104,261.9047432513696L153.5480595906488,262.09560784200545L153.84757016254252,262.09560784200545L154.71380170529665,262.06624403622834L155.29814094792619,262.05743492338894L155.56828771750747,262.0368802787074L156.088026662404,262.02807111780635L156.46388306257404,261.975216296985L156.71347518978314,261.975216296985L157.33011460533112,262.09560784200545L157.52097917602464,262.1044169549041L157.82048974791815,262.042753020579L157.98492693501976,262.11028974495474L157.96437229264484,262.34520000523196L158.14642775151265,262.50376448069665L158.72489420481338,262.4655915108141L159.4648615227161,262.23068124478004L159.64985335219217,262.22187213167336L159.5617619933671,262.06624403622834L159.80254500874776,262.042753020579L159.917063751162,262.1572717769161L160.11086469246698,262.31289982695245L160.4661664502621,262.1778264220396L160.79210440574775,261.92236152472907L161.2854159670526,261.8988704615228L161.34120715295694,261.71094224741205L161.58199012022556,261.84014290008975L161.8521369379157,261.9575980234816L162.13109286743475,262.10148058393764L162.21624780753973,262.35107274744706L162.19862953577626,262.6447106378817L162.1898204239476,263.21730453165935L162.3131482781905,263.3465052301211L162.54512218174273,263.34063248628377L162.82407806315268,263.3465052301211L164.46844983795017,263.3465052301211L164.6622507792522,263.3611871378697L164.71804196515654,263.5285607761107L164.84430623812,263.6606978610984L164.9793796229094,263.94846308026604L165.26714466425688,263.57260645434326L165.38459982539166,263.4580876539266L165.52848232200927,263.34063248628377L165.70172866904863,263.26428662505094L165.9689390680212,263.12627681494536L166.08639418104713,263.04405816761465L166.23908583760226,262.88549371823433L166.35360458001696,262.6447106378817L166.39471386476635,262.50082806137993L166.4123321365298,262.35107274744706L166.48867796480863,262.20719022842127L166.6237513977071,262.09560784200545L166.78818853669986,261.8753794465103L166.7793794248737,261.6522146874816L166.75001562256148,261.4613501083951L166.72946098018656,261.22056708724347L166.79699769663716,260.994465970961L167.0084169097056,261.1060483434757L167.61624716531855,261.52888682737233L167.76012971004525,261.61404177134256L168.09781319607714,261.85482480242683L168.2299502102578,261.92823426648783L168.3474053232835,262.02807111780635L168.72326172345356,262.2894088102078L168.93468098463086,262.3892456682503L169.06975436942275,262.50082806137993L169.28117358249096,262.5096372231207L169.42505612721789,262.48614620536745L169.5483839814608,262.38043655485836L169.65409361204956,262.23949035790207L169.83908544152587,262.27472690675927L169.974158826318,262.2365539868577L170.12685048287335,262.1719536800282L170.32946058411312,262.11616248689916L170.48215224066848,262.1778264220396L170.63778026783234,262.1249715998304L170.84919952900964,262.13084438989915L171.02244582794015,262.10148058393764L171.13696457035712,261.99870736047615L171.28084706697496,262.0368802787074L171.4834571682145,262.06330766528095L171.78296774010823,262.1543354059182L172.10890574370023,262.32170898833016L172.29096115445873,262.47146430129357L172.47595298393503,262.5390009834645L172.46420745338878,262.6916927234367L172.5816626145238,263.2084954162895L172.6756267145663,263.6929980523332L172.73435427107938,263.9190993063718L172.7431633829051,264.20392818385466L172.7431633829051,264.83231367304285L172.7049904687667,265.0701605952885L172.73435427107938,265.28451645659646L172.72554511114163,265.9099660039268L172.83125474173016,266.14194028575366L173.0426739547986,266.39740571616943L173.10140151131145,266.5647796367644L173.32162988431742,266.53541576925255L173.6475678398001,266.5500977029275L174.04397893045393,266.5500977029275L174.3405530836269,267.1138836804407L174.37872599776802,267.3164943405187L174.49618115890303,267.4016495260367L174.78394620024733,267.9448812025294L174.8221191143855,268.15336477770484L175.0041745732533,268.00948172283927L175.10107504390453,267.86853511630625L175.23614842869642,267.81568012563815L175.36241270165692,267.97424510552065L175.42701299938994,268.10050977268816L175.52391347004095,268.2443928402846L175.62962310062971,268.4411309003066L176.08182532907858,269.2310200234004L177.49715957093304,269.2310200234004L177.74675174624826,269.263320350102L177.75556085807693,269.8182986672783L177.76730638862318,269.9798003269607L177.82309757452754,270.2323303303244L177.9023797734153,270.4819239762888L177.9581709593167,270.7080265352172L178.05507142997044,270.93412916120076L178.16959017238491,271.36577982507924L178.23712688883552,271.73282993514863L178.32521819955173,272.10281658754616L178.28704528541084,272.27606442876515L177.97872560169162,272.4199482009166L177.79667014282654,272.4581214587892L177.11249405893454,272.7282707736881L176.94805687183293,272.7429527657265L176.82472896948093,272.6372421900716L176.66910094231662,272.4434394251616L176.52521844569628,272.3083648371709L176.3813359009696,272.34360169188864L176.22570787380528,272.2525731624166L176.02603414317446,272.2143999165203L175.85278784424395,272.1615446454978L175.62962310062971,272.1644810894268L175.44756764176464,272.1938450964186L175.29487598520927,272.199717888352L175.10107504390453,272.2026543324472L174.89846494266453,272.18503590861644L174.5637178272416,272.0117880910672L174.4580082447619,271.9236960497509L174.4080898000775,271.7944943552641L174.4580082447619,271.5742642467474L174.34936224356466,271.48323582024994L174.21722522938398,271.41569864230587L174.12032475873298,271.29530621800575L173.82081418683947,270.95762033515666L173.79145038452953,270.79905486512945L173.60939492566172,270.5582702849853L173.42733951490595,270.43787804717323L173.22472941366368,270.32335860453594L173.12782894301245,270.2176483422746L172.9545826440824,270.1677296041543L172.76371802527956,270.2176483422746L172.5405533297744,270.1354292911205L172.40841626748443,269.9915459235591L172.34087959914314,269.69790649141345L172.34087959914314,269.50997731993687L172.23516996855437,269.37490326218267L172.17644241204152,269.1781650070849L172.05017813907807,269.0871368558583L171.7536039859051,268.922698929808L171.61853055300662,268.7582610328722L171.4071113399384,268.64374181299496L170.94316362905238,268.5527137137808L170.78166281255926,268.54684094900045L170.6465894277701,268.6672329227999L170.40580641238944,268.6819148847608L170.26192386766252,268.6202507037633L170.0211408522846,268.62905985161757L169.87725835566425,268.65842377459563L169.68345736625292,268.6202507037633L169.5219565978689,268.71127880936143L169.38688321307995,268.7435791178421L169.22244602597812,268.6731057364219L168.9904721705352,268.5996959776407L168.8084167116674,268.5673956739987L168.52946078215132,268.56152290912974L168.42375115156278,268.4411309003066L168.22114109842937,268.27669313338L167.8834576124002,268.46462205332733L167.7219567959071,268.8404800017918L167.63386543708202,268.99904509751093L167.4899829404642,269.22514725434536L167.12587202273153,269.8946449129783L166.96143488373878,270.0590830230732L166.9144528096631,270.2734398598149L166.80580680846583,270.4525599911965L166.65311515191047,270.52596990789533L166.38296838232918,270.59644344215263L166.01004835276785,270.64929859707166L165.36404518301697,270.81373686416384L165.17024419360564,270.95174755362467L164.92065206639654,271.1925322601349L164.85311534994867,271.3276066284053L164.78557868160715,271.5390274319898L164.71804196515654,271.8003671437241L164.64169613688046,272.029406510329L164.59471411091363,272.23201834112916L164.55654119677274,272.6372421900716L164.5447956662265,272.84279060930055L164.55654119677274,272.99842015561234L164.48900448032487,273.4212629079627L164.4978136402599,273.6121295767143L164.43908603563796,273.86759728565283L164.35393109553297,274.14362004040436L164.3157581813948,274.34916897928576L164.32456729322348,274.560590808823L164.30694902145729,274.76320349378295L164.26583973671063,274.9746254836934L164.18949390843136,275.18604755733594L164.06616605418844,275.3446142043466L163.84300131057398,275.5472271885366L163.37318081036142,275.9377712253915L163.229298265632,276.0757831452871L163.03549732432998,276.29307850979586L162.89161477960283,276.413471972507L162.58329509588089,276.5867211026712L162.44822166298263,276.64544963309527L162.3131482781905,276.68655960387616L162.2074386957113,276.8186988472263L162.1399019792634,276.9919481248682L162.11053822506005,277.26503613903645L162.13109286743475,277.4147941401105L162.1017290651223,277.5674886157061L162.1017290651223,277.79946685287854L162.07236526281258,277.9727165510669L162.11053822506005,278.1753306097386L162.15164750980944,278.6833344835378L162.3043391663648,279.3381611971019L162.32195743812827,279.4967292825118L162.2837845239901,279.68466187651927L162.15164750980944,279.97243381700247L162.04300150860922,280.1075105122548L161.9372918780207,280.2660789036936L161.74642730732717,280.27195179228204L161.55262636602492,280.3541724342688L161.2560521647399,280.53623254442374L161.1385970517142,280.6625000939462L160.8801957645701,280.65075425684375L160.69814030570524,280.51274092643865L160.5337031667127,280.53623254442374L160.4191844242955,280.6096439019988L160.11967385240473,280.65662715129605L159.8407179228857,280.74765726740816L159.43549772040342,280.7535302114652L159.1976511237433,280.68011882622403L158.94512257781912,280.6625000939462L158.83060383540192,280.580279338036L158.4841112375418,280.5509148244373L158.4547474352321,280.40702859108677L158.43712916346612,280.2044133864303L158.29324661873898,280.1456843703724L158.09944567743696,280.17504890135507L157.905644736132,280.18092178857046L157.71478016543847,280.12806566246434L157.71478016543847,279.9401328593057L157.75295307957686,279.6934711964659L157.8116806360897,279.51141152379137L157.7617621914053,279.3205425247547L157.55034297833686,279.40569945616716L157.35947840764334,279.51141152379137L157.20385033236767,279.5554582027193L157.02179492161167,279.64061513535773L156.87791237688475,279.7287085744072L156.72228434971817,279.766882395993L156.61657471912963,279.8725945585792L156.44332842020185,279.91957771889975L156.15556337885482,279.8285477967018L156.00287172229923,279.85203942167294L155.81787989282293,279.83442072687143L155.68280645992468,279.78156464713777L155.39504141857742,279.78156464713777L155.23060423147558,279.86378518656835L155.06029430315675,279.7052170048051L154.8576842500263,279.63180581657065L154.63451950641183,279.6376786957411L154.29977239098844,279.62593293748813L154.03843473323604,279.5701404461315L153.87399754613443,279.4967292825118L153.55686870247746,279.4350638845639L153.3836224035474,279.2999874159923L153.39536793409343,279.11792791929076L153.28965830350467,278.95348711058085L153.30727657527086,278.7332539886323L153.1164120045746,278.3896905818408L152.98133861978545,278.19294923424883L152.83745607505875,278.0050173081766L152.7405556044048,277.80827618158224L152.4234267607476,277.79946685287854L152.28835337595842,277.8229583644008L152.047570360578,277.6497087245029L151.8155965051376,277.4089212914914L151.73044151692102,277.25035397432464L151.4984676614804,277.01837601657564L151.59536813213163,276.73647888636935L151.6041772439603,276.45751834177383L151.48084938971442,276.313633479741L151.2488755342713,276.125702316812L151.09324745899835,276.0434824736092L150.9699196047552,275.9465805192764L150.80548241765382,275.8349964622552L150.59406320458538,275.79682297728425L150.3062981151288,275.7204760159946L150.1888430021031,275.5237357891106L150.17122473033965,275.35048702801464L150.20939764447803,275.142001299059L150.10368806199835,274.9511341580597L150.05670598792244,274.80724972080594L149.48704864644765,274.39321517309577L149.04659190043867,274.1083830814698L147.57253010206887,273.21277789576857L140.4341948694523,273.7912505967721L139.239088952492,273.8793429494917L136.9780778102529,275.22422099698747L136.83419531363506,274.8454231332918L136.19993762632112,272.9103279321264L135.95034545100566,272.1116258223706L134.66127548211193,268.2913750413926L134.61135703742775,267.9977361996378L134.49683829501055,267.7921890355475L134.31478283614547,266.8584181082199L134.22669152542926,266.5706523911007L134.15034569715272,266.35923272220805L134.0739998688739,266.18892245079L133.76568013704536,265.1376973963236L133.75687102521692,264.9497689672848L133.88019887946257,264.5357392163489L134.15915480897866,264.12170955101726L134.3529557502834,264.07766381485897L134.47628365263563,263.8809263671677L134.77579422452914,263.6783161428025L134.94023141163075,263.60197027230646L135.09292306818634,263.5050697512188L135.24855109534997,263.44340579378854L135.36306983776763,263.29365043980357L135.4863977401194,263.2026226727255L135.60385285314555,263.08810388674704L135.7565445097007,263.04405816761465L135.90042705443034,262.9295393871911L136.1030371556701,262.8561299071595L136.4025477275609,262.7651021520716L136.59341229825714,262.659392542564L136.90173198197635,262.456782397271L137.03680536676575,262.3569455377809L137.37448885279764,262.23068124478004L137.76796352473343,262.1925083252112L138.08509236839063,262.13084438989915L138.30825711200487,262.05743492338894L138.58721304152118,261.94585253991187L138.78688672404292,261.8841886071962L138.98949682528564,261.80784272467764L139.28019828534798,261.67276933100123L139.49161749841642,261.61110540058695L139.87628301041468,261.7549879537277L140.11706602579557,261.8900613489235L140.33729439879858,261.7931608705481L140.65442324245555,261.8372065292458L140.81886042955716,261.9047432513696L140.74251455317153,262.23068124478004L140.74251455317153,262.3892456682503L140.76894198487275,262.5683647921239L141.00091584031566,262.6916927234367L141.30042641220643,262.63002873325354L141.4736727111365,262.5713011633789L141.78199244296502,262.33639089192064L141.78199244296502,262.0515621333962L141.92587493958558,261.831333787567L141.96404785372374,261.6786421206678L142.06094837248384,261.3938133898523L142.07856664425003,261.20588518587317L142.1930853866645,261.1001756022078L142.06975748431228,260.73900110217943L142.1930853866645,260.59511855738367L142.3281587714564,260.51877272893125L142.5307688726964,260.35433554080026L142.75099719759305,260.25743506893525L142.90662527286645,260.34552642888315L143.00352574351723,260.60392766922115L143.18558115427572,260.60392766922115L143.21494495658567,260.7595557445539L143.42636416965365,260.74781021400753L143.57024671438353,260.71844645980406L143.7523021732486,260.66265527388947L143.9372939546156,260.63329147156236L144.0811764993423,260.66265527388947L144.2808502299738,260.71844645980406L144.55099699955508,260.9034382412652L144.918044287896,261.07081179966656L145.10890885859249,261.0943028609388L146.04267711779744,261.5083321841804L146.48607018630878,261.45254099627226L146.70629855931452,261.3321494611585L146.85018105593235,261.29691291686703L147.05279115717212,261.61404177134256L147.19667370189882,261.73443330999373L147.60189385627223,261.75792432453795L147.84267687165016,261.71094224741205L148.0335414423464,261.49365028246785L148.1128236893403,261.3115948183303L148.23615154358595,261.18533054321887L148.6325625861307,261.085493700931L148.81461804499577,261.1765214312783L148.95850058972246,261.3791315364018L149.27562943337966,261.9047432513696L149.57513995716386,261.892997719788L149.74838630420322,262.0809259390976L149.8834596889924,262.2982179715427L150.10368806199835,262.13378076088446L150.23876144678752,261.9575980234816L150.3914531033431,261.7931608705481L150.526526488135,261.58174159686473L150.69977278706506,261.60523265907943L150.86420997416667,261.5523778413435L151.037456273094,261.54650509987374L151.2195117319618,261.61404177134256L151.36339427668872,261.4701592686365L151.43093094503024,261.32040397845736L151.53664057561878,261.16771227123377L151.64235015809822,261.0473207865271L151.8919423334139,260.8270924129064L152.01820655826828,260.69201902810056L152.28835337595842,260.43949052968225L152.4234267607476,260.32497178628756L152.57611841730318,260.2867988716702L152.71119180209507,260.2280712661426L152.8080923208554,260.10474340920695L153.03712980568957,259.9109424610013L153.28965830350467,259.68190491453805L153.46290460243472,259.6525411581049L153.65376922123755,259.68190491453805L153.53925043071104,259.86396038467115L153.42179531768534,260.01665204769245L152.96959308923897,260.65384611395046L152.87562898919668,260.81534693046416L152.70238269026663,261.11779387412776L152.63484597381603,261.2822310635308L152.70238269026663,261.40849529142787Z\" stroke=\"#000\" fill=\"#FFF\" strokeWidth=\"0.5\"></path>\r\n        <path id=\"HomaBay\" ref={(item) => countyRefs.current[42] = item} d=\"M150.33566191744148,275.75864949520104L150.56469940227316,275.79682297728425L150.7585003435779,275.79682297728425L151.1049929895446,276.0434824736092L151.26649375792863,276.14332086329046L151.46029474733973,276.29307850979586L151.6041772439603,276.45751834177383L151.63354104626978,276.701241750902L151.46029474733973,276.9244102877376L151.51902230385258,277.0771046006838L151.67171396040817,277.25622686901806L151.84496025933822,277.27971830421683L151.8155965051376,277.42947631009645L151.90368781585107,277.5880436414971L152.047570360578,277.655581624354L152.13272534879457,277.7642296841383L152.2589895736462,277.82883121842093L152.40287211837585,277.79946685287854L152.66420977612825,277.7789118173975L152.81690143268384,277.98739869122664L152.96959308923897,278.1753306097386L153.1164120045746,278.3896905818408L153.01951153392338,278.56881333062336L153.18394872102522,278.5629404666193L153.30727657527086,278.7332539886323L153.28965830350467,278.95348711058085L153.39536793409343,279.11792791929076L153.3836224035474,279.3146696501764L153.55686870247746,279.4350638845639L153.7301150495166,279.4438732471707L153.92391599081884,279.52022083994973L154.12652609205838,279.61712357091176L154.52000076399463,279.6376786957411L154.8576842500263,279.63180581657065L155.0691034630945,279.74339082414934L155.2041768478839,279.9254506504127L155.3186955903011,279.8432300501178L155.4625781350278,279.7610095149285L155.68280645992468,279.78156464713777L155.81787989282293,279.83442072687143L155.9911261917532,279.86378518656835L156.15556337885482,279.8285477967018L156.36698259192303,279.86378518656835L156.46388306257404,280.0252899221786L156.59895644736616,280.09870118311323L156.60776560730346,279.8814038826747L156.71347518978314,279.77275527714073L156.87791237688475,279.7287085744072L157.02179492161167,279.6376786957411L157.45344250768608,279.4644283631896L157.61787964667838,279.3733985440781L157.7617621914053,279.34403412012813L157.8116806360897,279.51728440121036L157.7441439196391,279.64061513535773L157.71478016543847,279.88727681362246L157.71478016543847,280.12806566246434L157.905644736132,280.18092178857046L158.09944567743696,280.17504890135507L158.28150113630204,280.1427479270185L158.42538363291965,280.2190956538511L158.4841112375418,280.55678771735404L158.83060383540192,280.580279338036L158.94512257781912,280.6625000939462L159.16828732143358,280.6771823788046L159.32097897798917,280.7623395555557L159.48541616509056,280.78289474066634L159.6292986617084,280.7535302114652L159.99634595004977,280.74765726740816L160.11967385240473,280.65075425684375L160.4191844242955,280.6096439019988L160.5337031667127,280.53623254442374L160.69814030570524,280.51274092643865L160.8801957645701,280.65075425684375L161.10042413757628,280.6713094359283L161.27367043650634,280.4892493098897L161.48508964957455,280.3835369809795L161.74642730732717,280.27195179228204L161.94903740856694,280.2660789036936L162.0547470391557,280.09870118311323L162.15164750980944,279.97243381700247L162.29553000642704,279.6758525086554L162.5539312935714,279.75807307443057L162.66845003598837,279.86378518656835L162.68900467836056,280.03703569221705L162.75654139481117,280.18973116767194L162.86225102539993,280.2807611253303L162.82407806315268,280.47750347809847L162.48639462522988,280.85336969701416L162.03419234867465,281.2292362898741L161.8903098520541,281.3584405248091L161.76404557909336,281.4406614032841L161.30303423881583,281.62272204053494L161.1385970517142,281.6139126279392L160.76567702215561,281.83121092501034L160.5131485243378,281.94573303753907L160.24593807725614,282.05144581148494L159.82309965111972,282.4331865659492L159.37970653450202,282.80318187759644L159.08900512254604,282.985243167719L158.9656772201913,283.1350033626214L158.74544884718807,283.2407164981269L158.43712916346612,283.34642966672317L158.3402286928149,283.44626987995787L157.879217304431,283.67825168551707L157.58851589247502,283.8133297742183L157.35947840764334,283.9337255452699L157.09814074988776,284.0159470353114L156.2700821212718,284.2215008992816L156.088026662404,284.25967520058384L155.83843453519762,284.4006265356705L155.01037590658166,285.0495906417899L154.87530252178976,285.1259394480386L154.77840200302944,285.2522086871921L154.66388326061247,285.35792251506524L154.48182784985624,285.42839837230696L154.20287192033743,285.4724458454005L153.81820636023008,285.59284219826304L153.248549018758,285.7044291253395L153.07530271982796,285.7602226042087L152.7200009620326,285.9452221101372L152.57611841730318,285.96871410601335L152.3940629584381,286.0597456614807L152.22962581944557,286.1272852344374L151.9594790017552,286.1713327609424L151.83615114750955,286.22712632629066L151.66290484858223,286.41212612033496L151.46029474733973,286.4679197309053L151.2018934601956,286.49141176795246L151.14316590368253,286.3680785100836L151.037456273094,286.4737927279653L150.86420997416667,286.4679197309053L150.70858194699986,286.4737927279653L150.61461784695757,286.59418948211965L150.49716273393165,286.7997450665291L150.35328018920472,286.9700626549772L150.32391638689523,287.1668089884573L149.93925087489674,287.5691115410831L149.71902250189078,287.67188968733075L149.516412400651,287.6895088004957L149.3049931875828,287.69538182242604L149.16111064285587,287.6806992197212L148.94969142978744,287.59847673566077L148.70890841440678,287.6483975060806L148.58264418955264,287.71887395947897L148.3418611741747,287.7335565641734L148.15099660348096,287.6865722895773L147.98655941637958,287.6865722895773L147.93957734230366,287.8833190700311L147.92783185986673,288.0477642771799L147.82212222927797,288.21514609795577L147.63125765858172,288.34435318928286L147.504993385621,288.4735602931443L147.42864755734172,288.6203866783688L147.30238333248758,289.0432471092798L147.17905543013535,289.25467754981395L146.9764453288958,289.40737741934936L146.87073574641613,289.5130927873507L146.697489399377,289.759762096079L145.4554014564501,289.827302515558L145.27334604569432,290.15913194430647L145.1588272551678,290.27365723386873L145.06192678451657,290.45278666483733L145.05311767268813,290.7112030457555L144.9738354738006,290.90501556430877L144.8505075714486,291.01073149819683L144.68607038434698,291.21335389754825L144.36894154069,292.5729838366961L144.18688612993128,292.60822268422805L144.04300358520436,292.5318717662782L143.88737555804028,292.38210656752585L143.76404765568554,292.32337514915866L143.59080135675526,292.3086922847805L143.4058095272817,292.2235317756326L143.27073614249002,292.17067351881076L143.07106241185875,292.13249812631284L142.8978161129287,292.16480039591346L142.2606220550058,292.0884496187907L142.01102992779943,292.12075183440504L141.7908015547937,292.20297579351467L141.73207399828084,292.38210656752585L141.57938234172525,292.55536439082636L141.33859932634732,292.6317153162923L141.0978163109669,292.67870049114697L140.9157609002109,292.75798802483166L140.74251455317153,292.7756074857007L140.54871361186656,292.866641379713L140.57807741417923,293.0369629359383L140.63680497069208,293.18085540029733L140.47236778359047,293.27776260130327L140.32848523886355,293.3482406084175L140.3167397564264,293.489196638524L140.26094857052226,293.627216222769L140.13468429755858,293.7828553781907L139.98199264100344,293.89150921057876L139.7030367114844,294.1558025031296L139.5855815984587,294.38192034266245L139.5385995243828,294.56986261650104L139.43288994190334,294.6755801845141L139.40352613959362,294.86058610887295L139.46225369610647,295.0808314619567L139.43288994190334,295.26290112314L139.42408078196854,295.4273512194535L139.43288994190334,295.5712452030874L139.31837119948864,295.738632186727L139.47987196786994,295.9118925185898L139.45344458427803,296.11158259517475L139.40352613959362,296.31714608763855L139.31837119948864,296.49040688611575L139.02766973942357,296.716527136018L138.71054089576683,297.1922614291618L138.20254748141633,297.6151373048237L138.04691945424975,297.76490604468427L137.86486399538467,297.9616611975176L137.6152718681783,298.2083395898574L137.5095622375893,298.32286894359675L137.2100517138049,298.5548645408887L137.0955329232786,298.6987606275959L137.01918709500228,299.0364764156617L136.95165042666076,299.2420428307178L136.83419531363506,299.50340615415064L136.6051577806943,299.873426745223L136.50825731004056,300.0848673785031L136.440720641702,300.2581314026089L136.3937385676261,300.4225855580141L136.29683809697212,300.5752930972989L136.07367335335766,301.07159349478223L136.0560550815942,301.26835196763204L136.04724596976575,301.50035108748597L136.04724596976575,301.7529073642222L136.06486424153195,301.93791976171644L136.07367335335766,302.1522994103325L136.03550043921973,302.3314387996835L135.80646295438783,302.11999559519154L135.5950437413196,301.9760969431219L135.44822482598124,301.84688188837345L135.13109598232427,301.5913887425906L134.98721343759757,301.5532116404792L134.64952995156568,301.25366848018444L134.46747454080992,301.1391374041103L134.33240110790894,301.02166971362124L133.93892643597542,300.8307848604599L133.71869811107854,300.73387416618624L133.49553336746408,300.5694197429516L133.10205869552829,300.378535343755L132.831911925947,300.22876463317414L132.67922022128255,300.1993978201037L132.51478308229002,300.1318542440205L132.37090053756333,300.1377275849705L132.40026433987555,300.31686505116966L132.54414683649338,300.5429896025064L132.629301824707,300.7485576131959L132.50597392235522,300.8249114982214L132.42669172346746,300.9453157492306L132.1770995962611,301.4563005739563L132.08313549621835,301.56202176617717L131.92750742094267,301.4886042732377L131.73664285024915,301.54146487101303L131.5810148230853,301.6295658525376L131.5134781066347,301.7881478112017L131.36959561001686,301.83513505220094L130.5709007356013,301.91736282486005L130.29194480608248,301.9614133997719L130.15687142129332,301.99371718705993L129.9924342341917,302.0818183839389L129.95426132005105,302.28738808788506L129.77220590929483,302.36961606296313L129.56959580805528,302.42835032605564L129.43452242326316,302.4606541956623L129.22310321019472,302.47533773090845L128.99406567725396,302.3255653419605L128.82962853826166,302.16698296892207L128.69455510536045,302.02014753207084L128.58003636294325,301.87918565560835L128.50369053466693,301.7264770574442L128.18362532040146,301.28303545623214L128.14545240626035,301.1420740900965L127.9839516378795,301.08921365316473L127.83713272254113,300.9218222390368L127.69325017781443,300.8102280453013L127.40548513646695,300.53124284786384L127.15589300926058,300.51655941760276L126.95328290802081,300.5371162010366L126.73305453501484,300.5018759884739L126.50108067957171,300.4402056561795L126.37481640661099,300.378535343755L126.18395183591474,300.35797857735616L125.93435970870837,300.2199545695368L125.92261417816235,300.02319717996187L125.89618674646113,299.873426745223L125.72294044753107,299.7471497895209L125.57612153219543,299.5797595459329L125.50858486385391,299.44467279979864L125.36470231912722,299.27140949950996L125.25899273664754,299.121639640161L125.12391930374656,298.9102000456521L125.00059144950364,298.57248447120355L124.89488181891511,298.44033505553494L124.73044463181327,298.3463621893864L124.58656213519271,298.1936563810712L124.32522447744032,297.96753452232156L123.99928652195467,297.7619694092255L123.84659481729022,297.38901608391734L123.68215767829747,297.1922614291618L123.57644804770894,297.08654263075545L123.47954757705793,296.9485208757709L123.47073841712017,296.78406961520676L123.35328330409448,296.57263238612694L123.1712278452294,296.6108085288369L123.02734534861156,296.66366782582173L122.88346280388214,296.73708352998L122.73958030726453,296.8956615554841L122.54577931785298,296.99550700822755L122.33436010478499,297.14527530061883L122.02604042106259,297.43893889836266L121.87334871639814,297.55346786951924L121.69129330564238,297.62101057159293L121.49749231622832,297.67387012438314L121.31543690547232,297.7032365163931L121.17155436074563,297.7032365163931L121.02473544540726,297.7854625421948L120.88085294878965,297.98221771479206L120.73697040406296,298.14960661674235L120.52555119099452,298.2465160339072L120.34349573212671,298.2670725799817L119.97644844378533,298.27588255643235L119.61233757416176,298.27000927083134L119.41853663285679,298.29350246236777L119.1894991480251,298.42565178178654L118.92816149027249,298.4873214809749L118.42897718774793,298.50200475921554L118.12065750402849,298.54899119905303L117.9474112050982,298.60772433646866L117.7829740179966,298.7428105119544L117.73599194392091,298.93075665967774L117.61853683089498,299.1979928838319L117.56274564499085,299.59737956734983L110.16307275461895,299.5797595459329L110.1043451981061,297.4036992831989L110.09553608627994,296.63430158016564L110.07498144390547,296.3465122894768L110.01919025800112,295.93244883509584L109.96927181331694,294.09413400553433L109.93109889917855,293.1133140167086L109.82538926858979,290.8697769135082L109.80777099682359,289.44261587065733L109.7402343284823,288.17697129036446L109.88411682510264,287.42228571002875L109.96927181331694,285.8277621100697L110.01038109806336,284.71776721824614L110.08672692634264,283.8984877563985L110.09553608627994,283.27301774858546L110.4802015982757,280.9943196010846L111.22016891617864,277.12115103160284L123.91413153374083,277.12115103160284L125.3265294049861,277.2268625406249L125.4234298756403,277.4470949050822L125.57612153219543,277.8670048676578L125.65540377918956,278.0549367347139L126.04887845112557,279.0797541586122L126.61559942198892,280.580279338036L126.75067280678104,280.83868740534126L126.99145582215897,281.09415919860123L127.11772004701311,281.19987167763236L127.24104794936534,281.276219616567L127.44365805060806,281.3584405248091L127.7138048201889,281.4406614032841L127.86649647674449,281.4788353957067L128.24235287691454,281.45534371869553L128.41559922395095,281.4230426351917L128.59765463470944,281.36431343034707L128.8002647359492,281.2879654732273L128.99406567725396,281.17050711582067L129.50205909160468,280.7623395555557L134.02408142418972,276.9655202827617L135.23680561291303,276.2490321554109L135.5950437413196,276.0963381061459L136.96926869842696,275.2300938674112L139.239088952492,273.8793429494917L140.4341948694523,273.7912505967721L147.5813392138973,273.21277789576857L149.04659190043867,274.1083830814698L149.48704864644765,274.39321517309577L150.05670598792244,274.80724972080594L150.10368806199835,274.9746254836934L150.20939764447803,275.142001299059L150.18003389027467,275.3358049208636L150.21820680441533,275.5765913671662Z\" stroke=\"#000\" fill=\"#FFF\" strokeWidth=\"0.5\"></path>\r\n        <path id=\"Migori\" ref={(item) => countyRefs.current[43] = item} d=\"M142.83497210495852,292.161807638835L142.90662527286645,292.17361008031145L143.07106241185875,292.13249812631284L143.3206545871742,292.1853563747865L143.44398244142008,292.2470243218978L143.59080135675526,292.3086922847805L143.81102972976146,292.3321848874615L144.09879477110871,292.5729838366961L144.2632319582101,292.63758845061506L144.27204107003604,292.9253729319603L144.32195951472318,293.12799693080416L144.38949623117105,293.28657232697265L144.3983053429995,293.4304649449183L144.33957778648664,293.5567381310127L144.4159236147657,293.7006309165224L144.4658420594501,293.91206534031795L144.4658420594501,294.13230971725955L144.5128240854167,294.3290615973393L144.52163324535445,294.5140672360778L144.589169913693,294.6755801845141L144.2544227982728,295.4126682044964L144.17514059938503,295.53306924490454L143.9842760286915,295.6916463309674L143.9549122263793,295.9618150324223L143.9549122263793,296.1145192075493L144.00189430045498,296.2554769855003L144.04300358520436,296.42873778198407L143.97546691686307,296.64017481934707L143.89618466986622,296.84280220038227L143.9637213863166,296.98669708653966L143.8492026438994,297.1599584826966L143.7816659274515,297.77077931573194L143.79047508738654,298.02920408213555L143.76404765568554,298.60185099308467L143.7053200991727,298.833846912662L143.69651098734425,300.4313956309512L143.8022205698237,300.63402679507846L143.72293837093866,300.8395949041613L143.64659254265962,301.0040495615512L143.61722874035013,301.23017493152605L143.44398244142008,301.25366848018444L143.17677204244728,301.26835196763204L143.04169865765812,301.3681996261938L143.10923532599668,301.5326547462849L143.12685359776287,301.72941375266464L143.10923532599668,302.09062853481424L143.20319942603942,302.27270456775943L143.41755505782794,302.7836930632257L143.38819125551572,303.0186307663509L143.2912907848645,303.2359484584176L143.2912907848645,303.4473929203212L143.32946369900287,303.68820499743083L143.4058095272817,303.8761561074783L143.42636416965365,304.10815851903084L143.50270999793293,304.33428776203L143.54088291207086,304.53986006001617L143.62897427089638,304.91576431586475L143.72293837093866,305.22412391729955L143.73468390148514,305.3680252099812L143.7053200991727,305.5207369464015L143.684765456798,305.70575328756286L143.64659254265962,305.87314919702567L143.69651098734425,306.257866758741L143.76404765568554,306.40764252893354L143.8492026438994,306.566228762855L143.88737555804028,306.7101312531089L143.97546691686307,306.8628442133591L144.22505904406944,307.1917649057082L144.4159236147657,307.2446272342846L144.55099699955508,307.32979436321256L143.60841962852146,308.2343305231934L143.16502651190126,308.736526518622L142.74218808576438,309.13593497363945L142.10793039845066,309.69687064845897L142.17546711490127,310.6072940985275L142.25181294317736,310.9773387508893L142.4338683539363,311.3473842603785L142.61886018341238,311.6704406772207L143.45572797196633,312.5808760438818L143.27073614249002,312.859881571762L143.28248167303605,313.15650908954194L143.32946369900287,313.2974807666212L143.53207380024242,313.53243393152417L143.59080135675526,313.764450517897L143.66714718503454,314.00527828420803L143.637783478943,314.3312774651101L143.8697572862743,314.616160252626L144.02244894282944,314.88929586632753L144.06062185696783,315.1888645483851L144.13696768524665,315.511929521808L144.06943101690536,315.702831902673L144.02244894282944,315.8907975887613L143.7816659274515,316.36658686458213L143.9549122263793,316.51049878250467L144.09879477110871,316.65147387773544L144.2544227982728,316.75133129322296L144.5421878877264,316.8247559258855L144.66845211258078,316.97747927393124L144.84169845961992,317.09789586675873L144.98558095623775,317.28586347671603L145.16763641510533,317.44152438726144L145.16763641510533,317.8791379951865L145.3408827140329,317.97018531258965L145.5053199011345,318.01424046839935L145.73435738596868,318.3108790208081L145.86062165893236,318.369619399079L145.99569504372153,318.4694780973946L146.04267711779744,318.6427625527162L146.05148622962588,318.85129155766583L146.1014046743103,319.0245764698886L146.4097243580295,319.1626171497979L146.55360690275938,319.10975047378054L146.7444714734529,319.09212825321407L146.82375367234022,319.27422463148486L147.0234274029715,320.5577175647262L147.19667370189882,321.0100270762458L147.31412881492452,321.5592622782137L147.3434926172372,321.88234290397986L147.92783185986673,323.7062958228951L148.0629052446559,324.2408572396182L148.2948791000988,325.4392234667962L148.38003408831287,325.55377381063647L148.5650259177894,326.5171760478368L148.8909638732746,327.5892642177094L147.52554802799295,326.7580278697696L146.17775050258933,325.9591067334709L145.28215515752004,325.53908785176174L144.5421878877264,325.054452623104L144.06943101690536,324.85472471091896L143.41755505782794,324.43177265703594L142.6452876151136,324.01469634259786L141.75262864065553,323.4948216351238L140.0377838269078,322.59312327188707L138.49912168269861,321.6561863732166L137.2570337397715,320.91897766894857L136.23811054045927,320.4372977906535L135.72718075550006,320.0965985090571L135.1986326506658,319.8469487583906L134.1885186112911,319.2389801481617L132.28280917874054,318.19633535112024L128.87661056422826,316.266729731038L126.94447374808306,315.1359994317336L125.73174960746883,314.43700711332724L124.66290796347175,313.8848643262922L123.6997759500639,313.34153448297434L122.95980863216096,312.87456609812324L122.1816684482294,312.4164098688123L121.650184020893,312.18145855031827L120.91902586292804,311.76735771921835L120.25540437330437,311.27689936111256L119.73566547651376,311.0977502764651L119.27465408813009,310.85399041714146L118.06192994751564,310.16970280317656L117.56274564499085,309.9053865122927L115.91543749958441,311.05957099717324L115.66584537237782,311.07425534532354L115.50434460399424,311.0272654458889L115.3399074168924,310.906853976448L115.20483403210301,310.73357908536616L115.10793351334019,310.5603043918094L115.06976059920203,310.4163984147461L115.06095148737359,310.26661888381716L115.06976059920203,309.8378390680284L115.05214232743856,309.53534444462235L114.93468721441286,309.3473869137628L114.79961382962074,309.1917347681433L114.60874925892722,309.0184618020375L110.55654742655497,308.97734616939704L110.41266492993714,305.4385075476252L110.38330112762492,304.99211996497314L110.35393732531497,304.1845138126291L110.33631910165786,303.6353437747203L110.35393732531497,303.2506321048724L110.30695529934837,303.0920488735066L110.29814613941062,302.7161485037119L110.27759149703616,302.4312870324888L110.27759149703616,302.20222349508964L110.16307275461895,299.5797595459329L117.56274564499085,299.59737956734983L117.61853683089498,299.1979928838319L117.73599194392091,298.93075665967774L117.7829740179966,298.7428105119544L117.9474112050982,298.60772433646866L118.12065750402849,298.54899119905303L118.42897718774793,298.50200475921554L118.92816149027249,298.4873214809749L119.1894991480251,298.42565178178654L119.41853663285679,298.29350246236777L119.61233757416176,298.27000927083134L119.97644844378533,298.27588255643235L120.34349573212671,298.2670725799817L120.52555119099452,298.2465160339072L120.73697040406296,298.14960661674235L120.88085294878965,297.98221771479206L121.02473544540726,297.7854625421948L121.17155436074563,297.7032365163931L121.31543690547232,297.7032365163931L121.49749231622832,297.67387012438314L121.69129330564238,297.62101057159293L121.87334871639814,297.55346786951924L122.02604042106259,297.43893889836266L122.3431692166107,297.14527530061883L122.54577931785298,296.99550700822755L122.76894406146744,296.87510509793685L122.88346280388214,296.73708352998L123.02734534861156,296.66366782582173L123.2211462899138,296.59025214714643L123.40320174878161,296.64017481934707L123.47073841712017,296.78406961520676L123.47954757705793,296.9485208757709L123.57644804770894,297.08654263075545L123.72913970426453,297.24218424444456L123.85540397722798,297.4036992831989L124.02865027615803,297.8089556778546L124.20189657508809,297.87649851200814L124.32522447744032,297.96753452232156L124.57775297525791,298.202466306214L124.68346260584667,298.3287422788436L124.84496342233683,298.40509521958654L124.96241853536253,298.5254979777619L125.0387643636418,298.66645744296113L125.07693727777973,298.8397202147433L125.29716565078593,299.1803728982063L125.41462076381163,299.3477628011128L125.55850330853832,299.5180895075152L125.72294044753107,299.7471497895209L125.89618674646113,299.873426745223L125.9138050182246,300.0173238424943L125.83745918994828,300.1847144633637L125.96078709230028,300.27575148566945L126.18395183591474,300.35797857735616L126.37481640661099,300.378535343755L126.50108067957171,300.4402056561795L126.73305453501484,300.5018759884739L126.95328290802081,300.5371162010366L127.14708384932305,300.51655941760276L127.40548513646695,300.53124284786384L127.69325017781443,300.8161014070879L127.86649647674449,300.9511891152053L127.9839516378795,301.08921365316473L128.12783413449688,301.2096180728483L128.50369053466693,301.7264770574442L128.58003636294325,301.87918565560835L128.69455510536045,302.02014753207084L128.82962853826166,302.16698296892207L128.99406567725396,302.3255653419605L129.21429405025742,302.47533773090845L129.39634950912478,302.5135150243222L129.59015045042702,302.42247691333114L129.97481601053482,302.30207165730445L129.9924342341917,302.0818183839389L130.15687142129332,301.99371718705993L130.29194480608248,301.9614133997719L130.71478328032822,301.8938691443L131.3989593642175,301.83513505220094L131.724897367812,301.54146487101303L131.91869830911696,301.4886042732377L132.08313549621835,301.56202176617717L132.1770995962611,301.4563005739563L132.33272752720677,301.14207423443906L132.49422843991783,300.8836452731549L132.629301824707,300.7485576131959L132.56176510825685,300.56648306584606L132.40907345170126,300.35797857735616L132.36209142573466,300.1436009261018L132.51478308229002,300.1318542440205L132.67922022128255,300.1993978201037L132.831911925947,300.22876463317414L133.10205869552829,300.378535343755L133.2841141543961,300.4636991068834L133.49553336746408,300.5752930972989L133.71869811107854,300.73387416618624L133.93892643597542,300.8307848604599L134.33240110790894,301.02166971362124L134.46747454080992,301.1391374041103L134.64952995156568,301.25366848018444L134.98721343759757,301.5532116404792L135.13109598232427,301.5913887425906L135.36306983776763,301.7881478112017L135.76829004024694,302.0965019368927L136.04724596976575,302.33731220947845L136.07367335335766,302.1522994103325L136.03550043921973,301.7000467063172L136.0560550815942,301.26835196763204L136.08541888390414,301.05691002270066L136.14121006980827,300.91594882585775L136.29683809697212,300.5752930972989L136.3937385676261,300.4225855580141L136.440720641702,300.2581314026089L136.50825731004056,300.0848673785031L136.6051577806943,299.873426745223L136.71086741128283,299.708973057193L136.98982334079915,299.2273594979602L137.01918709500228,299.0364764156617L137.0955329232786,298.6987606275959L137.2100517138049,298.5548645408887L137.5095622375893,298.32286894359675L137.86486399538467,297.9616611975176L138.04691945424975,297.7619694092255L138.20254748141633,297.6151373048237L138.53729459683655,297.3361566039777L138.68117714156347,297.25099412879155L138.7692684522799,297.09241588256646L139.02766973942357,296.716527136018L139.31837119948864,296.49040688611575L139.40352613959362,296.31714608763855L139.45344458427803,296.11158259517475L139.55915421486657,295.9471319332581L139.39471702776518,295.76506170198076L139.43288994190334,295.5712452030874L139.42408078196854,295.4273512194535L139.43288994190334,295.26290112314L139.46225369610647,295.0808314619567L139.40352613959362,294.86058610887295L139.43288994190334,294.6873266054219L139.5385995243828,294.56986261650104L139.5855815984587,294.38192034266245L139.7206549832506,294.18223182999293L139.83811009627652,294.0324655727419L139.9702471104572,293.89150921057876L140.13468429755858,293.7828553781907L140.26094857052226,293.627216222769L140.3167397564264,293.489196638524L140.32848523886355,293.3482406084175L140.47236778359047,293.27776260130327L140.63680497069208,293.18085540029733L140.58688652600767,293.05164584526284L140.55752277180432,292.88719741893414L140.76894198487275,292.7961635170194L140.93337917197437,292.76679777916036L141.0596433968285,292.69338337823183L141.2123350533841,292.6317153162923L141.3562175981108,292.64052501783004L141.4912909829029,292.60822268422805L141.63517352762983,292.549491210415L141.73207399828084,292.39091630798185L141.7908015547937,292.20297579351467L142.01102992779943,292.12075183440504L142.2606220550058,292.12075183440504L142.4632321562458,292.1119421519314L142.65703309755077,292.13249812631284Z\" stroke=\"#000\" fill=\"#FFF\" strokeWidth=\"0.5\"></path>\r\n        <path id=\"Kisii\" ref={(item) => countyRefs.current[44] = item} d=\"M151.5571952179937,293.25720652792165L151.69226860278263,293.37173326615164L151.88313317347615,293.6653918567572L151.87432406165044,293.8210310379691L152.0093974464396,293.9502410216005L152.14447083123173,293.97373374060663L152.3059716477219,293.9502410216005L152.61429133144406,293.85333353908095L152.76991935860815,293.9032555427103L152.91380190333484,294.01190943218444L153.19275783285389,294.1381829375546L153.29846746344242,294.2615198771535L153.3160857352059,294.41715951308277L153.35719501995527,294.6051018163402L153.55686870247746,294.69026319871614L153.6831329754409,294.7548684534117L153.865188434306,294.82534686878006L154.0589893756105,295.00741631997226L154.20287192033743,295.2159153695625L154.38492733109342,295.3010770342564L154.51119160405688,295.40679495067474L154.63451950641183,295.48902008547935L154.74022908889128,295.60061135152097L155.0015667466439,295.7356955794633L155.12489464899613,295.81792079026366L155.49194188923116,296.09689948580103L155.64463354578652,296.18206149565714L155.8002616210597,296.23492063810886L155.98231703181546,296.31714608763855L156.1085813047789,296.4169912673648L156.2524638495056,296.46691389883136L156.36698259192303,296.5491393897468L156.4726922225118,296.6695410658208L156.66649316381677,296.716527136018L156.89553064864822,296.74589344121085L157.09814074988776,296.88391501494203L157.21559586291391,297.01019017978626L157.29194169119273,297.15408518087276L157.36828751946905,297.350839799518L157.6090705348497,297.32734666790543L157.879217304431,297.3361566039777L158.0700819232336,297.40076260476934L158.21396441985144,297.4624320426206L158.34903780464333,297.59751745741085L158.51347499174494,297.64450368845377L158.70433956243846,297.68268002711216L158.8599676377114,297.8383221372992L159.06257769084482,297.96753452232156L159.2152693474004,298.1114301909211L159.2916152237858,298.2846924851501L159.4266886085777,298.4344618132659L159.59112574757046,298.9102000456521L159.81135412057347,299.12751295074554L160.38101146204826,300.07018398236494L160.8801957645701,301.02166971362124L161.2854159670526,301.5796419707156L161.79340938140285,302.4430339068126L162.41004874884425,303.52962137659716L161.86975520968213,303.7322560043636L161.64952683667616,303.71757231812967L161.2560521647399,303.8761561074783L160.97709623522405,303.91433369967945L160.61004899498903,304.02886652599113L159.81135412057347,304.1698301367476L159.62048954987995,304.2461854572603L159.0332139366419,304.4194534201686L158.38721071878172,304.5604172983818L157.84985355022764,304.6367727902569L156.6371293615041,305.00093026027076L156.4726922225118,305.07434919683453L155.52130569154065,305.27111206740676L155.3656776643768,305.35334143340924L155.18362220550898,305.3680252099812L154.5493645181948,305.54129435043455L154.34675441695526,305.6117767118805L153.6831329754409,305.6470179276588L153.36600413178394,305.85259180075025L152.4704088348235,306.0170510894278L151.26649375792863,306.38414824571754L151.0550745448602,306.3489068752252L150.2769343609284,306.636711603523L149.79536833017005,306.75711981900776L149.39014817579664,306.78355093530104L149.08476481457683,306.9303903496045L148.91151851564678,306.88927529848235L148.12163280116874,307.07135637222274L147.29357417255278,307.3356679433593L146.2922692450038,307.57648553725676L146.04267711779744,307.5236231010006L145.86943077075807,307.5618015174398L145.64920244586392,307.55299113505856L145.28215515752004,307.35916231417167L144.94740804209937,307.2152593039324L144.80058912676145,307.2974895799648L144.65670663014362,307.36503594349193L144.47465117127854,307.2828055853162L144.22505904406944,307.1917649057082L143.97546691686307,306.8628442133591L143.88737555804028,306.7101312531089L143.85801175572806,306.55154483346934L143.76404765568554,306.40764252893354L143.69651098734425,306.257866758741L143.64659254265962,305.87314919702567L143.684765456798,305.70575328756286L143.71412925911022,305.4678752129718L143.8198388415899,305.2534914975736L143.7053200991727,305.1360211105305L143.62897427089638,304.93044810300864L143.46453708379477,304.16395661862333L143.4058095272817,303.99656237313224L143.42636416965365,303.8027376767876L143.3206545871742,303.69407845155865L143.2912907848645,303.5384315980932L143.28248167303605,303.37984815912927L143.2912907848645,303.2359484584176L143.38819125551572,303.0186307663509L143.44398244142008,302.76019931936366L143.3588275013151,302.639793839705L143.20319942603942,302.27270456775943L143.10923532599668,302.09062853481424L143.12685359776287,301.72941375266464L143.08868068362494,301.3212125031032L143.23256322835164,301.2595419038959L143.4058095272817,301.24485841713505L143.54088291207086,301.28303545623214L143.65540165448851,301.2008080118697L143.64659254265962,301.0040495615512L143.72293837093866,300.8395949041613L143.8022205698237,300.63402679507846L143.69651098734425,300.4313956309512L143.7523021732486,298.772177058807L143.76404765568554,298.60185099308467L143.89618466986622,298.0497606062167L143.8022205698237,297.77958927072694L143.8697572862743,297.4183824354103L143.8492026438994,297.1599584826966L143.9637213863166,296.98669708653966L143.9637213863166,296.76938645944006L144.00189430045498,296.5638225302213L144.05181274514212,296.40818141791345L144.02244894282944,296.2496037569322L143.9549122263793,296.1145192075493L143.9549122263793,295.9618150324223L144.06943101690536,295.72101249563894L144.23386815589788,295.5653719931223L144.2808502299738,295.39798514241005L144.64789747020586,294.7049462138837L144.52163324535445,294.5170038271075L144.5128240854167,294.34374458892967L144.48346033121356,294.1851684167102L144.4658420594501,294.0324655727419L144.4658420594501,293.8826994137636L144.4159236147657,293.7006309165224L144.38949623117105,293.28657232697265L144.32195951472318,293.12799693080416L144.27204107003604,292.9253729319603L144.36894154069,292.59353985050467L144.72424329848513,291.19279800005586L144.84169845961992,291.01073149819683L144.9738354738006,290.8991424234264L145.05311767268813,290.7258858151317L145.03256303031367,290.52032726541574L145.10890885859249,290.33238816765476L145.2263639716184,290.2061166982392L145.34969187397041,290.0181778299581L145.4847652587623,289.8801602787088L146.697489399377,289.759762096079L146.9764453288958,289.40737741934936L147.17905543013535,289.25467754981395L147.38166553137535,288.90816663863353L147.38166553137535,288.7495939608568L147.42864755734172,288.6203866783688L147.504993385621,288.4735602931443L147.63125765858172,288.3414166233504L147.83386775982422,288.20633650059835L147.92783185986673,288.0477642771799L147.93957734230366,287.8833190700311L147.97775025644205,287.71006442589595L148.15099660348096,287.6865722895773L148.3418611741747,287.7335565641734L148.60319883192733,287.74823916963334L148.87334560150862,287.59554022568625L149.06421017220214,287.66308010710407L149.25801116161597,287.69538182242604L149.516412400651,287.6895088004957L149.7278316618283,287.67188968733075L149.8834596889924,287.67188968733075L149.97742378903467,287.5368098882987L150.09487890206083,287.3958570896575L150.2299522868525,287.32538071649424L150.33566191744148,287.14625340227735L150.35328018920472,286.97299920664403L150.42962601748377,286.85260224842773L150.56469940227316,286.6999037811399L150.7203274294368,286.4826022237732L150.9699196047552,286.49141176795246L151.19014792964958,286.4737927279653L151.4514855874047,286.4737927279653L151.66290484858223,286.41212612033496L151.941860729989,286.1595867307885L152.19145290530741,286.1419677104789L152.344144561863,286.0744281823218L152.63484597381603,285.9833966224074L152.78753763037162,285.91585708178144L152.93142017510104,285.8277621100697L153.07530271982796,285.7602226042087L153.26029454930404,285.72204812009426L153.41298620585962,285.66625464822533L153.55686870247746,285.6545086377244L153.76828796365476,285.61339767670097L153.9415342625848,285.5634772520811L154.15295347565325,285.4783188230441L154.37611821926748,285.4724458454005L154.58753743233592,285.39609695377834L154.769592891201,285.29038311284955L154.8870480042267,285.111256972745L155.01037590658166,285.0495906417899L155.22179511964987,284.996733775748L155.44495986326456,285.0818920723406L155.56828771750747,285.1787963359629L155.52130569154065,285.3138750583378L155.53892396330684,285.4812553119082L155.5301148033691,285.69855614335376L155.6064606316454,286.1272852344374L155.62701532212964,286.3475229801178L155.63582443395808,286.59418948211965L155.71217026223417,286.74395139293574L155.79145246112193,286.87315781374025L155.85605280696382,287.04053894099786L155.88541656116445,287.2519678542803L155.88541656116445,287.4457778725403L155.964698760052,287.58379413798986L155.9911261917532,287.73942958702196L155.90597120353914,287.86276343195493L155.82962537526032,288.0477642771799L155.7620887069213,288.27387657776586L155.73272490460909,288.43538544974103L155.8472436470263,288.6057040266696L156.02929910589114,288.9316588790712L156.07921755057828,289.11372387215516L156.02929910589114,289.24880449446175L156.16437249068326,289.32221788810796L156.28182760370896,289.4807908568481L156.39634634612617,289.6775389353736L156.56078353322778,289.88896993099826L156.5402288908531,290.1238933964946L156.41690103660744,290.2795303122118L156.28182760370896,290.2560379515386L156.15556337885482,290.1884974205244L156.00287172229923,290.1297665195364L155.88541656116445,290.0534163152706L155.7620887069213,289.9946854449267L155.5976515198197,290.0328605115424L155.3862323067517,290.01524124562746L155.27171356433428,289.91246225837085L155.12489464899613,289.8566679542469L154.99275763481546,289.7538890294972L154.8576842500263,289.62468126122604L154.63451950641183,289.6099985544665L154.48182784985624,289.5512677837235L154.31739066275463,289.524838909886L154.02081646146985,289.7509524481457L153.88574307668046,289.8948430006135L153.84757016254252,290.0534163152706L153.78003344609192,290.2560379515386L153.64495996508163,290.467469467421L153.48933203413594,290.6436623945455L153.30727657527086,290.80223617187954L153.17220319047897,290.94906386068646L153.05768444806176,291.0547798612177L153.01070237398608,291.26621194808064L152.86388345865043,291.4541517422622L152.79634679030892,291.63621856904666L152.73174644446976,291.7742370318309L152.71119180209507,292.02090854456173L152.71119180209507,292.31456545929046L152.6730188879569,292.52012550298235L152.6818280478917,292.66108103746285L152.76991935860815,292.8049732727664L152.62310049137886,292.79029037878036L152.4234267607476,292.7521148875352L152.2120075476796,292.7961635170194L151.83615114750955,292.82552930663144L151.69226860278263,293.1896651223163ZM151.5571952179937,293.25720652792165L151.3839489190632,293.21315781221045L151.19014792964958,293.3041918274194L151.46910385916817,293.47451370170245Z\" stroke=\"#000\" fill=\"#FFF\" strokeWidth=\"0.5\"></path>\r\n        <path id=\"Nyamira\" ref={(item) => countyRefs.current[45] = item} d=\"M163.8597386952108,283.39106385944433L163.7960192364983,283.73991780133434L163.78721012466985,283.8984877563985L163.71967340821925,284.06880373902936L163.53468157874272,284.0776131664277L163.46714491040416,284.20681846580106L163.48769955277612,284.3947535300699L163.44952663863796,284.55332385309396L163.4407174787002,284.7471320846345L163.69911876584433,284.7647510250166L163.90172886708683,284.8293537827537L164.07497516601416,284.82348081735114L164.23941235311577,284.761814542904L164.3627402073614,284.87633765423277L164.4508315661842,284.996733775748L164.5447956662265,285.1846693080258L164.3627402073614,285.5987151782138L164.30694902145729,285.742603607245L164.18068479660292,285.86593660748986L164.15132099429343,286.02157113951836L164.26583973671063,286.1360947199755L164.32456729322348,286.27998340542445L164.3627402073614,286.50609431010105L164.2188577107438,286.6558561759723L164.2482214649442,286.7909355611996L164.3333764531585,286.9553801376427L164.22766682256974,287.1286343227056L164.25703062488196,287.27252344803037L164.27758526725688,287.492762107161L164.25703062488196,287.7159374482547L164.27758526725688,287.8980016833262L164.25703062488196,288.0477642771799L164.18068479660292,288.20633650059835L164.22766682256974,288.34435318928286L164.25703062488196,288.73491130218275L164.30694902145729,288.9375319274734L164.37154936729917,289.06086631028865L164.46844983795017,289.19301033073987L164.52717744257234,289.3838851852283L164.60352322273934,289.5512677837235L164.7004236933933,289.6775389353736L164.80613332398207,289.7685716961937L164.83549712629156,289.9242084469071L164.82375159574553,290.09159139053264L164.76796040984118,290.21786285197504L164.65050529681525,290.3470709152296L164.5859049509761,290.5585024100331L164.84430623812,290.92850798487666L164.9294612263343,291.1017647325706L164.87367004042994,291.2808947499038L164.7092328533281,291.41303990913616L164.60352322273934,291.6274088559532L164.52717739446325,291.841778037672L164.57415946853916,292.06789364814625L164.50662275208856,292.22646833777844L164.48900448032487,292.38210656752585L164.5447956662265,292.5788569695723L164.62407786511426,292.7961635170194L164.86486088049492,293.1133140167086L164.86486088049492,293.33062110464334L164.97057051108368,293.4510210335859L165.04691633936,293.57435765193765L165.1819897241519,293.73293335261286L165.28769935474065,294.02071923397386L165.15262592183944,294.2204075565086L164.75915124990615,294.2732662764684L164.5447956662265,294.3877935213145L164.35393109553297,294.50232082423753L164.18949390843136,294.67264359141274L164.14251188246476,294.8987619505801L164.77676952166985,296.2055544515933L165.1144530077013,296.9338377566398L165.37285429484564,297.52410145074043L165.9689390680212,298.81329030863293L166.0658395386722,299.068779708383L166.14218536694852,299.1891829148811L166.23027672577382,299.3859394630169L163.99862933773784,301.8556919799041L163.69030965401862,301.6971100115617L163.4583357504664,301.5473382556522L163.31445325384857,301.49447765621375L163.10303399267127,301.5179712380757L162.9092330513663,301.5855153565592L162.89161477960283,301.7822744189426L162.96796060787938,301.95260330319513L163.02668816439223,302.1111854910197L163.06486107853038,302.28738808788506L163.04430643615842,302.7014649008749L162.98851525025407,302.8571110745982L162.83288722308998,302.7161485037119L162.65964092415993,302.8130602353245L162.51575837943324,303.0039471870132L162.43060343932552,303.20658116912256L162.48639462522988,303.4180256443436L162.44822166298263,303.5766091173556L161.2854159670526,301.5796419707156L159.67628073578408,298.9013900413674L159.4472432509499,298.4961314670348L159.3121698661605,298.29350246236777L159.2152693474004,298.1114301909211L159.1301144072927,297.9734077991833L158.95686810836537,297.88530842343584L158.78362176132623,297.75022281969217L158.59862997995901,297.64450368845377L158.38721071878172,297.62101057159293L158.24332822216388,297.45362210118526L158.0700819232336,297.40076260476934L157.88802646436852,297.32734666790543L157.6266888066134,297.32734666790543L157.36828751946905,297.37139625577527L157.32130549350268,297.2304376844448L157.24202324650832,297.0689228282053L157.12750450409112,296.910344671943L156.89553064864822,296.74589344121085L156.66649316381677,296.7106538947134L156.46388306257404,296.6577945859881L156.3757917037517,296.534456250286L156.0586628600945,296.3700053115934L155.876607449336,296.2584136479563L155.70336115040845,296.1967445627469L155.49194188923116,296.09689948580103L155.12489464899613,295.81792079026366L155.0015667466439,295.7356955794633L154.74022908889128,295.60061135152097L154.63451950641183,295.48902008547935L154.46127315937247,295.36568241890154L154.27921774861397,295.2482180710635L154.13533520388683,295.1278171386621L154.02962562140738,294.96924045959986L153.865188434306,294.801854061184L153.70075124720415,294.76367823607495L153.55686870247746,294.6961363854232L153.39536793409343,294.64327761439176L153.3160857352059,294.4788280505086L153.29846746344242,294.2615198771535L153.19275783285389,294.1381829375546L152.91380190333484,294.01190943218444L152.74936471623323,293.89150921057876L152.50858174896462,293.8738896653974L152.3059716477219,293.9502410216005L152.15327999116676,293.9796069087081L151.99765191589336,293.944367806143L151.87432406165044,293.8210310379691L151.88313317347615,293.6653918567572L151.69226860278263,293.37173326615164L151.5660043298194,293.3100650266071L151.46910385916817,293.47451370170245L151.2018934601956,293.30125525193824L151.32522136255034,293.22490410992975L151.46910385916817,293.20434804119515L151.69226860278263,293.1896651223163L151.76861443106168,292.99291426157083L151.90368781585107,292.8343390153547L152.11510707702837,292.7814806716916L152.26779873358396,292.8137829807283L152.441045032514,292.76679777916036L152.63484597381603,292.79029037878036L152.77872851854545,292.79029037878036L152.6818280478917,292.66108103746285L152.6730188879569,292.52012550298235L152.71119180209507,292.31456545929046L152.71119180209507,292.02090854456173L152.73174644446976,291.7742370318309L152.79634679030892,291.63621856904666L152.87562898919668,291.4277227196453L153.01070237398608,291.2368463470292L153.12522111640305,291.1164475247177L153.17220319047897,290.94906386068646L153.248549018758,290.8316017220501L153.37481329171874,290.7552513564372L153.50988667651063,290.62604308672354L153.67432386361247,290.485088668054L153.8270155201676,290.1297665195364L153.9151068308811,289.874287209422L154.12652609205838,289.66872933831405L154.31739066275463,289.53364855023955L154.48182784985624,289.5483312527472L154.63451950641183,289.6099985544665L154.80776580533916,289.58063314340154L155.08672173485775,289.83611216606283L155.25996803378825,289.91246225837085L155.37742314681395,290.01524124562746L155.53892396330684,290.0446067055211L155.70336115040845,290.00055856504L155.876607449336,290.0446067055211L156.01168083412767,290.1238933964946L156.34936432015957,290.27365723386873L156.5490380507906,290.1238933964946L156.57840180499124,289.91246225837085L156.36698259192303,289.6481735648797L156.28182760370896,289.4807908568481L156.16437249068326,289.32221788810796L156.04104463643762,289.21943912342425L156.088026662404,289.02269138424714L155.8472436470263,288.6057040266696L155.71217026223417,288.48530641838164L155.74153406454684,288.34435318928286L155.83843453519762,288.0272086269972L155.95295327761482,287.8245886726565L155.964698760052,287.6043497556955L155.88541656116445,287.4457778725403L155.88541656116445,287.2519678542803L155.85605280696382,287.03760243675634L155.7620887069213,286.81442762411297L155.65637907633254,286.6235545773987L155.62701532212964,286.3680785100836L155.61820616219188,286.1801422477785L155.577096877445,285.9775236350095L155.53892396330684,285.46363633103215L155.53892396330684,285.2757006297837L155.673997348096,285.2228437253711L155.50075104916596,285.10832048739235L155.33925023267557,285.0143527301043L155.19243131733742,284.996733775748L155.89716209171047,284.4035630144583L156.1085813047789,284.265548155613L156.2700821212718,284.2215008992816L156.62832024967565,284.16864417073265L156.81037566043415,284.08642264217553L157.35947840764334,283.9425349690225L157.58851589247502,283.8133297742183L157.8968355761947,283.74579074701904L158.01135431861167,283.61071268589546L158.3402286928149,283.44626987995787L158.61918462233348,283.4815076207019L158.74544884718807,283.2407164981269L158.9656772201913,283.1350033626214L159.1976511237433,282.95294199273695L159.82309965111972,282.4331865659492L160.24593807725614,282.05144581148494L160.5131485243378,281.94573303753907L160.76567702215561,281.83121092501034L161.15915169408913,281.72843467156713L161.30303423881583,281.62272204053494L161.76404557909336,281.4406614032841L161.8903098520541,281.3584405248091L162.03419234867465,281.2292362898741L162.48639462522988,280.85336969701416L162.83288722308998,280.6713094359283L162.99732441019182,280.6771823788046L163.15001606674696,280.73297502794156L163.28508945153635,280.91209882130755L163.42897199626304,281.0178112969929L163.51706330697925,281.19987167763236L163.71967340821925,281.5316917105732L163.7079279257821,281.68732419760977L163.71967340821925,281.8547026263247L163.84300131057398,281.98977999883016L163.9604564235999,282.1542221094427L164.00743844956628,282.32747367809253L163.97807469536292,282.4713606641555L163.96926553542562,282.6681041448215L163.86355595294594,282.8501654115721L163.8929197071493,283.04690915630886Z\" stroke=\"#000\" fill=\"#FFF\" strokeWidth=\"0.5\"></path>\r\n        <path id=\"Nairobi\" ref={(item) => countyRefs.current[46] = item} d=\"M253.4365815996655,316.58634903676005L253.60514423472614,316.6279779863066L253.80775433596614,316.6221040381422L253.97219152306752,316.6279779863066L254.21297449033932,316.71315050379576L254.39502994920417,316.8394408668139L254.50073957979293,316.9451723826592L254.69454052109768,316.97747927393124L254.86778682002523,317.03621906541247L255.05865139072148,317.12726580957127L255.21427946599465,317.25355655965427L255.17610655185626,317.41509136702473L254.74152259517382,317.86738994169843L254.29812947855316,318.34906026611475L254.15424693382624,318.4166117494061L254.07790110554743,318.5869590697129L253.9810006348962,318.7015030791732L253.866481892479,318.8601026273309L254.0103644372059,319.0774431113276L254.1659924643725,319.18611344110525L254.28051120678697,319.30359505760396L254.42439375151662,319.3505876954769L254.57708540807175,319.4269508044402L254.74152259517382,319.60023648436663L254.85604133758807,319.5179991966321L255.09682430485964,319.5444326392094L255.50204450733895,319.7265296052203L255.8955191792752,319.8263893921865L256.1069383923434,319.8322634827336L256.32129402412966,319.86457108177063L256.6560410914433,319.8322634827336L257.02308837978467,319.66778861570316L257.17578003634026,319.6442922370131L257.31966258106695,319.6061106127214L257.48409976816856,319.635481066032L257.6367914247239,319.6971591311746L257.7160736236117,319.8322634827336L257.79241945188824,319.98499031612795L257.9157473061339,320.0819132048297L258.08018449323527,320.14946558936043L258.2446216803369,320.24051449308854L258.62928719233537,320.18764737514425L258.68801479695753,319.99673856011486L258.8230881817467,319.8469487583906L259.0345073948149,319.7705854010238L259.17838993954183,319.6237329031545L259.4955187831986,319.4710064980227L259.64821043975417,319.29184687673546L259.8713751833686,319.10975047378054L260.39992324009404,318.8894729600708L260.6700700096749,318.80723607388836L260.82276166623046,318.8924099840861L260.9666442109599,318.80723607388836L261.4100372794685,319.3270913744124L261.5627289841332,319.62079586260256L261.92096711253976,320.2698850915408L262.24690511613426,320.12009497045483L262.42896052689,320.2992557448708L262.622761468195,320.6311443286701L262.2380959080874,320.833802415855L262.9486994236777,321.48289788976643L263.02504525195695,321.59744448993376L262.91933566947705,322.0468206523993L262.719661938846,322.04094641069264L262.5082427257778,322.1231853868663L262.26745971039713,322.20542436954736L262.1206407950617,322.2994118659343L262.0736587690949,322.44920458774595L261.98850378088105,322.5549407533269L261.815257481951,322.5079468746996L261.72716612312547,322.6283686915685L261.68899320898754,322.8721497482086L261.5627289841332,323.06600007551856L261.58328362650786,323.2715992632599L261.71835701129976,323.4067074792327L261.2074272263378,323.3538390164328L259.3017177937875,322.90152096535905L258.503022967481,323.1864223934653L258.1565303215118,323.3244676902457L258.06256622146907,323.03662877068575L257.810037723654,322.39633653900995L256.79111452434176,322.7869731572826L256.9349970209596,323.1335540264925L257.27268050699126,324.00294776621826L256.782305364404,325.07207569178837L256.43581276654663,325.8474931824307L256.2801846912737,325.759377283814L256.1568568370276,325.6213292162745L254.87659597996276,325.15431668166696L253.9810006348962,325.9767299380428L253.5669713205882,326.3380061481071L253.90465480661692,326.81970954718156L254.03091907958037,327.0311897047283L254.27170209496103,327.4982098038506L254.36566619500377,327.8095575680834L254.58883089050892,327.83893006637544L254.76207723754555,328.01810231704536L254.96468729067897,328.0650983950052L255.17610655185626,328.22958474985097L255.30824356603694,328.3676359564477L255.4168895672342,328.5233109299181L255.50204450733895,329.1577621863951L255.6077541379277,329.301689145719L255.78980954868666,329.4074314783793L255.90726470982122,329.5102366756827L256.0805110087517,329.8597749472426L256.18622059123095,329.9625805664201L256.1568568370276,330.24162481369746L256.02178345223865,330.1065085276514L255.88671006744676,329.9126463923955L255.675290806269,329.92733291747214L255.53140830965162,329.81865274574557L255.37578023437823,329.73053375990514L255.19372482361973,329.6864743174851L254.75033170699953,329.6864743174851L253.67268095117674,329.2018214182264L252.87398607676118,328.85522249014946L252.76827649428174,328.76416700530973L252.94152279320906,328.6378643557521L252.7888311366537,328.56736995930925L252.64494859192678,328.5144991549945L252.5098752071376,328.44694204439884L252.3748018223455,328.4028831104285L252.20155547530658,328.4322557151139L252.01950006455036,328.4175694358738L251.82569907513653,328.44106753170166L251.74054413503177,328.2883299244629L251.54674319372953,328.2971416816451L251.42341529137457,328.2207729498339L251.27953274664787,328.1003454542831L250.95065842055374,327.9975415541274L250.79796676399815,327.9123612973186L250.65408421927145,327.73318916589045L250.53662910624575,327.5070214995085L250.05506307548717,327.5217077085757L249.84364386241873,327.5070214995085L249.47953299279516,327.3484106969721L249.36207783166014,327.21329790800945L249.18002242090165,327.24854470292996L248.93923940552372,327.43065330063723L248.84233893486999,327.53051940605246L248.69845639014306,327.5275821734854L248.55457384541592,327.5510800842758L248.41069134879854,327.5128959636574L248.22863588993073,327.4835235978147L248.07300786276664,327.4159671033114L247.92912531803995,327.5217077085757L247.77643366148436,327.5158332439712L247.63255111675494,327.5745780480438L247.50628689190307,327.4893980607511L247.3036767906608,327.4982098038506L247.11281221996728,327.5598918321483L246.9571841446941,327.4982098038506L246.79568337631008,327.5217077085757L246.68703737511305,327.42184161088994L246.513791076183,327.3836575336036L246.34348114786417,327.3865947624592L246.20840776307205,327.35722238104734L246.02341593359574,327.35722238104734L245.70628708993877,327.2103606836106L245.27463950386732,327.06349922293884L245.11901147670073,326.95775904163156L244.9751289319736,326.8725795139699L244.66680920014505,326.6229158242501L244.50530843176148,326.48192952533486L244.34087124465987,326.2910107797077L244.18817958810428,326.1588364773474L244.0531062033151,326.0883436128871L243.8886690162135,325.93854633952697L243.7242318291121,325.80343520075166L243.37773923125155,325.8386815655152L243.10759246167072,325.58314573389964L242.97545539938073,325.3746053919187L242.94609164517738,325.2130602878356L242.85800028635504,325.07207569178837L242.65539018511504,324.68143167424284L242.4175435884522,324.74604937002664L242.13858765893633,324.54338481980346L242.32064311780118,324.4611442534922L241.86844088935504,324.234982940203L242.19437884483773,323.57999867332813L242.35881603193934,323.63874150485975L242.57023524500778,323.33034194528904L242.7141177897372,323.1952338142548L242.92553700280564,322.76641330934086L242.94609164517738,322.61368309078296L243.06941949942325,322.45507880074473L243.09878330173296,322.2906005576661L243.0606103875948,322.1084998462445L243.2044929323215,322.1084998462445L243.2044929323215,321.9146510271095L243.3601209594883,321.84416060497165L243.44527589959307,321.72667668891705L243.31020251480118,321.55338805951544L243.4364667877644,321.3947851732757L243.66844064320776,321.4447157130266L243.80057765738843,321.29492420156936L243.9356510902894,321.3331063326648L244.26452541638355,321.3859738809756L244.4260262328737,321.43884149970785L244.5434813458994,321.5445768041679L244.64038181655337,321.27436460103326L244.82243727541845,320.95715968598364L244.85180102962158,320.76624971617514L244.95751066021012,320.67813750106194L244.96631977203583,320.4813537829433L245.0925840449995,320.14946558936043L245.2922577756308,320.1964585358898L245.44788580279464,320.2228921180089L245.80318756059228,320.26401098093254L246.1966622325258,319.7265296052203L246.32292650548925,319.43869899755333L246.5813277445243,319.5091880823864L246.98654794700383,319.741214868813L247.0746393058289,319.6061106127214L247.391768101377,319.7647112651726L247.52684153427526,319.5238732731276L247.67072403089583,319.20667275361757L247.8733341321356,318.8454174634344L247.6883423026593,318.71618817881097L247.81460657562252,318.40780066139047L248.00547114631604,318.067106703549L248.37251843465742,318.2492016589746L249.66158840355092,318.95996169897285L250.09323598962533,319.2507283242464L249.98752640714588,318.90709515326176L250.24886406489827,318.9746468757471L250.82439414759028,319.1009393872579L250.8449487899652,318.8894729600708L250.94184926061598,318.6045812222095L251.1062864477176,318.5605258213361L251.2883419065854,318.5575888047612L251.37349684669016,318.33143814782335L251.47920647727892,318.0171774728897L251.59666159030462,318.09941386565083L251.7963353209359,318.21395745139006L251.99013626223814,318.28738288644405L252.1839372035431,318.3020679398562L252.36599266240796,318.2961939182963L252.53923896133801,318.2785718070598L252.71248530837738,318.19046128614065L252.86517696493252,318.1610911576252L253.0677870661725,318.105287878473L253.03842326386302,317.8585789383553L252.9914411897871,317.69116955248154L252.69193066600246,317.2418085611167L252.96207743558375,316.9627943180191L253.10595998031044,316.67496972510685L253.23222420516504,316.59860819990706L253.3672975899567,316.56923837173144Z\" stroke=\"#000\" fill=\"#FFF\" strokeWidth=\"0.5\"></path>\r\n      </svg>\r\n      <div className='map_contents__key flex'>\r\n        <span>MORE</span>\r\n        {keyBlock} {keyBlock} {keyBlock} {keyBlock}\r\n        <span>LESS</span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Map","import React from 'react'\r\nimport { AppContext } from '../../App'\r\nimport { CountyContext } from '../../views/public/Counties'\r\n\r\nlet prevCards = [0,0]\r\n\r\nconst Names = ({props}) => {\r\n\r\n  const {statsValues} = React.useContext(AppContext)\r\n  const {countyFocus, countyModalState, searchState, resultsRef} = React.useContext(CountyContext)\r\n  const listHeaderNameRef = React.useRef([])\r\n  const listHeaderNumberRef = React.useRef([])\r\n  const listDetailsRef = React.useRef([])\r\n\r\n  const showCountySummary = (index) => {\r\n    countyFocus.setCountyInFocus({name: props.countyName[index], number: index})\r\n\r\n    prevCards[0] = prevCards[1]\r\n    prevCards[1] = index\r\n\r\n    for(let j=0; j<prevCards.length; j++ ) {\r\n      if(j===0) {\r\n        listDetailsRef.current[prevCards[j]].style.display =  'none'\r\n        listHeaderNameRef.current[prevCards[j]].textContent = `0${prevCards[0]+1} | ${props.countyName[prevCards[0]]}`\r\n        listHeaderNameRef.current[prevCards[j]].style.color =  '#000'\r\n        listHeaderNameRef.current[prevCards[j]].style.width =  '100%'\r\n        listHeaderNameRef.current[prevCards[j]].style.fontSize =  '1rem'\r\n        listHeaderNameRef.current[prevCards[j]].style.fontWeight =  '400'\r\n        listHeaderNumberRef.current[prevCards[j]].style.display = 'none'\r\n      }\r\n      else {\r\n        listDetailsRef.current[prevCards[j]].style.display = 'flex'\r\n        listHeaderNameRef.current[prevCards[j]].textContent = props.countyName[index]\r\n        listHeaderNameRef.current[prevCards[j]].style.color =  '#659FC3'\r\n        listHeaderNameRef.current[prevCards[j]].style.width =  '70%'\r\n        listHeaderNameRef.current[prevCards[j]].style.fontSize =  '1.4rem'\r\n        listHeaderNameRef.current[prevCards[j]].style.fontWeight =  '600'\r\n        listHeaderNumberRef.current[prevCards[j]].style.display = 'block'\r\n      }\r\n    }\r\n  }\r\n\r\n  const viewProjects = () => {\r\n    countyModalState.setCountyModalState(true)\r\n    searchState.setSearchContent({selectedInput: '', inputValue: ''})\r\n    resultsRef.current.style.display = 'none'\r\n  }\r\n  \r\n  const countyList = props.countyNo.map((item, index) => \r\n    <li key={index} className='card card_sm'>\r\n      <div className='counties_list__header' onClick={() => showCountySummary(index)}>\r\n        <div ref={(item) => listHeaderNameRef.current[index] = item}><span>0{item} | {props.countyName[index]}</span></div>\r\n        <span className='card_number_effect_ex' ref={(item) => listHeaderNumberRef.current[index] = item}>{item}</span>\r\n      </div>\r\n      <div className='counties_list__expand flex' ref={(item) => listDetailsRef.current[index] = item}>\r\n        <div><span>All projects</span><span className='badge'>{statsValues.stats.allProjects[countyFocus.countyInFocus.number]}</span></div>\r\n        <div><span>Completed</span><span className='badge'>{statsValues.stats.completed[countyFocus.countyInFocus.number]}</span></div>\r\n        <div><span>In progress</span><span className='badge'>{statsValues.stats.inProgress[countyFocus.countyInFocus.number]}</span></div>\r\n        <div><span>Approved</span><span className='badge'>{statsValues.stats.approved[countyFocus.countyInFocus.number]}</span></div>\r\n        <div><span>Scheduled</span><span className='badge'>{statsValues.stats.scheduled[countyFocus.countyInFocus.number]}</span></div>\r\n        <button className='card_button' onClick={viewProjects}>View projects</button>\r\n      </div>\r\n    </li>\r\n  )\r\n\r\n  return <ul className='counties_list'>{countyList}</ul>\r\n}\r\n\r\nexport default Names","import React from 'react'\r\nimport { AppContext } from '../../App'\r\n\r\nconst Stats = ({props}) => {\r\n\r\n  let nationalAllProjects = 0\r\n  let nationalCompleted = 0\r\n  let nationalInProgress = 0\r\n  let nationalApproved = 0\r\n  let nationalScheduled = 0\r\n  \r\n  const {statsValues} = React.useContext(AppContext)\r\n\r\n  for(let i=0; i<47; i++) nationalAllProjects += statsValues.stats.allProjects[i]\r\n  for(let i=0; i<47; i++) nationalCompleted += statsValues.stats.completed[i]\r\n  for(let i=0; i<47; i++) nationalInProgress += statsValues.stats.inProgress[i]\r\n  for(let i=0; i<47; i++) nationalApproved += statsValues.stats.approved[i]\r\n  for(let i=0; i<47; i++) nationalScheduled += statsValues.stats.scheduled[i]\r\n\r\n\r\n  return (\r\n    <section className='page_section'>\r\n      <h2>National Statistics</h2>\r\n      <p>A summary of the national project statistics.</p>\r\n      <div className='page_section__stats flex'>\r\n        <div className='card card_md flex'>\r\n          <span>All projects</span>\r\n          <span className='badge'>{nationalAllProjects}</span>\r\n        </div>\r\n        <div className='card card_md flex'>\r\n          <span>Completed</span>\r\n          <span className='badge'>{nationalCompleted}</span>\r\n        </div>\r\n        <div className='card card_md flex'>\r\n          <span>In progress</span>\r\n          <span className='badge'>{nationalInProgress}</span>\r\n        </div>\r\n        <div className='card card_md flex'>\r\n          <span>Approved</span>\r\n          <span className='badge'>{nationalApproved}</span>\r\n        </div>\r\n        <div className='card card_md flex'>\r\n          <span>Scheduled</span>\r\n          <span className='badge'>{nationalScheduled}</span>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Stats","export const openModal = (context, ref) => {\r\n  if(context === true) {\r\n    // if(ref.current !== undefined) {\r\n      ref.current.style.visibility = 'visible'\r\n      ref.current.style.opacity = '1'\r\n    // }\r\n  }\r\n}\r\n\r\nexport const closeModal = (context, ref) => {\r\n  context(false)\r\n  ref.current.style.visibility = 'hidden'\r\n  ref.current.style.opacity = '0'\r\n}\r\n\r\nexport const openInteractiveModal = (context, ref) => {\r\n  if(context === true) {\r\n    ref.current.style.visibility = 'visible'\r\n    ref.current.style.opacity = '1'\r\n  }\r\n}\r\n\r\nexport const closeInteractiveModal = (context, ref) => {\r\n  context({...context, state: false})\r\n  ref.current.style.visibility = 'hidden'\r\n  ref.current.style.opacity = '0'\r\n}","import React from 'react'\r\nimport { CountyContext } from '../../views/public/Counties'\r\nimport { openSidePanel } from '../../utils/functions/panels'\r\nimport { closeSidePanel } from '../../utils/functions/panels'\r\n\r\nconst ProjectDetailsPanel = ({props}) => {\r\n\r\n  const {projectFocus, projectDetailsPanelState} = React.useContext(CountyContext)\r\n  const projectDetailsPanelRef = React.useRef()\r\n\r\n  openSidePanel(projectDetailsPanelRef, projectDetailsPanelState.projectDetailsPanel)\r\n\r\n  return (\r\n    <div className='sidePanel' ref={projectDetailsPanelRef}>\r\n      <svg className='close_modal_svg' onClick={() => closeSidePanel(projectDetailsPanelRef, projectDetailsPanelState.setProjectDetailsPanelStatus)} xmlns=\"http://www.w3.org/2000/svg\" height=\"36px\" viewBox=\"0 0 24 24\" width=\"36px\" fill=\"#000\"><path d=\"M0 0h24v24H0V0z\" fill=\"#FFF\"/><path d=\"M18.3 5.71c-.39-.39-1.02-.39-1.41 0L12 10.59 7.11 5.7c-.39-.39-1.02-.39-1.41 0-.39.39-.39 1.02 0 1.41L10.59 12 5.7 16.89c-.39.39-.39 1.02 0 1.41.39.39 1.02.39 1.41 0L12 13.41l4.89 4.89c.39.39 1.02.39 1.41 0 .39-.39.39-1.02 0-1.41L13.41 12l4.89-4.89c.38-.38.38-1.02 0-1.4z\"/></svg>\r\n      <div className='sidePanel__content'>\r\n        <aside>\r\n          <h3>Project details</h3>\r\n          <div className='sidePanel__content__grid'>\r\n            <span>Project ID:</span>\r\n            <span>{props.projectID[projectFocus.projectInFocus]}</span>\r\n            <span>Name:</span>\r\n            <span>{props.projectName[projectFocus.projectInFocus]}</span>\r\n            <span>Description:</span>\r\n            <span>{props.description[projectFocus.projectInFocus]}</span>\r\n            <span>Status:</span>\r\n            <span>{props.status[projectFocus.projectInFocus]}</span>\r\n          </div>\r\n          <h3>Timelines</h3>\r\n          <div className='sidePanel__content__grid'>\r\n            <span>Approval date:</span>\r\n            <span>{props.approvalDate[projectFocus.projectInFocus]}</span>\r\n            <span>Start date:</span>\r\n            <span>{props.startDate[projectFocus.projectInFocus]}</span>\r\n            <span>End date:</span>\r\n            <span>{props.endDate[projectFocus.projectInFocus]}</span>\r\n            <span>Duration:</span>\r\n            <span>{props.duration[projectFocus.projectInFocus]} months</span>\r\n          </div>\r\n          <h3>Implementation</h3>\r\n          <div className='sidePanel__content__grid'>\r\n            <span>Sector:</span>\r\n            <span>{props.sector[projectFocus.projectInFocus]}</span>\r\n            <span>Ministry:</span>\r\n            <span>{props.ministry[projectFocus.projectInFocus]}</span>\r\n            <span>Implementing agency:</span>\r\n            <span>{props.agency[projectFocus.projectInFocus]}</span>\r\n            <span>Contractor:</span>\r\n            <span>{props.contractor[projectFocus.projectInFocus]}</span>\r\n            <span>Priority:</span>\r\n            <span>{props.priority[projectFocus.projectInFocus]}</span>\r\n          </div>\r\n          <h3>Financials</h3>\r\n          <div className='sidePanel__content__grid'>\r\n            <span>Estimated cost:</span>\r\n            <span>{props.estimatedCost[projectFocus.projectInFocus]} KSH</span>\r\n            <span>Budget:</span>\r\n            <span>{props.budget[projectFocus.projectInFocus]} KSH</span>\r\n            <span>Financial year:</span>\r\n            <span>{props.financialYear[projectFocus.projectInFocus]}</span>\r\n            <span>Source of funding:</span>\r\n            <span>{props.fundingSource[projectFocus.projectInFocus]}</span>\r\n          </div>\r\n          <h3>Location</h3>\r\n          <div className='sidePanel__content__grid'>\r\n          <span>County:</span>\r\n            <span>{props.locCountyNo[projectFocus.projectInFocus]}</span>\r\n            <span>Sub-county:</span>\r\n            <span>{props.subCounty[projectFocus.projectInFocus]}</span>\r\n            <span>Constituency:</span>\r\n            <span>{props.constituency[projectFocus.projectInFocus]}</span>\r\n            <span>Ward:</span>\r\n            <span>{props.ward[projectFocus.projectInFocus]}</span>\r\n          </div>\r\n        </aside>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProjectDetailsPanel","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import _typeof from \"./typeof.js\";\nexport default function _regeneratorRuntime() {\n  \"use strict\";\n  /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n\n  _regeneratorRuntime = function _regeneratorRuntime() {\n    return exports;\n  };\n\n  var exports = {},\n      Op = Object.prototype,\n      hasOwn = Op.hasOwnProperty,\n      $Symbol = \"function\" == typeof Symbol ? Symbol : {},\n      iteratorSymbol = $Symbol.iterator || \"@@iterator\",\n      asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\",\n      toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    return Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), obj[key];\n  }\n\n  try {\n    define({}, \"\");\n  } catch (err) {\n    define = function define(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator,\n        generator = Object.create(protoGenerator.prototype),\n        context = new Context(tryLocsList || []);\n    return generator._invoke = function (innerFn, self, context) {\n      var state = \"suspendedStart\";\n      return function (method, arg) {\n        if (\"executing\" === state) throw new Error(\"Generator is already running\");\n\n        if (\"completed\" === state) {\n          if (\"throw\" === method) throw arg;\n          return doneResult();\n        }\n\n        for (context.method = method, context.arg = arg;;) {\n          var delegate = context.delegate;\n\n          if (delegate) {\n            var delegateResult = maybeInvokeDelegate(delegate, context);\n\n            if (delegateResult) {\n              if (delegateResult === ContinueSentinel) continue;\n              return delegateResult;\n            }\n          }\n\n          if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) {\n            if (\"suspendedStart\" === state) throw state = \"completed\", context.arg;\n            context.dispatchException(context.arg);\n          } else \"return\" === context.method && context.abrupt(\"return\", context.arg);\n          state = \"executing\";\n          var record = tryCatch(innerFn, self, context);\n\n          if (\"normal\" === record.type) {\n            if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue;\n            return {\n              value: record.arg,\n              done: context.done\n            };\n          }\n\n          \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg);\n        }\n      };\n    }(innerFn, self, context), generator;\n  }\n\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n\n  exports.wrap = wrap;\n  var ContinueSentinel = {};\n\n  function Generator() {}\n\n  function GeneratorFunction() {}\n\n  function GeneratorFunctionPrototype() {}\n\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n  var getProto = Object.getPrototypeOf,\n      NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype);\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      define(prototype, method, function (arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n\n      if (\"throw\" !== record.type) {\n        var result = record.arg,\n            value = result.value;\n        return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) {\n          invoke(\"next\", value, resolve, reject);\n        }, function (err) {\n          invoke(\"throw\", err, resolve, reject);\n        }) : PromiseImpl.resolve(value).then(function (unwrapped) {\n          result.value = unwrapped, resolve(result);\n        }, function (error) {\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n\n      reject(record.arg);\n    }\n\n    var previousPromise;\n\n    this._invoke = function (method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function (resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n    };\n  }\n\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n\n    if (undefined === method) {\n      if (context.delegate = null, \"throw\" === context.method) {\n        if (delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel;\n        context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n    if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel;\n    var info = record.arg;\n    return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel);\n  }\n\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n    1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\", delete record.arg, entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0);\n  }\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) return iteratorMethod.call(iterable);\n      if (\"function\" == typeof iterable.next) return iterable;\n\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n            next = function next() {\n          for (; ++i < iterable.length;) {\n            if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next;\n          }\n\n          return next.value = undefined, next.done = !0, next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    return {\n      next: doneResult\n    };\n  }\n\n  function doneResult() {\n    return {\n      value: undefined,\n      done: !0\n    };\n  }\n\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) {\n    var ctor = \"function\" == typeof genFun && genFun.constructor;\n    return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name));\n  }, exports.mark = function (genFun) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun;\n  }, exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    void 0 === PromiseImpl && (PromiseImpl = Promise);\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n    return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () {\n    return this;\n  }), define(Gp, \"toString\", function () {\n    return \"[object Generator]\";\n  }), exports.keys = function (object) {\n    var keys = [];\n\n    for (var key in object) {\n      keys.push(key);\n    }\n\n    return keys.reverse(), function next() {\n      for (; keys.length;) {\n        var key = keys.pop();\n        if (key in object) return next.value = key, next.done = !1, next;\n      }\n\n      return next.done = !0, next;\n    };\n  }, exports.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) {\n        \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined);\n      }\n    },\n    stop: function stop() {\n      this.done = !0;\n      var rootRecord = this.tryEntries[0].completion;\n      if (\"throw\" === rootRecord.type) throw rootRecord.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) throw exception;\n      var context = this;\n\n      function handle(loc, caught) {\n        return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i],\n            record = entry.completion;\n        if (\"root\" === entry.tryLoc) return handle(\"end\");\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\"),\n              hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n          } else {\n            if (!hasFinally) throw new Error(\"try statement without catch or finally\");\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null);\n      var record = finallyEntry ? finallyEntry.completion : {};\n      return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (\"throw\" === record.type) throw record.arg;\n      return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel;\n      }\n    },\n    \"catch\": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n\n          if (\"throw\" === record.type) {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n\n          return thrown;\n        }\n      }\n\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      return this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel;\n    }\n  }, exports;\n}","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import { useState, useEffect } from \"react\";\nimport { GoogleChartVersion, GoogleChartPackages, GoogleViz } from \"../types\";\nimport { useLoadScript } from \"./useLoadScript\";\n\nexport interface IUseLoadGoogleChartsParams {\n  chartVersion?: GoogleChartVersion;\n  chartPackages?: GoogleChartPackages[];\n  chartLanguage?: string;\n  mapsApiKey?: string;\n}\n\n/**\n * Hook to load Google Charts JS API.\n * @param params - Load parameters.\n * @param [params.chartVersion] - Chart version to load.\n * @param [params.chartPackages] - Packages to load.\n * @param [params.chartLanguage] - Languages to load.\n * @param [params.mapsApiKey] - Google Maps api key.\n * @returns\n */\nexport function useLoadGoogleCharts({\n  chartVersion = \"current\",\n  chartPackages = [\"corechart\", \"controls\"],\n  chartLanguage = \"en\",\n  mapsApiKey,\n}: IUseLoadGoogleChartsParams) {\n  const [googleCharts, setGoogleCharts] = useState<GoogleViz | null>(null);\n  const [failed, setFailed] = useState(false);\n\n  useLoadScript(\n    \"https://www.gstatic.com/charts/loader.js\",\n    () => {\n      // @ts-expect-error Getting object from global namespace.\n      const google = window?.google as GoogleViz;\n\n      if (!google) {\n        return;\n      }\n\n      google.charts.load(chartVersion, {\n        packages: chartPackages,\n        language: chartLanguage,\n        mapsApiKey,\n      });\n      google.charts.setOnLoadCallback(() => {\n        setGoogleCharts(google);\n      });\n    },\n    () => {\n      setFailed(true);\n    }\n  );\n\n  return [googleCharts, failed] as const;\n}\n\nexport interface ILoadGoogleChartsProps extends IUseLoadGoogleChartsParams {\n  onLoad?(googleCharts: GoogleViz): void;\n  onError?(): void;\n}\n\n/**\n * Wrapper around useLoadGoogleCharts to use in legacy components.\n */\nexport function LoadGoogleCharts({\n  onLoad,\n  onError,\n  ...params\n}: ILoadGoogleChartsProps) {\n  const [googleCharts, failed] = useLoadGoogleCharts(params);\n\n  useEffect(() => {\n    if (googleCharts && onLoad) {\n      onLoad(googleCharts);\n    }\n  }, [googleCharts]);\n\n  useEffect(() => {\n    if (failed && onError) {\n      onError();\n    }\n  }, [failed]);\n\n  return null;\n}\n","import { useEffect } from \"react\";\n\n/**\n * Hook to load external script.\n * @param src - Source url to load.\n * @param onLoad - Success callback.\n * @param onError - Error callback.\n */\nexport function useLoadScript(\n  src: string,\n  onLoad?: () => void,\n  onError?: () => void\n) {\n  useEffect(() => {\n    if (!document) {\n      return;\n    }\n\n    // Find script tag with same src in DOM.\n    const foundScript = document.querySelector<HTMLScriptElement>(\n      `script[src=\"${src}\"]`\n    );\n\n    // Call onLoad if script marked as loaded.\n    if (foundScript?.dataset.loaded) {\n      onLoad?.();\n      return;\n    }\n\n    // Create or get existed tag.\n    const script = foundScript || document.createElement(\"script\");\n\n    // Set src if no script was found.\n    if (!foundScript) {\n      script.src = src;\n    }\n\n    // Mark script as loaded on load event.\n    const onLoadWithMarker = () => {\n      script.dataset.loaded = \"1\";\n      onLoad?.();\n    };\n\n    script.addEventListener(\"load\", onLoadWithMarker);\n\n    if (onError) {\n      script.addEventListener(\"error\", onError);\n    }\n\n    // Add to DOM if not yet added.\n    if (!foundScript) {\n      document.head.append(script);\n    }\n\n    return () => {\n      script.removeEventListener(\"load\", onLoadWithMarker);\n\n      if (onError) {\n        script.removeEventListener(\"error\", onError);\n      }\n    };\n  }, []);\n}\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","import { ReactGoogleChartProps } from \"./types\";\n\nexport const chartDefaultProps: Partial<ReactGoogleChartProps> = {\n  // <DEPRECATED_PROPS>\n  legend_toggle: false,\n  // </DEPRECATED_PROPS>\n  options: {},\n  legendToggle: false,\n  getChartWrapper: () => {},\n  spreadSheetQueryParameters: {\n    headers: 1,\n    gid: 1,\n  },\n  rootProps: {},\n  chartWrapperParams: {},\n};\n","let uniqueID = 0;\nexport const generateUniqueID = () => {\n  uniqueID += 1;\n  return `reactgooglegraph-${uniqueID}`;\n};\n","export const DEFAULT_CHART_COLORS = [\n  \"#3366CC\",\n  \"#DC3912\",\n  \"#FF9900\",\n  \"#109618\",\n  \"#990099\",\n  \"#3B3EAC\",\n  \"#0099C6\",\n  \"#DD4477\",\n  \"#66AA00\",\n  \"#B82E2E\",\n  \"#316395\",\n  \"#994499\",\n  \"#22AA99\",\n  \"#AAAA11\",\n  \"#6633CC\",\n  \"#E67300\",\n  \"#8B0707\",\n  \"#329262\",\n  \"#5574A6\",\n  \"#3B3EAC\"\n];\n","import { GoogleViz } from \"./types\";\n\nexport const loadDataTableFromSpreadSheet = async (\n  googleViz: GoogleViz,\n  spreadSheetUrl: string,\n  urlParams: {\n    headers?: number;\n    gid?: any;\n    sheet?: string;\n    query?: string;\n    access_token?: string;\n  } = {}\n) => {\n  return new Promise((resolve, reject) => {\n    const headers = `${\n      urlParams.headers ? `headers=${urlParams.headers}` : `headers=0`\n    }`;\n    const queryString = `${\n      urlParams.query ? `&tq=${encodeURIComponent(urlParams.query)}` : ``\n    }`;\n    const gid = `${urlParams.gid ? `&gid=${urlParams.gid}` : \"\"}`;\n    const sheet = `${urlParams.sheet ? `&sheet=${urlParams.sheet}` : \"\"}`;\n    const access_token = `${\n      urlParams.access_token ? `&access_token=${urlParams.access_token}` : \"\"\n    }`;\n    const urlQueryString = `${headers}${gid}${sheet}${queryString}${access_token}`;\n    const urlToSpreadSheet = `${spreadSheetUrl}/gviz/tq?${urlQueryString}`; //&tq=${queryString}`;\n    const query = new googleViz.visualization.Query(urlToSpreadSheet);\n    query.send((response: any) => {\n      if (response.isError()) {\n        reject(\n          `Error in query:  ${response.getMessage()} ${response.getDetailedMessage()}`\n        );\n      } else {\n        resolve(response.getDataTable());\n      }\n    });\n  });\n};\n","import * as React from \"react\";\nimport { chartDefaultProps } from \"./default-props\";\n\nimport { ReactGoogleChartProps } from \"./types\";\nconst { Provider, Consumer } = React.createContext(chartDefaultProps);\n\nexport const ContextProvider = ({\n  children,\n  value,\n}: {\n  children: any;\n  value: ReactGoogleChartProps;\n}) => {\n  return <Provider value={value}>{children}</Provider>;\n};\n\nexport const ContextConsumer = ({\n  render,\n}: {\n  render: (context: ReactGoogleChartProps) => JSX.Element | null;\n}) => {\n  return (\n    <Consumer>\n      {(context) => {\n        return render(context as ReactGoogleChartProps);\n      }}\n    </Consumer>\n  );\n};\n","import * as React from \"react\";\nimport {\n  GoogleViz,\n  GoogleChartWrapper,\n  GoogleDataTable,\n  ReactGoogleChartProps,\n  GoogleChartDashboard,\n} from \"../types\";\nimport { DEFAULT_CHART_COLORS } from \"../constants\";\n\nimport { loadDataTableFromSpreadSheet } from \"../load-data-table-from-spreadsheet\";\nimport { ContextConsumer } from \"../Context\";\n\nconst GRAY_COLOR = \"#CCCCCC\";\nexport type ChartDrawArgs = {\n  data: ReactGoogleChartProps[\"data\"];\n};\n\nexport type GoogleChartDataTableProps = {\n  googleChartWrapper: GoogleChartWrapper;\n  google: GoogleViz;\n  googleChartDashboard: GoogleChartDashboard | null;\n};\ninterface State {\n  hiddenColumns: string[];\n}\nexport class GoogleChartDataTableInner extends React.Component<\n  ReactGoogleChartProps & GoogleChartDataTableProps,\n  State\n> {\n  state = {\n    hiddenColumns: [],\n  } as State;\n\n  private listenToLegendToggle = () => {\n    const { google, googleChartWrapper } = this.props;\n    google.visualization.events.addListener(\n      googleChartWrapper,\n      \"select\",\n      () => {\n        const chart = googleChartWrapper.getChart();\n        const selection = chart.getSelection();\n        const dataTable = googleChartWrapper.getDataTable();\n        if (\n          selection.length === 0 ||\n          // We want to listen to when a whole row is selected. This is the case only when row === null\n          selection[0].row ||\n          !dataTable\n        ) {\n          return;\n        }\n        const columnIndex = selection[0].column;\n        const columnID = this.getColumnID(dataTable, columnIndex);\n        if (this.state.hiddenColumns.includes(columnID)) {\n          this.setState((state) => ({\n            ...state,\n            hiddenColumns: [\n              ...state.hiddenColumns.filter((colID) => colID !== columnID),\n            ],\n          }));\n        } else {\n          this.setState((state) => ({\n            ...state,\n            hiddenColumns: [...state.hiddenColumns, columnID],\n          }));\n        }\n      }\n    );\n  };\n\n  private applyFormatters = (dataTable: GoogleDataTable, formatters: any[]) => {\n    const { google } = this.props;\n    for (let formatter of formatters) {\n      switch (formatter.type) {\n        case \"ArrowFormat\": {\n          const vizFormatter = new google.visualization.ArrowFormat(\n            formatter.options\n          );\n          vizFormatter.format(dataTable, formatter.column);\n          break;\n        }\n        case \"BarFormat\": {\n          const vizFormatter = new google.visualization.BarFormat(\n            formatter.options\n          );\n          vizFormatter.format(dataTable, formatter.column);\n          break;\n        }\n        case \"ColorFormat\": {\n          const vizFormatter = new google.visualization.ColorFormat(\n            formatter.options\n          );\n          const { ranges } = formatter;\n          for (let range of ranges) {\n            vizFormatter.addRange(...range);\n          }\n          vizFormatter.format(dataTable, formatter.column);\n          break;\n        }\n        case \"DateFormat\": {\n          const vizFormatter = new google.visualization.DateFormat(\n            formatter.options\n          );\n          vizFormatter.format(dataTable, formatter.column);\n          break;\n        }\n        case \"NumberFormat\": {\n          const vizFormatter = new google.visualization.NumberFormat(\n            formatter.options\n          );\n          vizFormatter.format(dataTable, formatter.column);\n          break;\n        }\n        case \"PatternFormat\": {\n          const vizFormatter = new google.visualization.PatternFormat(\n            formatter.options\n          );\n          vizFormatter.format(dataTable, formatter.column);\n          break;\n        }\n      }\n    }\n  };\n  private getColumnID = (dataTable: GoogleDataTable, columnIndex: number) => {\n    return (\n      dataTable.getColumnId(columnIndex) ||\n      dataTable.getColumnLabel(columnIndex)\n    );\n  };\n  private draw = async ({\n    data,\n    diffdata,\n    rows,\n    columns,\n    options,\n    legend_toggle,\n    legendToggle,\n    chartType,\n    formatters,\n    spreadSheetUrl,\n    spreadSheetQueryParameters,\n  }: ReactGoogleChartProps) => {\n    const { google, googleChartWrapper } = this.props;\n    let dataTable: GoogleDataTable;\n    let chartDiff = null;\n    if (diffdata) {\n      const oldData = google.visualization.arrayToDataTable(diffdata.old);\n      const newData = google.visualization.arrayToDataTable(diffdata.new);\n      chartDiff = google.visualization[chartType].prototype.computeDiff(\n        oldData,\n        newData\n      );\n    }\n    if (data !== null) {\n      if (Array.isArray(data)) {\n        dataTable = google.visualization.arrayToDataTable(data);\n      } else {\n        dataTable = new google.visualization.DataTable(data);\n      }\n    } else if (rows && columns) {\n      dataTable = google.visualization.arrayToDataTable([columns, ...rows]);\n    } else if (spreadSheetUrl) {\n      dataTable = (await loadDataTableFromSpreadSheet(\n        google,\n        spreadSheetUrl,\n        spreadSheetQueryParameters\n      )) as GoogleDataTable;\n    } else {\n      dataTable = google.visualization.arrayToDataTable([]);\n    }\n    const columnCount = dataTable.getNumberOfColumns();\n    for (let i = 0; i < columnCount; i += 1) {\n      const columnID = this.getColumnID(dataTable, i);\n      if (this.state.hiddenColumns.includes(columnID)) {\n        const previousColumnLabel = dataTable.getColumnLabel(i);\n        const previousColumnID = dataTable.getColumnId(i);\n        const previousColumnType = dataTable.getColumnType(i);\n        dataTable.removeColumn(i);\n        dataTable.addColumn({\n          label: previousColumnLabel,\n          id: previousColumnID,\n          type: previousColumnType,\n        });\n      }\n    }\n    const chart = googleChartWrapper.getChart();\n    if (googleChartWrapper.getChartType() === \"Timeline\") {\n      chart && chart.clearChart();\n    }\n    googleChartWrapper.setChartType(chartType);\n    googleChartWrapper.setOptions(options || {});\n    googleChartWrapper.setDataTable(dataTable);\n    googleChartWrapper.draw();\n    if (this.props.googleChartDashboard !== null) {\n      this.props.googleChartDashboard.draw(dataTable);\n    }\n\n    if (chartDiff) {\n      googleChartWrapper.setDataTable(chartDiff);\n      googleChartWrapper.draw();\n    }\n    if (formatters) {\n      this.applyFormatters(dataTable, formatters);\n      googleChartWrapper.setDataTable(dataTable);\n      googleChartWrapper.draw();\n    }\n    if (legendToggle === true || legend_toggle === true) {\n      this.grayOutHiddenColumns({ options });\n    }\n    return;\n  };\n  private grayOutHiddenColumns = ({\n    options,\n  }: {\n    options: ReactGoogleChartProps[\"options\"];\n  }) => {\n    const { googleChartWrapper } = this.props;\n    const dataTable = googleChartWrapper.getDataTable();\n    if (!dataTable) return;\n    const columnCount = dataTable.getNumberOfColumns();\n    const hasAHiddenColumn = this.state.hiddenColumns.length > 0;\n    if (hasAHiddenColumn === false) return;\n    const colors = Array.from({ length: columnCount - 1 }).map(\n      (dontcare, i) => {\n        const columnID = this.getColumnID(dataTable, i + 1);\n        if (this.state.hiddenColumns.includes(columnID)) {\n          return GRAY_COLOR;\n        } else if (options && options.colors) {\n          return options.colors[i];\n        } else {\n          return DEFAULT_CHART_COLORS[i];\n        }\n      }\n    );\n    googleChartWrapper.setOptions({\n      ...options,\n      colors,\n    });\n    googleChartWrapper.draw();\n  };\n  private onResize = () => {\n    const { googleChartWrapper } = this.props;\n    googleChartWrapper.draw();\n  };\n  componentDidMount() {\n    this.draw(this.props);\n    window.addEventListener(\"resize\", this.onResize);\n    if (this.props.legend_toggle || this.props.legendToggle) {\n      this.listenToLegendToggle();\n    }\n  }\n\n  componentWillUnmount() {\n    const { google, googleChartWrapper } = this.props;\n    window.removeEventListener(\"resize\", this.onResize);\n    google.visualization.events.removeAllListeners(googleChartWrapper);\n    if (googleChartWrapper.getChartType() === \"Timeline\") {\n      googleChartWrapper.getChart() &&\n        googleChartWrapper.getChart().clearChart();\n    }\n  }\n\n  componentDidUpdate() {\n    this.draw(this.props);\n  }\n  render() {\n    return null;\n  }\n}\n\nexport class GoogleChartDataTable extends React.Component<GoogleChartDataTableProps> {\n  componentDidMount() {}\n\n  componentWillUnmount() {}\n  shouldComponentUpdate() {\n    return false;\n  }\n  render() {\n    const { google, googleChartWrapper, googleChartDashboard } = this.props;\n    return (\n      <ContextConsumer\n        render={(props) => {\n          return (\n            <GoogleChartDataTableInner\n              {...props}\n              google={google}\n              googleChartWrapper={googleChartWrapper}\n              googleChartDashboard={googleChartDashboard}\n            />\n          );\n        }}\n      />\n    );\n  }\n}\n","import * as React from \"react\";\nimport {\n  GoogleViz,\n  GoogleChartWrapper,\n  ReactGoogleChartProps,\n  ReactGoogleChartEvent,\n} from \"../types\";\n\nimport { ContextConsumer } from \"../Context\";\n\nexport type ChartDrawArgs = {\n  data: ReactGoogleChartProps[\"data\"];\n};\n\nexport interface Props {\n  googleChartWrapper: GoogleChartWrapper;\n  google: GoogleViz;\n}\n\nexport interface ListenToEventsArgs {\n  googleChartWrapper: GoogleChartWrapper;\n  google: GoogleViz;\n  chartEvents: ReactGoogleChartEvent[] | null;\n}\n\nexport class GoogleChartEvents extends React.Component<Props> {\n  shouldComponentUpdate() {\n    return false;\n  }\n  listenToEvents({\n    chartEvents,\n    google,\n    googleChartWrapper,\n  }: ListenToEventsArgs) {\n    if (!chartEvents) {\n      return;\n    }\n    google.visualization.events.removeAllListeners(googleChartWrapper);\n    for (let event of chartEvents) {\n      const { eventName, callback } = event;\n      google.visualization.events.addListener(\n        googleChartWrapper,\n        eventName,\n        (...args: any[]) => {\n          callback({\n            chartWrapper: googleChartWrapper,\n            props: this.props as any,\n            google: google,\n            eventArgs: args,\n          });\n        }\n      );\n    }\n  }\n  render() {\n    const { google, googleChartWrapper } = this.props;\n    return (\n      <ContextConsumer\n        render={(propsFromContext) => {\n          this.listenToEvents({\n            chartEvents: propsFromContext.chartEvents || null,\n            google,\n            googleChartWrapper,\n          });\n          return null;\n        }}\n      />\n    );\n  }\n}\n","import * as React from \"react\";\nimport {\n  GoogleViz,\n  GoogleChartWrapper,\n  ReactGoogleChartProps,\n  GoogleChartControlProp,\n  GoogleChartControl,\n  GoogleChartDashboard,\n  GoogleChartEditor,\n} from \"../types\";\nimport { generateUniqueID } from \"../generate-unique-id\";\nimport { GoogleChartDataTable } from \"./GoogleChartDataTable\";\nimport { GoogleChartEvents } from \"./GoogleChartEvents\";\n\nexport type Props = {\n  google: GoogleViz;\n  graphID?: string | null;\n  graph_id?: string | null;\n  options?: ReactGoogleChartProps[\"options\"];\n  chartWrapperParams?: {};\n  chartType: ReactGoogleChartProps[\"chartType\"];\n  width?: ReactGoogleChartProps[\"width\"];\n  height?: ReactGoogleChartProps[\"height\"];\n  style?: ReactGoogleChartProps[\"style\"];\n  className?: ReactGoogleChartProps[\"className\"];\n  rootProps?: ReactGoogleChartProps[\"rootProps\"];\n} & ReactGoogleChartProps;\n\nexport interface State {\n  googleChartWrapper: GoogleChartWrapper | null;\n  isReady: boolean;\n  googleChartDashboard: GoogleChartDashboard | null;\n  googleChartEditor: GoogleChartEditor | null;\n  googleChartControls:\n    | { control: GoogleChartControl; controlProp: GoogleChartControlProp }[]\n    | null;\n}\n\nlet controlCounter = 0;\n\nexport class GoogleChart extends React.Component<Props, State> {\n  state = {\n    googleChartWrapper: null,\n    googleChartDashboard: null,\n    googleChartControls: null,\n    googleChartEditor: null,\n    isReady: false,\n  } as State;\n  graphID: null | string = null;\n  private dashboard_ref: React.RefObject<HTMLDivElement> = React.createRef();\n  private toolbar_ref: React.RefObject<HTMLDivElement> = React.createRef();\n  private getGraphID = () => {\n    const { graphID, graph_id } = this.props;\n    let instanceGraphID: string;\n    if (!graphID && !graph_id) {\n      if (!this.graphID) {\n        instanceGraphID = generateUniqueID();\n      } else {\n        instanceGraphID = this.graphID;\n      }\n    } else if (graphID && !graph_id) {\n      instanceGraphID = graphID as string;\n    } else if (graph_id && !graphID) {\n      instanceGraphID = graph_id as string;\n    } else {\n      instanceGraphID = graphID as string;\n    }\n    this.graphID = instanceGraphID;\n    return this.graphID as string;\n  };\n  private getControlID = (id: undefined | string, index: number) => {\n    controlCounter += 1;\n    let controlID: string;\n    if (typeof id === \"undefined\") {\n      controlID = `googlechart-control-${index}-${controlCounter}`;\n    } else {\n      controlID = id;\n    }\n    return controlID;\n  };\n\n  addControls = (\n    googleChartWrapper: GoogleChartWrapper,\n    googleChartDashboard: GoogleChartDashboard\n  ) => {\n    const { google, controls } = this.props;\n\n    const googleChartControls = !controls\n      ? null\n      : controls.map((control, i) => {\n          const {\n            controlID: controlIDMaybe,\n            controlType,\n            options: controlOptions,\n            controlWrapperParams,\n          } = control;\n          const controlID = this.getControlID(controlIDMaybe, i);\n          return {\n            controlProp: control,\n            control: new google.visualization.ControlWrapper({\n              containerId: controlID,\n              controlType,\n              options: controlOptions,\n              ...controlWrapperParams,\n            }),\n          };\n        });\n    if (!googleChartControls) {\n      return null;\n    }\n    googleChartDashboard.bind(\n      googleChartControls.map(({ control }) => control),\n      googleChartWrapper\n    );\n    for (let chartControl of googleChartControls) {\n      const { control, controlProp } = chartControl;\n      const { controlEvents = [] } = controlProp;\n      for (let event of controlEvents) {\n        const { callback, eventName } = event;\n        google.visualization.events.removeListener(\n          control,\n          eventName,\n          callback\n        );\n        google.visualization.events.addListener(\n          control,\n          eventName,\n          (...args: any[]) => {\n            callback({\n              chartWrapper: googleChartWrapper,\n              controlWrapper: control,\n              props: this.props as any,\n              google: google,\n              eventArgs: args,\n            });\n          }\n        );\n      }\n    }\n    return googleChartControls;\n  };\n\n  componentDidMount() {\n    const {\n      options,\n      google,\n      chartType,\n      chartWrapperParams,\n      toolbarItems,\n      getChartEditor,\n      getChartWrapper,\n    } = this.props;\n\n    const chartConfig = {\n      chartType,\n      options,\n      containerId: this.getGraphID(),\n      ...chartWrapperParams,\n    };\n    const googleChartWrapper = new google.visualization.ChartWrapper(\n      chartConfig\n    );\n    googleChartWrapper.setOptions(options || {});\n    if (getChartWrapper) {\n      getChartWrapper(googleChartWrapper, google);\n    }\n    const googleChartDashboard = new google.visualization.Dashboard(\n      this.dashboard_ref\n    );\n\n    const googleChartControls = this.addControls(\n      googleChartWrapper,\n      googleChartDashboard\n    );\n    if (toolbarItems) {\n      google.visualization.drawToolbar(\n        this.toolbar_ref.current as HTMLDivElement,\n        toolbarItems\n      );\n    }\n    let googleChartEditor: null | GoogleChartEditor = null;\n    if (getChartEditor) {\n      googleChartEditor = new google.visualization.ChartEditor();\n      getChartEditor({\n        chartEditor: googleChartEditor,\n        chartWrapper: googleChartWrapper,\n        google,\n      });\n    }\n\n    this.setState({\n      googleChartEditor,\n      googleChartControls: googleChartControls,\n      googleChartDashboard: googleChartDashboard,\n      googleChartWrapper,\n      isReady: true,\n    });\n  }\n  componentDidUpdate() {\n    if (!this.state.googleChartWrapper) return;\n    if (!this.state.googleChartDashboard) return;\n    if (!this.state.googleChartControls) return;\n\n    const { controls } = this.props;\n    if (controls) {\n      for (let i = 0; i < controls.length; i += 1) {\n        const { controlType, options, controlWrapperParams } = controls[i];\n        if (controlWrapperParams && \"state\" in controlWrapperParams) {\n          this.state.googleChartControls[i].control.setState(\n            controlWrapperParams[\"state\"]\n          );\n        }\n        this.state.googleChartControls[i].control.setOptions(options);\n        this.state.googleChartControls[i].control.setControlType(controlType);\n      }\n    }\n  }\n  shouldComponentUpdate(nextProps: Props, nextState: State) {\n    return (\n      this.state.isReady !== nextState.isReady ||\n      nextProps.controls !== this.props.controls\n    );\n  }\n  renderChart = () => {\n    const { width, height, options, style, className, rootProps, google } =\n      this.props;\n\n    const divStyle = {\n      height: height || (options && options.height),\n      width: width || (options && options.width),\n      ...style,\n    };\n    return (\n      <div\n        id={this.getGraphID()}\n        style={divStyle}\n        className={className}\n        {...rootProps}\n      >\n        {this.state.isReady && this.state.googleChartWrapper !== null ? (\n          <React.Fragment>\n            <GoogleChartDataTable\n              googleChartWrapper={this.state.googleChartWrapper}\n              google={google}\n              googleChartDashboard={this.state.googleChartDashboard}\n            />\n            <GoogleChartEvents\n              googleChartWrapper={this.state.googleChartWrapper}\n              google={google}\n            />\n          </React.Fragment>\n        ) : null}\n      </div>\n    );\n  };\n  renderControl = (\n    filter = ({\n      control,\n      controlProp,\n    }: {\n      control: GoogleChartControl;\n      controlProp: GoogleChartControlProp;\n    }) => true\n  ) => {\n    return this.state.isReady && this.state.googleChartControls !== null ? (\n      <React.Fragment>\n        {this.state.googleChartControls\n          .filter(({ controlProp, control }) => {\n            return filter({ control, controlProp });\n          })\n          .map(({ control, controlProp }) => {\n            return (\n              <div\n                key={control.getContainerId()}\n                id={control.getContainerId()}\n              />\n            );\n          })}\n      </React.Fragment>\n    ) : null;\n  };\n  renderToolBar = () => {\n    if (!this.props.toolbarItems) return null;\n    return <div ref={this.toolbar_ref} />;\n  };\n  render() {\n    const { width, height, options, style } = this.props;\n\n    const divStyle = {\n      height: height || (options && options.height),\n      width: width || (options && options.width),\n      ...style,\n    };\n    if (this.props.render) {\n      return (\n        <div ref={this.dashboard_ref} style={divStyle}>\n          <div ref={this.toolbar_ref} id=\"toolbar\" />\n          {this.props.render({\n            renderChart: this.renderChart,\n            renderControl: this.renderControl,\n            renderToolbar: this.renderToolBar,\n          })}\n        </div>\n      );\n    } else {\n      return (\n        <div ref={this.dashboard_ref} style={divStyle}>\n          {this.renderControl(({ controlProp }) => {\n            return controlProp.controlPosition !== \"bottom\";\n          })}\n          {this.renderChart()}\n          {this.renderControl(({ controlProp }) => {\n            return controlProp.controlPosition === \"bottom\";\n          })}\n          {this.renderToolBar()}\n        </div>\n      );\n    }\n  }\n}\n","import * as React from \"react\";\n\nimport {\n  GoogleViz,\n  ReactGoogleChartProps,\n  ReactGoogleChartState,\n} from \"./types\";\nimport { LoadGoogleCharts } from \"./hooks\";\nimport { chartDefaultProps } from \"./default-props\";\nimport { GoogleChart } from \"./components/GoogleChart\";\nimport { ContextProvider } from \"./Context\";\n\nexport class Chart extends React.Component<\n  ReactGoogleChartProps,\n  ReactGoogleChartState\n> {\n  _isMounted = false;\n\n  state = {\n    loadingStatus: \"loading\" as ReactGoogleChartState[\"loadingStatus\"],\n    google: null as ReactGoogleChartState[\"google\"],\n  };\n\n  static defaultProps = chartDefaultProps;\n\n  render() {\n    const {\n      chartLanguage,\n      chartPackages,\n      chartVersion,\n      mapsApiKey,\n      loader,\n      errorElement,\n    } = this.props;\n    return (\n      <ContextProvider value={this.props as ReactGoogleChartProps}>\n        {this.state.loadingStatus === \"ready\" && this.state.google !== null ? (\n          <GoogleChart\n            {...(this.props as ReactGoogleChartProps)}\n            google={this.state.google}\n          />\n        ) : this.state.loadingStatus === \"errored\" && errorElement ? (\n          errorElement\n        ) : (\n          loader\n        )}\n        <LoadGoogleCharts\n          chartLanguage={chartLanguage}\n          chartPackages={chartPackages}\n          chartVersion={chartVersion}\n          mapsApiKey={mapsApiKey}\n          onLoad={this.onLoad}\n          onError={this.onError}\n        />\n      </ContextProvider>\n    );\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  onLoad = (google: GoogleViz) => {\n    if (this.props.onLoad) {\n      this.props.onLoad(google);\n    }\n    if (this.isFullyLoaded(google)) {\n      this.onSuccess(google);\n    } else {\n      // IE11: window.google is not fully set, we have to wait\n      const id = setInterval(() => {\n        const google = (\n          window as Window & {\n            google?: GoogleViz;\n          }\n        ).google;\n\n        if (this._isMounted) {\n          if (google && this.isFullyLoaded(google)) {\n            clearInterval(id);\n            this.onSuccess(google);\n          }\n        } else {\n          clearInterval(id);\n        }\n      }, 1000);\n    }\n  };\n\n  onSuccess = (google: GoogleViz) => {\n    this.setState({\n      loadingStatus: \"ready\",\n      google,\n    });\n  };\n\n  onError = () => {\n    this.setState({\n      loadingStatus: \"errored\",\n    });\n  };\n\n  isFullyLoaded(google: GoogleViz) {\n    const { controls, toolbarItems, getChartEditor } = this.props;\n\n    return (\n      google &&\n      google.visualization &&\n      google.visualization.ChartWrapper &&\n      google.visualization.Dashboard &&\n      (!controls || google.visualization.ChartWrapper) &&\n      (!getChartEditor || google.visualization.ChartEditor) &&\n      (!toolbarItems || google.visualization.drawToolbar)\n    );\n  }\n}\n\nexport default Chart;\n","// Complete Google Charts Type Definition : https://github.com/DefinitelyTyped/DefinitelyTyped/blob/master/types/google.visualization/index.d.ts\n\nexport type GoogleVizDrawToolbar = (\n  toolbarContainer: HTMLDivElement,\n  components: GoogleChartToolbarItem[]\n) => any;\n\nexport type GoogleViz = {\n  charts: GoogleChartLoader;\n  visualization: {\n    ChartWrapper: GoogleChartWrapper;\n    ChartEditor: GoogleChartEditor;\n    DataTable: GoogleDataTable;\n    events: GoogleVizEvents;\n    arrayToDataTable: GoogleArrayToDataTable;\n    drawToolbar: GoogleVizDrawToolbar;\n    [otherKeys: string]: any;\n  };\n};\n\nexport type GoogleChartTicks = (number | Date)[];\n\nexport type GoogleChartEditor = {\n  new (): GoogleChartEditor;\n  openDialog: (\n    chartWrapper: GoogleChartWrapper,\n    chartEditorOptions?: { dataSourceInput?: any; [otherKeyMaybe: string]: any }\n  ) => null;\n  getChartWrapper: () => GoogleChartWrapper;\n  setChartWrapper: (chartWrapper: GoogleChartWrapper) => GoogleChartWrapper;\n  closeDialog: () => null;\n};\n\nexport type GoogleChartLoaderOptions = {\n  packages?: GoogleChartPackages[];\n  language?: string;\n  mapsApiKey?: string;\n};\nexport type GoogleChartLoader = {\n  load: (\n    version: GoogleChartVersion,\n    googleChartOptions: GoogleChartLoaderOptions\n  ) => void;\n  setOnLoadCallback: (callback: () => void) => void;\n};\nexport interface ChartWrapperProps {\n  chartType: GoogleChartWrapperChartType;\n  containerId?: string;\n  options?: {\n    width?: number;\n    height?: number;\n    is3D?: boolean;\n    title?: string;\n    backgroundColor: string;\n  };\n  dataTable?: {};\n  dataSourceUrl?: string;\n  query?: string;\n  refreshInterval?: number;\n  view?: any[] | {};\n  render?: (props: ChartWrapperProps, chartWrapper: GoogleChartWrapper) => any;\n  children?: (\n    props: ChartWrapperProps,\n    chartWrapper: GoogleChartWrapper\n  ) => any;\n}\n\nexport type VizEventsProps = {\n  chartWrapper: GoogleChartWrapper;\n  onReady?: (chartWrapper: GoogleChartWrapper) => any;\n  onError?: (chartWrapper: GoogleChartWrapper) => any;\n  onSelect?: (selection: Array<{ row?: any; column?: any }>) => any;\n  render?: (props: VizEventsProps, chartWrapper: GoogleChartWrapper) => any;\n  children?: (props: VizEventsProps, chartWrapper: GoogleChartWrapper) => any;\n};\n\n/*\n *\n * <GoogleChartsTypes>\n *\n */\n\n/*\n *\n * Reference + Docs:\n * https://developers.google.com/chart/interactive/docs/reference#constructor_3\n * https://developers.google.com/chart/interactive/docs/reference#google.visualization.drawchart\n *\n */\nexport type GoogleChartWrapperChartType =\n  | \"AnnotationChart\"\n  | \"AreaChart\"\n  | \"BarChart\"\n  | \"BubbleChart\"\n  | \"Calendar\"\n  | \"CandlestickChart\"\n  | \"ColumnChart\"\n  | \"ComboChart\"\n  | \"DiffChart\"\n  | \"DonutChart\"\n  | \"Gantt\"\n  | \"Gauge\"\n  | \"GeoChart\"\n  | \"Histogram\"\n  | \"LineChart\"\n  | \"Line\"\n  | \"Bar\"\n  | \"Map\"\n  | \"OrgChart\"\n  | \"PieChart\"\n  | \"Sankey\"\n  | \"ScatterChart\"\n  | \"Scatter\"\n  | \"SteppedAreaChart\"\n  | \"Table\"\n  | \"Timeline\"\n  | \"TreeMap\"\n  | \"WaterfallChart\"\n  | \"WordTree\";\n\n// https://developers.google.com/chart/interactive/docs/reference#google.visualization.drawchart\nexport interface ChartWrapperOptions {\n  chartType: string;\n  containerId: string;\n  options: Partial<{\n    width: number;\n    height: number;\n    is3D: boolean;\n    title: string;\n    backgroundColor: string;\n    hAxis?: {\n      minValue?: any;\n      maxValue?: any;\n      ticks?: GoogleChartTicks;\n      title?: string;\n      viewWindow?: { max?: any; min?: any };\n      [otherOptionKey: string]: any;\n    };\n    vAxis?: {\n      minValue?: any;\n      maxValue?: any;\n      ticks?: GoogleChartTicks;\n      title?: string;\n      viewWindow?: { max?: any; min?: any };\n      [otherOptionKey: string]: any;\n    };\n    legend: any;\n    colors: string[];\n    [otherOptionKey: string]: any;\n  }>;\n  dataTable?: GoogleDataTable;\n  dataSourceUrl?: string;\n  query?: string;\n  refreshInterval?: number;\n  view: any[] | {};\n  [otherOptionKey: string]: any;\n}\n\nexport type GoogleChartAction = {\n  id: string;\n  text: string;\n  action: (chartWrapper: GoogleChartWrapper) => void;\n};\n\nexport type GoogleChartControlProp = {\n  controlType:\n    | \"CategoryFilter\"\n    | \"ChartRangeFilter\"\n    | \"DateRangeFilter\"\n    | \"NumberRangeFilter\"\n    | \"StringFilter\";\n  options: {};\n  controlWrapperParams?: {};\n  controlID?: string;\n  controlPosition?: \"top\" | \"bottom\";\n  controlEvents?: ReactGoogleChartEvent[];\n};\n\nexport type GoogleChartWrapper = {\n  new (chartWrapperOptions: Partial<ChartWrapperOptions>): GoogleChartWrapper;\n  draw: (chartArgs?: ChartWrapperProps) => any;\n  toJSON: () => string;\n  clone: () => GoogleChartWrapper;\n  getDataSourceUrl: () => string;\n  getDataTable: () => GoogleDataTable | null; // null if datasourceurl set or ref to DataTable\n  getChartType: () => GoogleChartWrapperChartType;\n  getChartName: () => string;\n  getChart: () => {\n    removeAction: (actionID: string) => void;\n    getSelection: () => { row?: any; column?: any }[];\n    setAction: (ChartAction: GoogleChartAction) => void;\n    getImageURI: () => void;\n    clearChart: () => void; // Clears the chart, and releases all of its allocated resources.\n  }; // ref to chart\n  getContainerId: () => string;\n  getQuery: () => string;\n  getRefreshInterval: () => number;\n  getOption: (key: string, opt_default_value?: any) => any; // returns opt_default_value if key not found\n  getOptions: () => {};\n  getSelection: () => { row?: any; column?: any }[];\n  getView: () => {} | any[]; // Same format as toJSON\n\n  setDataSourceUrl: (url: string) => void;\n  setDataTable: (table: any) => void;\n  setChartType: (chartType: GoogleChartWrapperChartType) => void;\n  setChartName: (name: string) => void; // Sets an arbitrary name for the chart. This is not shown anywhere on the chart, unless a custom chart is explicitly designed to use it.\n  setContainerId: (id: string) => void; // Sets the ID of the containing DOM element for the chart.\n  setQuery: (query_string: string) => void; // Sets a query string, if this chart queries a data source. You must also set the data source URL if specifying this value.\n  setRefreshInterval: (interval: number) => void; // Sets the refresh interval for this chart, if it queries a data source. You must also set a data source URL if specifying this value. Zero indicates no refresh.\n  setOption: (key: string, value: any) => void; // \tSets a single chart option value, where key is the option name and value is the value. To unset an option, pass in null for the value. Note that key may be a qualified name, such as 'vAxis.title'.\n  setOptions: (options_obj: Partial<ChartWrapperOptions[\"options\"]>) => void; //\n};\n\nexport type GoogleVizEventName =\n  | \"ready\"\n  | \"error\"\n  | \"select\"\n  | \"animationfinish\"\n  | \"statechange\"\n  | \"ok\"\n  | \"cancel\"\n  | \"animationstart\";\n\nexport type GoogleVizEvents = {\n  addListener: (\n    chartWrapper: GoogleChartWrapper | GoogleChartControl | GoogleChartEditor,\n    name: GoogleVizEventName,\n    onEvent: (chartWrapper: GoogleChartWrapper) => any\n  ) => any;\n  removeListener: (\n    chartWrapper: GoogleChartWrapper,\n    name: GoogleVizEventName,\n    callback: Function\n  ) => any;\n  removeAllListeners: (chartWrapper: GoogleChartWrapper) => any;\n};\n\nexport type GoogleChartPackages =\n  | \"corechart\"\n  | \"charteditor\"\n  | \"controls\"\n  | \"calendar\"\n  | \"gantt\"\n  | \"gauge\"\n  | \"geochart\"\n  | \"map\"\n  | \"orgchart\"\n  | \"sankey\"\n  | \"table\"\n  | \"timeline\"\n  | \"treemap\"\n  | \"wordtree\";\n\nexport type GoogleChartVersion = \"current\" | \"upcoming\";\n\nexport type GoogleDataTableColumnType =\n  | \"string\"\n  | \"number\"\n  | \"boolean\"\n  | \"date\"\n  | \"datetime\"\n  | \"timeofday\";\n\n// export type GoogleDataTable = {\n//   addColumn: (type: GoogleDataTableColumnType) => number;\n// };\n\n// Reference https://developers.google.com/chart/interactive/docs/roles\nexport enum GoogleDataTableColumnRoleType {\n  annotation = \"annotation\",\n  annotationText = \"annotationText\",\n  certainty = \"certainty\",\n  emphasis = \"emphasis\",\n  interval = \"interval\",\n  scope = \"scope\",\n  style = \"style\",\n  tooltip = \"tooltip\",\n  domain = \"domain\",\n}\n\nexport type GoogleDataTableColumn =\n  | {\n      type: GoogleDataTableColumnType;\n      label?: string; //  A label for the column.\n      role?: GoogleDataTableColumnRoleType;\n      pattern?: string;\n      p?: {};\n      id?: string;\n    }\n  | string;\n\n// Ref : https://developers.google.com/chart/interactive/docs/reference#dataparam\n\nexport type GoogleDataTableCell =\n  | {\n      v?: any; // The cell value. Type should match DataTableColumn type field\n      f?: string; // A string version of the v value, formatted for display.\n      p?: {};\n    }\n  | string\n  | number\n  | boolean\n  | Date;\n\nexport type GoogleDataTableRow = GoogleDataTableCell[];\n\nexport type GoogleDataTableJS = {\n  cols: GoogleDataTableColumn[];\n  rows: {\n    c: GoogleDataTableRow;\n  }[];\n  p?: {};\n};\n\n// Reference : https://developers.google.com/chart/interactive/docs/reference#DataTable\n\nexport type GoogleDataTableRowFilter = {\n  column: number;\n  value: any;\n  minValue?: any;\n  maxValue?: any;\n};\n\nexport type GoogleDataTableSortColumns =\n  | number\n  | {\n      column: number;\n      desc: boolean;\n    }\n  | number[]\n  | {\n      column: number;\n      desc: boolean;\n    }[];\n\nexport type GoogleDataTable = {\n  // https://developers.google.com/chart/interactive/docs/reference#dataparam\n  new (dataParam: any): GoogleDataTable;\n  addColumn: (column: GoogleDataTableColumn) => number;\n  addRow: (row?: GoogleDataTableRow) => number;\n  addRows: (rows?: GoogleDataTableRow[] | number[] | any[]) => number;\n  clone: () => GoogleDataTable;\n\n  getColumnId: (columnIndex: number) => string;\n  getColumnLabel: (columnIndex: number) => string;\n  getColumnPattern: (columnIndex: number) => string;\n  getColumnProperties: (columnIndex: number) => {};\n  getColumnProperty: (columnIndex: number, name: string) => any;\n  getColumnRange: (columnIndex: number) => {\n    min: number | null;\n    max: number | null;\n  };\n  getColumnRole: (columnIndex: number) => GoogleDataTableColumnRoleType;\n  getColumnType: (columnIndex: number) => GoogleDataTableColumnType;\n  getDistinctValues: (columnIndex: number) => any[];\n  getFilteredRows: (filters: GoogleDataTableRowFilter[]) => number[];\n  getFormattedValue: (rowIndex: number, columnIndex: number) => string;\n  getNumberOfColumns: () => number;\n  getNumberOfRows: () => number;\n  getProperties: (rowIndex: number, columnIndex: number) => {};\n  getProperty: (rowIndex: number, columnIndex: number, name: string) => any;\n  getRowProperties: (rowIndex: number) => {};\n  getRowProperty: (rowIndex: number, name: string) => any;\n  getSortedRows: (sortColumns: GoogleDataTableSortColumns) => number[];\n  getTableProperties: () => {};\n  getTableProperty: (name: string) => any;\n  getValue: (\n    rowIndex: number,\n    columnIndex: number\n  ) => boolean | string | number | Date | number[] | null;\n  insertColumn: (\n    columnIndex: number,\n    type: GoogleDataTableColumnType,\n    label?: string,\n    id?: string\n  ) => void;\n  insertRows: (\n    rowIndex: number,\n    numberOrArray: GoogleDataTableRow[] | number\n  ) => void;\n  removeColumn: (columnIndex: number) => void;\n  removeColumns: (columnIndex: number, numberOfColumns: number) => void;\n  removeRow: (rowIndex: number) => void;\n  removeRows: (rowIndex: number, numberOfColumns: number) => void;\n  setCell: (\n    rowIndex: number,\n    columnIndex: number,\n    value?: any,\n    formattedValue?: string,\n    properties?: {}\n  ) => {};\n  setColumnLabel: (columnIndex: number, label: string) => void;\n  setColumnProperty: (columnIndex: number, name: string, value: any) => void;\n  setColumnProperties: (columnIndex: number, properties: {} | null) => void;\n  setFormattedValue: (\n    rowIndex: number,\n    columnIndex: number,\n    formattedValue: string\n  ) => void;\n  setProperty: (\n    rowIndex: number,\n    columnIndex: number,\n    name: string,\n    value: any\n  ) => void;\n  setProperties: (\n    rowIndex: number,\n    columnIndex: number,\n    properties: {} | null\n  ) => void;\n\n  setRowProperty: (rowIndex: number, name: string, value: any) => void;\n  setRowProperties: (rowIndex: number, properties: {} | null) => void;\n  setTableProperties: (properties: {} | null) => void;\n  setValue: (rowIndex: number, columnIndex: number, value: string) => void;\n  sort: (sortColumns: GoogleDataTableSortColumns) => void;\n  toJSON: () => string; // GoogleDataTableJS\n};\n\nexport type GoogleArrayToDataTable = (\n  data: any[][],\n  isFirstRowLabels?: boolean\n) => GoogleDataTable;\n\nexport type GoogleChartOptions = {\n  width?: number;\n  height?: number;\n  is3D?: boolean;\n  backgroundColor: string;\n\n  title?: string;\n  hAxis?: {\n    minValue?: any;\n    maxValue?: any;\n    ticks?: GoogleChartTicks;\n    title?: string;\n    viewWindow?: { max?: any; min?: any; [otherOptionKey: string]: any };\n    [otherOptionKey: string]: any;\n  };\n  vAxis?: {\n    minValue?: any;\n    maxValue?: any;\n    ticks?: GoogleChartTicks;\n    title?: string;\n    viewWindow?: { max?: any; min?: any; [otherOptionKey: string]: any };\n    [otherOptionKey: string]: any;\n  };\n  bubble?: {};\n  pieHole?: number;\n  redFrom?: number;\n  redTo?: number;\n  yellowFrom?: number;\n  yellowTo?: number;\n  minorTicks?: number;\n  legend?:\n    | string\n    | {\n        position?: string;\n        maxLines?: number;\n        [otherOptionKey: string]: any;\n      };\n  curveType?: string;\n  showTooltip?: boolean;\n  showInfoWindow?: boolean;\n  allowHtml?: boolean;\n  isStacked?: string | boolean;\n  minColor?: string;\n  midColor?: string;\n  maxColor?: string;\n  headerHeight?: number;\n  fontColor?: string;\n  showScale?: boolean;\n  bar?: { groupWidth?: string }; // Remove space between bars.\n  candlestick?: {\n    fallingColor?: { strokeWidth?: number; fill?: string }; // red\n    risingColor?: { strokeWidth?: number; fill?: string }; // green\n    [otherOptionKey: string]: any;\n  };\n  wordtree?: {\n    format?: string;\n    word?: string;\n    [otherOptionKey: string]: any;\n  };\n  [otherOptionKey: string]: any;\n};\n\n/*\n *\n * </GoogleChartsTypes>\n *\n */\n\nexport type WindowWithMaybeGoogle = Window & { google?: any };\n\nexport type ReactGoogleChartEvent = {\n  eventName: GoogleVizEventName;\n  callback: (eventCallbackArgs: {\n    chartWrapper: GoogleChartWrapper;\n    controlWrapper?: GoogleChartControl;\n    props: ReactGoogleChartProps;\n    google: GoogleViz;\n    eventArgs: any;\n  }) => void;\n};\n\nexport type GoogleChartToolbarItem = {\n  type: \"igoogle\" | \"html\" | \"csv\" | \"htmlcode\";\n  datasource: string;\n  gadget?: string;\n  userPrefs?: {\n    \"3d\": number;\n    [otherKeyMaybe: string]: any;\n  };\n};\n\nexport type ReactGoogleChartProps = {\n  height?: string | number;\n  width?: string | number;\n  graphID?: string;\n  chartType: GoogleChartWrapperChartType;\n  diffdata?: {\n    old: any;\n    new: any;\n  };\n  options?: ChartWrapperOptions[\"options\"];\n  loader?: JSX.Element;\n  errorElement?: JSX.Element;\n  data?: any[] | {};\n  rows?: GoogleDataTableRow[];\n  columns?: GoogleDataTableColumn[];\n  chartActions?: GoogleChartAction[];\n  chartEvents?: ReactGoogleChartEvent[];\n  chartVersion?: GoogleChartVersion;\n  chartPackages?: GoogleChartPackages[];\n  chartLanguage?: string;\n  mapsApiKey?: string;\n  graph_id?: string;\n  legendToggle?: boolean;\n  legend_toggle?: boolean;\n  onLoad?: (google: GoogleViz) => void;\n  getChartWrapper?: (\n    chartWrapper: GoogleChartWrapper,\n    google: GoogleViz\n  ) => void;\n  getChartEditor?: (args: {\n    chartEditor: GoogleChartEditor;\n    chartWrapper: GoogleChartWrapper;\n    google: GoogleViz;\n  }) => void;\n  className?: string;\n  style?: React.CSSProperties;\n  formatters?: {\n    column: number | number[];\n    type:\n      | \"ArrowFormat\"\n      | \"BarFormat\"\n      | \"ColorFormat\"\n      | \"DateFormat\"\n      | \"NumberFormat\"\n      | \"PatternFormat\";\n    options?: {};\n  }[];\n  spreadSheetUrl?: string;\n  spreadSheetQueryParameters?: {\n    headers: number;\n    gid?: number | string;\n    sheet?: string;\n    query?: string;\n    access_token?: string;\n  };\n  rootProps?: any;\n  controls?: GoogleChartControlProp[];\n  render?: ReactGoogleChartDashboardRender;\n  //https://developers.google.com/chart/interactive/docs/gallery/toolbar#example_1\n  toolbarItems?: GoogleChartToolbarItem[];\n  toolbarID?: string;\n  chartWrapperParams?: any;\n};\n\nexport type GoogleChartDashboard = {\n  draw: (data: GoogleDataTable) => void;\n  bind: (\n    controlWrapperOrWrappers: GoogleChartControl | GoogleChartControl[],\n    chartWrapper: GoogleChartWrapper\n  ) => void;\n};\n\nexport type ReactGoogleChartDashboardRender = ({\n  renderControl,\n  renderChart,\n  renderToolbar,\n}: {\n  renderControl: (\n    filter: ({\n      control,\n      controlProp,\n    }: {\n      control: GoogleChartControl;\n      controlProp: GoogleChartControlProp;\n    }) => boolean\n  ) => any;\n  renderChart: () => any;\n  renderToolbar: () => any;\n}) => any;\nexport type GoogleChartControlOptions = any;\nexport type GoogleChartControl = {\n  getContainerId: () => string;\n  getOptions: () => GoogleChartControlOptions;\n  getState: () => any;\n  setState: (state: any) => void;\n  setOptions: (options: GoogleChartControlOptions) => void;\n  setControlType: (controlType: string) => void;\n};\n\nexport type ReactGoogleChartState = {\n  loadingStatus: \"loading\" | \"errored\" | \"ready\";\n  google: null | GoogleViz;\n  // hiddenColumns: string[];\n};\n\nexport type ReactGoogleChartContext = {\n  data: ReactGoogleChartProps[\"data\"];\n  rows: ReactGoogleChartProps[\"rows\"] | null;\n  columns: ReactGoogleChartProps[\"columns\"] | null;\n  diffdata: ReactGoogleChartProps[\"diffdata\"] | null;\n  options: ReactGoogleChartProps[\"options\"] | null;\n  legend_toggle: ReactGoogleChartProps[\"legend_toggle\"] | null;\n  legendToggle: ReactGoogleChartProps[\"legendToggle\"] | null;\n  chartType: ReactGoogleChartProps[\"chartType\"] | null;\n  formatters: ReactGoogleChartProps[\"formatters\"] | null;\n  spreadSheetUrl: ReactGoogleChartProps[\"spreadSheetUrl\"] | null;\n  spreadSheetQueryParameters:\n    | ReactGoogleChartProps[\"spreadSheetQueryParameters\"]\n    | null;\n};\n","import { Chart } from \"./ReactGoogleCharts\";\n\nexport * from \"./types\";\nexport { Chart };\nexport default Chart;\n","import React from 'react'\r\nimport { CountyContext } from '../../views/public/Counties'\r\nimport { CSVLink } from 'react-csv'\r\nimport { dynamicShowDetailsSVG } from '../../utils/functions/map'\r\nimport { addCommas } from '../../utils/functions/addCommas'\r\n\r\nlet projectList, filterArray\r\nlet prevInput = [0,0]\r\nlet exportData = [], CSVname\r\n\r\nconst ModalTable = ({props}) => {\r\n\r\n  React.useEffect(() => prepareExport())\r\n  const showDetailsSVGRef = React.useRef([])\r\n  const trRef = React.useRef([])\r\n  \r\n  let firstPageIndex = 0, resultSetLength = 0, resultSetLengthPerView = 0, recordsInPage = 0\r\n  let totalPages\r\n\r\n  const {countyFocus, projectFocus, projectDetailsPanelState, searchState, resultsRef} = React.useContext(CountyContext)\r\n  const [currentPage, setCurrentPage] = React.useState(1)\r\n  const inputRef = React.useRef([])\r\n\r\n  firstPageIndex += currentPage*10-10\r\n\r\n  const showProjectDetails = (index, number) => {\r\n    projectDetailsPanelState.setProjectDetailsPanelStatus(true)\r\n    projectFocus.setProjectInFocus(index)\r\n    dynamicShowDetailsSVG(showDetailsSVGRef, trRef, number)\r\n  }\r\n\r\n  const handleChange = (e, index) => {\r\n    prevInput[0] = prevInput[1]\r\n    prevInput[1] = index\r\n    if(prevInput[0] !== prevInput[1]) inputRef.current[prevInput[0]].value = ''\r\n    searchState.setSearchContent({selectedInput: e.target.name, inputValue: e.target.value})\r\n    resultsRef.current.style.display = 'block'\r\n  }\r\n\r\n  if(searchState.searchContent.selectedInput === 'projectID' || searchState.searchContent.selectedInput === '') filterArray = props.projectID\r\n  else if(searchState.searchContent.selectedInput === 'projectName') filterArray = props.projectName\r\n  else if(searchState.searchContent.selectedInput === 'duration') filterArray = props.duration\r\n  else if(searchState.searchContent.selectedInput === 'sector') filterArray = props.sector\r\n  else if(searchState.searchContent.selectedInput === 'estimatedCost') filterArray = props.estimatedCost\r\n  else if(searchState.searchContent.selectedInput === 'budget') filterArray = props.budget\r\n  else if(searchState.searchContent.selectedInput === 'financialYear') filterArray = props.financialYear\r\n  else if(searchState.searchContent.selectedInput === 'status') filterArray = props.status\r\n\r\n  projectList = props.projectID.map((item, index) => index)\r\n  // eslint-disable-next-line\r\n  .filter((index) => {\r\n    let truthTests = parseInt(props.locCountyNo[index]-1) === countyFocus.countyInFocus.number\r\n    && filterArray[index].toLowerCase()[searchState.searchContent.inputValue.length-1] === searchState.searchContent.inputValue.toLowerCase()[searchState.searchContent.inputValue.length-1]\r\n    && filterArray[index].toLowerCase()[searchState.searchContent.inputValue.length-2] === searchState.searchContent.inputValue.toLowerCase()[searchState.searchContent.inputValue.length-2]\r\n    && filterArray[index].toLowerCase()[searchState.searchContent.inputValue.length-3] === searchState.searchContent.inputValue.toLowerCase()[searchState.searchContent.inputValue.length-3]\r\n\r\n    if(truthTests) resultSetLength++\r\n\r\n    return (truthTests)\r\n  })\r\n  // eslint-disable-next-line\r\n  .map((index, number) => {\r\n    while(number >= firstPageIndex && number < firstPageIndex+10) {\r\n      if((number+1) > recordsInPage) recordsInPage = (number+1)\r\n      return (\r\n        <tr key={index} ref={(item) => trRef.current[number] = item}>\r\n          <td className='td_view_project' onClick={() => showProjectDetails(index, number)}>\r\n            <svg className='visibilitySVG' ref={(item) => showDetailsSVGRef.current[number] = item} xmlns=\"http://www.w3.org/2000/svg\" height=\"36px\" viewBox=\"0 0 24 24\" width=\"36px\" fill=\"#000000\"><path d=\"M0 0h24v24H0V0z\" fill=\"none\"/><path d=\"M12 4C7 4 2.73 7.11 1 11.5 2.73 15.89 7 19 12 19s9.27-3.11 11-7.5C21.27 7.11 17 4 12 4zm0 12.5c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"/></svg>\r\n          </td>\r\n          <td>{number+1}. {props.projectID[index]}</td>\r\n          <td>{props.projectName[index]}</td>\r\n          <td>{props.duration[index]} months</td>\r\n          <td>{props.sector[index]}</td>\r\n          <td>{addCommas(props.estimatedCost[index])}</td>\r\n          <td>{addCommas(props.budget[index])}</td>\r\n          <td>{props.financialYear[index]}</td>\r\n          <td>{props.status[index]}</td>\r\n        </tr>\r\n      )\r\n    }\r\n  })\r\n\r\n  totalPages = Math.ceil(resultSetLength/10)\r\n  if(totalPages < 1) totalPages = 1\r\n  \r\n  resultSetLengthPerView = recordsInPage%10\r\n\r\n  const changeTablePage = (action) => {\r\n    if(action === 'next') {\r\n      if(currentPage < totalPages)\r\n        setCurrentPage(currentPage+1)\r\n    }\r\n    else if(action === 'prev') {\r\n      if(currentPage > 1)\r\n        setCurrentPage(currentPage-1)\r\n    }\r\n  }\r\n\r\n  const prepareExport = () => {\r\n    exportData = [\r\n      ['Project ID','Name','Description','Status','Approval date','Start date','End date','Duration','Sector','Ministry','Implementing agency','Contractor','Priority','Estimated cost','Budget','Financial year','Source of funding','County','Sub-county','Constituency','Ward']\r\n    ]\r\n    for(let i=0; i<projectList.length; i++) {\r\n      exportData[i+1] = [\r\n        props.projectID[projectList[i].key],\r\n        props.projectName[projectList[i].key],\r\n        props.description[projectList[i].key],\r\n        props.status[projectList[i].key],\r\n        props.approvalDate[projectList[i].key],\r\n        props.startDate[projectList[i].key],\r\n        props.endDate[projectList[i].key],\r\n        props.duration[projectList[i].key],\r\n        props.sector[projectList[i].key],\r\n        props.ministry[projectList[i].key],\r\n        props.agency[projectList[i].key],\r\n        props.contractor[projectList[i].key],\r\n        props.priority[projectList[i].key],\r\n        props.estimatedCost[projectList[i].key],\r\n        props.budget[projectList[i].key],\r\n        props.financialYear[projectList[i].key],\r\n        props.fundingSource[projectList[i].key],\r\n        props.locCountyNo[projectList[i].key],\r\n        props.subCounty[projectList[i].key],\r\n        props.constituency[projectList[i].key],\r\n        props.ward[projectList[i].key],\r\n      ]\r\n    }\r\n  }\r\n\r\n  CSVname=`county${countyFocus.countyInFocus.number+1} report`\r\n\r\n  if(projectList.length === 0)\r\n    return (\r\n      <>\r\n        <div className='no_projects'><b>No county projects available.</b></div>\r\n        <span ref={resultsRef}>Placeholder</span>\r\n      </>\r\n    )\r\n  else\r\n\r\n  return (\r\n    <>\r\n      <div className='modal__card__table_extras flex'>\r\n        <div>\r\n          <button disabled onClick={() => changeTablePage('prev')}>Prev page</button>\r\n          <button onClick={() => changeTablePage('next')}>Next page</button>\r\n        </div>\r\n        <span>PAGE {currentPage} of {totalPages}   </span>\r\n        <span ref={resultsRef}>|   SEARCH RESULTS: {resultSetLengthPerView} of {resultSetLength}</span>\r\n        <CSVLink filename={CSVname} data={exportData}>Download as CSV</CSVLink>\r\n      </div>\r\n      <div className='table_container'>\r\n        <table className='table_wd'>\r\n          <thead>\r\n            <tr>\r\n              <th></th>\r\n              <th>Project ID</th>\r\n              <th>Project name</th>\r\n              <th>Duration</th>\r\n              <th>Sector</th>\r\n              <th>Est. cost</th>\r\n              <th>Budget</th>\r\n              <th>Fin. year</th>\r\n              <th>Status</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr className='tr_search'>\r\n              <td></td>\r\n              <td><input type='search' name='projectID' ref={(item) => inputRef.current[0] = item} key={countyFocus.countyInFocus.number + ':projectID'} placeholder='Search:' onChange={(e) => handleChange(e, 0)} autoComplete='off' /></td>\r\n              <td><input type='search' name='projectName' ref={(item) => inputRef.current[1] = item} key={countyFocus.countyInFocus.number + ':projectName'} placeholder='Search:' onChange={(e) => handleChange(e, 1)} autoComplete='off' /></td>\r\n              <td><input type='search' name='duration' ref={(item) => inputRef.current[2] = item} key={countyFocus.countyInFocus.number + ':duration'} placeholder='Search:' onChange={(e) => handleChange(e, 2)} autoComplete='off' /></td>\r\n              <td><input type='search' name='sector' ref={(item) => inputRef.current[3] = item} key={countyFocus.countyInFocus.number + ':sector'} placeholder='Search:' onChange={(e) => handleChange(e, 3)} autoComplete='off' /></td>\r\n              <td><input type='search' name='estimatedCost' ref={(item) => inputRef.current[4] = item} key={countyFocus.countyInFocus.number + ':estimatedCost'} placeholder='Search:' onChange={(e) => handleChange(e, 4)} autoComplete='off' /></td>\r\n              <td><input type='search' name='budget' ref={(item) => inputRef.current[5] = item} key={countyFocus.countyInFocus.number + ':budget'} placeholder='Search:' onChange={(e) => handleChange(e, 5)} autoComplete='off' /></td>\r\n              <td><input type='search' name='financialYear' ref={(item) => inputRef.current[6] = item} key={countyFocus.countyInFocus.number + ':financialYear'} placeholder='Search:' onChange={(e) => handleChange(e, 6)} autoComplete='off' /></td>\r\n              <td><input type='search' name='status' ref={(item) => inputRef.current[7] = item} key={countyFocus.countyInFocus.number + ':status'} placeholder='Search:' onChange={(e) => handleChange(e, 7)} autoComplete='off' /></td>\r\n            </tr>\r\n            {projectList}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ModalTable","import React from 'react'\r\nimport axios from 'axios'\r\nimport { DashboardContext } from '../../views/admin/Dashboard'\r\nimport { openSidePanel } from '../../utils/functions/panels'\r\nimport { closeSidePanel } from '../../utils/functions/panels'\r\nimport { getProjectDetails } from '../../utils/functions/getProjectDetails'\r\nimport { getProjectTimelines } from '../../utils/functions/getProjectTimelines'\r\nimport { getProjectImplementations } from '../../utils/functions/getProjectImplementations'\r\nimport { getProjectFinances } from '../../utils/functions/getProjectFinances'\r\nimport { getProjectLocations } from '../../utils/functions/getProjectLocations'\r\nimport { getTrackingLogs } from '../../utils/functions/getTrackingLogs'\r\n\r\nlet updateProjectScript = 'http://localhost/development-project-tracker/src/utils/php/update/updateProject.php'\r\nlet updateTimelineScript = 'http://localhost/development-project-tracker/src/utils/php/update/updateTimeline.php'\r\nlet updateImplementationScript = 'http://localhost/development-project-tracker/src/utils/php/update/updateImplementation.php'\r\nlet updateFinanceScript = 'http://localhost/development-project-tracker/src/utils/php/update/updateFinance.php'\r\nlet updateLocationScript = 'http://localhost/development-project-tracker/src/utils/php/update/updateLocation.php'\r\nlet logChangesScript = 'http://localhost/development-project-tracker/src/utils/php/insert/logChanges.php'\r\nlet formFields\r\n\r\nconst UpdateProjectPanel = ({props}) => {\r\n\r\n  const {tableFocus, recordFocus, updateProjectPanelState, infoModal, trackingValues} = React.useContext(DashboardContext)\r\n  const updateProjectPanelRef = React.useRef()\r\n\r\n  openSidePanel(updateProjectPanelRef, updateProjectPanelState.updateProjectPanel)\r\n\r\n  const handleChange = (e) => {\r\n    recordFocus.setRecordInFocus({...recordFocus.recordInFocus, [e.target.name]: e.target.value })\r\n\r\n    let propsName, propsValue\r\n    if(e.target.name === 'name') {propsValue = props.projectName; propsName = 'project name'}\r\n    else if(e.target.name === 'description') {propsValue = props.description; propsName = 'description'}\r\n    else if(e.target.name === 'status') {propsValue = props.status; propsName = 'status'}\r\n    else if(e.target.name === 'approvalDate') {propsValue = props.approvalDate; propsName = 'approval date'}\r\n    else if(e.target.name === 'startDate') {propsValue = props.startDate; propsName = 'start date'}\r\n    else if(e.target.name === 'endDate') {propsValue = props.endDate; propsName = 'end date'}\r\n    else if(e.target.name === 'duration') {propsValue = props.duration; propsName = 'duration'}\r\n    else if(e.target.name === 'sector') {propsValue = props.sector; propsName = 'sector'}\r\n    else if(e.target.name === 'ministry') {propsValue = props.ministry; propsName = 'ministry'}\r\n    else if(e.target.name === 'agency') {propsValue = props.agency; propsName = 'agency'}\r\n    else if(e.target.name === 'contractor') {propsValue = props.contractor; propsName = 'contractor'}\r\n    else if(e.target.name === 'priority') {propsValue = props.priority; propsName = 'priority'}\r\n    else if(e.target.name === 'estimatedCost') {propsValue = props.estimatedCost; propsName = 'estimated cost'}\r\n    else if(e.target.name === 'budget') {propsValue = props.budget; propsName = 'budget'}\r\n    else if(e.target.name === 'financialYear') {propsValue = props.financialYear; propsName = 'financial year'}\r\n    else if(e.target.name === 'fundingSource') {propsValue = props.fundingSource; propsName = 'funding source'}\r\n    else if(e.target.name === 'countyNo') {propsValue = props.locCountyNo; propsName = 'county'}\r\n    else if(e.target.name === 'subCounty') {propsValue = props.subCounty; propsName = 'sub county'}\r\n    else if(e.target.name === 'constituency') {propsValue = props.constituency; propsName = 'constituency'}\r\n    else if(e.target.name === 'ward') {propsValue = props.ward; propsName = 'ward'}\r\n\r\n    trackingValues.setTrackedChanges({...trackingValues.trackedChanges,\r\n      projectID: recordFocus.recordInFocus.projectID,\r\n      [propsName]: [propsValue[recordFocus.recordInFocus.recordIndex], e.target.value]\r\n    })\r\n  }\r\n\r\n  const handleSubmit = (e, table) => {\r\n    let sendMeta = {script: '', action: ''}\r\n    \r\n    if(table === 'projects') sendMeta = {script: updateProjectScript, action: getProjectDetails}\r\n    if(table === 'timelines') sendMeta = {script: updateTimelineScript, action: getProjectTimelines}\r\n    if(table === 'implementation') sendMeta = {script: updateImplementationScript, action: getProjectImplementations}\r\n    if(table === 'finances') sendMeta = {script: updateFinanceScript, action: getProjectFinances}\r\n    if(table === 'locations') sendMeta = {script: updateLocationScript, action: getProjectLocations}\r\n\r\n    axios.post(sendMeta.script, recordFocus.recordInFocus)\r\n    .then((response) => {\r\n      if(response.data) {\r\n        axios.post(logChangesScript, trackingValues.trackedChanges)\r\n        infoModal.setInfoModalProps({state: true, icon:'success', text:'Successfully updated!'})\r\n        sendMeta.action(props)\r\n        getTrackingLogs(props)\r\n      }\r\n      else\r\n        infoModal.setInfoModalProps({state: true, icon:'fail', text:'Error! Try again.'})\r\n    })\r\n\r\n    closeSidePanel(updateProjectPanelRef, updateProjectPanelState.setUpdateProjectPanelStatus)\r\n    e.preventDefault()\r\n  }\r\n\r\n  if(tableFocus.tableInFocus === 'projects')\r\n    formFields = (\r\n      <>\r\n        <label htmlFor='name'>Name:</label>\r\n        <input type='text' id='name' name='name' defaultValue={props.projectName[recordFocus.recordInFocus.recordIndex]} key={props.projectName[recordFocus.recordInFocus.recordIndex] + ':name'} onChange={handleChange} required />\r\n        <label htmlFor='description'>Description:</label>\r\n        <textarea type='text' id='description' name='description' defaultValue={props.description[recordFocus.recordInFocus.recordIndex]} key={props.description[recordFocus.recordInFocus.recordIndex] + ':description'} onChange={handleChange} />\r\n        <label htmlFor='status'>Status:</label>\r\n        <select id='status' name='status' defaultValue={props.status[recordFocus.recordInFocus.recordIndex]} key={props.status[recordFocus.recordInFocus.recordIndex] + ':status'} onChange={handleChange} >\r\n          <option value='Scheduled'>Scheduled</option>\r\n          <option value='Approved'>Approved</option>\r\n          <option value='In progress'>In progress</option>\r\n          <option value='Completed'>Completed</option>\r\n        </select>\r\n      </>\r\n    )\r\n\r\n  else if(tableFocus.tableInFocus === 'timelines')\r\n    formFields = (\r\n      <>\r\n        <label htmlFor='approvalDate'>Approval date:</label>\r\n        <input type='text' id='approvalDate' name='approvalDate' defaultValue={props.approvalDate[recordFocus.recordInFocus.recordIndex]} key={props.approvalDate[recordFocus.recordInFocus.recordIndex] + ':approvalDate'} onChange={handleChange} />\r\n        <label htmlFor='startDate'>Start date:</label>\r\n        <input type='text' id='startDate' name='startDate' defaultValue={props.startDate[recordFocus.recordInFocus.recordIndex]} key={props.startDate[recordFocus.recordInFocus.recordIndex] + ':startDate'} onChange={handleChange} />\r\n        <label htmlFor='endDate'>End date:</label>\r\n        <input type='text' id='endDate' name='endDate' defaultValue={props.endDate[recordFocus.recordInFocus.recordIndex]} key={props.endDate[recordFocus.recordInFocus.recordIndex] + ':endDate'} onChange={handleChange} />\r\n        <label htmlFor='duration'>Duration (months):</label>\r\n        <input type='text' id='duration' name='duration' defaultValue={props.duration[recordFocus.recordInFocus.recordIndex]} key={props.duration[recordFocus.recordInFocus.recordIndex] + ':duration'} onChange={handleChange} />\r\n      </>\r\n    )\r\n\r\n  else if(tableFocus.tableInFocus === 'implementation')\r\n    formFields = (\r\n      <>\r\n        <label htmlFor='sector'>Sector:</label>\r\n        <input type='text' id='sector' name='sector' defaultValue={props.sector[recordFocus.recordInFocus.recordIndex]} key={props.sector[recordFocus.recordInFocus.recordIndex] + ':sector'} onChange={handleChange} />\r\n        <label htmlFor='ministry'>Ministry:</label>\r\n        <input type='text' id='ministry' name='ministry' defaultValue={props.ministry[recordFocus.recordInFocus.recordIndex]} key={props.ministry[recordFocus.recordInFocus.recordIndex] + ':ministry'} onChange={handleChange} />\r\n        <label htmlFor='agency'>Implementing agency:</label>\r\n        <input type='text' id='agency' name='agency' defaultValue={props.agency[recordFocus.recordInFocus.recordIndex]} key={props.agency[recordFocus.recordInFocus.recordIndex] + ':agency'} onChange={handleChange} />\r\n        <label htmlFor='contractor'>Contractor:</label>\r\n        <input type='text' id='contractor' name='contractor' defaultValue={props.contractor[recordFocus.recordInFocus.recordIndex]} key={props.contractor[recordFocus.recordInFocus.recordIndex] + ':contractor'} onChange={handleChange} />\r\n        <label htmlFor='priority'>Priority:</label>\r\n        <select id='priority' name='priority' defaultValue={props.priority[recordFocus.recordInFocus.recordIndex]} key={props.priority[recordFocus.recordInFocus.recordIndex] + ':priority'} onChange={handleChange} >\r\n          <option value='High'>High</option>\r\n          <option value='Medium'>Medium</option>\r\n          <option value='Low'>Low</option>\r\n        </select>\r\n      </>\r\n    )\r\n\r\n  else if(tableFocus.tableInFocus === 'finances')\r\n    formFields = (\r\n      <>\r\n        <label htmlFor='estimatedCost'>Estimated cost:</label>\r\n        <input type='text' id='estimatedCost' name='estimatedCost' defaultValue={props.estimatedCost[recordFocus.recordInFocus.recordIndex]} key={props.estimatedCost[recordFocus.recordInFocus.recordIndex] + ':estimatedCost'} onChange={handleChange} />\r\n        <label htmlFor='budget'>Budget:</label>\r\n        <input type='text' id='budget' name='budget' defaultValue={props.budget[recordFocus.recordInFocus.recordIndex]} key={props.budget[recordFocus.recordInFocus.recordIndex] + ':budget'} onChange={handleChange} />\r\n        <label htmlFor='financialYear'>Financial year:</label>\r\n        <input type='text' id='financialYear' name='financialYear' defaultValue={props.financialYear[recordFocus.recordInFocus.recordIndex]} key={props.financialYear[recordFocus.recordInFocus.recordIndex] + ':financialYear'} onChange={handleChange} />\r\n        <label htmlFor='fundingSource'>Source of funding:</label>\r\n        <input type='text' id='fundingSource' name='fundingSource' defaultValue={props.fundingSource[recordFocus.recordInFocus.recordIndex]} key={props.fundingSource[recordFocus.recordInFocus.recordIndex] + ':fundingSource'} onChange={handleChange} />\r\n      </>\r\n    )\r\n\r\n  else if(tableFocus.tableInFocus === 'locations')\r\n    formFields = (\r\n      <>\r\n        <label htmlFor='countyNo'>County:</label>\r\n        <input type='text' id='countyNo' name='countyNo' defaultValue={props.locCountyNo[recordFocus.recordInFocus.recordIndex]} key={props.locCountyNo[recordFocus.recordInFocus.recordIndex] + ':countyNo'} onChange={handleChange} />\r\n        <label htmlFor='subCounty'>Sub-county:</label>\r\n        <input type='text' id='subCounty' name='subCounty' defaultValue={props.subCounty[recordFocus.recordInFocus.recordIndex]} key={props.subCounty[recordFocus.recordInFocus.recordIndex] + ':subCounty'} onChange={handleChange} />\r\n        <label htmlFor='constituency'>Constituency:</label>\r\n        <input type='text' id='constituency' name='constituency' defaultValue={props.constituency[recordFocus.recordInFocus.recordIndex]} key={props.constituency[recordFocus.recordInFocus.recordIndex] + ':constituency'} onChange={handleChange} />\r\n        <label htmlFor='ward'>Ward:</label>\r\n        <input type='text' id='ward' name='ward' defaultValue={props.ward[recordFocus.recordInFocus.recordIndex]} key={props.ward[recordFocus.recordInFocus.recordIndex] + ':ward'} onChange={handleChange} />\r\n      </>\r\n    )\r\n\r\n  return (\r\n    <div className='sidePanel' ref={updateProjectPanelRef}>\r\n      <svg className='close_modal_svg' onClick={() => closeSidePanel(updateProjectPanelRef, updateProjectPanelState.setUpdateProjectPanelStatus)} xmlns=\"http://www.w3.org/2000/svg\" height=\"36px\" viewBox=\"0 0 24 24\" width=\"36px\" fill=\"#000\"><path d=\"M0 0h24v24H0V0z\" fill=\"#FFF\"/><path d=\"M18.3 5.71c-.39-.39-1.02-.39-1.41 0L12 10.59 7.11 5.7c-.39-.39-1.02-.39-1.41 0-.39.39-.39 1.02 0 1.41L10.59 12 5.7 16.89c-.39.39-.39 1.02 0 1.41.39.39 1.02.39 1.41 0L12 13.41l4.89 4.89c.39.39 1.02.39 1.41 0 .39-.39.39-1.02 0-1.41L13.41 12l4.89-4.89c.38-.38.38-1.02 0-1.4z\"/></svg>\r\n      <div className='sidePanel__content'>\r\n        <form onSubmit={(e) => handleSubmit(e, tableFocus.tableInFocus)}>\r\n          <h3>Updating projectID <em>'{recordFocus.recordInFocus.projectID}'</em></h3>\r\n          <div className='sidePanel__content__grid'>\r\n            {formFields}\r\n          </div>\r\n          <button>Update details</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UpdateProjectPanel","import React from 'react'\r\nimport axios from 'axios'\r\nimport { DashboardContext } from '../../views/admin/Dashboard'\r\nimport { openSidePanel } from '../../utils/functions/panels'\r\nimport { closeSidePanel } from '../../utils/functions/panels'\r\nimport { getCounties } from '../../utils/functions/getCounties'\r\nimport { getAdmins } from '../../utils/functions/getAdmins'\r\n\r\nlet updateCountyScript = 'http://localhost/development-project-tracker/src/utils/php/update/updateCounty.php'\r\nlet updateAdminScript = 'http://localhost/development-project-tracker/src/utils/php/update/updateAdmin.php'\r\nlet formFields, heading\r\n\r\nconst UpdateOtherPanel = ({props}) => {\r\n\r\n  const {tableFocus, countyFocus, adminFocus, updateOtherPanelState, infoModal} = React.useContext(DashboardContext)\r\n  const updatePanelRef = React.useRef()\r\n\r\n  openSidePanel(updatePanelRef, updateOtherPanelState.updateOtherPanel)\r\n\r\n  const handleChange = (e, table) => {\r\n    if(table === 'counties')\r\n      countyFocus.setCountyInFocus({...countyFocus.countyInFocus, [e.target.name]: e.target.value})\r\n    else if(table === 'admin')\r\n      adminFocus.setAdminInFocus({...adminFocus.adminInFocus, [e.target.name]: e.target.value})\r\n  }\r\n\r\n  const handleSubmit = (e, table) => {\r\n    let sendMeta = {state: '', script: '', action: ''}\r\n    \r\n    if(table === 'counties') sendMeta = {state: countyFocus.countyInFocus, script: updateCountyScript, action: getCounties}\r\n    if(table === 'admin') sendMeta = {state: adminFocus.adminInFocus, script: updateAdminScript, action: getAdmins}\r\n\r\n    axios.post(sendMeta.script, sendMeta.state)\r\n    .then((response) => {\r\n      if(response.data) {\r\n        infoModal.setInfoModalProps({state: true, icon:'success', text:'Successfully updated!'})\r\n        sendMeta.action(props)\r\n      }\r\n      else\r\n        infoModal.setInfoModalProps({state: true, icon:'fail', text:'Error! Try again.'})\r\n    })\r\n\r\n    closeSidePanel(updatePanelRef, updateOtherPanelState.setUpdateOtherPanelStatus)\r\n    e.preventDefault()\r\n  }\r\n\r\n  if(tableFocus.tableInFocus === 'counties') {\r\n    heading = (<h3>Updating county no.<em>'{props.countyNo[countyFocus.countyInFocus.recordIndex]}'</em></h3>)\r\n    formFields = (\r\n      <>\r\n        <label htmlFor='governor'>Governor:</label>\r\n        <input type='text' id='governor' name='governor' defaultValue={props.governor[countyFocus.countyInFocus.recordIndex]} key={props.governor[countyFocus.countyInFocus.recordIndex] + ':governor'} onChange={(e) => handleChange(e, tableFocus.tableInFocus)} required />\r\n        <label htmlFor='senator'>Senator:</label>\r\n        <input type='text' id='senator' name='senator' defaultValue={props.senator[countyFocus.countyInFocus.recordIndex]} key={props.senator[countyFocus.countyInFocus.recordIndex] + ':senator'} onChange={(e) => handleChange(e, tableFocus.tableInFocus)} required />\r\n      </>\r\n    )\r\n  }\r\n\r\n  else if(tableFocus.tableInFocus === 'admin') {\r\n    heading = (<h3>Updating admin <em>'{props.adminUsername[adminFocus.adminInFocus.recordIndex]}'</em></h3>)\r\n    formFields = (\r\n      <>\r\n        <label htmlFor='adminFirstName'>First name:</label>\r\n        <input type='text' id='adminFirstName' name='adminFirstName' defaultValue={props.adminFirstName[adminFocus.adminInFocus.recordIndex]} key={props.adminFirstName[adminFocus.adminInFocus.recordIndex] + ':adminFirstName'} onChange={(e) => handleChange(e, tableFocus.tableInFocus)} />\r\n        <label htmlFor='adminLastName'>End date:</label>\r\n        <input type='text' id='adminLastName' name='adminLastName' defaultValue={props.adminLastName[adminFocus.adminInFocus.recordIndex]} key={props.adminLastName[adminFocus.adminInFocus.recordIndex] + ':adminLastName'} onChange={(e) => handleChange(e, tableFocus.tableInFocus)} />\r\n        <label htmlFor='adminEmail'>Email:</label>\r\n        <input type='text' id='adminEmail' name='adminEmail' defaultValue={props.adminEmail[adminFocus.adminInFocus.recordIndex]} key={props.adminEmail[adminFocus.adminInFocus.recordIndex] + ':adminEmail'} onChange={(e) => handleChange(e, tableFocus.tableInFocus)} />\r\n      </>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className='sidePanel' ref={updatePanelRef}>\r\n      <svg className='close_modal_svg' onClick={() => closeSidePanel(updatePanelRef, updateOtherPanelState.setUpdateOtherPanelStatus)} xmlns=\"http://www.w3.org/2000/svg\" height=\"36px\" viewBox=\"0 0 24 24\" width=\"36px\" fill=\"#000\"><path d=\"M0 0h24v24H0V0z\" fill=\"#FFF\"/><path d=\"M18.3 5.71c-.39-.39-1.02-.39-1.41 0L12 10.59 7.11 5.7c-.39-.39-1.02-.39-1.41 0-.39.39-.39 1.02 0 1.41L10.59 12 5.7 16.89c-.39.39-.39 1.02 0 1.41.39.39 1.02.39 1.41 0L12 13.41l4.89 4.89c.39.39 1.02.39 1.41 0 .39-.39.39-1.02 0-1.41L13.41 12l4.89-4.89c.38-.38.38-1.02 0-1.4z\"/></svg>\r\n      <div className='sidePanel__content'>\r\n        <form onSubmit={(e) => handleSubmit(e, tableFocus.tableInFocus)}>\r\n          {heading}\r\n          <div className='sidePanel__content__grid'>\r\n            {formFields}\r\n          </div>\r\n          <button>Update details</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UpdateOtherPanel","import React from 'react'\r\nimport { DashboardContext } from '../../views/admin/Dashboard'\r\nimport { openInteractiveModal } from '../../utils/functions/modal'\r\nimport { closeInteractiveModal } from '../../utils/functions/modal'\r\n\r\nlet infoSVG\r\n\r\nconst InfoModal = () => {\r\n\r\n  const {infoModal} = React.useContext(DashboardContext)\r\n  const modalRef = React.useRef()\r\n\r\n  if(infoModal.infoModalProps.icon === 'success')\r\n    infoSVG = (\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"36px\" viewBox=\"0 0 24 24\" width=\"36px\" fill=\"#000000\"><path d=\"M0 0h24v24H0V0z\" fill=\"none\"/><path d=\"M9 16.2l-3.5-3.5c-.39-.39-1.01-.39-1.4 0-.39.39-.39 1.01 0 1.4l4.19 4.19c.39.39 1.02.39 1.41 0L20.3 7.7c.39-.39.39-1.01 0-1.4-.39-.39-1.01-.39-1.4 0L9 16.2z\"/></svg>\r\n    )\r\n  else if(infoModal.infoModalProps.icon === 'fail')\r\n    infoSVG = (\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"36px\" viewBox=\"0 0 24 24\" width=\"36px\" fill=\"#000000\"><path d=\"M12 7c.55 0 1 .45 1 1v4c0 .55-.45 1-1 1s-1-.45-1-1V8c0-.55.45-1 1-1zm-.01-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8zm1-3h-2v-2h2v2z\"/></svg>\r\n    )\r\n\r\n  openInteractiveModal(infoModal.infoModalProps.state, modalRef)\r\n\r\n  return (\r\n    <div className='modal' ref={modalRef}>\r\n      <div className='modal__card modal__card_sm card'>\r\n        {infoSVG}\r\n        <h3>{infoModal.infoModalProps.text}</h3>\r\n        <button onClick={() => closeInteractiveModal(infoModal.setInfoModalProps, modalRef)}>Close</button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default InfoModal","export const piechartOptions = {\r\n  width: 300,\r\n  height: 200,\r\n  fontName: 'Source Sans Pro',\r\n  fontSize: 9,\r\n  legend: { position: 'labeled', textStyle: { fontSize: 12, color: '#555' } },\r\n  colors: ['#4281A9', '#669FC3', '#91BAD4', '#BDD6E5'],\r\n  backgroundColor: 'none',\r\n  pieSliceText: 'label',\r\n  is3D: true,\r\n  chartArea: { width: '95%', height: '65%'},\r\n  tooltip: { textStyle: { fontName: 'Source Sans Pro', fontSize: 12, color: '#669FC3' }, ignoreBounds: false, showColorCode: false },\r\n  slices: { 0: { offset: 0.2 } }\r\n}\r\n\r\nexport const barOptions = {\r\n  width: 300,\r\n  height: 200,\r\n  fontName: 'Source Sans Pro',\r\n  fontSize: 12,\r\n  legend: { position: 'bottom', alignment: 'center' },\r\n  colors: ['#669FC3', '#91bAD4'],\r\n  backgroundColor: 'none',\r\n  bar: { groupWidth: '30%' },\r\n  chartArea: { left: '15%', width: '80%', height: '55%'},\r\n  tooltip: { textStyle: {color: '#4281A9'}, isHtml: false },\r\n  vAxis: { format: 'short', gridlines: {color: '#CCC', count: 4} }\r\n}","import React from 'react'\r\nimport { AppContext } from '../../App'\r\nimport { CountyContext } from '../../views/public/Counties'\r\nimport { Chart } from 'react-google-charts'\r\nimport { barOptions } from '../../utils/charts'\r\n\r\nconst ModalTop = ({props}) => {\r\n\r\n  const {statsValues} = React.useContext(AppContext)\r\n  const {countyFocus} = React.useContext(CountyContext)\r\n\r\n  let projectsInCounty = props.projectID.map((item, index) => index)\r\n  .filter((index) => parseInt(props.locCountyNo[index]-1) === countyFocus.countyInFocus.number)\r\n\r\n  let totalEstimate = projectsInCounty.reduce((acc, index) => acc + parseInt(props.estimatedCost[index]), 0)\r\n  let totalBudget = projectsInCounty.reduce((acc, index) => acc + parseInt(props.budget[index]), 0)\r\n  \r\n  const barData = [\r\n    ['County', 'Estimated cost', 'Budget'],\r\n    [countyFocus.countyInFocus.name, totalEstimate, totalBudget]\r\n  ]\r\n\r\n  return (\r\n    <div className='modal__card__top flex'>\r\n      <div>\r\n        <section>\r\n          <h3>Incumbency</h3>\r\n          <span>Governor:  {props.governor[countyFocus.countyInFocus.number]}</span>\r\n          <span>Senator:  {props.senator[countyFocus.countyInFocus.number]}</span>\r\n        </section>\r\n        <section>\r\n          <h3>Projects</h3>\r\n          <div className='modal__card__top__summary flex'>\r\n            <span>Total:  <b>{statsValues.stats.allProjects[countyFocus.countyInFocus.number]}</b></span>\r\n            <span>Completed:  <b>{statsValues.stats.completed[countyFocus.countyInFocus.number]}</b></span>\r\n            <span>In progress:  <b>{statsValues.stats.inProgress[countyFocus.countyInFocus.number]}</b></span>\r\n            <span>Approved:  <b>{statsValues.stats.approved[countyFocus.countyInFocus.number]}</b></span>\r\n            <span>Scheduled:  <b>{statsValues.stats.scheduled[countyFocus.countyInFocus.number]}</b></span>\r\n          </div>\r\n        </section>\r\n      </div>\r\n      <section>\r\n        <h3>Finances (in KSH)</h3>\r\n        <Chart chartType='ColumnChart' data={barData} options={barOptions} />\r\n      </section>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ModalTop","let prevOptions = [0,0]\r\nlet prevSVG = [0,0]\r\nlet prevDetailsSVG = [0,0]\r\nlet prevMenu = [0,1]\r\n\r\nexport const dynamicShowMoreOptions = (ref, selectedValue) => {\r\n  prevOptions[0] = prevOptions[1]\r\n  prevOptions[1] = selectedValue\r\n\r\n  for(let i=0; i<prevOptions.length; i++ ) {\r\n    if(i===0 && ref.current[prevOptions[i]] !== null) {\r\n      ref.current[prevOptions[i]].style.visibility = 'hidden'\r\n      ref.current[prevOptions[i]].style.opacity = '0'\r\n    }\r\n    else if(ref.current[prevOptions[i]] !== null) {\r\n      ref.current[prevOptions[i]].style.visibility = 'visible'\r\n      ref.current[prevOptions[i]].style.opacity = '1'\r\n    }\r\n  }\r\n}\r\n\r\nexport const dynamicShowMoreOptionsSVG = (ref1, ref2, selectedValue) => {\r\n  prevSVG[0] = prevSVG[1]\r\n  prevSVG[1] = selectedValue\r\n\r\n  for(let i=0; i<prevSVG.length; i++ ) {\r\n    if(i===0 && ref1.current[prevSVG[i]] !== null && ref2.current[prevSVG[i]] !== null) {\r\n      ref1.current[prevSVG[i]].style.fill = '#CCC'\r\n      ref1.current[prevSVG[i]].style.opacity = '0'\r\n      ref2.current[prevSVG[i]].style.backgroundColor = 'transparent'\r\n    }\r\n    else if(ref1.current[prevSVG[i]] !== null && ref2.current[prevSVG[i]] !== null) {\r\n      ref1.current[prevSVG[i]].style.fill = '#669FC3'\r\n      ref1.current[prevSVG[i]].style.opacity = '1'\r\n      ref2.current[prevSVG[i]].style.backgroundColor = '#F6F6F6'\r\n    }\r\n  }\r\n}\r\n\r\nexport const dynamicShowDetailsSVG = (ref1, ref2, selectedValue) => {\r\n  prevDetailsSVG[0] = prevDetailsSVG[1]\r\n  prevDetailsSVG[1] = selectedValue\r\n\r\n  for(let i=0; i<prevDetailsSVG.length; i++ ) {\r\n    if(i===0 && ref1.current[prevDetailsSVG[i]] !== null && ref2.current[prevDetailsSVG[i]] !== null) {\r\n      ref1.current[prevDetailsSVG[i]].style.fill = '#CCC'\r\n      ref2.current[prevDetailsSVG[i]].style.backgroundColor = 'transparent'\r\n    }\r\n    else if(ref1.current[prevDetailsSVG[i]] !== null && ref2.current[prevDetailsSVG[i]] !== null) {\r\n      ref1.current[prevDetailsSVG[i]].style.fill = '#669FC3'\r\n      ref2.current[prevDetailsSVG[i]].style.backgroundColor = '#F6F6F6'\r\n    }\r\n  }\r\n}\r\n\r\nexport const dynamicMenu = (ref, selectedValue) => {\r\n  prevMenu[0] = prevMenu[1]\r\n  prevMenu[1] = selectedValue\r\n\r\n  for(let i=0; i<prevMenu.length; i++ ) {\r\n    if(i===0 && ref.current[prevMenu[i]] !== null) \r\n      ref.current[prevMenu[i]].style.borderLeft = 'none'\r\n    else if(ref.current[prevMenu[i]] !== null) \r\n      ref.current[prevMenu[i]].style.borderLeft = '7px solid #669FC3'\r\n  }\r\n}","export const addCommas = (num) => num.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')","import React from 'react'\r\nimport { AppContext } from '../../App'\r\nimport { CountyContext } from '../../views/public/Counties'\r\nimport { openModal } from '../../utils/functions/modal'\r\nimport { closeModal } from '../../utils/functions/modal'\r\nimport ProjectDetailsPanel from '../../layout/public/ProjectDetailsPanel'\r\nimport ModalBanner from './ModalBanner'\r\nimport ModalTable from './ModalTable'\r\n\r\nlet modalCentered = false\r\n\r\nconst Modal = ({props}) => {\r\n\r\n  React.useEffect(() => centerModal())\r\n  \r\n  const {statsValues} = React.useContext(AppContext)\r\n  const {countyFocus, countyModalState} = React.useContext(CountyContext)\r\n  const modalRef = React.useRef()\r\n  const modalCardRef = React.useRef()\r\n\r\n  openModal(countyModalState.openCountyModal, modalRef)\r\n\r\n  const closeAction = () => {\r\n    closeModal(countyModalState.setCountyModalState, modalRef)\r\n  }\r\n\r\n  const centerModal = () => {\r\n    if(statsValues.stats.allProjects[countyFocus.countyInFocus.number] === 0) {\r\n      modalCardRef.current.classList.add('modal__card_centered')\r\n      modalCentered = true\r\n    }\r\n\r\n    if(statsValues.stats.allProjects[countyFocus.countyInFocus.number] !== 0 && modalCentered)\r\n      modalCardRef.current.classList.remove('modal__card_centered')\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className='modal' ref={modalRef}>\r\n        <div className='modal__card card' ref={modalCardRef}>\r\n          <div className='modal__card__header flex'>\r\n            <span>Currently viewing...</span>\r\n            <svg className='close_modal_svg' onClick={closeAction} xmlns=\"http://www.w3.org/2000/svg\" height=\"36px\" viewBox=\"0 0 24 24\" width=\"36px\" fill=\"#000\"><path d=\"M0 0h24v24H0V0z\" fill=\"#FFF\"/><path d=\"M18.3 5.71c-.39-.39-1.02-.39-1.41 0L12 10.59 7.11 5.7c-.39-.39-1.02-.39-1.41 0-.39.39-.39 1.02 0 1.41L10.59 12 5.7 16.89c-.39.39-.39 1.02 0 1.41.39.39 1.02.39 1.41 0L12 13.41l4.89 4.89c.39.39 1.02.39 1.41 0 .39-.39.39-1.02 0-1.41L13.41 12l4.89-4.89c.38-.38.38-1.02 0-1.4z\"/></svg>\r\n          </div>\r\n          <h2>{countyFocus.countyInFocus.name}<em className='card_number_effect_modal'>(0{countyFocus.countyInFocus.number+1})</em></h2>\r\n          <ModalBanner props={props} />\r\n          <ModalTable props={props} />\r\n        </div>\r\n      </div>\r\n      <ProjectDetailsPanel props={props} />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Modal","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { mapDispatchToProps } from '../../store/Action'\r\nimport Map from '../../features/counties/Map'\r\nimport CountiesList from '../../features/counties/Names'\r\nimport Stats from '../../features/counties/Stats'\r\nimport Modal from '../../features/counties/Modal'\r\nimport Footer from '../../layout/Footer'\r\n\r\nexport const CountyContext = React.createContext()\r\n\r\nconst Counties = (props) => {\r\n  \r\n  const resultsRef = React.useRef()\r\n\r\n  const [countyInFocus, setCountyInFocus] = React.useState({name: '', number: -1})\r\n  const countyFocus = {countyInFocus, setCountyInFocus}\r\n\r\n  const [projectInFocus, setProjectInFocus] = React.useState('')\r\n  const projectFocus = {projectInFocus, setProjectInFocus}\r\n\r\n  const [openCountyModal, setCountyModalState] = React.useState(false)\r\n  const countyModalState = {openCountyModal, setCountyModalState}\r\n\r\n  const [projectDetailsPanel, setProjectDetailsPanelStatus] = React.useState(false)\r\n  const projectDetailsPanelState = {projectDetailsPanel, setProjectDetailsPanelStatus}\r\n\r\n  const [searchContent, setSearchContent] = React.useState({selectedInput: '', inputValue: ''})\r\n  const searchState = {searchContent, setSearchContent}\r\n\r\n  const value = {countyFocus, projectFocus, countyModalState, projectDetailsPanelState, searchState, resultsRef}\r\n\r\n  return (\r\n    <>\r\n      <section className='page_section'>\r\n        <h2>County Projects</h2>\r\n        <p>Projects by county. Click on any card to view project summaries  in that county, and <em>[View projects]</em> to see all tracked projects.</p>\r\n      </section>\r\n      <CountyContext.Provider value={value}>\r\n        <div className='counties flex'>\r\n          <Map />\r\n          <CountiesList props={props} />\r\n        </div>\r\n        <Stats props={props} />\r\n        <Modal props={props} />\r\n      </CountyContext.Provider>\r\n      <Footer />\r\n    </>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    countyNo: state.counties.number,\r\n    countyName: state.counties.name,\r\n    governor: state.counties.governor,\r\n    senator: state.counties.senator,\r\n    \r\n    projectID: state.projects.details.projectID,\r\n    projectName: state.projects.details.name,\r\n    description: state.projects.details.description,\r\n    status: state.projects.details.status,\r\n\r\n    approvalDate: state.projects.timelines.approvalDate,\r\n    startDate: state.projects.timelines.startDate,\r\n    endDate: state.projects.timelines.endDate,\r\n    duration: state.projects.timelines.duration,\r\n\r\n    sector: state.projects.implementation.sector,\r\n    ministry: state.projects.implementation.ministry,\r\n    agency: state.projects.implementation.agency,\r\n    contractor: state.projects.implementation.contractor,\r\n    contacts: state.projects.implementation.contacts,\r\n    priority: state.projects.implementation.priority,\r\n\r\n    estimatedCost: state.projects.finances.estimatedCost,\r\n    budget: state.projects.finances.budget,\r\n    financialYear: state.projects.finances.financialYear,\r\n    fundingSource: state.projects.finances.fundingSource,\r\n\r\n    locCountyNo: state.projects.locations.countyNo,\r\n    subCounty: state.projects.locations.subCounty,\r\n    constituency: state.projects.locations.constituency,\r\n    ward: state.projects.locations.ward\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Counties)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { mapDispatchToProps } from '../../store/Action'\r\n\r\nconst Updates = (props) => {\r\n\r\n  const [searchContent, setSearchContent] = React.useState({state: false, selectedInput: 'projectID', inputValue: ''})\r\n  let filterArray, logList\r\n\r\n  let currentDate = new Date()\r\n  let year = currentDate.getFullYear()\r\n  let month = currentDate.getMonth()+1\r\n  let date = currentDate.getDate()\r\n  let hours = currentDate.getHours()\r\n  let minutes = currentDate.getMinutes()\r\n\r\n  if(month < 10) month = '0' + month\r\n  if(hours < 10) hours = '0' + hours\r\n  if(minutes < 10) minutes = '0' + minutes\r\n\r\n  if(searchContent.selectedInput === 'projectID') filterArray = props.projectID\r\n  else if(searchContent.selectedInput === 'logDate') filterArray = props.logDate\r\n  else if(searchContent.selectedInput === 'logAction') filterArray = props.logAction\r\n\r\n  logList = props.projectID.map((item, index) => index)\r\n  .filter((index) =>\r\n    filterArray[index].toLowerCase()[searchContent.inputValue.length-1] === searchContent.inputValue.toLowerCase()[searchContent.inputValue.length-1]\r\n    && filterArray[index].toLowerCase()[searchContent.inputValue.length-2] === searchContent.inputValue.toLowerCase()[searchContent.inputValue.length-2]\r\n    && filterArray[index].toLowerCase()[searchContent.inputValue.length-3] === searchContent.inputValue.toLowerCase()[searchContent.inputValue.length-3]\r\n  )\r\n  // eslint-disable-next-line\r\n  .map((index) => {\r\n    if(props.logAction[index] === 'update')\r\n      if(props.valueFrom[index] === '\"\"' || props.valueFrom[index] === '\"0\"')\r\n        return (\r\n          <li className='card card_sm' key={index}>\r\n            <span><em>Project ID: {props.projectID[index]}</em></span>\r\n            <span>Date: {props.logDate[index]}</span>\r\n            <span>({props.logAction[index].toUpperCase()}) Project {props.field[index].replaceAll('\"', '')} added: <em>{props.valueTo[index]}</em></span>\r\n          </li>\r\n        )\r\n      else\r\n        return (\r\n          <li className='card card_sm' key={index}>\r\n            <span><em>Project ID: {props.projectID[index]}</em></span>\r\n            <span>Date: {props.logDate[index]}</span>\r\n            <span>({props.logAction[index].toUpperCase()}) Project {props.field[index].replaceAll('\"', '')} changed from <em>{props.valueFrom[index]}</em> to <em>{props.valueTo[index]}</em></span>\r\n          </li>\r\n        ) \r\n    else if(props.logAction[index] === 'create')\r\n      return (\r\n        <li className='card card_sm' key={index}>\r\n          <span><em>Project ID: {props.projectID[index]}</em></span>\r\n          <span>Date: {props.logDate[index]}</span>\r\n          <span>({props.logAction[index].toUpperCase()}) Project added.</span>\r\n        </li>\r\n      )\r\n    else if(props.logAction[index] === 'delete')\r\n      return (\r\n        <li className='card card_sm' key={index}>\r\n          <span><em>Project ID: {props.projectID[index]}</em></span>\r\n          <span>Date: {props.logDate[index]}</span>\r\n          <span>({props.logAction[index].toUpperCase()}) Project removed.</span>\r\n        </li>\r\n      )\r\n  })\r\n\r\n  const handleInputChange = (e) => setSearchContent({...searchContent, state: true, inputValue: e.target.value})\r\n  const handleSelectChange = (e) => setSearchContent({...searchContent, state: true, selectedInput: e.target.value})\r\n\r\n  return (\r\n    <>\r\n      <section className='page_section'>\r\n        <h2>Project updates</h2>\r\n        <p>View changes to tracked projects here. Last updated at {hours}:{minutes}, {date}/{month}/{year}</p>\r\n      </section>\r\n      <div className='page_section__input flex'>\r\n        <input type='search' name='inputValue' placeholder='Search:' onChange={handleInputChange} autoComplete='off' />\r\n        <select name='selectedInput' onChange={handleSelectChange} >\r\n          <option value='projectID'>Project ID</option>\r\n          <option value='logDate'>Date</option>\r\n          <option value='logAction'>Action</option>\r\n        </select>\r\n      </div>\r\n      <ul className='updates flex'>{logList}</ul>\r\n    </>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    logDate: state.tracking.date,\r\n    projectID: state.tracking.projectID,\r\n    field: state.tracking.field,\r\n    logAction: state.tracking.action,\r\n    valueFrom: state.tracking.valueFrom,\r\n    valueTo: state.tracking.valueTo\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Updates)","const About = () => {\r\n  return (\r\n    <>\r\n      <section className='page_section'>\r\n        <h2>About:</h2>\r\n      </section>\r\n      <p className='about'>This project is submitted to the School of Science and Technology (USIU-Africa) in partial fulfillment of the requirements for the degree of Bachelor of Science in Applied Computer Technology (APT). <br/> <em>Andrew G. Kagotho</em>, © 2022. All rights reserved. </p>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default About","import axios from 'axios'\r\n\r\nlet getAdminsScript = 'http://localhost/development-project-tracker/src/utils/php/select/getAdmins.php'\r\n\r\nexport const getAdmins = (props) => {\r\n  props.resetAdmins()\r\n  axios.get(getAdminsScript)\r\n  .then((response) => {\r\n    let resArray = response.data\r\n    let recordIndex = 0\r\n    while(recordIndex < resArray.length) {\r\n      props.addAdmins(\r\n        resArray[recordIndex].username,\r\n        resArray[recordIndex]['first name'],\r\n        resArray[recordIndex]['last name'],\r\n        resArray[recordIndex].email\r\n      )\r\n      recordIndex++\r\n    }\r\n  },((error) => console.log(error)))\r\n}","export const projectObject = {\r\n  recordIndex: '',\r\n  projectID: '',\r\n  name: '',\r\n  description: '',\r\n  status: '',\r\n  approvalDate: '',\r\n  startDate: '',\r\n  endDate: '',\r\n  duration: '',\r\n  sector: '',\r\n  ministry: '',\r\n  agency: '',\r\n  contractor: '',\r\n  priority: '',\r\n  estimatedCost: '',\r\n  budget: '',\r\n  financialYear: '',\r\n  fundingSource: '',\r\n  countyNo: '',\r\n  subCounty: '',\r\n  constituency: '',\r\n  ward: ''\r\n}\r\n\r\nexport const countyObject = {\r\n  recordIndex: '',\r\n  governor: '',\r\n  senator: ''\r\n}\r\n\r\nexport const adminObject = {\r\n  recordIndex: '',\r\n  adminUsername: '',\r\n  adminFirstName: '',\r\n  adminLastName: '',\r\n  adminPassword: '',\r\n  adminEmail: ''\r\n}","import { showMoreOptions } from './AdminTable'\r\nimport { showOtherSidePanel } from './AdminTable'\r\n\r\nexport const countyTableHead = () => {\r\n  return (\r\n    <tr>\r\n      <th>County No</th>\r\n      <th>Name</th>\r\n      <th>Governor</th>\r\n      <th colSpan='2'>Senator</th>\r\n    </tr>\r\n  )\r\n}\r\n\r\nlet prevInput = [0,0]\r\n\r\nexport const countyTableSearch = (searchState, inputRef) => {\r\n\r\n  const handleChange = (e, index) => {\r\n    prevInput[0] = prevInput[1]\r\n    prevInput[1] = index\r\n    if(prevInput[0] !== prevInput[1]) inputRef.current[prevInput[0]].value = ''\r\n    searchState.setSearchContent({selectedInput: e.target.name, inputValue: e.target.value})\r\n  }\r\n  \r\n  return (\r\n    <tr className='tr_search'>\r\n      <td><input type='search' name='countyNo' ref={(item) => inputRef.current[0] = item} placeholder='Search:' onChange={(e) => handleChange(e, 0)} autoComplete='off' /></td>\r\n      <td><input type='search' name='countyName' ref={(item) => inputRef.current[1] = item} placeholder='Search:' onChange={(e) => handleChange(e, 1)} autoComplete='off' /></td>\r\n      <td><input type='search' name='governor' ref={(item) => inputRef.current[2] = item} placeholder='Search:' onChange={(e) => handleChange(e, 2)} autoComplete='off' /></td>\r\n      <td><input type='search' name='senator' ref={(item) => inputRef.current[3] = item} placeholder='Search:' onChange={(e) => handleChange(e, 3)} autoComplete='off' /></td>\r\n    </tr>\r\n  )\r\n}\r\n\r\nexport const countyTableRows = (otherInfoStates, projectInfoVars) => {\r\n  let {props, tableFocus, countyFocus, adminFocus, searchState, updateOtherPanelState} = otherInfoStates\r\n  let {trRef, moreOptionsSVGRef, moreOptionsRef, firstPageIndex} = projectInfoVars\r\n  let filterArray\r\n\r\n  if(searchState.searchContent.selectedInput === 'countyNo' || searchState.searchContent.selectedInput === '') filterArray = props.countyNo\r\n  else if(searchState.searchContent.selectedInput === 'countyName') filterArray = props.countyName\r\n  else if(searchState.searchContent.selectedInput === 'governor') filterArray = props.governor\r\n  else if(searchState.searchContent.selectedInput === 'senator') filterArray = props.senator\r\n\r\n  return (\r\n    props.countyNo.map((item, index) => index)\r\n    .filter((index) => {\r\n      const truthTests\r\n      = filterArray[index].toLowerCase()[searchState.searchContent.inputValue.length-1] === searchState.searchContent.inputValue.toLowerCase()[searchState.searchContent.inputValue.length-1]\r\n      && filterArray[index].toLowerCase()[searchState.searchContent.inputValue.length-2] === searchState.searchContent.inputValue.toLowerCase()[searchState.searchContent.inputValue.length-2]\r\n      && filterArray[index].toLowerCase()[searchState.searchContent.inputValue.length-3] === searchState.searchContent.inputValue.toLowerCase()[searchState.searchContent.inputValue.length-3]\r\n\r\n      return (truthTests)\r\n    })\r\n    // eslint-disable-next-line\r\n    .map((index, num) => {\r\n      while(num >= firstPageIndex && num < firstPageIndex+10) {\r\n        return (\r\n          <tr key={index} ref={(item) => trRef.current[index] = item}>\r\n            <td>{props.countyNo[index]}</td>\r\n            <td>{props.countyName[index]}</td>\r\n            <td>{props.governor[index]}</td>\r\n            <td>{props.senator[index]}</td>\r\n            <td className='td_more_options'>\r\n              <div>\r\n                <svg className='more_options_svg' onClick={() => showMoreOptions(trRef, moreOptionsSVGRef, moreOptionsRef, index)} ref={(item) => moreOptionsSVGRef.current[index] = item} xmlns=\"http://www.w3.org/2000/svg\" height=\"36px\" viewBox=\"0 0 24 24\" width=\"36px\" fill=\"#000000\"><path d=\"M0 0h24v24H0V0z\" fill=\"none\"/><path d=\"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"/></svg>\r\n                <div className='td_more_options_expand' ref={(item) => moreOptionsRef.current[index] = item}>\r\n                  <button onClick={() => showOtherSidePanel(props, tableFocus, index, updateOtherPanelState, countyFocus, adminFocus)}>Update</button>\r\n                </div>\r\n              </div>\r\n            </td>\r\n          </tr>\r\n        )\r\n      }\r\n    })\r\n  )\r\n}","import { showMoreOptions } from './AdminTable'\r\nimport { showSidePanel } from './AdminTable'\r\nimport { showDeleteModal } from './AdminTable'\r\n\r\nexport const projectsTableHead = () => {\r\n  return (\r\n    <tr>\r\n      <th>Project ID</th>\r\n      <th>Name</th>\r\n      <th>Description</th>\r\n      <th colSpan='2'>Status</th>\r\n    </tr>\r\n  )\r\n}\r\n\r\nlet prevInput = [0,0]\r\n\r\nexport const projectsTableSearch = (searchState, inputRef) => {\r\n\r\n  const handleChange = (e, index) => {\r\n    prevInput[0] = prevInput[1]\r\n    prevInput[1] = index\r\n    if(prevInput[0] !== prevInput[1]) inputRef.current[prevInput[0]].value = ''\r\n    searchState.setSearchContent({selectedInput: e.target.name, inputValue: e.target.value})\r\n  }\r\n  \r\n  return (\r\n    <tr className='tr_search'>\r\n      <td><input type='search' name='projectID' ref={(item) => inputRef.current[0] = item} placeholder='Search:' onChange={(e) => handleChange(e, 0)} autoComplete='off' /></td>\r\n      <td><input type='search' name='projectName' ref={(item) => inputRef.current[1] = item} placeholder='Search:' onChange={(e) => handleChange(e, 1)} autoComplete='off' /></td>\r\n      <td><input type='search' name='description' ref={(item) => inputRef.current[2] = item} placeholder='Search:' onChange={(e) => handleChange(e, 2)} autoComplete='off' /></td>\r\n      <td><input type='search' name='status' ref={(item) => inputRef.current[3] = item} placeholder='Search:' onChange={(e) => handleChange(e, 3)} autoComplete='off' /></td>\r\n    </tr>\r\n  )\r\n}\r\n\r\nexport const projectsTableRows = (projectInfoStates, projectInfoVars) => {\r\n  let {props, tableFocus, recordFocus, searchState, updateProjectPanelState, deleteProjectModalState, trackingValues} = projectInfoStates\r\n  let {trRef, moreOptionsSVGRef, moreOptionsRef, firstPageIndex} = projectInfoVars\r\n  let filterArray\r\n\r\n  if(searchState.searchContent.selectedInput === 'projectID' || searchState.searchContent.selectedInput === '') filterArray = props.projectID\r\n  else if(searchState.searchContent.selectedInput === 'projectName') filterArray = props.projectName\r\n  else if(searchState.searchContent.selectedInput === 'description') filterArray = props.description\r\n  else if(searchState.searchContent.selectedInput === 'status') filterArray = props.status\r\n\r\n  return (\r\n    props.projectID.map((item, index) => index)\r\n    .filter((index) => {\r\n      const truthTests\r\n      = filterArray[index].toLowerCase()[searchState.searchContent.inputValue.length-1] === searchState.searchContent.inputValue.toLowerCase()[searchState.searchContent.inputValue.length-1]\r\n      && filterArray[index].toLowerCase()[searchState.searchContent.inputValue.length-2] === searchState.searchContent.inputValue.toLowerCase()[searchState.searchContent.inputValue.length-2]\r\n      && filterArray[index].toLowerCase()[searchState.searchContent.inputValue.length-3] === searchState.searchContent.inputValue.toLowerCase()[searchState.searchContent.inputValue.length-3]\r\n\r\n      return (truthTests)\r\n    })\r\n    // eslint-disable-next-line\r\n    .map((index, number) => {\r\n      while(number >= firstPageIndex && number < firstPageIndex+10) {\r\n        return (\r\n          <tr key={number + searchState.searchContent.inputValue} ref={(item) => trRef.current[number] = item}>\r\n            <td>{number+1}. {props.projectID[index]}</td>\r\n            <td>{props.projectName[index]}</td>\r\n            <td>{props.description[index]}</td>\r\n            <td>{props.status[index]}</td>\r\n            <td className='td_more_options'>\r\n              <svg className='more_options_svg' onClick={() => showMoreOptions(trRef, moreOptionsSVGRef, moreOptionsRef, number)} ref={(item) => moreOptionsSVGRef.current[number] = item} xmlns=\"http://www.w3.org/2000/svg\" height=\"36px\" viewBox=\"0 0 24 24\" width=\"36px\" fill=\"#000000\"><path d=\"M0 0h24v24H0V0z\" fill=\"none\"/><path d=\"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"/></svg>\r\n              <div className='td_more_options_expand mul_options flex' ref={(item) => moreOptionsRef.current[number] = item}>\r\n                <button onClick={() => showSidePanel(props, tableFocus, index, updateProjectPanelState, recordFocus, trackingValues)}>Update</button>\r\n                <button onClick={() => showDeleteModal(props, index, deleteProjectModalState, recordFocus, trackingValues)}>Delete</button>\r\n              </div>\r\n            </td>\r\n          </tr>\r\n        )\r\n      }\r\n    })\r\n  )\r\n}","import { showMoreOptions } from './AdminTable'\r\nimport { showSidePanel } from './AdminTable'\r\n\r\nexport const timelinesTableHead = () => {\r\n  return (\r\n    <tr>\r\n      <th>Project ID</th>\r\n      <th>Approval date</th>\r\n      <th>Start date</th>\r\n      <th>End date</th>\r\n      <th colSpan='2'>Duration</th>\r\n    </tr>\r\n  )\r\n}\r\n\r\nlet prevInput = [0,0]\r\n\r\nexport const timelinesTableSearch = (searchState, inputRef) => {\r\n\r\n  const handleChange = (e, index) => {\r\n    prevInput[0] = prevInput[1]\r\n    prevInput[1] = index\r\n    if(prevInput[0] !== prevInput[1]) inputRef.current[prevInput[0]].value = ''\r\n    searchState.setSearchContent({state: true, selectedInput: e.target.name, inputValue: e.target.value})\r\n  }\r\n  \r\n  return (\r\n    <tr className='tr_search'>\r\n      <td><input type='search' name='timeProjectID' ref={(item) => inputRef.current[0] = item} placeholder='Search:' onChange={(e) => handleChange(e, 0)} autoComplete='off' /></td>\r\n      <td><input type='search' name='approvalDate' ref={(item) => inputRef.current[1] = item} placeholder='Search:' onChange={(e) => handleChange(e, 1)} autoComplete='off' /></td>\r\n      <td><input type='search' name='startDate' ref={(item) => inputRef.current[2] = item} placeholder='Search:' onChange={(e) => handleChange(e, 2)} autoComplete='off' /></td>\r\n      <td><input type='search' name='endDate' ref={(item) => inputRef.current[3] = item} placeholder='Search:' onChange={(e) => handleChange(e, 3)} autoComplete='off' /></td>\r\n      <td><input type='search' name='duration' ref={(item) => inputRef.current[4] = item} placeholder='Search:' onChange={(e) => handleChange(e, 4)} autoComplete='off' /></td>\r\n    </tr>\r\n  )\r\n}\r\n\r\nexport const timelinesTableRows = (projectInfoStates, projectInfoVars) => {\r\n  let {props, tableFocus, recordFocus, searchState, updateProjectPanelState, trackingValues} = projectInfoStates\r\n  let {trRef, moreOptionsSVGRef, moreOptionsRef, firstPageIndex} = projectInfoVars\r\n  let filterArray\r\n\r\n  if(searchState.searchContent.selectedInput === 'timeProjectID' || searchState.searchContent.selectedInput === '') filterArray = props.timeProjectID\r\n  else if(searchState.searchContent.selectedInput === 'approvalDate') filterArray = props.approvalDate\r\n  else if(searchState.searchContent.selectedInput === 'startDate') filterArray = props.startDate\r\n  else if(searchState.searchContent.selectedInput === 'endDate') filterArray = props.endDate\r\n  else if(searchState.searchContent.selectedInput === 'duration') filterArray = props.duration\r\n\r\n  return (\r\n    props.timeProjectID.map((item, index) => index)\r\n    .filter((index) => {\r\n      const truthTests\r\n      = filterArray[index].toLowerCase()[searchState.searchContent.inputValue.length-1] === searchState.searchContent.inputValue.toLowerCase()[searchState.searchContent.inputValue.length-1]\r\n      && filterArray[index].toLowerCase()[searchState.searchContent.inputValue.length-2] === searchState.searchContent.inputValue.toLowerCase()[searchState.searchContent.inputValue.length-2]\r\n      && filterArray[index].toLowerCase()[searchState.searchContent.inputValue.length-3] === searchState.searchContent.inputValue.toLowerCase()[searchState.searchContent.inputValue.length-3]\r\n\r\n      return (truthTests)\r\n    })\r\n    // eslint-disable-next-line\r\n    .map((index, number) => {\r\n      while(number >= firstPageIndex && number < firstPageIndex+10) {\r\n        return (\r\n          <tr key={number + searchState.searchContent.inputValue} ref={(item) => trRef.current[number] = item}>\r\n            <td>{number+1}. {props.timeProjectID[index]}</td>\r\n            <td>{props.approvalDate[index]}</td>\r\n            <td>{props.startDate[index]}</td>\r\n            <td>{props.endDate[index]}</td>\r\n            <td>{props.duration[index]} months</td>\r\n            <td className='td_more_options'>\r\n              <svg className='more_options_svg' onClick={() => showMoreOptions(trRef, moreOptionsSVGRef, moreOptionsRef, number)} ref={(item) => moreOptionsSVGRef.current[number] = item} xmlns=\"http://www.w3.org/2000/svg\" height=\"36px\" viewBox=\"0 0 24 24\" width=\"36px\" fill=\"#000000\"><path d=\"M0 0h24v24H0V0z\" fill=\"none\"/><path d=\"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"/></svg>\r\n              <div className='td_more_options_expand mul_options flex' ref={(item) => moreOptionsRef.current[number] = item}>\r\n                <button onClick={() => showSidePanel(props, tableFocus, index, updateProjectPanelState, recordFocus, trackingValues)}>Update</button>\r\n              </div>\r\n            </td>\r\n          </tr>\r\n        )\r\n      }\r\n    })\r\n  )\r\n}","import { showMoreOptions } from './AdminTable'\r\nimport { showSidePanel } from './AdminTable'\r\n\r\nexport const implementationsTableHead = () => {\r\n  return (\r\n    <tr>\r\n      <th>Project ID</th>\r\n      <th>Sector</th>\r\n      <th>Ministry</th>\r\n      <th>Implementing agency</th>\r\n      <th>Contractor</th>\r\n      <th colSpan='2'>Priority</th>\r\n    </tr>\r\n  )\r\n}\r\n\r\nlet prevInput = [0,0]\r\n\r\nexport const implementationsTableSearch = (searchState, inputRef) => {\r\n\r\n  const handleChange = (e, index) => {\r\n    prevInput[0] = prevInput[1]\r\n    prevInput[1] = index\r\n    if(prevInput[0] !== prevInput[1]) inputRef.current[prevInput[0]].value = ''\r\n    searchState.setSearchContent({state: true, selectedInput: e.target.name, inputValue: e.target.value})\r\n  }\r\n  \r\n  return (\r\n    <tr className='tr_search'>\r\n      <td><input type='search' name='impProjectID' ref={(item) => inputRef.current[0] = item} placeholder='Search:' onChange={(e) => handleChange(e, 0)} autoComplete='off' /></td>\r\n      <td><input type='search' name='sector' ref={(item) => inputRef.current[1] = item} placeholder='Search:' onChange={(e) => handleChange(e, 1)} autoComplete='off' /></td>\r\n      <td><input type='search' name='ministry' ref={(item) => inputRef.current[2] = item} placeholder='Search:' onChange={(e) => handleChange(e, 2)} autoComplete='off' /></td>\r\n      <td><input type='search' name='agency' ref={(item) => inputRef.current[3] = item} placeholder='Search:' onChange={(e) => handleChange(e, 3)} autoComplete='off' /></td>\r\n      <td><input type='search' name='contractor' ref={(item) => inputRef.current[4] = item} placeholder='Search:' onChange={(e) => handleChange(e, 4)} autoComplete='off' /></td>\r\n      <td><input type='search' name='priority' ref={(item) => inputRef.current[5] = item} placeholder='Search:' onChange={(e) => handleChange(e, 5)} autoComplete='off' /></td>\r\n    </tr>\r\n  )\r\n}\r\n\r\nexport const implementationsTableRows = (projectInfoStates, projectInfoVars) => {\r\n  let {props, tableFocus, recordFocus, searchState, updateProjectPanelState, trackingValues} = projectInfoStates\r\n  let {trRef, moreOptionsSVGRef, moreOptionsRef, firstPageIndex} = projectInfoVars\r\n  let filterArray\r\n\r\n  if(searchState.searchContent.selectedInput === 'impProjectID' || searchState.searchContent.selectedInput === '') filterArray = props.impProjectID\r\n  else if(searchState.searchContent.selectedInput === 'sector') filterArray = props.sector\r\n  else if(searchState.searchContent.selectedInput === 'ministry') filterArray = props.ministry\r\n  else if(searchState.searchContent.selectedInput === 'agency') filterArray = props.agency\r\n  else if(searchState.searchContent.selectedInput === 'contractor') filterArray = props.contractor\r\n  else if(searchState.searchContent.selectedInput === 'priority') filterArray = props.priority\r\n\r\n  return (\r\n    props.impProjectID.map((item, index) => index)\r\n    .filter((index) => {\r\n      const truthTests\r\n      = filterArray[index].toLowerCase()[searchState.searchContent.inputValue.length-1] === searchState.searchContent.inputValue.toLowerCase()[searchState.searchContent.inputValue.length-1]\r\n      && filterArray[index].toLowerCase()[searchState.searchContent.inputValue.length-2] === searchState.searchContent.inputValue.toLowerCase()[searchState.searchContent.inputValue.length-2]\r\n      && filterArray[index].toLowerCase()[searchState.searchContent.inputValue.length-3] === searchState.searchContent.inputValue.toLowerCase()[searchState.searchContent.inputValue.length-3]\r\n\r\n      return (truthTests)\r\n    })\r\n    // eslint-disable-next-line\r\n    .map((index, number) => {\r\n      while(number >= firstPageIndex && number < firstPageIndex+10) {\r\n        return (\r\n          <tr key={number + searchState.searchContent.inputValue} ref={(item) => trRef.current[number] = item}>\r\n            <td>{number+1}. {props.impProjectID[index]}</td>\r\n            <td>{props.sector[index]}</td>\r\n            <td>{props.ministry[index]}</td>\r\n            <td>{props.agency[index]}</td>\r\n            <td>{props.contractor[index]}</td>\r\n            <td>{props.priority[index]}</td>\r\n            <td className='td_more_options'>\r\n              <svg className='more_options_svg' onClick={() => showMoreOptions(trRef, moreOptionsSVGRef, moreOptionsRef, number)} ref={(item) => moreOptionsSVGRef.current[number] = item} xmlns=\"http://www.w3.org/2000/svg\" height=\"36px\" viewBox=\"0 0 24 24\" width=\"36px\" fill=\"#000000\"><path d=\"M0 0h24v24H0V0z\" fill=\"none\"/><path d=\"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"/></svg>\r\n              <div className='td_more_options_expand mul_options flex' ref={(item) => moreOptionsRef.current[number] = item}>\r\n                <button onClick={() => showSidePanel(props, tableFocus, index, updateProjectPanelState, recordFocus, trackingValues)}>Update</button>\r\n              </div>\r\n            </td>\r\n          </tr>\r\n        )\r\n      }\r\n    })\r\n  )\r\n}","import { showMoreOptions } from './AdminTable'\r\nimport { showSidePanel } from './AdminTable'\r\n\r\nexport const financesTableHead = () => {\r\n  return (\r\n    <tr>\r\n      <th>Project ID</th>\r\n      <th>Estimated cost</th>\r\n      <th>Budget</th>\r\n      <th>Financial year</th>\r\n      <th colSpan='2'>Funding source</th>\r\n    </tr>\r\n  )\r\n}\r\n\r\nlet prevInput = [0,0]\r\n\r\nexport const financesTableSearch = (searchState, inputRef) => {\r\n\r\n  const handleChange = (e, index) => {\r\n    prevInput[0] = prevInput[1]\r\n    prevInput[1] = index\r\n    if(prevInput[0] !== prevInput[1]) inputRef.current[prevInput[0]].value = ''\r\n    searchState.setSearchContent({state: true, selectedInput: e.target.name, inputValue: e.target.value})\r\n  }\r\n  \r\n  return (\r\n    <tr className='tr_search'>\r\n      <td><input type='search' name='finProjectID' ref={(item) => inputRef.current[0] = item} placeholder='Search:' onChange={(e) => handleChange(e, 0)} autoComplete='off' /></td>\r\n      <td><input type='search' name='estimatedCost' ref={(item) => inputRef.current[1] = item} placeholder='Search:' onChange={(e) => handleChange(e, 1)} autoComplete='off' /></td>\r\n      <td><input type='search' name='budget' ref={(item) => inputRef.current[2] = item} placeholder='Search:' onChange={(e) => handleChange(e, 2)} autoComplete='off' /></td>\r\n      <td><input type='search' name='financialYear' ref={(item) => inputRef.current[3] = item} placeholder='Search:' onChange={(e) => handleChange(e, 3)} autoComplete='off' /></td>\r\n      <td><input type='search' name='fundingSource' ref={(item) => inputRef.current[4] = item} placeholder='Search:' onChange={(e) => handleChange(e, 4)} autoComplete='off' /></td>\r\n    </tr>\r\n  )\r\n}\r\n\r\nexport const financesTableRows = (projectInfoStates, projectInfoVars) => {\r\n  let {props, tableFocus, recordFocus, searchState, updateProjectPanelState, trackingValues} = projectInfoStates\r\n  let {trRef, moreOptionsSVGRef, moreOptionsRef, firstPageIndex} = projectInfoVars\r\n  let filterArray\r\n\r\n  if(searchState.searchContent.selectedInput === 'finProjectID' || searchState.searchContent.selectedInput === '') filterArray = props.finProjectID\r\n  else if(searchState.searchContent.selectedInput === 'estimatedCost') filterArray = props.estimatedCost\r\n  else if(searchState.searchContent.selectedInput === 'budget') filterArray = props.budget\r\n  else if(searchState.searchContent.selectedInput === 'financialYear') filterArray = props.financialYear\r\n  else if(searchState.searchContent.selectedInput === 'fundingSource') filterArray = props.fundingSource\r\n\r\n  return (\r\n    props.finProjectID.map((item, index) => index)\r\n    .filter((index) => {\r\n      const truthTests\r\n      = filterArray[index].toLowerCase()[searchState.searchContent.inputValue.length-1] === searchState.searchContent.inputValue.toLowerCase()[searchState.searchContent.inputValue.length-1]\r\n      && filterArray[index].toLowerCase()[searchState.searchContent.inputValue.length-2] === searchState.searchContent.inputValue.toLowerCase()[searchState.searchContent.inputValue.length-2]\r\n      && filterArray[index].toLowerCase()[searchState.searchContent.inputValue.length-3] === searchState.searchContent.inputValue.toLowerCase()[searchState.searchContent.inputValue.length-3]\r\n\r\n      return (truthTests)\r\n    })\r\n    // eslint-disable-next-line\r\n    .map((index, number) => {\r\n      while(number >= firstPageIndex && number < firstPageIndex+10) {\r\n        return (\r\n          <tr key={number + searchState.searchContent.inputValue} ref={(item) => trRef.current[number] = item}>\r\n            <td>{number+1}. {props.finProjectID[index]}</td>\r\n            <td>{props.estimatedCost[index]}</td>\r\n            <td>{props.budget[index]}</td>\r\n            <td>{props.financialYear[index]}</td>\r\n            <td>{props.fundingSource[index]}</td>\r\n            <td className='td_more_options'>\r\n              <svg className='more_options_svg' onClick={() => showMoreOptions(trRef, moreOptionsSVGRef, moreOptionsRef, number)} ref={(item) => moreOptionsSVGRef.current[number] = item} xmlns=\"http://www.w3.org/2000/svg\" height=\"36px\" viewBox=\"0 0 24 24\" width=\"36px\" fill=\"#000000\"><path d=\"M0 0h24v24H0V0z\" fill=\"none\"/><path d=\"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"/></svg>\r\n              <div className='td_more_options_expand mul_options flex' ref={(item) => moreOptionsRef.current[number] = item}>\r\n                <button onClick={() => showSidePanel(props, tableFocus, index, updateProjectPanelState, recordFocus, trackingValues)}>Update</button>\r\n              </div>\r\n            </td>\r\n          </tr>\r\n        )\r\n      }\r\n    })\r\n  )\r\n}","import { showMoreOptions } from './AdminTable'\r\nimport { showSidePanel } from './AdminTable'\r\n\r\nexport const locationsTableHead = () => {\r\n  return (\r\n    <tr>\r\n      <th>Project ID</th>\r\n      <th>County No</th>\r\n      <th>Sub-county</th>\r\n      <th>Constituency</th>\r\n      <th colSpan='2'>Ward</th>\r\n    </tr>\r\n  )\r\n}\r\n\r\nlet prevInput = [0,0]\r\n\r\nexport const locationsTableSearch = (searchState, inputRef) => {\r\n\r\n  const handleChange = (e, index) => {\r\n    prevInput[0] = prevInput[1]\r\n    prevInput[1] = index\r\n    if(prevInput[0] !== prevInput[1]) inputRef.current[prevInput[0]].value = ''\r\n    searchState.setSearchContent({selectedInput: e.target.name, inputValue: e.target.value})\r\n  }\r\n  \r\n  return (\r\n    <tr className='tr_search'>\r\n      <td><input type='search' name='locProjectID' ref={(item) => inputRef.current[0] = item} placeholder='Search:' onChange={(e) => handleChange(e, 0)} autoComplete='off' /></td>\r\n      <td><input type='search' name='locCountyNo' ref={(item) => inputRef.current[1] = item} placeholder='Search:' onChange={(e) => handleChange(e, 1)} autoComplete='off' /></td>\r\n      <td><input type='search' name='subCounty' ref={(item) => inputRef.current[2] = item} placeholder='Search:' onChange={(e) => handleChange(e, 2)} autoComplete='off' /></td>\r\n      <td><input type='search' name='constituency' ref={(item) => inputRef.current[3] = item} placeholder='Search:' onChange={(e) => handleChange(e, 3)} autoComplete='off' /></td>\r\n      <td><input type='search' name='ward' ref={(item) => inputRef.current[4] = item} placeholder='Search:' onChange={(e) => handleChange(e, 4)} autoComplete='off' /></td>\r\n    </tr>\r\n  )\r\n}\r\n\r\nexport const locationsTableRows = (projectInfoStates, projectInfoVars) => {\r\n  let {props, tableFocus, recordFocus, searchState, updateProjectPanelState, trackingValues} = projectInfoStates\r\n  let {trRef, moreOptionsSVGRef, moreOptionsRef, firstPageIndex} = projectInfoVars\r\n  let filterArray\r\n\r\n  if(searchState.searchContent.selectedInput === 'locProjectID' || searchState.searchContent.selectedInput === '') filterArray = props.locProjectID\r\n  else if(searchState.searchContent.selectedInput === 'locCountyNo') filterArray = props.locCountyNo\r\n  else if(searchState.searchContent.selectedInput === 'subCounty') filterArray = props.subCounty\r\n  else if(searchState.searchContent.selectedInput === 'constituency') filterArray = props.constituency\r\n  else if(searchState.searchContent.selectedInput === 'ward') filterArray = props.ward\r\n\r\n  return (\r\n    props.locProjectID.map((item, index) => index)\r\n    .filter((index) => {\r\n      const truthTests\r\n      = filterArray[index].toLowerCase()[searchState.searchContent.inputValue.length-1] === searchState.searchContent.inputValue.toLowerCase()[searchState.searchContent.inputValue.length-1]\r\n      && filterArray[index].toLowerCase()[searchState.searchContent.inputValue.length-2] === searchState.searchContent.inputValue.toLowerCase()[searchState.searchContent.inputValue.length-2]\r\n      && filterArray[index].toLowerCase()[searchState.searchContent.inputValue.length-3] === searchState.searchContent.inputValue.toLowerCase()[searchState.searchContent.inputValue.length-3]\r\n\r\n      return (truthTests)\r\n    })\r\n    // eslint-disable-next-line\r\n    .map((index, number) => {\r\n      while(number >= firstPageIndex && number < firstPageIndex+10) {\r\n        return (\r\n          <tr key={number + searchState.searchContent.inputValue} ref={(item) => trRef.current[number] = item}>\r\n            <td>{number+1}. {props.locProjectID[index]}</td>\r\n            <td>{props.locCountyNo[index]}</td>\r\n            <td>{props.subCounty[index]}</td>\r\n            <td>{props.constituency[index]}</td>\r\n            <td>{props.ward[index]}</td>\r\n            <td className='td_more_options'>\r\n              <svg className='more_options_svg' onClick={() => showMoreOptions(trRef, moreOptionsSVGRef, moreOptionsRef, number)} ref={(item) => moreOptionsSVGRef.current[number] = item} xmlns=\"http://www.w3.org/2000/svg\" height=\"36px\" viewBox=\"0 0 24 24\" width=\"36px\" fill=\"#000000\"><path d=\"M0 0h24v24H0V0z\" fill=\"none\"/><path d=\"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"/></svg>\r\n              <div className='td_more_options_expand mul_options flex' ref={(item) => moreOptionsRef.current[number] = item}>\r\n                <button onClick={() => showSidePanel(props, tableFocus, index, updateProjectPanelState, recordFocus, trackingValues)}>Update</button>\r\n              </div>\r\n            </td>\r\n          </tr>\r\n        )\r\n      }\r\n    })\r\n  )\r\n}","export const trackingLogsTableHead = () => {\r\n  return (\r\n    <tr>\r\n      <th>Date</th>\r\n      <th>Project ID</th>\r\n      <th>Field</th>\r\n      <th>Action</th>\r\n      <th>Value from</th>\r\n      <th>Value to</th>\r\n    </tr>\r\n  )\r\n}\r\n\r\nlet prevInput = [0,0]\r\n\r\nexport const trackingLogsTableSearch = (searchState, inputRef) => {\r\n\r\n  const handleChange = (e, index) => {\r\n    prevInput[0] = prevInput[1]\r\n    prevInput[1] = index\r\n    if(prevInput[0] !== prevInput[1]) inputRef.current[prevInput[0]].value = ''\r\n    searchState.setSearchContent({selectedInput: e.target.name, inputValue: e.target.value})\r\n  }\r\n  \r\n  return (\r\n    <tr className='tr_search'>\r\n      <td><input type='search' name='logDate' ref={(item) => inputRef.current[0] = item} placeholder='Search:' onChange={(e) => handleChange(e, 0)} autoComplete='off' /></td>\r\n      <td><input type='search' name='logProjectID' ref={(item) => inputRef.current[1] = item} placeholder='Search:' onChange={(e) => handleChange(e, 1)} autoComplete='off' /></td>\r\n      <td><input type='search' name='logField' ref={(item) => inputRef.current[2] = item} placeholder='Search:' onChange={(e) => handleChange(e, 2)} autoComplete='off' /></td>\r\n      <td><input type='search' name='logAction' ref={(item) => inputRef.current[3] = item} placeholder='Search:' onChange={(e) => handleChange(e, 3)} autoComplete='off' /></td>\r\n      <td><input type='search' name='valueFrom' ref={(item) => inputRef.current[4] = item} placeholder='Search:' onChange={(e) => handleChange(e, 4)} autoComplete='off' /></td>\r\n      <td><input type='search' name='valueTo' ref={(item) => inputRef.current[5] = item} placeholder='Search:' onChange={(e) => handleChange(e, 5)} autoComplete='off' /></td>\r\n    </tr>\r\n  )\r\n}\r\n\r\nexport const trackingLogsTableRows = (projectInfoStates, projectInfoVars) => {\r\n  let {props, searchState} = projectInfoStates\r\n  let {trRef, firstPageIndex} = projectInfoVars\r\n  let filterArray\r\n\r\n  if(searchState.searchContent.selectedInput === 'logDate' || searchState.searchContent.selectedInput === '') filterArray = props.logDate\r\n  else if(searchState.searchContent.selectedInput === 'logProjectID') filterArray = props.logProjectID\r\n  else if(searchState.searchContent.selectedInput === 'logField') filterArray = props.logField\r\n  else if(searchState.searchContent.selectedInput === 'logAction') filterArray = props.logAction\r\n  else if(searchState.searchContent.selectedInput === 'valueFrom') filterArray = props.valueFrom\r\n  else if(searchState.searchContent.selectedInput === 'valueTo') filterArray = props.valueTo\r\n\r\n  return (\r\n    props.logDate.map((item, index) => index)\r\n    .filter((index) => {\r\n      const truthTests\r\n      = filterArray[index].toLowerCase()[searchState.searchContent.inputValue.length-1] === searchState.searchContent.inputValue.toLowerCase()[searchState.searchContent.inputValue.length-1]\r\n      && filterArray[index].toLowerCase()[searchState.searchContent.inputValue.length-2] === searchState.searchContent.inputValue.toLowerCase()[searchState.searchContent.inputValue.length-2]\r\n      && filterArray[index].toLowerCase()[searchState.searchContent.inputValue.length-3] === searchState.searchContent.inputValue.toLowerCase()[searchState.searchContent.inputValue.length-3]\r\n\r\n      return (truthTests)\r\n    })\r\n    // eslint-disable-next-line\r\n    .map((index, number) => {\r\n      while(number >= firstPageIndex && number < firstPageIndex+10) {\r\n        return (\r\n          <tr key={number + searchState.searchContent.inputValue} ref={(item) => trRef.current[number] = item}>\r\n            <td>{number+1}. {props.logDate[index]}</td>\r\n            <td>{props.logProjectID[index]}</td>\r\n            <td>{props.logField[index]}</td>\r\n            <td>{props.logAction[index]}</td>\r\n            <td>{props.valueFrom[index]}</td>\r\n            <td>{props.valueTo[index]}</td>\r\n          </tr>\r\n        )\r\n      }\r\n    })\r\n  )\r\n}","import { showMoreOptions } from './AdminTable'\r\nimport { showOtherSidePanel } from './AdminTable'\r\nimport { showDeleteAdminModal } from './AdminTable'\r\n\r\nexport const adminsTableHead = () => {\r\n  return (\r\n    <tr>\r\n      <th>Username</th>\r\n      <th>First name</th>\r\n      <th>Last name</th>\r\n      <th colSpan='2'>Email</th>\r\n    </tr>\r\n  )\r\n}\r\n\r\nlet prevInput = [0,0]\r\n\r\nexport const adminsTableSearch = (searchState, inputRef) => {\r\n\r\n  const handleChange = (e, index) => {\r\n    prevInput[0] = prevInput[1]\r\n    prevInput[1] = index\r\n    if(prevInput[0] !== prevInput[1]) inputRef.current[prevInput[0]].value = ''\r\n    searchState.setSearchContent({selectedInput: e.target.name, inputValue: e.target.value})\r\n  }\r\n  \r\n  return (\r\n    <tr className='tr_search'>\r\n      <td><input type='search' name='adminUsername' ref={(item) => inputRef.current[0] = item} placeholder='Search:' onChange={(e) => handleChange(e, 0)} autoComplete='off' /></td>\r\n      <td><input type='search' name='adminFirstName' ref={(item) => inputRef.current[1] = item} placeholder='Search:' onChange={(e) => handleChange(e, 1)} autoComplete='off' /></td>\r\n      <td><input type='search' name='adminLastName' ref={(item) => inputRef.current[2] = item} placeholder='Search:' onChange={(e) => handleChange(e, 2)} autoComplete='off' /></td>\r\n      <td><input type='search' name='adminEmail' ref={(item) => inputRef.current[3] = item} placeholder='Search:' onChange={(e) => handleChange(e, 3)} autoComplete='off' /></td>\r\n    </tr>\r\n  )\r\n}\r\n\r\nexport const adminsTableRows = (otherInfoStates, projectInfoVars) => {\r\n  let {props, tableFocus, countyFocus, adminFocus, searchState, createAdminPanelState, updateOtherPanelState, deleteAdminModalState} = otherInfoStates\r\n  let {trRef, moreOptionsSVGRef, moreOptionsRef, firstPageIndex} = projectInfoVars\r\n  let filterArray\r\n\r\n  if(searchState.searchContent.selectedInput === 'adminUsername' || searchState.searchContent.selectedInput === '') filterArray = props.adminUsername\r\n  else if(searchState.searchContent.selectedInput === 'adminFirstName') filterArray = props.adminFirstName\r\n  else if(searchState.searchContent.selectedInput === 'adminLastName') filterArray = props.adminLastName\r\n  else if(searchState.searchContent.selectedInput === 'adminEmail') filterArray = props.adminEmail\r\n\r\n  return (\r\n    props.adminUsername.map((item, index) => index)\r\n    .filter((index) => {\r\n      const truthTests\r\n      = filterArray[index].toLowerCase()[searchState.searchContent.inputValue.length-1] === searchState.searchContent.inputValue.toLowerCase()[searchState.searchContent.inputValue.length-1]\r\n      && filterArray[index].toLowerCase()[searchState.searchContent.inputValue.length-2] === searchState.searchContent.inputValue.toLowerCase()[searchState.searchContent.inputValue.length-2]\r\n      && filterArray[index].toLowerCase()[searchState.searchContent.inputValue.length-3] === searchState.searchContent.inputValue.toLowerCase()[searchState.searchContent.inputValue.length-3]\r\n\r\n      return (truthTests)\r\n    })\r\n    // eslint-disable-next-line\r\n    .map((index, number) => {\r\n      while(number >= firstPageIndex && number < firstPageIndex+10) {\r\n        return (\r\n          <tr key={number + searchState.searchContent.inputValue} ref={(item) => trRef.current[number] = item}>\r\n            <td>{number+1}. {props.adminUsername[index]}</td>\r\n            <td>{props.adminFirstName[index]}</td>\r\n            <td>{props.adminLastName[index]}</td>\r\n            <td>{props.adminEmail[index]}</td>\r\n            <td className='td_more_options'>\r\n              <svg className='more_options_svg' onClick={() => showMoreOptions(trRef, moreOptionsSVGRef, moreOptionsRef, number)} ref={(item) => moreOptionsSVGRef.current[number] = item} xmlns=\"http://www.w3.org/2000/svg\" height=\"36px\" viewBox=\"0 0 24 24\" width=\"36px\" fill=\"#000000\"><path d=\"M0 0h24v24H0V0z\" fill=\"none\"/><path d=\"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"/></svg>\r\n              <div className='td_more_options_expand mul_options flex' ref={(item) => moreOptionsRef.current[number] = item}>\r\n                <button onClick={() => showOtherSidePanel(props, tableFocus, index, updateOtherPanelState, countyFocus, adminFocus)}>Update</button>\r\n                <button onClick={() => showDeleteAdminModal(props, index, deleteAdminModalState, adminFocus)}>Delete</button>\r\n                <button onClick={() => createAdminPanelState.setCreateAdminPanelStatus(true)}>Add new</button>\r\n              </div>\r\n            </td>\r\n          </tr>\r\n        )\r\n      }\r\n    })\r\n  )\r\n}","import React from 'react'\r\nimport { DashboardContext } from '../../views/admin/Dashboard'\r\nimport { dynamicShowMoreOptions } from '../../utils/functions/map'\r\nimport { dynamicShowMoreOptionsSVG } from '../../utils/functions/map'\r\nimport { countyTableHead } from './countyTable'\r\nimport { countyTableSearch } from './countyTable'\r\nimport { countyTableRows } from './countyTable'\r\nimport { projectsTableHead } from './projectsTable'\r\nimport { projectsTableSearch } from './projectsTable'\r\nimport { projectsTableRows } from './projectsTable'\r\nimport { timelinesTableHead } from './timelinesTable'\r\nimport { timelinesTableSearch } from './timelinesTable'\r\nimport { timelinesTableRows } from './timelinesTable'\r\nimport { implementationsTableHead } from './implementationTable'\r\nimport { implementationsTableSearch } from './implementationTable'\r\nimport { implementationsTableRows } from './implementationTable'\r\nimport { financesTableHead } from './financesTable'\r\nimport { financesTableSearch } from './financesTable'\r\nimport { financesTableRows } from './financesTable'\r\nimport { locationsTableHead } from './locationsTable'\r\nimport { locationsTableSearch } from './locationsTable'\r\nimport { locationsTableRows } from './locationsTable'\r\nimport { trackingLogsTableHead } from './trackingLogsTable'\r\nimport { trackingLogsTableSearch } from './trackingLogsTable'\r\nimport { trackingLogsTableRows } from './trackingLogsTable'\r\nimport { adminsTableHead } from './adminsTable'\r\nimport { adminsTableSearch } from './adminsTable'\r\nimport { adminsTableRows } from './adminsTable'\r\n\r\nexport const showMoreOptions = (trRef, moreOptionsSVGRef, moreOptionsRef, index) => {\r\n  dynamicShowMoreOptions(moreOptionsRef, index)\r\n  dynamicShowMoreOptionsSVG(moreOptionsSVGRef, trRef, index)\r\n}\r\n\r\nexport const showOtherSidePanel = (props, tableFocus, index, updateOtherPanelState, countyFocus, adminFocus) => {\r\n  updateOtherPanelState.setUpdateOtherPanelStatus(true)\r\n\r\n  if(tableFocus.tableInFocus === 'counties') {\r\n    countyFocus.setCountyInFocus({\r\n      recordIndex: index,\r\n      countyNo: props.countyNo[index],\r\n      governor: props.governor[index],\r\n      senator: props.senator[index]\r\n    })\r\n  }\r\n  else if(tableFocus.tableInFocus === 'admin') {\r\n    adminFocus.setAdminInFocus({\r\n      recordIndex: index,\r\n      adminUsername: props.adminUsername[index],\r\n      adminFirstName: props.adminFirstName[index],\r\n      adminLastName: props.adminLastName[index],\r\n      adminEmail: props.adminEmail[index]\r\n    })\r\n  }\r\n}\r\n\r\nexport const showSidePanel = (props, tableFocus, index, updateProjectPanelState, recordFocus, trackingValues) => {\r\n  updateProjectPanelState.setUpdateProjectPanelStatus(true)\r\n  trackingValues.setTrackedChanges({action: 'update'})\r\n\r\n  if(tableFocus.tableInFocus === 'projects') {\r\n    recordFocus.setRecordInFocus({...recordFocus.recordInFocus,\r\n      recordIndex: index,\r\n      projectID: props.projectID[index],\r\n      name: props.projectName[index],\r\n      description: props.description[index],\r\n      status: props.status[index]\r\n    })\r\n  }\r\n  else if(tableFocus.tableInFocus === 'timelines') {\r\n    recordFocus.setRecordInFocus({...recordFocus.recordInFocus,\r\n      recordIndex: index,\r\n      projectID: props.timeProjectID[index],\r\n      approvalDate: props.approvalDate[index],\r\n      startDate: props.startDate[index],\r\n      endDate: props.endDate[index],\r\n      duration: props.duration[index]\r\n    })\r\n  }\r\n  else if(tableFocus.tableInFocus === 'implementation') {\r\n    recordFocus.setRecordInFocus({...recordFocus.recordInFocus,\r\n      recordIndex: index,\r\n      projectID: props.impProjectID[index],\r\n      sector: props.sector[index],\r\n      ministry: props.ministry[index],\r\n      agency: props.agency[index],\r\n      contractor: props.contractor[index],\r\n      priority: props.priority[index]\r\n    })\r\n  }\r\n  else if(tableFocus.tableInFocus === 'finances') {\r\n    recordFocus.setRecordInFocus({...recordFocus.recordInFocus,\r\n      recordIndex: index,\r\n      projectID: props.finProjectID[index],\r\n      estimatedCost: props.estimatedCost[index],\r\n      budget: props.budget[index],\r\n      financialYear: props.financialYear[index],\r\n      fundingSource: props.fundingSource[index]\r\n    })\r\n  }\r\n  else if(tableFocus.tableInFocus === 'locations') {\r\n    recordFocus.setRecordInFocus({...recordFocus.recordInFocus,\r\n      recordIndex: index,\r\n      projectID: props.locProjectID[index],\r\n      countyNo: props.countyNo[index],\r\n      subCounty: props.subCounty[index],\r\n      constituency: props.constituency[index],\r\n      ward: props.ward[index]\r\n    })\r\n  }\r\n}\r\n\r\nexport const showDeleteModal = (props, index, deleteProjectModalState, recordFocus, trackingValues) => {\r\n  deleteProjectModalState.setDeleteProjectModalStatus(true)\r\n  recordFocus.setRecordInFocus({...recordFocus.recordInFocus,\r\n    recordIndex: index,\r\n    projectID: props.projectID[index]\r\n  })\r\n  trackingValues.setTrackedChanges({action: 'delete', projectID: props.projectID[index]})\r\n}\r\n\r\nexport const showDeleteAdminModal = (props, index, deleteAdminModalState, adminFocus) => {\r\n  deleteAdminModalState.setDeleteAdminModalStatus(true)\r\n  adminFocus.setAdminInFocus({...adminFocus.adminInFocus,\r\n    recordIndex: index,\r\n    adminUsername: props.adminUsername[index]\r\n  })\r\n}\r\n\r\nconst AdminTable = ({props}) => {\r\n  \r\n  const {tableFocus, recordFocus, countyFocus, adminFocus, updateProjectPanelState, createAdminPanelState, updateOtherPanelState, deleteProjectModalState, deleteAdminModalState, searchState, pageValue, trackingValues, resultsRef} = React.useContext(DashboardContext)\r\n  const trRef = React.useRef([])\r\n  const inputRef = React.useRef([])\r\n  const moreOptionsSVGRef = React.useRef([])\r\n  const moreOptionsRef = React.useRef([])\r\n  let tableHead, tableSearch, tableRows\r\n  let resultSetLength = 0, resultSetLengthPerView = 0, firstPageIndex = 0\r\n  let totalPages\r\n\r\n  firstPageIndex += pageValue.currentPage*10-10\r\n\r\n  const otherInfoStates = {props, tableFocus, countyFocus, adminFocus, searchState, createAdminPanelState, updateOtherPanelState, deleteAdminModalState}\r\n  const projectInfoStates = {props, tableFocus, recordFocus, searchState, updateProjectPanelState, deleteProjectModalState, trackingValues}\r\n  const projectInfoVars = {trRef, moreOptionsSVGRef, moreOptionsRef, firstPageIndex}\r\n\r\n  if(tableFocus.tableInFocus === 'counties') {\r\n    tableHead = countyTableHead()\r\n    tableSearch = countyTableSearch(searchState, inputRef)\r\n    tableRows = countyTableRows(otherInfoStates, projectInfoVars)\r\n    resultSetLength = countyTableRows(otherInfoStates, projectInfoVars).length\r\n    resultSetLengthPerView = countyTableRows(otherInfoStates, projectInfoVars).filter((item) => item !== undefined).length\r\n  }\r\n\r\n  else if(tableFocus.tableInFocus === 'projects') {\r\n    tableHead = projectsTableHead()\r\n    tableSearch = projectsTableSearch(searchState, inputRef)\r\n    tableRows = projectsTableRows(projectInfoStates, projectInfoVars)\r\n    resultSetLength = projectsTableRows(projectInfoStates, projectInfoVars).length\r\n    resultSetLengthPerView = projectsTableRows(projectInfoStates, projectInfoVars).filter((item) => item !== undefined).length\r\n  }\r\n\r\n  else if(tableFocus.tableInFocus === 'timelines') {\r\n    tableHead = timelinesTableHead()\r\n    tableSearch = timelinesTableSearch(searchState, inputRef)\r\n    tableRows = timelinesTableRows(projectInfoStates, projectInfoVars)\r\n    resultSetLength = timelinesTableRows(projectInfoStates, projectInfoVars).length\r\n    resultSetLengthPerView = timelinesTableRows(projectInfoStates, projectInfoVars).filter((item) => item !== undefined).length\r\n  }\r\n\r\n  else if(tableFocus.tableInFocus === 'implementation') {\r\n    tableHead = implementationsTableHead()\r\n    tableSearch = implementationsTableSearch(searchState, inputRef)\r\n    tableRows = implementationsTableRows(projectInfoStates, projectInfoVars)\r\n    resultSetLength = implementationsTableRows(projectInfoStates, projectInfoVars).length\r\n    resultSetLengthPerView = implementationsTableRows(projectInfoStates, projectInfoVars).filter((item) => item !== undefined).length\r\n  }\r\n\r\n  else if(tableFocus.tableInFocus === 'finances') {\r\n    tableHead = financesTableHead()\r\n    tableSearch = financesTableSearch(searchState, inputRef)\r\n    tableRows = financesTableRows(projectInfoStates, projectInfoVars)\r\n    resultSetLength = financesTableRows(projectInfoStates, projectInfoVars).length\r\n    resultSetLengthPerView = financesTableRows(projectInfoStates, projectInfoVars).filter((item) => item !== undefined).length\r\n  }\r\n\r\n  else if(tableFocus.tableInFocus === 'locations') {\r\n    tableHead = locationsTableHead()\r\n    tableSearch = locationsTableSearch(searchState, inputRef)\r\n    tableRows = locationsTableRows(projectInfoStates, projectInfoVars)\r\n    resultSetLength = locationsTableRows(projectInfoStates, projectInfoVars).length\r\n    resultSetLengthPerView = locationsTableRows(projectInfoStates, projectInfoVars).filter((item) => item !== undefined).length\r\n  }\r\n\r\n  else if(tableFocus.tableInFocus === 'tracking logs') {\r\n    tableHead = trackingLogsTableHead()\r\n    tableSearch = trackingLogsTableSearch(searchState, inputRef)\r\n    tableRows = trackingLogsTableRows(projectInfoStates, projectInfoVars)\r\n    resultSetLength = trackingLogsTableRows(projectInfoStates, projectInfoVars).length\r\n    resultSetLengthPerView = trackingLogsTableRows(projectInfoStates, projectInfoVars).filter((item) => item !== undefined).length\r\n  }\r\n\r\n  else if(tableFocus.tableInFocus === 'admin') {\r\n    tableHead = adminsTableHead()\r\n    tableSearch = adminsTableSearch(searchState, inputRef)\r\n    tableRows = adminsTableRows(otherInfoStates, projectInfoVars)\r\n    resultSetLength = adminsTableRows(otherInfoStates, projectInfoVars).length\r\n    resultSetLengthPerView = adminsTableRows(otherInfoStates, projectInfoVars).filter((item) => item !== undefined).length\r\n  }\r\n\r\n  totalPages = Math.ceil(resultSetLength/10)\r\n  if(totalPages < 1) totalPages = 1\r\n\r\n  const changeTablePage = (action) => {\r\n    if(action === 'next') {\r\n      if(pageValue.currentPage < totalPages)\r\n        pageValue.setCurrentPage(pageValue.currentPage+1)\r\n    }\r\n    else if(action === 'prev') {\r\n      if(pageValue.currentPage > 1)\r\n        pageValue.setCurrentPage(pageValue.currentPage-1)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <section className='page_section'>\r\n      <h2>Database management</h2>\r\n      <p>Viewing table: <b>{tableFocus.tableInFocus}</b>. View, search, create, update and delete records.</p>\r\n      <div className='table_div'>\r\n        <div className='modal__card__table_extras flex'>\r\n          <div>\r\n            <button onClick={() => changeTablePage('prev')}>Prev page</button>\r\n            <button onClick={() => changeTablePage('next')}>Next page</button>\r\n          </div>\r\n          <span>PAGE {pageValue.currentPage} of {totalPages}   </span>\r\n          <span ref={resultsRef}>|   SHOWING RESULTS: {resultSetLengthPerView} of {resultSetLength}</span>\r\n        </div>\r\n        <div className='table_container table_container_sm'>\r\n          <table key={tableFocus.tableInFocus}>\r\n            <thead>\r\n              {tableHead}\r\n            </thead>\r\n            <tbody className='admin_tbody'>\r\n              {tableSearch}\r\n              {tableRows}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default AdminTable","import React from 'react'\r\nimport axios from 'axios'\r\nimport { DashboardContext } from '../../views/admin/Dashboard'\r\nimport { projectObject } from '../../utils/templates/objects'\r\nimport { openSidePanel } from '../../utils/functions/panels'\r\nimport { closeSidePanel } from '../../utils/functions/panels'\r\nimport { getProjectDetails } from '../../utils/functions/getProjectDetails'\r\nimport { getProjectTimelines } from '../../utils/functions/getProjectTimelines'\r\nimport { getProjectImplementations } from '../../utils/functions/getProjectImplementations'\r\nimport { getProjectFinances } from '../../utils/functions/getProjectFinances'\r\nimport { getProjectLocations } from '../../utils/functions/getProjectLocations'\r\nimport { getTrackingLogs } from '../../utils/functions/getTrackingLogs'\r\n\r\nlet addProjectScript = 'http://localhost/development-project-tracker/src/utils/php/insert/addProject.php'\r\nlet logChangesScript = 'http://localhost/development-project-tracker/src/utils/php/insert/logChanges.php'\r\n\r\nconst CreateProjectPanel = ({props}) => {\r\n\r\n  const {recordFocus, createProjectPanelState, infoModal, trackingValues} = React.useContext(DashboardContext)\r\n  const [projectData, setProjectData] = React.useState(projectObject)\r\n  const projectDetailsPanelRef = React.useRef()\r\n\r\n  openSidePanel(projectDetailsPanelRef, createProjectPanelState.createProjectPanel)\r\n\r\n  const handleChange = (e) => {\r\n    setProjectData({...projectData, [e.target.name]: e.target.value})\r\n\r\n    if(e.target.name === 'projectID')\r\n      trackingValues.setTrackedChanges({...trackingValues.trackedChanges, projectID: e.target.value})\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    axios.post(addProjectScript, projectData)\r\n    .then((response) => {\r\n      if(response.data) {\r\n        axios.post(logChangesScript, trackingValues.trackedChanges)\r\n        infoModal.setInfoModalProps({state: true, icon:'success', text:'Successfully added!'})\r\n        getProjectDetails(props)\r\n        getProjectTimelines(props)\r\n        getProjectImplementations(props)\r\n        getProjectFinances(props)\r\n        getProjectLocations(props)\r\n        getTrackingLogs(props)\r\n      }\r\n      else\r\n        infoModal.setInfoModalProps({state: true, icon:'fail', text:'Error! Try again.'})\r\n    })\r\n\r\n    recordFocus.setRecordInFocus(projectObject)\r\n    closeSidePanel(projectDetailsPanelRef, createProjectPanelState.setCreateProjectPanelStatus)\r\n    e.preventDefault()\r\n  }\r\n\r\n  return (\r\n    <div className='sidePanel' ref={projectDetailsPanelRef}>\r\n      <svg className='close_modal_svg' onClick={() => closeSidePanel(projectDetailsPanelRef, createProjectPanelState.setCreateProjectPanelStatus)} xmlns=\"http://www.w3.org/2000/svg\" height=\"36px\" viewBox=\"0 0 24 24\" width=\"36px\" fill=\"#000\"><path d=\"M0 0h24v24H0V0z\" fill=\"#FFF\"/><path d=\"M18.3 5.71c-.39-.39-1.02-.39-1.41 0L12 10.59 7.11 5.7c-.39-.39-1.02-.39-1.41 0-.39.39-.39 1.02 0 1.41L10.59 12 5.7 16.89c-.39.39-.39 1.02 0 1.41.39.39 1.02.39 1.41 0L12 13.41l4.89 4.89c.39.39 1.02.39 1.41 0 .39-.39.39-1.02 0-1.41L13.41 12l4.89-4.89c.38-.38.38-1.02 0-1.4z\"/></svg>\r\n      <div className='sidePanel__content'>\r\n        <form onSubmit={handleSubmit}>\r\n          <h3>Creating project:</h3>\r\n          <div className='sidePanel__content__grid'>\r\n            <label htmlFor='projectID'>Project ID:*</label>\r\n            <input type='text' id='projectID' name='projectID' onChange={handleChange} required autoComplete='off' />\r\n            <label htmlFor='name'>Name:</label>\r\n            <input type='text' id='name' name='name' onChange={handleChange} />\r\n            <label htmlFor='description'>Description:</label>\r\n            <textarea type='text' id='description' name='description' onChange={handleChange} />\r\n            <label htmlFor='status'>Status:*</label>\r\n            <select id='status' name='status' defaultValue='' onChange={handleChange} required >\r\n              <option value='' disabled hidden></option>\r\n              <option value='Scheduled'>Scheduled</option>\r\n              <option value='Approved'>Approved</option>\r\n              <option value='In progress'>In progress</option>\r\n              <option value='Completed'>Completed</option>\r\n            </select>\r\n          </div>\r\n          <h3>Timelines</h3>\r\n          <div className='sidePanel__content__grid'>\r\n            <label htmlFor='approvalDate'>Approval date:</label>\r\n            <input type='text' id='approvalDate' name='approvalDate' placeholder='i.e. YYYY-MM-DD' onChange={handleChange} />\r\n            <label htmlFor='startDate'>Start date:</label>\r\n            <input type='text' id='startDate' name='startDate' placeholder='i.e. YYYY-MM-DD' onChange={handleChange} />\r\n            <label htmlFor='endDate'>End date:</label>\r\n            <input type='text' id='endDate' name='endDate' placeholder='i.e. YYYY-MM-DD' onChange={handleChange} />\r\n            <label htmlFor='duration'>Duration (months):*</label>\r\n            <input type='text' id='duration' name='duration' onChange={handleChange} required />\r\n          </div>\r\n          <h3>Implementation</h3>\r\n          <div className='sidePanel__content__grid'>\r\n            <label htmlFor='sector'>Sector:*</label>\r\n            <input type='text' id='sector' name='sector' onChange={handleChange} required />\r\n            <label htmlFor='ministry'>Ministry:</label>\r\n            <input type='text' id='ministry' name='ministry' onChange={handleChange} />\r\n            <label htmlFor='agency'>Implementing agency:</label>\r\n            <input type='text' id='agency' name='agency' onChange={handleChange} />\r\n            <label htmlFor='contractor'>Contractor:</label>\r\n            <input type='text' id='contractor' name='contractor' onChange={handleChange} />\r\n            <label htmlFor='priority'>Priority:</label>\r\n            <select id='priority' name='priority' defaultValue='' onChange={handleChange} >\r\n              <option value='' disabled hidden></option>\r\n              <option value='High'>High</option>\r\n              <option value='Medium'>Medium</option>\r\n              <option value='Low'>Low</option>\r\n            </select>\r\n          </div>\r\n          <h3>Financials</h3>\r\n          <div className='sidePanel__content__grid'>\r\n            <label htmlFor='estimatedCost'>Estimated cost:*</label>\r\n            <input type='text' id='estimatedCost' name='estimatedCost' placeholder='in KSH' onChange={handleChange} required />\r\n            <label htmlFor='budget'>Budget:</label>\r\n            <input type='text' id='budget' name='budget' placeholder='in KSH' onChange={handleChange} />\r\n            <label htmlFor='financialYear'>Financial year:</label>\r\n            <input type='text' id='financialYear' name='financialYear' placeholder='i.e YYYY/YY' onChange={handleChange} />\r\n            <label htmlFor='fundingSource'>Source of funding:</label>\r\n            <input type='text' id='fundingSource' name='fundingSource' onChange={handleChange} />\r\n          </div>\r\n          <h3>Location</h3>\r\n          <div className='sidePanel__content__grid'>\r\n            <label htmlFor='countyNo'>County:*</label>\r\n            <input type='text' id='countyNo' name='countyNo' onChange={handleChange} required />\r\n            <label htmlFor='subCounty'>Sub-county:</label>\r\n            <input type='text' id='subCounty' name='subCounty' onChange={handleChange} />\r\n            <label htmlFor='constituency'>Constituency:</label>\r\n            <input type='text' id='constituency' name='constituency' onChange={handleChange} />\r\n            <label htmlFor='ward'>Ward:</label>\r\n            <input type='text' id='ward' name='ward' onChange={handleChange} />\r\n          </div>\r\n          <button>Create project</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CreateProjectPanel","import React from 'react'\r\nimport axios from 'axios'\r\nimport { DashboardContext } from '../../views/admin/Dashboard'\r\nimport { adminObject } from '../../utils/templates/objects'\r\nimport { openSidePanel } from '../../utils/functions/panels'\r\nimport { closeSidePanel } from '../../utils/functions/panels'\r\nimport { getAdmins } from '../../utils/functions/getAdmins'\r\n\r\nlet addAdminScript = 'http://localhost/development-project-tracker/src/utils/php/insert/addAdmin.php'\r\n\r\nconst CreateAdminPanel = ({props}) => {\r\n\r\n  const {adminFocus, createAdminPanelState, infoModal} = React.useContext(DashboardContext)\r\n  const [adminData, setAdminData] = React.useState(adminObject)\r\n  const adminDetailsPanelRef = React.useRef()\r\n\r\n  openSidePanel(adminDetailsPanelRef, createAdminPanelState.createAdminPanel)\r\n\r\n  const handleChange = (e) => setAdminData({...adminData, [e.target.name]: e.target.value})\r\n\r\n  const handleSubmit = (e) => {\r\n    axios.post(addAdminScript, adminData)\r\n    .then((response) => {\r\n      if(response.data) {\r\n        infoModal.setInfoModalProps({state: true, icon:'success', text:'Successfully added!'})\r\n        getAdmins(props)\r\n      }\r\n      else\r\n        infoModal.setInfoModalProps({state: true, icon:'fail', text:'Error! Try again.'})\r\n    })\r\n\r\n    adminFocus.setAdminInFocus(adminObject)\r\n    closeSidePanel(adminDetailsPanelRef, createAdminPanelState.setCreateAdminPanelStatus)\r\n    e.preventDefault()\r\n  }\r\n\r\n  return (\r\n    <div className='sidePanel' ref={adminDetailsPanelRef}>\r\n      <svg className='close_modal_svg' onClick={() => closeSidePanel(adminDetailsPanelRef, createAdminPanelState.setCreateAdminPanelStatus)} xmlns=\"http://www.w3.org/2000/svg\" height=\"36px\" viewBox=\"0 0 24 24\" width=\"36px\" fill=\"#000\"><path d=\"M0 0h24v24H0V0z\" fill=\"#FFF\"/><path d=\"M18.3 5.71c-.39-.39-1.02-.39-1.41 0L12 10.59 7.11 5.7c-.39-.39-1.02-.39-1.41 0-.39.39-.39 1.02 0 1.41L10.59 12 5.7 16.89c-.39.39-.39 1.02 0 1.41.39.39 1.02.39 1.41 0L12 13.41l4.89 4.89c.39.39 1.02.39 1.41 0 .39-.39.39-1.02 0-1.41L13.41 12l4.89-4.89c.38-.38.38-1.02 0-1.4z\"/></svg>\r\n      <div className='sidePanel__content'>\r\n        <form onSubmit={handleSubmit}>\r\n          <h3>Creating project:</h3>\r\n          <div className='sidePanel__content__grid'>\r\n            <label htmlFor='adminUserName'>Username:</label>\r\n            <input type='text' id='adminUserName' name='adminUserName' onChange={handleChange} required autoComplete='off' />\r\n            <label htmlFor='adminFirstName'>First name:</label>\r\n            <input type='text' id='adminFirstName' name='adminFirstName' onChange={handleChange} autoComplete='off' />\r\n            <label htmlFor='adminLastName'>Last name:</label>\r\n            <input type='text' id='adminLastName' name='adminLastName' onChange={handleChange} />\r\n            <label htmlFor='adminPassword'>Password:</label>\r\n            <input type='password' id='adminPassword' name='adminPassword' onChange={handleChange} />\r\n            <label htmlFor='adminEmail'>Email address:</label>\r\n            <input type='text' id='adminEmail' name='adminEmail' onChange={handleChange} />\r\n          </div>\r\n          <button>Create admin</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CreateAdminPanel","import React from 'react'\r\nimport axios from 'axios'\r\nimport { DashboardContext } from '../../views/admin/Dashboard'\r\nimport { openModal } from '../../utils/functions/modal'\r\nimport { closeModal } from '../../utils/functions/modal'\r\nimport { getProjectDetails } from '../../utils/functions/getProjectDetails'\r\nimport { getProjectTimelines } from '../../utils/functions/getProjectTimelines'\r\nimport { getProjectImplementations } from '../../utils/functions/getProjectImplementations'\r\nimport { getProjectFinances } from '../../utils/functions/getProjectFinances'\r\nimport { getProjectLocations } from '../../utils/functions/getProjectLocations'\r\nimport { getTrackingLogs } from '../../utils/functions/getTrackingLogs'\r\n\r\nlet deleteProjectScript = 'http://localhost/development-project-tracker/src/utils/php/delete/deleteProject.php'\r\nlet logChangesScript = 'http://localhost/development-project-tracker/src/utils/php/insert/logChanges.php'\r\n\r\nconst DeleteProjectModal = ({props}) => {\r\n\r\n  const {recordFocus, deleteProjectModalState, infoModal, trackingValues} = React.useContext(DashboardContext)\r\n  const modalRef = React.useRef()\r\n\r\n  openModal(deleteProjectModalState.deleteProjectModal, modalRef)\r\n\r\n  const handleSubmit = (e) => {\r\n    closeModal(deleteProjectModalState.setDeleteProjectModalStatus, modalRef)\r\n\r\n    axios.post(deleteProjectScript, recordFocus.recordInFocus)\r\n    .then((response) => {\r\n      if(response.data) {\r\n        axios.post(logChangesScript, trackingValues.trackedChanges)\r\n        infoModal.setInfoModalProps({state: true, icon:'success', text:'Successfully deleted!'})\r\n        getProjectDetails(props)\r\n        getProjectTimelines(props)\r\n        getProjectImplementations(props)\r\n        getProjectFinances(props)\r\n        getProjectLocations(props)\r\n        getTrackingLogs(props)\r\n      }\r\n      else\r\n        infoModal.setInfoModalProps({state: true, icon:'fail', text:'Error! Try again.'})\r\n    })\r\n\r\n    e.preventDefault()\r\n  }\r\n\r\n  return (\r\n    <div className='modal' ref={modalRef}>\r\n      <div className='modal__card modal__card_sm card'>\r\n        <h3>Delete projectID = <em>'{props.projectID[recordFocus.recordInFocus.recordIndex]}'</em>?</h3>\r\n        <div className='flex'>\r\n          <button onClick={handleSubmit}>Confirm</button>\r\n          <button onClick={() => closeModal(deleteProjectModalState.setDeleteProjectModalStatus, modalRef)}>Cancel</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DeleteProjectModal","import React from 'react'\r\nimport axios from 'axios'\r\nimport { DashboardContext } from '../../views/admin/Dashboard'\r\nimport { openModal } from '../../utils/functions/modal'\r\nimport { closeModal } from '../../utils/functions/modal'\r\nimport { getAdmins } from '../../utils/functions/getAdmins'\r\n\r\nlet deleteAdminScript = 'http://localhost/development-project-tracker/src/utils/php/delete/deleteAdmin.php'\r\n\r\nconst DeleteAdminModal = ({props}) => {\r\n\r\n  const {adminFocus, deleteAdminModalState, infoModal} = React.useContext(DashboardContext)\r\n  const modalRef = React.useRef()\r\n\r\n  openModal(deleteAdminModalState.deleteAdminModal, modalRef)\r\n\r\n  const handleSubmit = (e) => {\r\n    closeModal(deleteAdminModalState.setDeleteAdminModalStatus, modalRef)\r\n\r\n    axios.post(deleteAdminScript, adminFocus.adminInFocus)\r\n    .then((response) => {\r\n      if(response.data) {\r\n        infoModal.setInfoModalProps({state: true, icon:'success', text:'Successfully deleted!'})\r\n        getAdmins(props)\r\n      }\r\n      else\r\n        infoModal.setInfoModalProps({state: true, icon:'fail', text:'Error! Try again.'})\r\n    })\r\n\r\n    e.preventDefault()\r\n  }\r\n\r\n  return (\r\n    <div className='modal' ref={modalRef}>\r\n      <div className='modal__card modal__card_sm card'>\r\n        <h3>Delete admin = <em>'{props.adminUsername[adminFocus.adminInFocus.recordIndex]}'</em>?</h3>\r\n        <div className='flex'>\r\n          <button onClick={handleSubmit}>Confirm</button>\r\n          <button onClick={() => closeModal(deleteAdminModalState.setDeleteAdminModalStatus, modalRef)}>Cancel</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DeleteAdminModal","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { mapDispatchToProps } from '../../store/Action'\r\nimport { getCounties } from '../../utils/functions/getCounties'\r\nimport { getProjectDetails } from '../../utils/functions/getProjectDetails'\r\nimport { getProjectTimelines } from '../../utils/functions/getProjectTimelines'\r\nimport { getProjectImplementations } from '../../utils/functions/getProjectImplementations'\r\nimport { getProjectFinances } from '../../utils/functions/getProjectFinances'\r\nimport { getProjectLocations } from '../../utils/functions/getProjectLocations'\r\nimport { getTrackingLogs } from '../../utils/functions/getTrackingLogs'\r\nimport { getAdmins } from '../../utils/functions/getAdmins'\r\nimport { projectObject } from '../../utils/templates/objects'\r\nimport { countyObject } from '../../utils/templates/objects'\r\nimport { adminObject } from '../../utils/templates/objects'\r\nimport AdminTable from '../../features/admin/AdminTable'\r\nimport CreateProjectPanel from '../../layout/admin/CreateProjectPanel'\r\nimport CreateAdminPanel from '../../layout/admin/CreateAdminPanel'\r\nimport UpdateProjectPanel from '../../layout/admin/UpdateProjectPanel'\r\nimport UpdateOtherPanel from '../../layout/admin/UpdateOtherPanel'\r\nimport DeleteProjectModal from '../../features/admin/DeleteProjectModal'\r\nimport DeleteAdminModal from '../../features/admin/DeleteAdminModal'\r\nimport InfoModal from '../../features/admin/InfoModal'\r\nimport { dynamicMenu } from '../../utils/functions/map'\r\n\r\nexport const DashboardContext = React.createContext()\r\n\r\nconst Dashboard = (props) => {\r\n\r\n  React.useEffect(() => {\r\n    getCounties(props)\r\n    getProjectDetails(props)\r\n    getProjectTimelines(props)\r\n    getProjectImplementations(props)\r\n    getProjectFinances(props)\r\n    getProjectLocations(props)\r\n    getTrackingLogs(props)\r\n    getAdmins(props)\r\n    // eslint-disable-next-line\r\n  }, [])\r\n\r\n  const menuRef = React.useRef([])\r\n  const resultsRef = React.useRef()\r\n\r\n  const [tableInFocus, setTableInFocus] = React.useState('projects')\r\n  const [recordInFocus, setRecordInFocus] = React.useState(projectObject)\r\n  const [countyInFocus, setCountyInFocus] = React.useState(countyObject)\r\n  const [adminInFocus, setAdminInFocus] = React.useState(adminObject)\r\n  const [createProjectPanel, setCreateProjectPanelStatus] = React.useState(false)\r\n  const [createAdminPanel, setCreateAdminPanelStatus] = React.useState(false)\r\n  const [updateProjectPanel, setUpdateProjectPanelStatus] = React.useState(false)\r\n  const [updateOtherPanel, setUpdateOtherPanelStatus] = React.useState(false)\r\n  const [deleteProjectModal, setDeleteProjectModalStatus] = React.useState(false)\r\n  const [deleteAdminModal, setDeleteAdminModalStatus] = React.useState(false)\r\n  const [infoModalProps, setInfoModalProps] = React.useState({state: false, icon: '', text:''})\r\n  const [searchContent, setSearchContent] = React.useState({selectedInput: '', inputValue: ''})\r\n  const [currentPage, setCurrentPage] = React.useState(1)\r\n  const [trackedChanges, setTrackedChanges] = React.useState({action: ''})\r\n\r\n  const tableFocus = {tableInFocus, setTableInFocus}\r\n  const recordFocus = {recordInFocus, setRecordInFocus}\r\n  const countyFocus = {countyInFocus, setCountyInFocus}\r\n  const adminFocus = {adminInFocus, setAdminInFocus}\r\n  const createProjectPanelState = {createProjectPanel, setCreateProjectPanelStatus}\r\n  const createAdminPanelState = {createAdminPanel, setCreateAdminPanelStatus}\r\n  const updateProjectPanelState = {updateProjectPanel, setUpdateProjectPanelStatus}\r\n  const updateOtherPanelState = {updateOtherPanel, setUpdateOtherPanelStatus}\r\n  const deleteProjectModalState = {deleteProjectModal, setDeleteProjectModalStatus}\r\n  const deleteAdminModalState = {deleteAdminModal, setDeleteAdminModalStatus}\r\n  const infoModal = {infoModalProps, setInfoModalProps}\r\n  const searchState = {searchContent, setSearchContent}\r\n  const pageValue = {currentPage, setCurrentPage}\r\n  const trackingValues = {trackedChanges, setTrackedChanges}\r\n\r\n  const value = {\r\n    tableFocus,\r\n    recordFocus,\r\n    countyFocus,\r\n    adminFocus,\r\n    createProjectPanelState,\r\n    createAdminPanelState,\r\n    updateProjectPanelState,\r\n    updateOtherPanelState,\r\n    deleteProjectModalState,\r\n    deleteAdminModalState,\r\n    infoModal,\r\n    searchState,\r\n    pageValue,\r\n    trackingValues,\r\n    resultsRef\r\n  }\r\n\r\n  const showTable = (table, index) => {\r\n    setTableInFocus(table)\r\n    setSearchContent({selectedInput: '', inputValue: ''})\r\n    setCurrentPage(1)\r\n    dynamicMenu(menuRef, index)\r\n  }\r\n\r\n  const createProject = () => {\r\n    setCreateProjectPanelStatus(true)\r\n    setTrackedChanges({action: 'create'})\r\n  }\r\n\r\n  return (\r\n    <DashboardContext.Provider value={value}>\r\n      <div className='admin_view'>\r\n        <menu className='flex'>\r\n          <section>\r\n            <h3>County data</h3>\r\n            <button ref={(item) => menuRef.current[0] = item} onClick={() => showTable('counties', 0)}>Counties</button>\r\n          </section>\r\n          <section>\r\n            <h3>Project data</h3>\r\n            <button ref={(item) => menuRef.current[1] = item} onClick={() => showTable('projects', 1)}>Projects</button>\r\n            <button ref={(item) => menuRef.current[2] = item} onClick={() => showTable('timelines', 2)}>Timelines</button>\r\n            <button ref={(item) => menuRef.current[3] = item} onClick={() => showTable('implementation', 3)}>Implementation</button>\r\n            <button ref={(item) => menuRef.current[4] = item} onClick={() => showTable('finances', 4)}>Finances</button>\r\n            <button ref={(item) => menuRef.current[5] = item} onClick={() => showTable('locations', 5)}>Locations</button>\r\n          </section>\r\n          <section>\r\n            <h3>Tracking data</h3>\r\n            <button ref={(item) => menuRef.current[6] = item} onClick={() => showTable('tracking logs', 6)}>Logs</button>\r\n          </section>\r\n          <section>\r\n            <h3>Admin data</h3>\r\n            <button ref={(item) => menuRef.current[7] = item} onClick={() => showTable('admin', 7)}>Administrators</button>\r\n          </section>\r\n          <div className='admin_view__add_project flex' onClick={createProject}>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"36px\" viewBox=\"0 0 24 24\" width=\"36px\" fill=\"#000000\"><path d=\"M0 0h24v24H0V0z\" fill=\"none\"/><path d=\"M18 13h-5v5c0 .55-.45 1-1 1s-1-.45-1-1v-5H6c-.55 0-1-.45-1-1s.45-1 1-1h5V6c0-.55.45-1 1-1s1 .45 1 1v5h5c.55 0 1 .45 1 1s-.45 1-1 1z\"/></svg>\r\n            <span>New project</span>\r\n          </div>\r\n        </menu>\r\n        <div className='admin_view__content'>\r\n          <AdminTable props={props} />\r\n          <CreateProjectPanel props={props} />\r\n          <UpdateProjectPanel props={props} />\r\n          <UpdateOtherPanel props={props} />\r\n          <CreateAdminPanel props={props} />\r\n        </div>\r\n      </div>\r\n      <DeleteProjectModal props={props} />\r\n      <DeleteAdminModal props={props} />\r\n      <InfoModal />\r\n    </DashboardContext.Provider>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    countyNo: state.counties.number,\r\n    countyName: state.counties.name,\r\n    governor: state.counties.governor,\r\n    senator: state.counties.senator,\r\n    \r\n    projectID: state.projects.details.projectID,\r\n    projectName: state.projects.details.name,\r\n    description: state.projects.details.description,\r\n    status: state.projects.details.status,\r\n\r\n    timeProjectID: state.projects.timelines.projectID,\r\n    approvalDate: state.projects.timelines.approvalDate,\r\n    startDate: state.projects.timelines.startDate,\r\n    endDate: state.projects.timelines.endDate,\r\n    duration: state.projects.timelines.duration,\r\n\r\n    impProjectID: state.projects.implementation.projectID,\r\n    sector: state.projects.implementation.sector,\r\n    ministry: state.projects.implementation.ministry,\r\n    agency: state.projects.implementation.agency,\r\n    contractor: state.projects.implementation.contractor,\r\n    priority: state.projects.implementation.priority,\r\n\r\n    finProjectID: state.projects.finances.projectID,\r\n    estimatedCost: state.projects.finances.estimatedCost,\r\n    budget: state.projects.finances.budget,\r\n    financialYear: state.projects.finances.financialYear,\r\n    fundingSource: state.projects.finances.fundingSource,\r\n\r\n    locProjectID: state.projects.locations.projectID,\r\n    locCountyNo: state.projects.locations.countyNo,\r\n    subCounty: state.projects.locations.subCounty,\r\n    constituency: state.projects.locations.constituency,\r\n    ward: state.projects.locations.ward,\r\n\r\n    logDate: state.tracking.date,\r\n    logProjectID: state.tracking.projectID,\r\n    logField: state.tracking.field,\r\n    logAction: state.tracking.action,\r\n    valueFrom: state.tracking.valueFrom,\r\n    valueTo: state.tracking.valueTo,\r\n\r\n    adminUsername: state.admins.username,\r\n    adminFirstName: state.admins.firstName,\r\n    adminLastName: state.admins.lastName,\r\n    adminEmail: state.admins.email\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { BrowserRouter, Routes, Route } from 'react-router-dom'\nimport PublicNavbarLanding from './layout/public/NavbarLanding'\nimport PublicNavbar from './layout/public/Navbar'\nimport AdminNavbar from './layout/admin/Navbar'\nimport Landing from './views/public/Landing'\nimport Counties from './views/public/Counties'\nimport Updates from './views/public/Updates'\nimport About from './views/public/About'\nimport Dashboard from './views/admin/Dashboard'\nimport './styles/main.css'\n\nexport const AppContext = React.createContext()\nexport const baseURL = '/development-project-tracker'\nconst projectStatusArray = ['Completed', 'In progress', 'Approved', 'Scheduled']\nlet statusTotalArray = []\nlet allProjectsArray = []\nlet completedArray = [], inProgressArray = [], approvedArray = [], scheduledArray = []\n\nconst App = (props) => {\n\n  React.useEffect(() => {\n    setStats({\n      allProjects: allProjectsArray,\n      completed: completedArray,\n      inProgress: inProgressArray,\n      approved: approvedArray,\n      scheduled: scheduledArray\n    })\n  // eslint-disable-next-line\n  }, [])\n\n  const [stats, setStats] = React.useState({allProjects: [], completed: [], inProgress: [], approved: [], scheduled: []})\n  const statsValues = {stats, setStats}\n\n  const [loginPanel, setLoginPanelStatus] = React.useState(false)\n  const panelStatus = {loginPanel, setLoginPanelStatus}\n\n  const value = {statsValues, panelStatus}\n\n  for(let i=0; i<47; i++) {\n    for(let j=0; j<projectStatusArray.length; j++) {\n      statusTotalArray[j] = props.status\n      .filter((item, index) =>\n        item === projectStatusArray[j] \n        && parseInt(props.locCountyNo[index]-1) === i\n        )\n      .reduce((acc) => acc + 1, 0)\n    }\n    allProjectsArray[i] = statusTotalArray[0] + statusTotalArray[1] + statusTotalArray[2] + statusTotalArray[3]\n    completedArray[i] = statusTotalArray[0]\n    inProgressArray[i] = statusTotalArray[1]\n    approvedArray[i] = statusTotalArray[2]\n    scheduledArray[i] = statusTotalArray[3]\n  }\n\n  return (\n    <AppContext.Provider value={value} >\n      <BrowserRouter>\n        <Routes>\n          <Route path={baseURL} element={<PublicNavbarLanding />}>\n            <Route index element={<Landing />} />\n          </Route>\n          <Route path={baseURL} element={<PublicNavbar />}>\n            <Route path={baseURL +'/counties'} element={<Counties />} />\n            <Route path={baseURL +'/updates'} element={<Updates />} />\n            <Route path={baseURL +'/about'} element={<About />} />\n          </Route>\n          <Route path={baseURL +'/admin'} element={<AdminNavbar />}>\n            <Route index element={<Dashboard />} />\n          </Route>\n        </Routes>\n      </BrowserRouter>\n    </AppContext.Provider>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    status: state.projects.details.status,\n    locCountyNo: state.projects.locations.countyNo\n  }\n}\n\nexport default connect(mapStateToProps)(App)\n","import React from 'react'\nimport ReactDOM from 'react-dom/client'\nimport { Provider } from 'react-redux'\nimport { store } from './store'\nimport App from './App'\n// import reportWebVitals from './reportWebVitals'\n\nconst root = ReactDOM.createRoot(document.getElementById('root'))\n\nroot.render(\n  // <React.StrictMode>\n    <Provider store={store} >\n      <App />\n    </Provider >\n  // </React.StrictMode>\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals()"],"names":["module","exports","utils","require","settle","cookies","buildURL","buildFullPath","parseHeaders","isURLSameOrigin","transitionalDefaults","AxiosError","CanceledError","parseProtocol","config","Promise","resolve","reject","onCanceled","requestData","data","requestHeaders","headers","responseType","done","cancelToken","unsubscribe","signal","removeEventListener","isFormData","isStandardBrowserEnv","request","XMLHttpRequest","auth","username","password","unescape","encodeURIComponent","Authorization","btoa","fullPath","baseURL","url","onloadend","responseHeaders","getAllResponseHeaders","response","responseText","status","statusText","value","err","open","method","toUpperCase","params","paramsSerializer","timeout","onreadystatechange","readyState","responseURL","indexOf","setTimeout","onabort","ECONNABORTED","onerror","ERR_NETWORK","ontimeout","timeoutErrorMessage","transitional","clarifyTimeoutError","ETIMEDOUT","xsrfValue","withCredentials","xsrfCookieName","read","undefined","xsrfHeaderName","forEach","val","key","toLowerCase","setRequestHeader","isUndefined","onDownloadProgress","addEventListener","onUploadProgress","upload","cancel","type","abort","subscribe","aborted","protocol","ERR_BAD_REQUEST","send","bind","Axios","mergeConfig","axios","createInstance","defaultConfig","context","instance","prototype","extend","create","instanceConfig","CancelToken","isCancel","VERSION","toFormData","Cancel","all","promises","spread","isAxiosError","executor","TypeError","resolvePromise","this","promise","token","then","_listeners","i","l","length","onfulfilled","_resolve","message","reason","throwIfRequested","listener","push","index","splice","source","c","call","ERR_CANCELED","name","inherits","__CANCEL__","InterceptorManager","dispatchRequest","validator","validators","defaults","interceptors","configOrUrl","assertOptions","silentJSONParsing","boolean","forcedJSONParsing","requestInterceptorChain","synchronousRequestInterceptors","interceptor","runWhen","synchronous","unshift","fulfilled","rejected","responseInterceptorChain","chain","Array","apply","concat","shift","newConfig","onFulfilled","onRejected","error","getUri","generateHTTPMethod","isForm","code","Error","toJSON","description","number","fileName","lineNumber","columnNumber","stack","descriptors","Object","defineProperties","defineProperty","from","customProps","axiosError","toFlatObject","obj","assign","handlers","use","options","eject","id","fn","h","isAbsoluteURL","combineURLs","requestedURL","transformData","throwIfCancellationRequested","transformRequest","merge","common","adapter","transformResponse","config1","config2","getMergedValue","target","isPlainObject","isArray","slice","mergeDeepProperties","prop","valueFromConfig2","defaultToConfig2","mergeDirectKeys","mergeMap","keys","configValue","validateStatus","ERR_BAD_RESPONSE","Math","floor","fns","normalizeHeaderName","DEFAULT_CONTENT_TYPE","setContentTypeIfUnset","process","toString","getDefaultAdapter","isArrayBuffer","isBuffer","isStream","isFile","isBlob","isArrayBufferView","buffer","isURLSearchParams","isFileList","isObjectPayload","isObject","contentType","_FormData","env","FormData","rawValue","parser","encoder","isString","JSON","parse","trim","e","stringify","stringifySafely","strictJSONParsing","maxContentLength","maxBodyLength","thisArg","args","arguments","encode","replace","serializedParams","parts","v","isDate","toISOString","join","hashmarkIndex","relativeURL","write","expires","path","domain","secure","cookie","isNumber","Date","toGMTString","document","match","RegExp","decodeURIComponent","remove","now","test","payload","originURL","msie","navigator","userAgent","urlParsingNode","createElement","resolveURL","href","setAttribute","host","search","hash","hostname","port","pathname","charAt","window","location","requestURL","parsed","normalizedName","ignoreDuplicateOf","split","line","substr","exec","callback","arr","formData","convertValue","isTypedArray","Blob","Buffer","build","parentKey","fullKey","endsWith","toArray","el","append","pop","thing","deprecatedWarnings","version","formatMessage","opt","desc","opts","ERR_DEPRECATED","console","warn","schema","allowUnknown","ERR_BAD_OPTION_VALUE","result","ERR_BAD_OPTION","cache","kindOf","str","kindOfTest","getPrototypeOf","isFunction","hasOwnProperty","TypedArray","Uint8Array","constructor","pattern","ArrayBuffer","isView","pipe","product","assignValue","a","b","stripBOM","content","charCodeAt","superConstructor","props","sourceObj","destObj","filter","merged","getOwnPropertyNames","searchString","position","String","lastIndex","reactIs","REACT_STATICS","childContextTypes","contextType","contextTypes","defaultProps","displayName","getDefaultProps","getDerivedStateFromError","getDerivedStateFromProps","mixins","propTypes","KNOWN_STATICS","caller","callee","arity","MEMO_STATICS","compare","TYPE_STATICS","getStatics","component","isMemo","ForwardRef","render","Memo","getOwnPropertySymbols","getOwnPropertyDescriptor","objectPrototype","hoistNonReactStatics","targetComponent","sourceComponent","blacklist","inheritedComponent","targetStatics","sourceStatics","descriptor","Symbol","for","d","f","g","k","m","n","p","q","r","t","w","x","y","z","u","$$typeof","A","AsyncMode","ConcurrentMode","ContextConsumer","ContextProvider","Element","Fragment","Lazy","Portal","Profiler","StrictMode","Suspense","isAsyncMode","isConcurrentMode","isContextConsumer","isContextProvider","isElement","isForwardRef","isFragment","isLazy","isPortal","isProfiler","isStrictMode","isSuspense","isValidElementType","typeOf","ReactPropTypesSecret","emptyFunction","emptyFunctionWithReset","resetWarningCache","shim","propName","componentName","propFullName","secret","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes","_createClass","enumerable","configurable","writable","Constructor","protoProps","staticProps","_react","_react2","__esModule","default","_core","_metaProps","CSVDownload","_React$Component","_classCallCheck","_this","self","ReferenceError","_possibleConstructorReturn","__proto__","state","subClass","superClass","setPrototypeOf","_inherits","buildURI","_props","separator","enclosingCharacter","uFEFF","specs","page","Component","_extends","CSVLink","event","isAsync","msSaveOrOpenBlob","preventDefault","filename","csvData","blob","toCSV","msSaveBlob","_this2","onClick","proceed","handleLegacy","_this3","asyncOnClick","handleAsyncClick","handleSyncClick","_this4","_props2","children","rest","_objectWithoutProperties","download","ref","link","handleClick","_typeof","iterator","_toConsumableArray","arr2","isSafari","isJsons","every","row","isArrays","jsonsHeaders","map","json","reduce","Set","jsons2arrays","jsons","headerLabels","headerKeys","header","label","getHeaderValue","property","foundValue","o","elementOrEmpty","joiner","column","arrays2csv","jsons2csv","string2csv","csv","dataURI","URL","webkitURL","createObjectURL","_Download2","_interopRequireDefault","_Link2","PropsNotForwarded","_propTypes","aa","ca","da","ea","fa","ha","add","ia","ja","ka","la","ma","acceptsBooleans","attributeName","attributeNamespace","mustUseProperty","propertyName","sanitizeURL","removeEmptyString","ra","sa","ta","pa","isNaN","qa","oa","removeAttribute","setAttributeNS","xlinkHref","ua","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","va","wa","ya","za","Aa","Ba","Ca","Da","Ea","Fa","Ga","Ha","Ia","Ja","Ka","La","Ma","Na","Oa","prepareStackTrace","set","Reflect","construct","includes","Pa","tag","Qa","_context","_payload","_init","Ra","Sa","Ta","nodeName","Va","_valueTracker","get","getValue","setValue","stopTracking","Ua","Wa","checked","Xa","activeElement","body","Ya","defaultChecked","defaultValue","_wrapperState","initialChecked","Za","initialValue","controlled","ab","bb","cb","db","ownerDocument","eb","fb","selected","defaultSelected","disabled","gb","dangerouslySetInnerHTML","hb","ib","jb","textContent","kb","lb","mb","nb","namespaceURI","innerHTML","valueOf","firstChild","removeChild","appendChild","MSApp","execUnsafeLocalFunction","ob","lastChild","nodeType","nodeValue","pb","animationIterationCount","aspectRatio","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridArea","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","fontWeight","lineClamp","lineHeight","opacity","order","orphans","tabSize","widows","zIndex","zoom","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","qb","rb","sb","style","setProperty","substring","tb","menuitem","area","base","br","col","embed","hr","img","input","keygen","meta","param","track","wbr","ub","vb","is","wb","xb","srcElement","correspondingUseElement","parentNode","yb","zb","Ab","Bb","Cb","stateNode","Db","Eb","Fb","Gb","Hb","Ib","Jb","Kb","Lb","Mb","Nb","onError","Ob","Pb","Qb","Rb","Sb","Tb","Vb","alternate","return","flags","Wb","memoizedState","dehydrated","Xb","Zb","child","sibling","current","Yb","$b","ac","unstable_scheduleCallback","bc","unstable_cancelCallback","cc","unstable_shouldYield","dc","unstable_requestPaint","B","unstable_now","ec","unstable_getCurrentPriorityLevel","fc","unstable_ImmediatePriority","gc","unstable_UserBlockingPriority","hc","unstable_NormalPriority","ic","unstable_LowPriority","jc","unstable_IdlePriority","kc","lc","oc","clz32","pc","qc","log","LN2","rc","sc","tc","uc","pendingLanes","suspendedLanes","pingedLanes","entangledLanes","entanglements","vc","xc","yc","zc","Ac","eventTimes","Cc","C","Dc","Ec","Fc","Gc","Hc","Ic","Jc","Kc","Lc","Mc","Nc","Oc","Map","Pc","Qc","Rc","Sc","delete","pointerId","Tc","nativeEvent","blockedOn","domEventName","eventSystemFlags","targetContainers","Vc","Wc","priority","isDehydrated","containerInfo","Xc","Yc","dispatchEvent","Zc","$c","ad","bd","cd","ReactCurrentBatchConfig","dd","ed","transition","fd","gd","hd","Uc","stopPropagation","jd","kd","ld","md","nd","od","keyCode","charCode","pd","qd","rd","_reactName","_targetInst","currentTarget","isDefaultPrevented","defaultPrevented","returnValue","isPropagationStopped","cancelBubble","persist","isPersistent","wd","xd","yd","sd","eventPhase","bubbles","cancelable","timeStamp","isTrusted","td","ud","view","detail","vd","Ad","screenX","screenY","clientX","clientY","pageX","pageY","ctrlKey","shiftKey","altKey","metaKey","getModifierState","zd","button","buttons","relatedTarget","fromElement","toElement","movementX","movementY","Bd","Dd","dataTransfer","Fd","Hd","animationName","elapsedTime","pseudoElement","Id","clipboardData","Jd","Ld","Md","Esc","Spacebar","Left","Up","Right","Down","Del","Win","Menu","Apps","Scroll","MozPrintableKey","Nd","Od","Alt","Control","Meta","Shift","Pd","Qd","fromCharCode","repeat","locale","which","Rd","Td","width","height","pressure","tangentialPressure","tiltX","tiltY","twist","pointerType","isPrimary","Vd","touches","targetTouches","changedTouches","Xd","Yd","deltaX","wheelDeltaX","deltaY","wheelDeltaY","wheelDelta","deltaZ","deltaMode","Zd","$d","ae","be","documentMode","ce","de","ee","fe","ge","he","ie","le","color","date","datetime","email","month","range","tel","text","time","week","me","ne","oe","listeners","pe","qe","re","se","te","ue","ve","we","xe","ye","ze","oninput","Ae","detachEvent","Be","Ce","attachEvent","De","Ee","Fe","He","Ie","Je","Ke","offset","nextSibling","Le","contains","compareDocumentPosition","Me","HTMLIFrameElement","contentWindow","Ne","contentEditable","Oe","focusedElem","selectionRange","documentElement","start","end","selectionStart","selectionEnd","min","defaultView","getSelection","rangeCount","anchorNode","anchorOffset","focusNode","focusOffset","createRange","setStart","removeAllRanges","addRange","setEnd","left","scrollLeft","top","scrollTop","focus","Pe","Qe","Re","Se","Te","Ue","Ve","We","animationend","animationiteration","animationstart","transitionend","Xe","Ye","Ze","animation","$e","af","bf","cf","df","ef","ff","gf","hf","lf","mf","nf","Ub","D","of","has","pf","qf","rf","random","sf","capture","passive","J","F","tf","uf","parentWindow","vf","wf","na","xa","$a","ba","je","char","ke","xf","yf","zf","Af","Bf","Cf","Df","Ef","__html","Ff","Gf","clearTimeout","Hf","Jf","queueMicrotask","catch","If","Kf","Lf","Mf","previousSibling","Nf","Of","Pf","Qf","Rf","Sf","Tf","Uf","E","G","Vf","H","Wf","Xf","Yf","__reactInternalMemoizedUnmaskedChildContext","__reactInternalMemoizedMaskedChildContext","Zf","$f","ag","bg","getChildContext","cg","__reactInternalMemoizedMergedChildContext","dg","eg","fg","gg","hg","jg","kg","lg","mg","ng","og","pg","qg","rg","sg","tg","ug","vg","wg","xg","yg","I","zg","Ag","Bg","deletions","Cg","pendingProps","overflow","treeContext","retryLane","Dg","mode","Eg","Fg","Gg","memoizedProps","Hg","Ig","Jg","Kg","Lg","Mg","Ng","Og","Pg","Qg","Rg","_currentValue","Sg","childLanes","Tg","dependencies","firstContext","lanes","Ug","Vg","memoizedValue","next","Wg","Xg","Yg","interleaved","Zg","$g","ah","updateQueue","baseState","firstBaseUpdate","lastBaseUpdate","shared","pending","effects","bh","ch","eventTime","lane","dh","K","eh","fh","gh","hh","ih","jh","refs","kh","nh","isMounted","_reactInternals","enqueueSetState","L","lh","mh","enqueueReplaceState","enqueueForceUpdate","oh","shouldComponentUpdate","isPureReactComponent","ph","updater","qh","componentWillReceiveProps","UNSAFE_componentWillReceiveProps","rh","getSnapshotBeforeUpdate","UNSAFE_componentWillMount","componentWillMount","componentDidMount","sh","_owner","_stringRef","th","uh","vh","wh","xh","yh","implementation","zh","Ah","Bh","Ch","Dh","Eh","Fh","Gh","Hh","Ih","tagName","Jh","Kh","Lh","M","Mh","revealOrder","Nh","Oh","_workInProgressVersionPrimary","Ph","ReactCurrentDispatcher","Qh","Rh","N","O","P","Sh","Th","Uh","Vh","Q","Wh","Xh","Yh","Zh","$h","ai","bi","ci","baseQueue","queue","di","ei","fi","lastRenderedReducer","action","hasEagerState","eagerState","lastRenderedState","dispatch","gi","hi","ii","ji","ki","getSnapshot","li","mi","R","ni","lastEffect","stores","oi","pi","qi","ri","destroy","deps","si","ti","ui","vi","wi","xi","yi","zi","Ai","Bi","Ci","Di","Ei","Fi","Gi","Hi","Ii","Ji","readContext","useCallback","useContext","useEffect","useImperativeHandle","useInsertionEffect","useLayoutEffect","useMemo","useReducer","useRef","useState","useDebugValue","useDeferredValue","useTransition","useMutableSource","useSyncExternalStore","useId","unstable_isNewReconciler","identifierPrefix","Ki","digest","Li","Mi","Ni","WeakMap","Oi","Pi","Qi","Ri","componentDidCatch","Si","componentStack","Ti","pingCache","Ui","Vi","Wi","Xi","ReactCurrentOwner","Yi","Zi","$i","aj","bj","cj","dj","ej","baseLanes","cachePool","transitions","fj","gj","hj","ij","jj","UNSAFE_componentWillUpdate","componentWillUpdate","componentDidUpdate","kj","lj","pendingContext","mj","Aj","Cj","Dj","nj","oj","pj","fallback","qj","rj","tj","dataset","dgst","uj","vj","_reactRetry","sj","subtreeFlags","wj","xj","isBackwards","rendering","renderingStartTime","last","tail","tailMode","yj","Ej","S","Fj","Gj","wasMultiple","multiple","suppressHydrationWarning","onclick","size","createElementNS","autoFocus","createTextNode","T","Hj","Ij","Jj","Kj","U","Lj","WeakSet","V","Mj","W","Nj","Oj","Qj","Rj","Sj","Tj","Uj","Vj","Wj","insertBefore","_reactRootContainer","Xj","X","Yj","Zj","ak","onCommitFiberUnmount","componentWillUnmount","bk","ck","dk","ek","fk","isHidden","gk","hk","display","ik","jk","kk","lk","__reactInternalSnapshotBeforeUpdate","src","Wk","mk","ceil","nk","ok","pk","Y","Z","qk","rk","sk","tk","uk","Infinity","vk","wk","xk","yk","zk","Ak","Bk","Ck","Dk","Ek","callbackNode","expirationTimes","expiredLanes","wc","callbackPriority","ig","Fk","Gk","Hk","Ik","Jk","Kk","Lk","Mk","Nk","Ok","Pk","finishedWork","finishedLanes","Qk","timeoutHandle","Rk","Sk","Tk","Uk","Vk","mutableReadLanes","Bc","Pj","onCommitFiberRoot","mc","onRecoverableError","Xk","onPostCommitFiberRoot","Yk","Zk","al","isReactComponent","pendingChildren","bl","mutableSourceEagerHydrationData","cl","pendingSuspenseBoundaries","dl","fl","gl","hl","il","jl","zj","$k","ll","reportError","ml","_internalRoot","nl","ol","pl","ql","sl","rl","unmount","unstable_scheduleHydration","querySelectorAll","form","tl","usingClientEntryPoint","Events","ul","findFiberByHostInstance","bundleType","rendererPackageName","vl","rendererConfig","overrideHookState","overrideHookStateDeletePath","overrideHookStateRenamePath","overrideProps","overridePropsDeletePath","overridePropsRenamePath","setErrorHandler","setSuspenseHandler","scheduleUpdate","currentDispatcherRef","findHostInstanceByFiber","findHostInstancesForRefresh","scheduleRefresh","scheduleRoot","setRefreshHandler","getCurrentFiber","reconcilerVersion","__REACT_DEVTOOLS_GLOBAL_HOOK__","wl","isDisabled","supportsFiber","inject","createPortal","createRoot","unstable_strictMode","findDOMNode","flushSync","hydrate","hydrateRoot","hydratedSources","_getVersion","_source","unmountComponentAtNode","unstable_batchedUpdates","unstable_renderSubtreeIntoContainer","checkDCE","__self","__source","jsx","jsxs","setState","forceUpdate","escape","_status","_result","Children","count","only","PureComponent","cloneElement","createContext","_currentValue2","_threadCount","Provider","Consumer","_defaultValue","_globalName","createFactory","createRef","forwardRef","isValidElement","lazy","memo","startTransition","unstable_act","sortIndex","performance","setImmediate","startTime","expirationTime","priorityLevel","scheduling","isInputPending","MessageChannel","port2","port1","onmessage","postMessage","unstable_Profiling","unstable_continueExecution","unstable_forceFrameRate","unstable_getFirstCallbackNode","unstable_next","unstable_pauseExecution","unstable_runWithPriority","delay","unstable_wrapCallback","inst","useSyncExternalStoreWithSelector","hasValue","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","getter","leafPrototypes","getProto","ns","def","definition","toStringTag","batch","getBatch","ReactReduxContext","notInitialized","_arrayLikeToArray","len","_unsupportedIterableToArray","minLen","_i","_s","_e","_arr","_n","_d","iter","_objectWithoutPropertiesLoose","excluded","sourceKeys","_excluded","pureFinalPropsSelectorFactory","mapStateToProps","mapDispatchToProps","mergeProps","ownProps","stateProps","dispatchProps","mergedProps","areStatesEqual","areOwnPropsEqual","areStatePropsEqual","hasRunAtLeastOnce","handleSubsequentCalls","nextState","nextOwnProps","propsChanged","stateChanged","dependsOnOwnProps","nextStateProps","statePropsChanged","handleNewState","finalPropsSelectorFactory","_ref","initMapStateToProps","initMapDispatchToProps","initMergeProps","wrapMapToPropsConstant","getConstant","constant","constantSelector","getDependsOnOwnProps","mapToProps","Boolean","wrapMapToPropsFunc","methodName","proxy","stateOrDispatch","createInvalidArgFactory","arg","wrappedComponentName","mapDispatchToPropsFactory","actionCreators","boundActionCreators","actionCreator","mapStateToPropsFactory","defaultMergeProps","mergePropsFactory","areMergedPropsEqual","hasRunOnce","nextMergedProps","wrapMergePropsFunc","nullListeners","notify","createSubscription","store","parentSub","handleChangeWrapper","subscription","onStateChange","trySubscribe","addNestedSub","first","clear","isSubscribed","prev","createListenerCollection","notifyNestedSubs","tryUnsubscribe","getListeners","useIsomorphicLayoutEffect","shallowEqual","objA","objB","keysA","keysB","NO_SUBSCRIPTION_ARRAY","useIsomorphicLayoutEffectWithArgs","effectFunc","effectArgs","captureWrapperProps","lastWrapperProps","lastChildProps","renderIsScheduled","wrapperProps","childPropsFromStoreUpdate","subscribeUpdates","shouldHandleStateChanges","childPropsSelector","additionalSubscribeListener","didUnsubscribe","lastThrownError","checkForUpdates","newChildProps","latestStoreState","getState","strictEqual","pure","Context","wrapWithConnect","WrappedComponent","selectorFactoryOptions","ConnectFunction","reactReduxForwardedRef","propsContext","ContextToUse","React","contextValue","didStoreComeFromProps","didStoreComeFromContext","getServerState","defaultSelectorFactory","overriddenContextValue","latestSubscriptionCallbackError","actualChildProps","actualChildPropsSelector","subscribeForReact","reactListener","renderedWrappedComponent","Connect","forwarded","hoistStatics","serverState","previousState","newBatch","formatProdErrorMessage","initializeConnect","$$observable","observable","randomString","ActionTypes","INIT","REPLACE","PROBE_UNKNOWN_ACTION","proto","legacy_createStore","createStore","reducer","preloadedState","enhancer","_ref2","currentReducer","currentState","currentListeners","nextListeners","isDispatching","ensureCanMutateNextListeners","replaceReducer","nextReducer","outerSubscribe","observer","observeState","ownKeys","enumerableOnly","symbols","sym","_objectSpread2","getOwnPropertyDescriptors","Action","initialState","counties","governor","senator","projects","details","projectID","timelines","approvalDate","startDate","endDate","duration","sector","ministry","agency","contractor","finances","estimatedCost","budget","financialYear","fundingSource","locations","countyNo","subCounty","constituency","ward","tracking","field","valueFrom","valueTo","admins","firstName","lastName","contacts","_defineProperties","_setPrototypeOf","_getPrototypeOf","_isNativeReflectConstruct","sham","Proxy","_assertThisInitialized","_createSuper","Derived","hasNativeReflectConstruct","Super","NewTarget","_construct","Parent","Class","Function","_wrapNativeSuper","_cache","Wrapper","ResultType","PopStateEventType","getHistoryState","usr","createLocation","to","parsePath","parsedPath","hashIndex","searchIndex","getUrlBasedHistory","getLocation","createHref","validateLocation","v5Compat","globalHistory","history","Pop","handlePop","listen","Push","historyState","pushState","Replace","replaceState","go","matchRoutes","routes","locationArg","basename","stripBasename","branches","flattenRoutes","sort","score","siblings","compareIndexes","routesMeta","childrenIndex","rankRouteBranches","matches","matchRouteBranch","parentsMeta","parentPath","route","relativePath","caseSensitive","startsWith","invariant","joinPaths","computeScore","paramRe","isSplat","s","segments","initialScore","some","segment","branch","matchedParams","matchedPathname","remainingPathname","matchPath","pathnameBase","normalizePathname","warning","paramNames","regexpSource","_","paramName","compilePath","matcher","captureGroups","splatValue","safelyDecodeURIComponent","startIndex","nextChar","cond","resolveTo","toArg","routePathnames","locationPathname","isPathRelative","isEmptyPath","toPathname","routePathnameIndex","toSegments","fromPathname","resolvePathname","normalizeSearch","normalizeHash","resolvePath","hasExplicitTrailingSlash","hasCurrentTrailingSlash","paths","AbortedDeferredError","ErrorResponse","isRouteErrorResponse","checkIfSnapshotChanged","latestGetSnapshot","prevValue","nextValue","DataStaticRouterContext","DataRouterContext","DataRouterStateContext","AwaitContext","NavigationContext","LocationContext","RouteContext","outlet","RouteErrorContext","useInRouterContext","useLocation","getPathContributingMatches","useNavigate","routePathnamesJson","activeRef","relative","OutletContext","useResolvedPath","_temp2","DefaultErrorElement","useDataRouterState","DataRouterHook","UseRouteError","thisRoute","errors","useRouteError","lightgrey","preStyles","padding","backgroundColor","codeStyles","fontStyle","RenderErrorBoundary","errorInfo","RenderedRoute","routeContext","dataStaticRouterContext","errorElement","_deepestRenderedBoundaryId","_renderMatches","parentMatches","dataRouterState","renderedMatches","errorIndex","findIndex","reduceRight","getChildren","hookName","AwaitRenderStatus","Outlet","useOutlet","Route","Router","_ref4","basenameProp","locationProp","navigationType","NavigationType","static","staticProp","navigationContext","trailingPathname","Routes","_ref5","dataRouterContext","dataRouterStateContext","routeMatch","parentParams","parentPathnameBase","locationFromContext","parsedLocationArg","useRoutes","router","createRoutesFromChildren","neverSettledPromise","treePath","loader","hasErrorBoundary","shouldRevalidate","handle","BrowserRouter","historyRef","createPath","Link","reloadDocument","preventScrollReset","_temp","joinedPathname","useHref","internalOnClick","replaceProp","navigate","isModifiedEvent","shouldProcessLinkClick","useLinkClickHandler","panelStatus","AppContext","className","setLoginPanelStatus","addCounties","x1","x2","x3","x4","addProjectDetails","addProjectTimelines","x5","addProjectImplementations","x6","x7","addProjectFinances","addProjectLocations","addTrackingLogs","addAdmins","resetCounties","resetProjectDetails","resetProjectTimelines","resetProjectImplementations","resetProjectFinances","resetProjectLocations","resetTrackingLogs","resetAdmins","getCounties","resArray","recordIndex","getProjectDetails","getProjectTimelines","getProjectImplementations","getProjectFinances","getProjectLocations","getTrackingLogs","openSidePanel","visibility","closeSidePanel","setFormData","loginPanelRef","loginPanel","handleChange","xmlns","viewBox","fill","htmlFor","onChange","bannerArray","imageOnDisplay","connect","timer","bannerRef","changeBanner","backgroundImage","rel","shadeMap","countyFocus","countyInFocus","countyRefs","stroke","statsValues","CountyContext","stats","allProjects","keyBlock","item","prevCards","countyModalState","searchState","resultsRef","listHeaderNameRef","listHeaderNumberRef","listDetailsRef","viewProjects","setCountyModalState","setSearchContent","selectedInput","inputValue","countyList","setCountyInFocus","countyName","j","fontSize","showCountySummary","completed","inProgress","approved","scheduled","nationalAllProjects","nationalCompleted","nationalInProgress","nationalApproved","nationalScheduled","openModal","closeModal","projectFocus","projectDetailsPanelState","projectDetailsPanelRef","projectDetailsPanel","setProjectDetailsPanelStatus","projectInFocus","projectName","locCountyNo","allowArrayLike","it","normalCompletion","didErr","step","_e2","Op","hasOwn","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","define","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","_invoke","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","NativeIteratorPrototype","values","Gp","defineIteratorMethods","AsyncIterator","PromiseImpl","invoke","__await","unwrapped","previousPromise","callInvokeWithMethodAndArg","info","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isGeneratorFunction","genFun","ctor","mark","awrap","async","reverse","skipTempReset","stop","rootRecord","rval","exception","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","asyncGeneratorStep","gen","_next","_throw","useLoadGoogleCharts","onLoad","chartVersion","chartPackages","chartLanguage","mapsApiKey","googleCharts","setGoogleCharts","failed","setFailed","google","charts","load","packages","language","setOnLoadCallback","foundScript","querySelector","loaded","script","onLoadWithMarker","head","LoadGoogleCharts","sourceSymbolKeys","propertyIsEnumerable","chartDefaultProps","legend_toggle","legendToggle","getChartWrapper","spreadSheetQueryParameters","gid","rootProps","chartWrapperParams","uniqueID","generateUniqueID","DEFAULT_CHART_COLORS","loadDataTableFromSpreadSheet","googleViz","spreadSheetUrl","urlParams","queryString","query","sheet","access_token","urlQueryString","urlToSpreadSheet","visualization","Query","isError","getMessage","getDetailedMessage","getDataTable","GRAY_COLOR","GoogleChartDataTableInner","hiddenColumns","listenToLegendToggle","googleChartWrapper","events","addListener","selection","getChart","dataTable","columnIndex","columnID","getColumnID","colID","applyFormatters","formatters","formatter","ArrowFormat","format","BarFormat","vizFormatter","ColorFormat","ranges","DateFormat","NumberFormat","PatternFormat","getColumnId","getColumnLabel","draw","diffdata","rows","chartType","chartDiff","oldData","arrayToDataTable","old","newData","new","computeDiff","DataTable","getNumberOfColumns","previousColumnLabel","previousColumnID","previousColumnType","getColumnType","removeColumn","addColumn","chart","getChartType","clearChart","setChartType","setOptions","setDataTable","googleChartDashboard","grayOutHiddenColumns","colors","dontcare","onResize","removeAllListeners","GoogleChartDataTable","GoogleChartEvents","listenToEvents","chartEvents","eventName","chartWrapper","eventArgs","propsFromContext","controlCounter","GoogleChart","googleChartControls","googleChartEditor","isReady","graphID","dashboard_ref","toolbar_ref","getGraphID","instanceGraphID","graph_id","getControlID","addControls","controls","control","controlIDMaybe","controlID","controlType","controlOptions","controlWrapperParams","controlProp","ControlWrapper","containerId","chartControl","controlEvents","removeListener","controlWrapper","renderChart","divStyle","div","renderControl","_this1","getContainerId","renderToolBar","toolbarItems","getChartEditor","chartConfig","ChartWrapper","Dashboard","drawToolbar","chartEditor","ChartEditor","setControlType","nextProps","renderToolbar","controlPosition","Chart","_isMounted","loadingStatus","isFullyLoaded","onSuccess","setInterval","clearInterval","GoogleDataTableColumnRoleType","annotation","annotationText","certainty","emphasis","interval","scope","tooltip","projectList","filterArray","CSVname","formFields","heading","infoSVG","barOptions","fontName","legend","alignment","bar","groupWidth","chartArea","textStyle","isHtml","vAxis","gridlines","projectsInCounty","parseInt","totalEstimate","acc","totalBudget","barData","prevOptions","prevSVG","prevDetailsSVG","prevMenu","addCommas","num","prevInput","exportData","prepareExport","resultSetLengthPerView","totalPages","showDetailsSVGRef","trRef","firstPageIndex","resultSetLength","recordsInPage","currentPage","setCurrentPage","inputRef","showProjectDetails","setProjectInFocus","ref1","ref2","selectedValue","dynamicShowDetailsSVG","searchContent","truthTests","changeTablePage","placeholder","autoComplete","modalCentered","centerModal","modalRef","modalCardRef","openCountyModal","classList","ModalBanner","logDate","logAction","logList","currentDate","year","getFullYear","getMonth","getDate","hours","getHours","minutes","getMinutes","replaceAll","getAdmins","projectObject","countyObject","adminObject","adminUsername","adminFirstName","adminLastName","adminPassword","adminEmail","countyTableRows","otherInfoStates","projectInfoVars","tableFocus","adminFocus","updateOtherPanelState","moreOptionsSVGRef","moreOptionsRef","showMoreOptions","showOtherSidePanel","projectsTableRows","projectInfoStates","recordFocus","updateProjectPanelState","deleteProjectModalState","trackingValues","showSidePanel","showDeleteModal","timelinesTableRows","timeProjectID","implementationsTableRows","impProjectID","financesTableRows","finProjectID","locationsTableRows","locProjectID","trackingLogsTableRows","logProjectID","logField","adminsTableRows","createAdminPanelState","deleteAdminModalState","showDeleteAdminModal","setCreateAdminPanelStatus","dynamicShowMoreOptions","dynamicShowMoreOptionsSVG","setUpdateOtherPanelStatus","tableInFocus","setAdminInFocus","setUpdateProjectPanelStatus","setTrackedChanges","setRecordInFocus","recordInFocus","setDeleteProjectModalStatus","setDeleteAdminModalStatus","adminInFocus","tableHead","tableSearch","tableRows","DashboardContext","pageValue","colSpan","countyTableSearch","projectsTableSearch","timelinesTableSearch","implementationsTableSearch","financesTableSearch","locationsTableSearch","trackingLogsTableSearch","adminsTableSearch","createProjectPanelState","infoModal","projectData","setProjectData","createProjectPanel","trackedChanges","setCreateProjectPanelStatus","onSubmit","setInfoModalProps","icon","required","hidden","adminData","setAdminData","adminDetailsPanelRef","createAdminPanel","updateProjectPanelRef","updateProjectPanel","propsName","propsValue","table","sendMeta","handleSubmit","updatePanelRef","updateOtherPanel","deleteProjectModal","deleteAdminModal","infoModalProps","closeInteractiveModal","menuRef","setTableInFocus","showTable","borderLeft","dynamicMenu","projectStatusArray","statusTotalArray","allProjectsArray","completedArray","inProgressArray","approvedArray","scheduledArray","setStats","ReactDOM","getElementById"],"sourceRoot":""}